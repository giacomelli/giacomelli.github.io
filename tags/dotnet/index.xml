<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>Diego Giacomelli - dotnet</title>
 <link href="//tags/dotnet/index.xml" rel="self"/>
 <link href="/tag/dotnet.html"/>
 <updated>2023-11-09T07:06:42-03:00</updated>
 <id>/tag/dotnet.html</id>
 <author>
   <name>Diego Giacomelli</name>
 </author>
 
 <entry>
   <title>Using localized exception messages with T4 Templates</title>
   <link href="//using-localized-exception-messages-with-t4-templates/"/>
   <updated>2023-11-06T00:00:00-03:00</updated>
   <id>//using-localized-exception-messages-with-t4-templates</id>
   <content type="html">&lt;p&gt;A common scenario in many projects is to use a &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/core/extensions/create-resource-files#resources-in-resx-files&quot;&gt;Resource File (.resx)&lt;/a&gt; to store exception/validation messages.&lt;/p&gt;

&lt;p&gt;An important and useful feature of the .resx files is that you can have one file for each culture that your application supports. For example, you can have one &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorsMessages.resx&lt;/code&gt; as the default to support &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;en-US&lt;/code&gt; (English - United States) messages and another with the name &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorsMessages.pt-BR.resx&lt;/code&gt; to support &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pt-BR&lt;/code&gt; (Portuguese - Brazil) messages.&lt;/p&gt;

&lt;p&gt;In this tutorial I will show you how to use a T4 Template to read the .resx file and generate a helper class to make very easy handle localized exception messages.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;It is not the aim of this tutorial to go into details on how to work with T4 Templates, to do so read the documentation &lt;a href=&quot;https://learn.microsoft.com/en-us/visualstudio/modeling/code-generation-and-t4-text-templates&quot;&gt;Code Generation and T4 Text Templates&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;creating-the-resx-files&quot;&gt;Creating the .resx files&lt;/h2&gt;
&lt;p&gt;Open your .NET project where you want to have your localized exception messages (probably a class library).&lt;/p&gt;

&lt;h4 id=&quot;creating-the-english-fallback-messages-resource-file&quot;&gt;Creating the English (fallback) messages resource file&lt;/h4&gt;
&lt;p&gt;Add a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Resources file&lt;/code&gt; called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorMessages.resx&lt;/code&gt; to the project:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-error-messages-resx-200-21dfcc93f.webp 200w, /assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-error-messages-resx-400-21dfcc93f.webp 400w, /assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-error-messages-resx-800-21dfcc93f.webp 800w, /assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-error-messages-resx-928-21dfcc93f.webp 928w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-error-messages-resx-200-21dfcc93f.png 200w, /assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-error-messages-resx-400-21dfcc93f.png 400w, /assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-error-messages-resx-800-21dfcc93f.png 800w, /assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-error-messages-resx-928-21dfcc93f.png 928w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-error-messages-resx-800-21dfcc93f.png&quot; alt=&quot;post image&quot; width=&quot;928&quot; height=&quot;644&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;This file will contain the English exception messages for your project. It is also a fallback, if there is no other match for the current UICulture, this one will be used.&lt;/p&gt;

&lt;p&gt;Add these lines to the file:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ProductHasMinWeight: The product ‘{0}’ must weigh at least {1}.&lt;/li&gt;
  &lt;li&gt;PropertyIsRequired: The property ‘{0}’ is required.&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/error-messages-content-200-20ded552b.webp 200w, /assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/error-messages-content-400-20ded552b.webp 400w, /assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/error-messages-content-594-20ded552b.webp 594w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/error-messages-content-200-20ded552b.png 200w, /assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/error-messages-content-400-20ded552b.png 400w, /assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/error-messages-content-594-20ded552b.png 594w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/error-messages-content-594-20ded552b.png&quot; alt=&quot;post image&quot; width=&quot;594&quot; height=&quot;151&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;creating-the-brazilian-portuguese-messages-resource-file&quot;&gt;Creating the Brazilian Portuguese messages resource file&lt;/h4&gt;
&lt;p&gt;Repeat the same process, but name the file as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorMessages-pt-BR.resx&lt;/code&gt;.
This file will contain your projects Brazilian Portuguese exception messages.&lt;/p&gt;

&lt;p&gt;Add these lines to the file:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ProductHasMinWeight: O produto ‘{0}’ deve pesar pelo menos {1}.&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;PropertyIsRequired&lt;/td&gt;
          &lt;td&gt;A propriedade ‘{0}’ é obrigatória.&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;creating-the-t4-template&quot;&gt;Creating the T4 Template&lt;/h2&gt;
&lt;p&gt;Create a T4 template file in the same folder where you placed the .resx files, named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Errors.tt&lt;/code&gt;.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-errors-tt-200-732a441d6.webp 200w, /assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-errors-tt-400-732a441d6.webp 400w, /assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-errors-tt-800-732a441d6.webp 800w, /assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-errors-tt-946-732a441d6.webp 946w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-errors-tt-200-732a441d6.png 200w, /assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-errors-tt-400-732a441d6.png 400w, /assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-errors-tt-800-732a441d6.png 800w, /assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-errors-tt-946-732a441d6.png 946w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2023/11/06/using-localized-exception-messages-with-t4-templates/add-errors-tt-800-732a441d6.png&quot; alt=&quot;post image&quot; width=&quot;946&quot; height=&quot;662&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now, copy the content below to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Errors.tt&lt;/code&gt;:
&lt;script src=&quot;https://gist.github.com/6297f4ca7b0be353d92203e5b6364e40.js?file=Errors.tt&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;generating-the-code&quot;&gt;Generating the code&lt;/h2&gt;
&lt;p&gt;If everything looks good, you should see the following code in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Errors.generated.cs&lt;/code&gt; file (expand &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Errors.tt&lt;/code&gt; in Solution Explorer to see it):&lt;script src=&quot;https://gist.github.com/6297f4ca7b0be353d92203e5b6364e40.js?file=Errors.generated.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;As you can see, two methods were generated within the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Errors&lt;/code&gt; class: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PropertyIsRequired&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ProductHasMinWeight&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;Every time you add, update or remove lines to .resx files and want your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Errors&lt;/code&gt; class to be updated, just go to the menu “Build / Transform All T4 Templates”.&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&quot;validating-the-generated-code&quot;&gt;Validating the generated code&lt;/h3&gt;
&lt;p&gt;If you want to validate that you have followed the tutorial correctly so far, you can create the NUnit project and add this test fixture:
&lt;script src=&quot;https://gist.github.com/6297f4ca7b0be353d92203e5b6364e40.js?file=ErrorsTest.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;customizing-the-t4-template&quot;&gt;Customizing the T4 Template​&lt;/h3&gt;
&lt;p&gt;You’ve probably noticed that inside the .tt file there is a line: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGE THE VALUES BELOW TO THE VALUES CORRESPONDING TO YOUR PROJECT&lt;/code&gt;.
In the 3 variables below this line you can customize the name of the resource file, the exception class that will be used (maybe you want to use a different exception or your project has a custom one) and the namespace that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Error&lt;/code&gt; class will be in.
&lt;script src=&quot;https://gist.github.com/6297f4ca7b0be353d92203e5b6364e40.js?file=custom.tt&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;using-the-generated-code&quot;&gt;Using the generated code&lt;/h2&gt;
&lt;p&gt;Finally it’s time to use the generated code.&lt;/p&gt;

&lt;h3 id=&quot;propertyisrequired&quot;&gt;PropertyIsRequired&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/6297f4ca7b0be353d92203e5b6364e40.js?file=PropertyIsRequired.sample.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;In this case, it will be generate a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;InvalidOperationException&lt;/code&gt; with the message:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;If UICulture is pt-BR: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A propriedade 'First Name' é obrigatória.&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Otherwise: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;The property 'First Name' is required.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;producthasminweight&quot;&gt;ProductHasMinWeight&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/6297f4ca7b0be353d92203e5b6364e40.js?file=ProductHasMinWeight.sample.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;In this case, it will be generate a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;InvalidOperationException&lt;/code&gt; with the message:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;If UICulture is pt-BR: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;O produto 'Amazing Product' deve pesar pelo menos 1KG.&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Otherwise: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;The product 'Amazing Product' must weigh at least 1KG.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Error.tt&lt;/code&gt; checks for any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{number}&lt;/code&gt; within the message and generates the appropriate method arguments.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;aspnet-tip&quot;&gt;ASP.NET tip&lt;/h2&gt;
&lt;p&gt;If you want to use this technique in an ASP.NET project remember to enable localization in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Startup.cs&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Program.cs&lt;/code&gt; file:
&lt;script src=&quot;https://gist.github.com/6297f4ca7b0be353d92203e5b6364e40.js?file=Startup.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;without-throwing-exceptions&quot;&gt;Without throwing exceptions&lt;/h2&gt;
&lt;p&gt;In many projects, throwing exceptions is not possible or desired due to performance and design issues, in these cases you can use the same technique shown in this tutorial, but instead of throwing exceptions, you can adapt T4 to generate an error object business that can go through all layers of your architecture until reaching the UI or the serialization.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;T4 is a powerful tool to help create an efficient development flow in the .NET stack. In cases like this tutorial, it drastically reduces the amount of code and improves the overall availability of the codebase.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>6 modern C# features for cleaner Unity code</title>
   <link href="//6-modern-csharp-features-for-cleaner-unity-code/"/>
   <updated>2022-11-15T00:00:00-03:00</updated>
   <id>//6-modern-csharp-features-for-cleaner-unity-code</id>
   <content type="html">&lt;p&gt;Since C# 7.0, many code improvements that help us write less code have been added to the language.&lt;/p&gt;

&lt;p&gt;This tutorial will focus on six new features that can help us write more concise and readable code and how we can use these features on our C# for Unity.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;I originally wrote this post as a guest writer for &lt;a href=&quot;https://blog.logrocket.com/6-modern-c-sharp-features-cleaner-unity-code/&quot;&gt;LogRocket’s blog&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;tutorial-sections&quot;&gt;Tutorial sections&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/requirements-128-8b68e8c6b.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/requirements-128-8b68e8c6b.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/requirements-128-8b68e8c6b.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;ul&gt;
  &lt;li&gt;Prerequisites&lt;/li&gt;
  &lt;li&gt;Setting up our Unity project&lt;/li&gt;
  &lt;li&gt;Tutorial structure&lt;/li&gt;
  &lt;li&gt;C# features support in Unity&lt;/li&gt;
  &lt;li&gt;Switch expression&lt;/li&gt;
  &lt;li&gt;Property pattern&lt;/li&gt;
  &lt;li&gt;Type pattern&lt;/li&gt;
  &lt;li&gt;Constant pattern&lt;/li&gt;
  &lt;li&gt;Relational pattern&lt;/li&gt;
  &lt;li&gt;Logical pattern&lt;/li&gt;
  &lt;li&gt;Conclusion&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;The following prerequisites are required to follow along with this tutorial:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Basic knowledge of Unity&lt;/li&gt;
  &lt;li&gt;Previous experience writing C# scripts in Unity&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;setting-up-our-unity-project&quot;&gt;Setting up our Unity project&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/config-128-c46695ddc.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/config-128-c46695ddc.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/config-128-c46695ddc.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;First, we need to create our Unity project. For this tutorial, we’ll use the version 2021.3.4f1, which, at the moment I’m writing, is the newest LTS Unity version.&lt;/p&gt;

&lt;p&gt;On the project templates list, choose 2D(core), give it a name, and click the Create project button.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-200-1cab31008.webp 200w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-400-1cab31008.webp 400w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-800-1cab31008.webp 800w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-1224-1cab31008.webp 1224w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-200-1cab31008.png 200w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-400-1cab31008.png 400w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-800-1cab31008.png 800w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-1224-1cab31008.png 1224w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-800-1cab31008.png&quot; alt=&quot;post image&quot; width=&quot;1224&quot; height=&quot;712&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
With the project started, create two folders called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scripts&lt;/code&gt; inside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assets&lt;/code&gt; folder. We’ll use them to keep our project organized during the tutorial.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/folders-200-d4f7ca06e.webp 200w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/folders-400-d4f7ca06e.webp 400w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/folders-528-d4f7ca06e.webp 528w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/folders-200-d4f7ca06e.png 200w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/folders-400-d4f7ca06e.png 400w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/folders-528-d4f7ca06e.png 528w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/folders-528-d4f7ca06e.png&quot; alt=&quot;post image&quot; width=&quot;528&quot; height=&quot;192&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tutorial-structure&quot;&gt;Tutorial structure&lt;/h2&gt;
&lt;p&gt;For each sample of how to use the new C# feature, we will first look at how it was done before and then how we could write less and more readable code with the new feature.&lt;/p&gt;

&lt;p&gt;The classes below are just stubs that are used on all samples throughout the tutorial. You can add them to a script inside the `Scripts folder:
&lt;script src=&quot;https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=base.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;c-features-support-in-unity&quot;&gt;C# features support in Unity&lt;/h2&gt;
&lt;p&gt;In C# versions 8 and 9, a lot of new features were added to the language. You can read the full features list for each version in the links below:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8&quot;&gt;What’s new in C# 8.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-9&quot;&gt;What’s new in C# 9.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;c-8-and-9-features-in-unity-whats-missing&quot;&gt;C# 8 and 9 features in Unity: What’s missing?&lt;/h3&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/problem-128-a3f91d933.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/problem-128-a3f91d933.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/problem-128-a3f91d933.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;Unity support for C# 8 has started on version &lt;a href=&quot;https://docs.unity3d.com/2020.2/Documentation/Manual/CSharpCompiler.html&quot;&gt;2020.2&lt;/a&gt; and C# 9 has started on version &lt;a href=&quot;https://docs.unity3d.com/2021.2/Documentation/Manual/CSharpCompiler.html&quot;&gt;2021.2&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Be aware that not every C# 8 and 9 feature is supported by Unity, like:&lt;/li&gt;
  &lt;li&gt;default interface methods&lt;/li&gt;
  &lt;li&gt;indices and ranges&lt;/li&gt;
  &lt;li&gt;asynchronous streams&lt;/li&gt;
  &lt;li&gt;asynchronous disposable&lt;/li&gt;
  &lt;li&gt;suppress emitting locals init flag&lt;/li&gt;
  &lt;li&gt;covariant return types&lt;/li&gt;
  &lt;li&gt;module initializers&lt;/li&gt;
  &lt;li&gt;extensible calling conventions for unmanaged function pointers&lt;/li&gt;
  &lt;li&gt;init only setters&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these unsupported features are used in very specific scenarios, like &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-9.0/function-pointers&quot;&gt;extensible calling conventions for unmanaged function pointers&lt;/a&gt;, and some aren’t, like &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#indices-and-ranges&quot;&gt;indices and ranges&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Because of this, features like indices and ranges and init only setters will likely be supported in future versions of Unity. However, the chance of an unsupported feature for a very specific scenario gaining Unity support in the future is smaller than a feature like &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#indices-and-ranges&quot;&gt;indices and ranges&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Maybe you can find some workarounds to use these unsupported features in Unity, but I discourage you from doing this because Unity is a cross-platform game engine. A workaround in a new feature could lead you to problems quite hard to understand, debug, and resolve.&lt;/p&gt;

&lt;p&gt;Fortunately, Unity supports some of the more common patterns and expressions from C# 8 and 9. Let’s review some of the most helpful ones below and see how they can enable us to write cleaner code.&lt;/p&gt;

&lt;h2 id=&quot;switch-expression&quot;&gt;Switch expression&lt;/h2&gt;
&lt;p&gt;The switch expression can dramatically simplify and reduce the LOC (Lines Of Code) to make a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;switch&lt;/code&gt;, because we can avoid a bunch of boilerplate code, like the case and return statements.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#switch-expressions&quot;&gt;Doc tip&lt;/a&gt;: the switch expression provides for switch-like semantics in an expression context. It provides a concise syntax when the switch arms produce a value.&lt;/p&gt;

  &lt;p&gt;Often, a switch statement produces a value in each of its case blocks. Switch expressions enable you to use more concise expression syntax. There are fewer repetitive case and break keywords and fewer curly braces.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;before&quot;&gt;Before&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=switch-expression-before.cs&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;after&quot;&gt;After&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=switch-expression-after.cs&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;property-pattern&quot;&gt;Property pattern&lt;/h2&gt;
&lt;p&gt;The property pattern enables you to match on properties of the object examined in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;switch&lt;/code&gt; expression.&lt;/p&gt;

&lt;p&gt;As you can see in the sample below, using a property pattern, we can transform a series of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if&lt;/code&gt; statements into a simple list of properties that the object on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;switch&lt;/code&gt; statement should match.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_ =&amp;gt;&lt;/code&gt; has the same meaning as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;default&lt;/code&gt; on a classic &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;switch&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#property-patterns&quot;&gt;Doc tip&lt;/a&gt;: a property pattern matches an expression when an expression result is non-null and every nested pattern matches the corresponding property or field of the expression result.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;before-1&quot;&gt;Before&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=property-pattern-before.cs&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;after-1&quot;&gt;After&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=property-pattern-after.cs&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;type-pattern&quot;&gt;Type pattern&lt;/h2&gt;
&lt;p&gt;We can use type patterns to check if the runtime type of an expression is compatible with a given type.&lt;/p&gt;

&lt;p&gt;The type pattern is almost the same logic as a property pattern but is now used in a context of an object type. We can transform a series of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if&lt;/code&gt; statements that check an object type into a list of types that the object on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;switch&lt;/code&gt; statement should match.&lt;/p&gt;

&lt;h3 id=&quot;before-2&quot;&gt;Before&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=type-pattern-before.cs&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;after-2&quot;&gt;After&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=type-pattern-after.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;Using the type pattern, we go from 16 lines of code to only 8 that have the same result and are quite clear to read and understand.&lt;/p&gt;

&lt;h2 id=&quot;constant-pattern&quot;&gt;Constant pattern&lt;/h2&gt;
&lt;p&gt;A constant pattern can be used to test if an expression result equals a specified constant.&lt;/p&gt;

&lt;p&gt;Probably the simplest pattern match, it just matches a constant value (for instance, a string) and then returns the result.&lt;/p&gt;

&lt;h3 id=&quot;before-3&quot;&gt;Before&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=constant-pattern-before.cs&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;after-3&quot;&gt;After&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=constant-pattern-after.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;A constant pattern can be used with any constant expression, like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int, float, char, string, bool, and enum&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;relational-pattern&quot;&gt;Relational pattern&lt;/h2&gt;
&lt;p&gt;A relational pattern will compare an expression result with a constant.&lt;/p&gt;

&lt;p&gt;This one could seem the most complex pattern match, but at its core it’s not that complicated. What we can do with a Relational Pattern is directly use logical operators as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;, &amp;gt;, &amp;lt;=, or &amp;gt;=&lt;/code&gt; to evaluate the object and then provide a result for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;switch&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/patterns#relational-patterns&quot;&gt;Doc tip&lt;/a&gt;: the right-hand part of a relational pattern must be a constant expression.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;before-4&quot;&gt;Before&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=relational-pattern-before.cs&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;after-4&quot;&gt;After&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=relational-pattern-after.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;Any of the relational operators &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;, &amp;gt;, &amp;lt;=, or &amp;gt;=&lt;/code&gt; can be used on a relational pattern.&lt;/p&gt;

&lt;h2 id=&quot;logical-pattern&quot;&gt;Logical pattern&lt;/h2&gt;
&lt;p&gt;We can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;not&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;and&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;or&lt;/code&gt; pattern combinators to create logical expressions.&lt;/p&gt;

&lt;p&gt;This is like an extension of the relational pattern where you can combine the logical operators not, and, and or to create a more complex and elaborate pattern match.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/patterns#logical-patterns&quot;&gt;Doc tip&lt;/a&gt;: you use the not, and, and or pattern combinators to create the following logical patterns:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Negation not pattern that matches an expression when the negated pattern doesn’t match the expression&lt;/li&gt;
    &lt;li&gt;Conjunctive and pattern that matches an expression when both patterns match the expression&lt;/li&gt;
    &lt;li&gt;Disjunctive or pattern that matches an expression when either pattern matches the expression&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;before-5&quot;&gt;Before&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=logical-pattern-before.cs&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;after-5&quot;&gt;After&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=logical-pattern-after.cs&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/challenge-128-2cdd65c40.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/challenge-128-2cdd65c40.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/challenge-128-2cdd65c40.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;In this tutorial, we’ve learned how to use the switch expression, property pattern, type pattern, constant pattern, relational pattern, and logical pattern to write less and more modern C# code on Unity.&lt;/p&gt;

&lt;p&gt;Hopefully, you can use some of these in your next project to spare yourself time while writing cleaner code.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GeneticSharp v3.0.0 - .NET 6</title>
   <link href="//geneticsharp-version-3-net6/"/>
   <updated>2022-09-06T00:00:00-03:00</updated>
   <id>//geneticsharp-version-3-net6</id>
   <content type="html">&lt;p&gt;I’ve just released the &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/releases/tag/3.0.0&quot;&gt;GeneticSharp version 3.0.0&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;net-6&quot;&gt;.NET 6&lt;/h1&gt;
&lt;p&gt;With version 3.0.0, GeneticSharp now supports .NET 6.&lt;/p&gt;

&lt;h1 id=&quot;performance-improvements&quot;&gt;Performance improvements&lt;/h1&gt;
&lt;p&gt;The performance of many operations has been improved just for use .NET 6:&lt;/p&gt;
&lt;h3 id=&quot;chromosomes&quot;&gt;Chromosomes&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/177389/188523382-2d21529d-a6ee-4823-843a-1964795124eb.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;crossovers&quot;&gt;Crossovers&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/177389/188523420-c7d93a6b-658c-46fd-a4f6-e8da2bd533fe.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;task-executors&quot;&gt;Task executors&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/177389/188523543-b233bb3b-7b97-4ffc-9871-e3120d634607.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;mutations&quot;&gt;Mutations&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/177389/188523591-943ca265-2880-4a0c-ac25-0b4e93f38bd8.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;randomizations&quot;&gt;Randomizations&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/177389/188523654-593c9b6f-d50c-4cd1-b2bd-588307a10efa.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;reinsertions&quot;&gt;Reinsertions&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/177389/188523733-b7b955d5-502d-4ed3-ba2a-28bb161bbea5.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;selections&quot;&gt;Selections&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/177389/188523701-c920686d-a1fa-42f6-8d21-73ae3deb55c1.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;terminations&quot;&gt;Terminations&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/177389/188523717-a2c648c4-cfc8-4b2e-9074-7b18eb92ef32.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;More about performance: &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/wiki/Performance&quot;&gt;https://github.com/giacomelli/GeneticSharp/wiki/Performance&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;streamlining-namespaces&quot;&gt;Streamlining namespaces&lt;/h1&gt;
&lt;p&gt;To avoid the necessity to write many &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;using&lt;/code&gt; statements to write a basic genetic algorithm with GeneticSharp:&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GeneticSharp.Domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GeneticSharp.Domain.Crossovers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GeneticSharp.Domain.Mutations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GeneticSharp.Domain.Populations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GeneticSharp.Domain.Selections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GeneticSharp.Domain.Terminations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GeneticSharp.Infrastructure.Framework.Threading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The namespaces needed to use GeneticSharp have been simplified to just two:&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GeneticSharp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and this one if you want to use the extensions:&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GeneticSharp.Extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;installing&quot;&gt;Installing&lt;/h1&gt;

&lt;h3 id=&quot;net-6-1&quot;&gt;.NET 6&lt;/h3&gt;
&lt;p&gt;Only GeneticSharp:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install-package GeneticSharp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;GeneticSharp and extensions (TSP, AutoConfig, Bitmap equality, Equality equation, Equation solver, Function builder, etc):&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install-package GeneticSharp.Extensions
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;unity3d&quot;&gt;Unity3D&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;For Unity you should used the version 2.6.0, because Unity, at moment I’m writing, only support .NET Standard 2.1: &lt;a href=&quot;https://docs.unity3d.com/Manual/dotnetProfileSupport.html&quot;&gt;https://docs.unity3d.com/Manual/dotnetProfileSupport.html&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You should use the &lt;a href=&quot;https://github.com/xoofx/UnityNuGet&quot;&gt;UnityNuGet&lt;/a&gt; to install GeneticSharp directly from NuGet.&lt;/p&gt;

&lt;p&gt;Or you can use the latest GeneticSharp.unitypackage available in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assets&lt;/code&gt; section of this release.&lt;/p&gt;

&lt;h3 id=&quot;net-standard-20-and-net-framework-462&quot;&gt;.NET Standard 2.0 and .NET Framework 4.6.2&lt;/h3&gt;
&lt;p&gt;To install previous version that support .NET Standard 2.0 and .NET Framework 4.6.2:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install-package GeneticSharp &lt;span class=&quot;nt&quot;&gt;-Version&lt;/span&gt; 2.6.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;mono-and-net-framework-35&quot;&gt;Mono and .NET Framework 3.5&lt;/h3&gt;
&lt;p&gt;To install previous version that support .NET Framework 3.5:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install-package GeneticSharp &lt;span class=&quot;nt&quot;&gt;-Version&lt;/span&gt; 1.2.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;More about installing/setup: &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/wiki/Setup&quot;&gt;https://github.com/giacomelli/GeneticSharp/wiki/Setup&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>HTML5 audio tag, large files and ASP .NET</title>
   <link href="//html5-audio-tag-large-files-and-asp-dotnet/"/>
   <updated>2022-04-19T00:00:00-03:00</updated>
   <id>//html5-audio-tag-large-files-and-asp-dotnet</id>
   <content type="html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;If you have tried to change the current playback position (currentTime) of large audio files using the HTML5 audio tag, even using the preload attribute, you probably struggled with the fact that the audios would never play at that position but would start playing again from the beginning of the audio.&lt;/p&gt;

&lt;p&gt;This happens because most browsers, Chrome included, request that the headers &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;accept-ranges&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;content-range&lt;/code&gt; should be in the audio file response.&lt;/p&gt;

&lt;h2 id=&quot;asp-net-solution&quot;&gt;ASP .NET solution&lt;/h2&gt;
&lt;p&gt;If you are using ASP .NET, the easiest way to include those headers in the response is to use the third parameter of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Controller's File&lt;/code&gt; method:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/2e0a4ba574e8864d9e30fd6e641f628d.js?file=audio.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;Then, the result response will have the needed headers that make browsers happy and allow you to change the audio’s playback position.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2022/04/19/html5-audio-tag-large-files-and-asp-dotnet/response-headers-200-c5c52e492.webp 200w, /assets/images/generated/assets/2022/04/19/html5-audio-tag-large-files-and-asp-dotnet/response-headers-299-c5c52e492.webp 299w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2022/04/19/html5-audio-tag-large-files-and-asp-dotnet/response-headers-200-c5c52e492.png 200w, /assets/images/generated/assets/2022/04/19/html5-audio-tag-large-files-and-asp-dotnet/response-headers-299-c5c52e492.png 299w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2022/04/19/html5-audio-tag-large-files-and-asp-dotnet/response-headers-299-c5c52e492.png&quot; alt=&quot;post image&quot; width=&quot;299&quot; height=&quot;111&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SqlAsFile</title>
   <link href="//sqlasfile/"/>
   <updated>2021-05-31T00:00:00-03:00</updated>
   <id>//sqlasfile</id>
   <content type="html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;If you already worked on a project where the data access solution has used SQL commands, instead of some ORM solution, you probably saw some SQL commands inserted directly inside the C# code. I worked on projects with that approach too, but I saw a great &lt;strong&gt;problem with that: We were treating a complete language (SQL) as just a string inside our C# code. No IntelliSense, code completion, syntax validation, format, etc.&lt;/strong&gt;
If&lt;/p&gt;

&lt;p&gt;Some time ago, with that problem in mind, I created a small library to help us to use SQL commands in our project at that time. As we were using &lt;a href=&quot;https://github.com/DapperLib/Dapper&quot;&gt;Dapper&lt;/a&gt; as our facilitator to access the SQL Server database, we needed to write SQL commands as our daily base activities.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;That library, called SqlAsFile, helped us to write SQL commands in separated .sql files and use them inside the C# as typed string property of a static class (using T4 generator). This allowed us to write SQL with the whole help of IDE and with no chance to reference an invalid SQL file path.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Install the SqlAsFile on your Data project (where your .sql files will be created) using the Nuget package or using the source code from GitHub: &lt;a href=&quot;https://github.com/giacomelli/sqlasfile&quot;&gt;https://github.com/giacomelli/sqlasfile&lt;/a&gt;.
&lt;script src=&quot;https://gist.github.com/4dda230a09941b6300468a71ee3812ab.js?file=install-package.sh&quot;&gt; &lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;Copy the &lt;a href=&quot;https://github.com/giacomelli/SqlAsFile/blob/master/src/Sample.Data/SqlInfoGenerator.tt&quot;&gt;SqlInfoGenerator.tt&lt;/a&gt; to your Data project.&lt;/li&gt;
  &lt;li&gt;Change the namespace of line bellow to the namespace of your Data project.
&lt;script src=&quot;https://gist.github.com/4dda230a09941b6300468a71ee3812ab.js?file=change-template.cs&quot;&gt; &lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;Add your .sql files inside any folder or subfolder of your Data project.&lt;/li&gt;
  &lt;li&gt;The Build Action property of the .sql files should be changed to Embedded Resource.&lt;/li&gt;
  &lt;li&gt;Run the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SqlInfoGenerator.tt&lt;/code&gt; every time you add or remove .sql file from the project. You don’t need to that when you just change the content of already existing .sql file. (right click, Run Custom Tool)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;Now you can access the content of your .sql files in a strongly typed way directly from your C# code:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/4dda230a09941b6300468a71ee3812ab.js?file=usage.cs&quot;&gt; &lt;/script&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2021/05/31/sqlasfile/SqlAsFile-sample.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tags&quot;&gt;Tags&lt;/h2&gt;
&lt;p&gt;You can use some tags to tell to SqlAsFile’s parser how to treat a portion of the file:&lt;/p&gt;

&lt;h3 id=&quot;test-args&quot;&gt;test-args&lt;/h3&gt;
&lt;p&gt;Anything inside of these tags will be strip off of the SQL that you can access on C#.&lt;/p&gt;

&lt;p&gt;This tag is useful when you want to test the .sql directly against the DB without need to define the arguments every time.
&lt;script src=&quot;https://gist.github.com/4dda230a09941b6300468a71ee3812ab.js?file=test-args.sql&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;cte&quot;&gt;cte&lt;/h3&gt;
&lt;p&gt;Use this tag if you want to read the CTE of your file in the Cte property on C#.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/4dda230a09941b6300468a71ee3812ab.js?file=cte.sql&quot;&gt; &lt;/script&gt;

&lt;script&gt;
        $(document).ready(function() {
          $('.gist-meta').remove();
        });
      &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>ARC-8&colon; devlog &num;4 - CHIP-8 inside Unity Inspector</title>
   <link href="//arc-8-devlog-4/"/>
   <updated>2020-11-11T00:00:00-03:00</updated>
   <id>//arc-8-devlog-4</id>
   <content type="html">&lt;p&gt;Some years ago I coded a CHIP-8 emulator in C# just for fun, that emulator was hibernating in a private repository that I never released. Some days ago I started to working on it again with the idea to release it running on Blazor and as a Unity asset where any game developer could drag its prefabs as easter eggs directly to their games.&lt;/p&gt;

&lt;p&gt;In this post, I will talk about how I put a &lt;strong&gt;CHIP-8 emulator to run inside the Unity Editor Inspector Window&lt;/strong&gt;.&lt;/p&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2020/11/11/arc-8-devlog-4/arc-8-running-chip-8-emulator-inside-unity-inspector.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;To help to understand everything in this post I recommend you read the previous &lt;a href=&quot;/tags/arc8-devlog&quot;&gt;ARC-8 devlog posts&lt;/a&gt;, in special the &lt;a href=&quot;/arc-8-devlog-3&quot;&gt;last one&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;The source code is not yet published on GitHub, I will notify in this series of posts about ARC-8 devlog and on my &lt;a href=&quot;https://twitter.com/ogiacomelli&quot;&gt;Twitter&lt;/a&gt; too when this happens.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I wanted to run the graphics of the emulator inside the Unity Editor Inspector Window. Maybe, you can ask “why?”, well there is an inside joke among Unity developers where we try to play not expected things inside the inspector window, as you can see in the links below:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/DJ_Link/status/1134489432130818048&quot;&gt;https://twitter.com/DJ_Link/status/1134489432130818048&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/alexanderameye/status/1006916653777596416&quot;&gt;https://twitter.com/alexanderameye/status/1006916653777596416&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/DevdogUnity/status/1007563448174219265&quot;&gt;https://twitter.com/DevdogUnity/status/1007563448174219265&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;chip8loadereditorcs&quot;&gt;Chip8LoaderEditor.cs&lt;/h2&gt;
&lt;p&gt;This is a simplified version of the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Editor.html&quot;&gt;Editor&lt;/a&gt; script for &lt;a href=&quot;/arc-8-devlog-3&quot;&gt;Chip8Loader&lt;/a&gt;.
&lt;script src=&quot;https://gist.github.com/746f415fa4571dccd52008c4dc0c2b31.js?file=Chip8LoaderEditor.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h4 id=&quot;startemulator-and-stopemulator-methods&quot;&gt;StartEmulator and StopEmulator methods&lt;/h4&gt;
&lt;p&gt;In the method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;StartEmulator&lt;/code&gt; we start the emulation inside the Inspector Window.
After starting the emulator by calling the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Run&lt;/code&gt; method of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chip8Loader&lt;/code&gt; passing our local &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorChip8Input&lt;/code&gt; to override the emulator input to always use the keyboard.
We use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorCoroutineUtility.StartCoroutine&lt;/code&gt; method from the &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.editorcoroutines@0.0/manual/index.html&quot;&gt;Editor Coroutines package&lt;/a&gt; to start two coroutines for update and render emulator inside the editor.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;StopEmulator&lt;/code&gt; stops the emulation inside the Inspector Window using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorCoroutineUtility.StopCoroutine&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;updateemulator-and-renderemulator-methods&quot;&gt;UpdateEmulator and RenderEmulator methods&lt;/h4&gt;
&lt;p&gt;In the method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UpdateEmulator&lt;/code&gt; we call &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/MonoBehaviour.LateUpdate.html&quot;&gt;LateUpdate&lt;/a&gt; from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chip8Loader&lt;/code&gt; to run a emulation cycle.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RenderEmulator&lt;/code&gt; calls the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Editor.Repaint.html&quot;&gt;Repaint&lt;/a&gt; from Editor to redraw the inspector using the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Editor.OnInspectorGUI.html&quot;&gt;OnInspectorGUI&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;oninspectorgui-method&quot;&gt;OnInspectorGUI method&lt;/h4&gt;
&lt;p&gt;When the emulation is not running this method just draws the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chip8Loader&lt;/code&gt; inspector using the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Editor.DrawDefaultInspector.html&quot;&gt;DrawDefaultInspector&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When we click on the button &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Test emulator&lt;/code&gt; on the inspector, the emulation is activated and the emulation will be rendered on the inspector.&lt;/p&gt;

&lt;p&gt;When we use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GUI.BeginClip&lt;/code&gt; everything that we draw using the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/GL.html&quot;&gt;GL (Low-level graphics library)&lt;/a&gt; will be rendered inside the area passed as an argument to BeginClip. This is why we call &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Graphic.Render&lt;/code&gt; between the BeginClip and EndClip.&lt;/p&gt;

&lt;p&gt;In the last step, we read the input using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;input.ReadKeys&lt;/code&gt;.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/YMz62z3xlAo &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;next-step&quot;&gt;Next step&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;In the next &lt;a href=&quot;/tags/arc8-devlog&quot;&gt;ARC-8 devlog&lt;/a&gt; post I will probably talk about the release of the ARC-8 as an open-source project.&lt;/p&gt;

&lt;p&gt;If you have any doubts about what I talk about above or any tip about the CHIP-8 emulator (or Unity) and you like to share it, please let me know in the comments section below.&lt;/p&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;Further reading&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.unity.com/tutorial/editor-scripting&quot;&gt;Editor Scripting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/Manual/editor-CustomEditors.html&quot;&gt;Custom Editors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Editor.html&quot;&gt;Editor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.editorcoroutines@0.0/manual/index.html&quot;&gt;Editor Coroutines package&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/ScriptReference/MonoBehaviour.LateUpdate.html&quot;&gt;LateUpdate&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Editor.Repaint.html&quot;&gt;Repaint&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Editor.OnInspectorGUI.html&quot;&gt;OnInspectorGUI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Editor.DrawDefaultInspector.html&quot;&gt;DrawDefaultInspector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>ARC-8&colon; devlog &num;3 - Unity</title>
   <link href="//arc-8-devlog-3/"/>
   <updated>2020-11-04T00:00:00-03:00</updated>
   <id>//arc-8-devlog-3</id>
   <content type="html">&lt;p&gt;Some years ago I coded a CHIP-8 emulator in C# just for fun, that emulator was hibernating in a private repository that I never released. Some days ago I started to working on it again with the idea to release it running on Blazor and as a Unity asset where any game developer could drag its prefabs as easter eggs directly to their games.&lt;/p&gt;

&lt;p&gt;In this post, I will talk about &lt;strong&gt;how I implemented the graphics, sound, input, and log systems for Unity 3D&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can read the other &lt;a href=&quot;/tags/arc8-devlog&quot;&gt;ARC-8’s devlog posts&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;The source code is not yet published on GitHub, I will notify in this series of posts about ARC-8 devlog and on my &lt;a href=&quot;https://twitter.com/ogiacomelli&quot;&gt;Twitter&lt;/a&gt; too when this happens.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;If you were out of the planet in the last decade, maybe you don’t know what is &lt;a href=&quot;https://unity.com&quot;&gt;Unity&lt;/a&gt;: Unity is a cross-platform game engine developed in C++, but the games made on it are developed using .NET and C#.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Unity is a cross-platform game engine developed by Unity Technologies, first announced and released in June 2005 at Apple Inc.’s Worldwide Developers Conference as a Mac OS X-exclusive game engine. As of 2018, the engine had been extended to support more than 25 platforms. The engine can be used to create three-dimensional, two-dimensional, virtual reality, and augmented reality games, as well as simulations and other experiences. The engine has been adopted by industries outside video gaming, such as film, automotive, architecture, engineering and construction.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In older versions, Unity only supported a subset of .NET Framework (4.x), but nowadays it’s supporting .NET Standard 2.0.
This is why we can use our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ARC-8 Core&lt;/code&gt;, mentioned in the &lt;a href=&quot;/arc-8-devlog-1&quot;&gt;first devlog&lt;/a&gt;, because it is a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.NET Standard class library&lt;/code&gt; and can run directly on Unity.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/jSR-pu0WqHY &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;The 3D models of the arcade cabinet and arcade room were created by my talented friend &lt;a href=&quot;https://twitter.com/giusepe/status/1324050160779956227&quot;&gt;Giusepe Casagrande&lt;/a&gt;.&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;systems-interfaces-implementations&quot;&gt;Systems interfaces implementations&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/component-128-1eb69a9dc.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/component-128-1eb69a9dc.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/component-128-1eb69a9dc.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;The system interfaces &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGraphic&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ISound&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IInput&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ILog&lt;/code&gt; will be implemented as &lt;a href=&quot;https://docs.unity3d.com/Manual/class-MonoBehaviour.html&quot;&gt;MonoBehaviour&lt;/a&gt;.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/arc-8-unity-components-186-6eee669de.webp 186w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/arc-8-unity-components-186-6eee669de.jpg 186w&quot; type=&quot;image/jpeg&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/arc-8-unity-components-186-6eee669de.jpg&quot; alt=&quot;post image&quot; width=&quot;186&quot; height=&quot;320&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The MonoBehaviour class is the base class from which every Unity script derives, by default. TPovides the framework which allows you to attach your script to a GameObject in the editor, as well as providing hooks into useful Events such as Start and Update.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;chip8graphiccs-monobehaviour-igraphic&quot;&gt;Chip8Graphic.cs MonoBehaviour (IGraphic)&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGraphic&lt;/code&gt; implementation.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-200-12d224ad6.webp 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-400-12d224ad6.webp 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-518-12d224ad6.webp 518w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-200-12d224ad6.png 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-400-12d224ad6.png 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-518-12d224ad6.png 518w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-518-12d224ad6.png&quot; alt=&quot;post image&quot; width=&quot;518&quot; height=&quot;130&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
&lt;script src=&quot;https://gist.github.com/560a0d0eda7762fc73ad0aa84f3d3ebb.js?file=Chip8Graphic.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h4 id=&quot;intialize-method&quot;&gt;Intialize method&lt;/h4&gt;
&lt;p&gt;In the method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Initialize&lt;/code&gt; we verify if will render to the main camera or to a specific target camera, then we set some camera configuration, create the material we will use to render the CHIP-8 graphic, get the screen size, then we initialize our &lt;a href=&quot;https://gameprogrammingpatterns.com/double-buffer.html&quot;&gt;Double Buffer&lt;/a&gt; array.&lt;/p&gt;

&lt;p&gt;In most cases, we don’t use the main camera, but instead, use a target camera that uses a &lt;a href=&quot;https://docs.unity3d.com/Manual/class-RenderTexture.html&quot;&gt;RenderTexture&lt;/a&gt;, and then we can use that texture on any surface on our game, like a TV screen or an arcade cabinet.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Render Textures are special types of Textures that are created and updated at run time. To use them, you first create a new Render Texture and designate one of your Cameras to render into it. Then you can use the Render Texture in a Material just like a regular Texture.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;draw-method&quot;&gt;Draw method&lt;/h4&gt;
&lt;p&gt;This is one of the two methods that needed to be implemented of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGraphic&lt;/code&gt; interface. We received the array (64x32) of bytes representing the current state of CHIP-8 graphics and just update our local array variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_gfx&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;onrenderobject&quot;&gt;OnRenderObject&lt;/h4&gt;
&lt;p&gt;The method &lt;a href=&quot;https://docs.unity3d.com/2017.3/Documentation/ScriptReference/Camera.OnRenderObject.html&quot;&gt;OnRenderObject&lt;/a&gt; is called after the camera has rendered the scene.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;OnRenderObject can be used to render your own objects using Graphics.DrawMeshNow or other functions. This function is similar to OnPostRender, except OnRenderObject is called on any object that has a script with the function; no matter if it’s attached to a Camera or not.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;render-method&quot;&gt;Render method&lt;/h4&gt;
&lt;p&gt;The method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Render&lt;/code&gt; will be called by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OnRenderObject&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;This method is used to draw the state of CHIP-8 graphics (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_gfx&lt;/code&gt; array) to the current camera using the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/GL.html&quot;&gt;GL (Low-level graphics library)&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Use GL class to manipulate active transformation matrices, issue rendering commands similar to OpenGL’s immediate mode and do other low-level graphics tasks. GL immediate drawing functions use whatever is the “current material” set up right now (see Material.SetPass). The material controls how the rendering is done (blending, textures, etc.)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We use a second array called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_buffer&lt;/code&gt; to implement a &lt;a href=&quot;https://gameprogrammingpatterns.com/double-buffer.html&quot;&gt;Double Buffer&lt;/a&gt; and reduce the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;screen flickering&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;A byte with value 1 should be drawn (foreground color) and a byte with value 0 should not be drawn (background color).&lt;/p&gt;
&lt;/div&gt;

&lt;h4 id=&quot;invalidate-method&quot;&gt;Invalidate method&lt;/h4&gt;
&lt;p&gt;This is the second of the two methods needed to be implemented of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGraphic&lt;/code&gt; interface, but as we implemented a Double Buffer, this method does not need to perform any operation.&lt;/p&gt;

&lt;h4 id=&quot;setrendertexture-method&quot;&gt;SetRenderTexture method&lt;/h4&gt;
&lt;p&gt;It just set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RenderTexture&lt;/code&gt; of the current target camera.&lt;/p&gt;

&lt;h2 id=&quot;chip8soundcs-monobehaviour-isound&quot;&gt;Chip8Sound.cs MonoBehaviour (ISound)&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/sound-128-972082c3e.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/sound-128-972082c3e.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/sound-128-972082c3e.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ISound&lt;/code&gt; implementation.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-200-7b130dbfe.webp 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-400-7b130dbfe.webp 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-529-7b130dbfe.webp 529w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-200-7b130dbfe.png 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-400-7b130dbfe.png 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-529-7b130dbfe.png 529w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-529-7b130dbfe.png&quot; alt=&quot;post image&quot; width=&quot;529&quot; height=&quot;70&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
&lt;script src=&quot;https://gist.github.com/560a0d0eda7762fc73ad0aa84f3d3ebb.js?file=Chip8Sound.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h4 id=&quot;awake-method&quot;&gt;Awake method&lt;/h4&gt;
&lt;p&gt;We just try to locate our &lt;a href=&quot;https://docs.unity3d.com/2019.3/Documentation/Manual/class-AudioSource.html&quot;&gt;AudioSource&lt;/a&gt; component that will be used to play the sound.&lt;/p&gt;

&lt;h4 id=&quot;play-method&quot;&gt;Play method&lt;/h4&gt;
&lt;p&gt;This is the only method we need to implement of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ISound&lt;/code&gt; interface and it just calls the AudioSource’s &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/AudioSource.PlayOneShot.html&quot;&gt;PlayOneShot&lt;/a&gt; using the &lt;a href=&quot;https://docs.unity3d.com/2019.3/Documentation/Manual/class-AudioClip.html&quot;&gt;AudioClip&lt;/a&gt; defined on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_beep&lt;/code&gt; field.&lt;/p&gt;

&lt;h2 id=&quot;keyboardchip8inputcs-monobehaviour-iinput&quot;&gt;KeyboardChip8Input.cs MonoBehaviour (IInput)&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/joystick-128-82c7ade06.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/joystick-128-82c7ade06.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/joystick-128-82c7ade06.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IInput&lt;/code&gt; implementation for the keyboard.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-200-5789d9288.webp 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-400-5789d9288.webp 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-527-5789d9288.webp 527w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-200-5789d9288.png 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-400-5789d9288.png 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-527-5789d9288.png 527w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-527-5789d9288.png&quot; alt=&quot;post image&quot; width=&quot;527&quot; height=&quot;53&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
&lt;script src=&quot;https://gist.github.com/560a0d0eda7762fc73ad0aa84f3d3ebb.js?file=KeyboardChip8Input.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h4 id=&quot;key-mapping&quot;&gt;Key mapping&lt;/h4&gt;
&lt;p&gt;First, we create the dictionary &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_map&lt;/code&gt; to map the real keyboard keys to CHIP-8 keypad keys.&lt;/p&gt;

&lt;h4 id=&quot;updatekeys-method&quot;&gt;UpdateKeys method&lt;/h4&gt;
&lt;p&gt;The only method we need to implement for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IInput&lt;/code&gt; interface. 
In this method, we set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt; the CHIP-8’s keypad keys that were pressed by the player using the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Input.GetKey.html&quot;&gt;Input.GetKey&lt;/a&gt; method.&lt;/p&gt;

&lt;h2 id=&quot;chip8logcs-monobehaviour-ilog&quot;&gt;Chip8Log.cs MonoBehaviour (ILog)&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/logging-128-de6e1a017.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/logging-128-de6e1a017.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/logging-128-de6e1a017.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ILog&lt;/code&gt; implementation.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-200-9c411a016.webp 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-400-9c411a016.webp 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-521-9c411a016.webp 521w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-200-9c411a016.png 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-400-9c411a016.png 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-521-9c411a016.png 521w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-521-9c411a016.png&quot; alt=&quot;post image&quot; width=&quot;521&quot; height=&quot;62&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
&lt;script src=&quot;https://gist.github.com/560a0d0eda7762fc73ad0aa84f3d3ebb.js?file=Chip8Log.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h4 id=&quot;debug-and-error-methods&quot;&gt;Debug and Error methods&lt;/h4&gt;
&lt;p&gt;The two methods implemented for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ILog&lt;/code&gt; interface use methods available on Unity &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Debug.html&quot;&gt;Debug&lt;/a&gt; class to send log messages to the &lt;a href=&quot;https://docs.unity3d.com/Manual/Console.html&quot;&gt;console window&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;chip8loadercs&quot;&gt;Chip8Loader.cs&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This is a simplified version of the component responsible to load all systems (IGraphic, ISound, IInput, and ILog), initialize the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chip8&lt;/code&gt; class emulator, and load the ROM.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-200-a9c0f3f99.webp 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-400-a9c0f3f99.webp 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-529-a9c0f3f99.webp 529w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-200-a9c0f3f99.png 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-400-a9c0f3f99.png 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-529-a9c0f3f99.png 529w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-529-a9c0f3f99.png&quot; alt=&quot;post image&quot; width=&quot;529&quot; height=&quot;191&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
&lt;script src=&quot;https://gist.github.com/560a0d0eda7762fc73ad0aa84f3d3ebb.js?file=Chip8Loader.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h4 id=&quot;start-method&quot;&gt;Start method&lt;/h4&gt;
&lt;p&gt;Verifies if all the systems needed to run the emulator were configured in the editor, then &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Application-targetFrameRate.html&quot;&gt;sets the desired FPS&lt;/a&gt; and starts to run the emulator.&lt;/p&gt;

&lt;h4 id=&quot;run-and-restart-methods&quot;&gt;Run and Restart methods&lt;/h4&gt;
&lt;p&gt;These two methods have some overloads, but in the end, they will create a new instance of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Arc8.Chip8&lt;/code&gt; class using the systems defined and will load the ROM.&lt;/p&gt;

&lt;h4 id=&quot;lateupdate-method&quot;&gt;LateUpdate method&lt;/h4&gt;
&lt;p&gt;We use the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/MonoBehaviour.LateUpdate.html&quot;&gt;LateUpdate&lt;/a&gt; method from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MonoBehaviour&lt;/code&gt; to run the emulator &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EmulateCycle&lt;/code&gt; method.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;LateUpdate is called every frame after all Update functions have been called.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;next-step&quot;&gt;Next step&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;In the next &lt;a href=&quot;/tags/arc8-devlog&quot;&gt;ARC-8 devlog&lt;/a&gt; I will talk about how I put a &lt;a href=&quot;https://www.reddit.com/r/Unity3D/comments/ip507l/space_invaders_inside_the_unity_inspector_window/&quot;&gt;CHIP-8 emulator to run inside the Unity editor inspector window&lt;/a&gt;.&lt;/p&gt;
&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2020/11/04/arc-8-devlog-3/arc-8-running-chip-8-emulator-inside-unity-inspector.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If you have any doubts about what I talk about above or any tip about the CHIP-8 emulator (or Unity) and you like to share it, please let me know in the comments section below.&lt;/p&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;Further reading&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://unity.com/learn/get-started&quot;&gt;Get started with Unity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/Manual/index.html&quot;&gt;Unity User Manual&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/Manual/class-MonoBehaviour.html&quot;&gt;MonoBehaviour&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gameprogrammingpatterns.com/double-buffer.html&quot;&gt;Double Buffer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/Manual/class-RenderTexture.html&quot;&gt;RenderTexture&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/2017.3/Documentation/ScriptReference/Camera.OnRenderObject.html&quot;&gt;OnRenderObject&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/ScriptReference/GL.html&quot;&gt;GL (Low-level graphics library)&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/2019.3/Documentation/Manual/class-AudioSource.html&quot;&gt;AudioSource&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/2019.3/Documentation/Manual/class-AudioClip.html&quot;&gt;AudioClip&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/Manual/class-InputManager.html&quot;&gt;Input Manager&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Debug.html&quot;&gt;Debug&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/Manual/Console.html&quot;&gt;Console Window&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Application-targetFrameRate.html&quot;&gt;TargetFrameRate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>ARC-8&colon; devlog &num;2 - Blazor</title>
   <link href="//arc-8-devlog-2/"/>
   <updated>2020-10-29T00:00:00-03:00</updated>
   <id>//arc-8-devlog-2</id>
   <content type="html">&lt;p&gt;Some years ago I coded a CHIP-8 emulator in C# just for fun, that emulator was hibernating in a private repository that I never released. Some days ago I started to working on it again with the idea to release it running on Blazor and as a Unity asset where any game developer could drag its prefabs as easter eggs directly to their games.&lt;/p&gt;

&lt;p&gt;In this post, I will talk about &lt;strong&gt;how I implemented the graphics, sound, input, and log systems for Blazor&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can read the other &lt;a href=&quot;/tags/arc8-devlog&quot;&gt;ARC-8’s devlog posts&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;The source code is not yet published on GitHub, I will notify in this series of posts about ARC-8 devlog and on my &lt;a href=&quot;https://twitter.com/ogiacomelli&quot;&gt;Twitter&lt;/a&gt; too when this happens.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor&quot;&gt;Blazor&lt;/a&gt; is a feature of ASP.NET that extends the .NET developer platform with tools and libraries for building web apps.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Blazor can run your client-side C# code directly in the browser, using WebAssembly. Because it’s real .NET running on WebAssembly, you can re-use code and libraries from server-side parts of your application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is why we can use our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ARC-8 Core&lt;/code&gt;, mentioned in the previous &lt;a href=&quot;/arc-8-devlog-1&quot;&gt;devlog&lt;/a&gt;, because it is a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.NET Standard class library&lt;/code&gt; and can run directly on Blazor web assembly.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;For some components, like menu, inputs, and buttons I use the &lt;a href=&quot;https://blazorise.com/&quot;&gt;Blazorise library&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;online-demo&quot;&gt;Online demo&lt;/h2&gt;
&lt;p&gt;You can test and play the CHIP-8’s games directly on your browser with our online demo: &lt;a href=&quot;/apps/arc-8&quot;&gt;ARC-8 Blazor Online Demo&lt;/a&gt;.&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/9eHBdCTipZs &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;systems-interfaces-implementations&quot;&gt;Systems interfaces implementations&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/component-128-1eb69a9dc.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/component-128-1eb69a9dc.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/component-128-1eb69a9dc.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;The system interfaces &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGraphic&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ISound&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IInput&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ILog&lt;/code&gt; will be implemented as &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/blazor/components/?view=aspnetcore-3.1#:~:text=Blazor%20apps%20are%20built%20using,Components%20are%20flexible%20and%20lightweight.&quot;&gt;Blazor components&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A component is a self-contained chunk of user interface (UI), such as a page, dialog, or form. A component includes HTML markup and the processing logic required to inject data or respond to UI events. Components are flexible and lightweight. They can be nested, reused, and shared among projects.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/29/arc-8-devlog-2/arc-8-blazor-components-200-4b7f14cbd.webp 200w, /assets/images/generated/assets/2020/10/29/arc-8-devlog-2/arc-8-blazor-components-320-4b7f14cbd.webp 320w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/29/arc-8-devlog-2/arc-8-blazor-components-200-4b7f14cbd.jpg 200w, /assets/images/generated/assets/2020/10/29/arc-8-devlog-2/arc-8-blazor-components-320-4b7f14cbd.jpg 320w&quot; type=&quot;image/jpeg&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/29/arc-8-devlog-2/arc-8-blazor-components-320-4b7f14cbd.jpg&quot; alt=&quot;post image&quot; width=&quot;320&quot; height=&quot;246&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;chip8graphicrazor-component-igraphic&quot;&gt;Chip8Graphic.razor component (IGraphic)&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This a simplified version of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGraphic&lt;/code&gt; implementation (without of color selector that you can see in the demo).&lt;/p&gt;

&lt;h3 id=&quot;c-side&quot;&gt;C# side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=Chip8Graphic.razor&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;js-side&quot;&gt;JS side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=chip8-helper-graphic.js&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;onafterrenderasync-method&quot;&gt;OnAfterRenderAsync method&lt;/h4&gt;
&lt;p&gt;In the method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OnAfterRenderAsync&lt;/code&gt; we verify if it’s the component’s first render, then we call a JS method that will initialize a JS helper for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chip8Graphic.razor&lt;/code&gt; that will return the size of the canvas to C# code, then we use this information to scale our 64 x 32 CHIP-8’s display.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;OnAfterRenderAsync and OnAfterRender are called after a component has finished rendering. Element and component references are populated at this point. Use this stage to perform additional initialization steps using the rendered content, such as activating third-party JavaScript libraries that operate on the rendered DOM elements.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;draw-method&quot;&gt;Draw method&lt;/h4&gt;
&lt;p&gt;This is one of the two methods needed to be implemented of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGraphic&lt;/code&gt; interface. We received the array (64x32) of bytes representing the current state of CHIP-8 graphics and just update our local array variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_gfx&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;renderasync-method&quot;&gt;RenderAsync method&lt;/h4&gt;
&lt;p&gt;The method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RenderAsync&lt;/code&gt; will be called by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chip8Loader&lt;/code&gt; component during the &lt;a href=&quot;https://gameprogrammingpatterns.com/game-loop.html&quot;&gt;Game Loop&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This method is used to draw the state of CHIP-8 graphics (_gfx array) to the HTML page. 
We use a second array called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_buffer&lt;/code&gt; to implement a &lt;a href=&quot;https://gameprogrammingpatterns.com/double-buffer.html&quot;&gt;Double Buffer&lt;/a&gt; and reduce the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;screen flickering&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;A byte with value 1 should be drawn (foreground color) and a byte with value 0 should not be drawn (background color).&lt;/p&gt;
&lt;/div&gt;

&lt;h4 id=&quot;invalidate-method&quot;&gt;Invalidate method&lt;/h4&gt;
&lt;p&gt;This is the second of the two methods needed to be implemented of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGraphic&lt;/code&gt; interface, but as we implemented a Double Buffer, this method does not need to perform any operation.&lt;/p&gt;

&lt;h4 id=&quot;resize-method&quot;&gt;Resize method&lt;/h4&gt;
&lt;p&gt;Called by the JS side every time that the user resizes the browser window.&lt;/p&gt;

&lt;h4 id=&quot;clearcanvasasync-method&quot;&gt;ClearCanvasAsync method&lt;/h4&gt;
&lt;p&gt;We use this one to invalidate our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_buffer&lt;/code&gt; and reset the canvas to the background color.&lt;/p&gt;

&lt;h2 id=&quot;chip8soundrazor-component-isound&quot;&gt;Chip8Sound.razor component (ISound)&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/sound-128-972082c3e.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/sound-128-972082c3e.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/sound-128-972082c3e.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This a simplified version of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ISound&lt;/code&gt; implementation.&lt;/p&gt;

&lt;h3 id=&quot;c-side-1&quot;&gt;C# side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=Chip8Sound.razor&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;js-side-1&quot;&gt;JS side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=chip8-helper-sound.js&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;oninitialized-method&quot;&gt;OnInitialized method&lt;/h4&gt;
&lt;p&gt;We just use the information from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NavigationManager&lt;/code&gt; to set the audio file we want to play.&lt;/p&gt;

&lt;h4 id=&quot;play-method&quot;&gt;Play method&lt;/h4&gt;
&lt;p&gt;This is the only method we need to implement of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ISound&lt;/code&gt; interface and it just calls a JS method that will get the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;audio&lt;/code&gt; tag on the component, set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioSource&lt;/code&gt;, then load, and play it.&lt;/p&gt;

&lt;h2 id=&quot;chip8inputrazor-component-iinput&quot;&gt;Chip8Input.razor component (IInput)&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/joystick-128-82c7ade06.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/joystick-128-82c7ade06.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/joystick-128-82c7ade06.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IInput&lt;/code&gt; implementation.&lt;/p&gt;

&lt;h3 id=&quot;c-side-2&quot;&gt;C# side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=Chip8Input.razor&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;js-side-2&quot;&gt;JS side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=chip8-helper-input.js&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;key-mapping&quot;&gt;Key mapping&lt;/h4&gt;
&lt;p&gt;First we create the dictionary &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_map&lt;/code&gt; to map the real keyboard keys to CHIP-8 keypad keys.
The second dictionary we create is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_keyDown&lt;/code&gt;. It will be used to map what keys the player is pressing.&lt;/p&gt;

&lt;h4 id=&quot;onafterrenderasync-method-1&quot;&gt;OnAfterRenderAsync method&lt;/h4&gt;
&lt;p&gt;We call the JS method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chip8Input.init&lt;/code&gt; that will add two event listeners, one for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keydown&lt;/code&gt; and the other for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keyup&lt;/code&gt; that will call the C# methods &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HandleKeyDown&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HandleKeyUp&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;updatekeys-method&quot;&gt;UpdateKeys method&lt;/h4&gt;
&lt;p&gt;The only method we need to implement for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IInput&lt;/code&gt; interface. 
In this method, we set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt; the CHIP-8’s keypad keys that were pressed by the player.&lt;/p&gt;

&lt;h4 id=&quot;handlekeydown-and-handlekeyup-methods&quot;&gt;HandleKeyDown and HandleKeyUp methods&lt;/h4&gt;
&lt;p&gt;This method is responsible to set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_keyDown&lt;/code&gt; dictionary by the keyboard keys that the player pressed.&lt;/p&gt;

&lt;h2 id=&quot;chip8lograzor-component-ilog&quot;&gt;Chip8Log.razor component (ILog)&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/logging-128-de6e1a017.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/logging-128-de6e1a017.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/logging-128-de6e1a017.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This is a simplified version of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ILog&lt;/code&gt; implementation.&lt;/p&gt;

&lt;h3 id=&quot;c-side-3&quot;&gt;C# side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=Chip8Log.razor&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;debug-and-error-methods&quot;&gt;Debug and Error methods&lt;/h4&gt;
&lt;p&gt;The two methods implemented for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ILog&lt;/code&gt; interface use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Microsoft.Extensions.Logging.ILogger&amp;lt;T&amp;gt;&lt;/code&gt; to send log messages to the browser console.&lt;/p&gt;

&lt;h2 id=&quot;chip8loaderrazor&quot;&gt;Chip8Loader.razor&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This is a simplified version of the component responsible to load all systems (IGraphic, ISound, IInput, and ILog), initialize the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chip8&lt;/code&gt; class emulator,  load the ROM and perform the game loop.&lt;/p&gt;

&lt;h3 id=&quot;c-side-4&quot;&gt;C# side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=Chip8Loader.razor&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;js-side-3&quot;&gt;JS side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=chip8-helper-loader.js&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;onafterrenderasync-method-2&quot;&gt;OnAfterRenderAsync method&lt;/h4&gt;
&lt;p&gt;Initializes the emulator with the systems, then calls the JS &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chip8Loader.init&lt;/code&gt; function that will use the browser &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame&quot;&gt;window.requestAnimationFrame&lt;/a&gt; to call the C# method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RunCycle&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser calls a specified function to update an animation before the next repaint.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;runcycle-method&quot;&gt;RunCycle method&lt;/h4&gt;
&lt;p&gt;This method is called by the JS  (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window.requestAnimationFrame&lt;/code&gt;).
We implement a &lt;a href=&quot;https://gameprogrammingpatterns.com/game-loop.html&quot;&gt;Game Loop&lt;/a&gt; and in the end, call the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chip8Graphic.RenderAsync&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;next-step&quot;&gt;Next step&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;In the next &lt;a href=&quot;/tags/arc8-devlog&quot;&gt;ARC-8 devlog&lt;/a&gt; I will talk about the ARC-8’s implementation on Unity3D.&lt;/p&gt;

&lt;p&gt;If you have any doubts about what I talk about above or any tip about the CHIP-8 emulator (or Blazor) and you like to share it, please let me know in the comments section below.&lt;/p&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;Further reading&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/learn/aspnet/blazor-tutorial/intro&quot;&gt;Blazor Tutorial - Build your first Blazor app&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blazorise.com/docs/start/&quot;&gt;Blazorise quick-start&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/blazor/components/?view=aspnetcore-3.1#:~:text=Blazor%20apps%20are%20built%20using,Components%20are%20flexible%20and%20lightweight.&quot;&gt;Create and use ASP.NET Core Razor components&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/blazor/components/lifecycle?view=aspnetcore-3.1&quot;&gt;ASP.NET Core Blazor lifecycle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/blazor/call-javascript-from-dotnet?view=aspnetcore-3.1&quot;&gt;Call JavaScript functions from .NET methods in ASP.NET Core Blazor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/blazor/fundamentals/logging?view=aspnetcore-3.1&quot;&gt;ASP.NET Core Blazor logging&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gameprogrammingpatterns.com/double-buffer.html&quot;&gt;Double Buffer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gameprogrammingpatterns.com/game-loop.html&quot;&gt;Game Loop&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame&quot;&gt;RequestAnimationFrame&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>ARC-8&colon; devlog &num;1 - Core and code design</title>
   <link href="//arc-8-devlog-1/"/>
   <updated>2020-10-28T00:00:00-03:00</updated>
   <id>//arc-8-devlog-1</id>
   <content type="html">&lt;p&gt;Some years ago I coded a CHIP-8 emulator in C# just for fun, that emulator was hibernating in a private repository that I never released. Some days ago I started to working on it again with the idea to release it running on Blazor and as a Unity asset where any game developer could drag its prefabs as easter eggs directly to their games.&lt;/p&gt;

&lt;p&gt;In this post, I will talk about &lt;strong&gt;my premises for the ARC-8’s code design that guided me during its development&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can read the other &lt;a href=&quot;/tags/arc8-devlog&quot;&gt;ARC-8’s devlog posts&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;The source code is not yet published on GitHub, I will notify in this series of posts about ARC-8 devlog and on my &lt;a href=&quot;https://twitter.com/ogiacomelli&quot;&gt;Twitter&lt;/a&gt; too when this happens.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I always wanted to develop a video game emulator. Anybody that tried or even google about it quickly realizes that it is not an easy or simple task.
If you search a little further you will see developers talking about CHIP-8 as the best thing to emulate as your first emulator project. Why? Well, the CHIP-8 is quite a simple virtual machine that has only 35 opcodes, simple graphic, sound, and input systems too.&lt;/p&gt;

&lt;h2 id=&quot;chip-8&quot;&gt;CHIP-8&lt;/h2&gt;
&lt;p&gt;According to Wikipedia:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;CHIP-8 is an interpreted programming language, developed by Joseph Weisbecker. It was initially used on the COSMAC VIP and Telmac 1800 8-bit microcomputers in the mid-1970s. CHIP-8 programs are run on a CHIP-8 virtual machine. It was made to allow video games to be more easily programmed for these computers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;According to &lt;a href=&quot;http://mattmik.com/files/chip8/mastering/chip8.html&quot;&gt;Mastering CHIP-8 by Matthew Mikolay&lt;/a&gt; (one of the best technical information source about CHIP-8):&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;CHIP-8 is an interpreted minimalist programming language that was designed by Joseph Weisbecker in the 1970s for use on the RCA COSMAC VIP computer. Due to its hexadecimal format, it was best suited to machines with a scarcity of memory, as minimal text processing had to be performed by the interpreter before a program could be executed. This property inevitably led to its implementation on a variety of hobbyist computers aside from the VIP, such as the COSMAC ELF, Telmac 1800, and ETI 660.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;arc-8&quot;&gt;ARC-8&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-200-42589059c.webp 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-400-42589059c.webp 400w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-600-42589059c.webp 600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-200-42589059c.png 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-400-42589059c.png 400w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-600-42589059c.png 600w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-600-42589059c.png&quot; alt=&quot;post image&quot; width=&quot;600&quot; height=&quot;200&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
I won’t get into details about how to implement each of CHIP-8’s 35 opcodes, because there are plenty of tutorials and resources talking about this on the internet (look in the section ‘Further reading’ in the of this post). My focus here is to explain my code design decisions to allow built a CHIP-8 emulator core in .NET Standard that will allow us to develop a graphic, sound, and input systems for Blazor and Unity3D (and any other platform where C# / .NET is supported).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Why the name ARC-8? well, the choice of the name was quite chaotic as any of the name ideas brainstorm that I have had with my friend &lt;a href=&quot;http://twitter.com/giusepe&quot;&gt;Giusepe Casagrande&lt;/a&gt;. The name’s meaning and the way of speaking are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Arcade&lt;/code&gt; because we want to remember that old day when we are kids playing some classic games in an arcade or fliperama as we call it in Brazil.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;premises&quot;&gt;Premises&lt;/h2&gt;
&lt;p&gt;First of all, before started do develop the code, I needed to sit down and defined some premises of the ARC-8’s code design, they are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Premise 1 - Cross-platform&lt;/strong&gt;: the ARC-8 core solution should be cross-platform.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Premise 2 - Testable&lt;/strong&gt;: code must be testable.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Premise 3 - 100% code coverage&lt;/strong&gt;: Unit test code coverage for the core should be 100%.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Premise 4 - Benchmark&lt;/strong&gt;: benchmark the code to verify and compare solutions performance.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;premise-1---cross-platform&quot;&gt;Premise 1 - Cross-platform&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/cross-platform-128-90fb5f56b.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/cross-platform-128-90fb5f56b.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/cross-platform-128-90fb5f56b.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;To make the ARC-8 core solution cross-platform, the first decision is to implement it as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.NET Standard class library&lt;/code&gt;. The second one is to define the graphic, sound, input, and logging systems of the emulator as interfaces that will only be implemented on specific platforms, like Blazor and Unity3d.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-systems-interfaces-200-39c2d19ce.webp 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-systems-interfaces-280-39c2d19ce.webp 280w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-systems-interfaces-200-39c2d19ce.jpg 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-systems-interfaces-280-39c2d19ce.jpg 280w&quot; type=&quot;image/jpeg&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-systems-interfaces-280-39c2d19ce.jpg&quot; alt=&quot;post image&quot; width=&quot;280&quot; height=&quot;562&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;systems-interfaces&quot;&gt;Systems interfaces&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=system-interfaces.cs&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;premise-2---testable&quot;&gt;Premise 2 - Testable&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/test-128-7afecab50.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/test-128-7afecab50.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/test-128-7afecab50.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;The main part of a CHIP-8 emulation development is on the opcodes.&lt;/p&gt;

&lt;p&gt;The common solution for many emulators is to put all opcodes inside a giant &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;switch&lt;/code&gt; statement (some use nested switch to group some opcodes).&lt;/p&gt;

&lt;p&gt;There is no problem in this kind of solution, but besides the code readability that can easily suffer from too many cases in the switch statement, there is a problem with the idea of unit testing, because we cannot test each opcode isolated.&lt;/p&gt;

&lt;p&gt;Sure, you can still unit testing an emulator with opcodes in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;switch&lt;/code&gt; statement, but I decided to define an interface that an opcode needs to implement to be used on the emulator.&lt;/p&gt;

&lt;h3 id=&quot;iopcode-interface&quot;&gt;IOpcode interface&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=IOpcode.cs&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;an-iopcodes-implementation&quot;&gt;An IOpcode’s implementation&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=AnnnOpcode.cs&quot;&gt; &lt;/script&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-opcodes-200-17d4a8cba.webp 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-opcodes-296-17d4a8cba.webp 296w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-opcodes-200-17d4a8cba.jpg 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-opcodes-296-17d4a8cba.jpg 296w&quot; type=&quot;image/jpeg&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-opcodes-296-17d4a8cba.jpg&quot; alt=&quot;post image&quot; width=&quot;296&quot; height=&quot;552&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;premise-3---100-code-coverage&quot;&gt;Premise 3 - 100% code coverage&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/score-128-702a2b758.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/score-128-702a2b758.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/score-128-702a2b758.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;With the decision of implement each opcode in a separate classes and the decision of use interfaces for each system, we can easly unit test them and achieve the 100% code coverage:
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=AnnnOpcodeTest.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;To validate the code coverage I used the &lt;a href=&quot;https://github.com/coverlet-coverage/coverlet&quot;&gt;coverlet.msbuild&lt;/a&gt; and &lt;a href=&quot;https://github.com/danielpalme/ReportGenerator&quot;&gt;ReportGenerator&lt;/a&gt; Nuget packages combined with Cake’s recipe to generate a code coverage report:
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=unit-test.cake&quot;&gt; &lt;/script&gt;&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-200-43462216e.webp 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-400-43462216e.webp 400w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-800-43462216e.webp 800w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-1600-43462216e.webp 1600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-200-43462216e.jpg 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-400-43462216e.jpg 400w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-800-43462216e.jpg 800w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-1600-43462216e.jpg 1600w&quot; type=&quot;image/jpeg&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-800-43462216e.jpg&quot; alt=&quot;post image&quot; width=&quot;1600&quot; height=&quot;527&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;premise-4---benchmark&quot;&gt;Premise 4 - Benchmark&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/podium-128-f9f44969b.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/podium-128-f9f44969b.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/podium-128-f9f44969b.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;I like to benchmark the code to compare some solutions in a fast and precise way. To create a benchmark in the .NET system the &lt;a href=&quot;https://benchmarkdotnet.org/&quot;&gt;BenchmarkDotNet&lt;/a&gt; is the right choice. BenchmarkDotNet is quite easy to use and you can set up a project with it in less than 5 minutes.&lt;/p&gt;

&lt;p&gt;When I used it on ARC-8 implementation I discover that I could improve the performance in 18x just removing a Linq code and using a cached solution to locate the opcodes.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-200-c0dab76d0.webp 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-400-c0dab76d0.webp 400w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-800-c0dab76d0.webp 800w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-1331-c0dab76d0.webp 1331w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-200-c0dab76d0.jpg 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-400-c0dab76d0.jpg 400w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-800-c0dab76d0.jpg 800w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-1331-c0dab76d0.jpg 1331w&quot; type=&quot;image/jpeg&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-800-c0dab76d0.jpg&quot; alt=&quot;post image&quot; width=&quot;1331&quot; height=&quot;239&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;next-step&quot;&gt;Next step&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;In the next &lt;a href=&quot;/tags/arc8-devlog&quot;&gt;ARC-8 devlog&lt;/a&gt; I will talk about the ARC-8’s implementation on Blazor.&lt;/p&gt;

&lt;p&gt;If you have any doubts about what I talk about above or any tip about the CHIP-8 emulator and you like to share it, please let me know in the comments section below.&lt;/p&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;Further reading&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://mattmik.com/files/chip8/mastering/chip8.html&quot;&gt;Mastering CHIP-8 by Matthew Mikolay&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/JohnEarnest/Octo&quot;&gt;Octo: a high-level assembler for the CHIP-8&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mwales/chip8&quot;&gt;CHIP-8 Emulation and Disassembler&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/corax89/chip8-test-rom&quot;&gt;CHIP-8 test rom&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://johnearnest.github.io/chip8Archive/&quot;&gt;CHIP-8 Archive&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dmatlack/chip8/tree/master/roms/games&quot;&gt;CHIP-8 roms&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/coverlet-coverage/coverlet#Quick-Start&quot;&gt;Coverlet quick-start&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://benchmarkdotnet.org/articles/guides/getting-started.html&quot;&gt;BenchmarkDotNet getting started&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cakebuild.net/docs/getting-started&quot;&gt;Cake getting started&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Overview of .NET in Unity</title>
   <link href="//unitytips-overview-of-donet-in-unity/"/>
   <updated>2020-10-27T00:00:00-03:00</updated>
   <id>//unitytips-overview-of-donet-in-unity</id>
   <content type="html">&lt;p&gt;Unity Official documentation has an amazing page called &lt;a href=&quot;https://docs.unity3d.com/Manual/overview-of-dot-net-in-unity.html&quot;&gt;Overview of .NET in Unity&lt;/a&gt; that highlight 8 points about the usage o .NET in Unity.&lt;/p&gt;

&lt;p&gt;I think it’s important to any pro programmer in Unity quite understand those points, because of this I list them below, in a brief way. &lt;strong&gt;You can (and should) read the full documentation to understand all the 8 points listed in more depth&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;overview-of-net-in-unity&quot;&gt;Overview of .NET in Unity&lt;/h2&gt;
&lt;p&gt;Read the full documentation: &lt;a href=&quot;https://docs.unity3d.com/Manual/overview-of-dot-net-in-unity.html&quot;&gt;https://docs.unity3d.com/Manual/overview-of-dot-net-in-unity.html&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;infographic&quot;&gt;Infographic&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Download &lt;a href=&quot;/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic.png&quot;&gt;overview-of-donet-in-unity-infographic.png&lt;a&gt;&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Download &lt;a href=&quot;/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic.pdf&quot;&gt;overview-of-donet-in-unity-infographic.pdf&lt;a&gt;&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-200-76d1c217b.webp 200w, /assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-400-76d1c217b.webp 400w, /assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-800-76d1c217b.webp 800w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-200-76d1c217b.png 200w, /assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-400-76d1c217b.png 400w, /assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-800-76d1c217b.png 800w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-800-76d1c217b.png&quot; alt=&quot;post image&quot; width=&quot;800&quot; height=&quot;2000&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;scripting-backends&quot;&gt;Scripting backends&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Mono uses just-in-time (JIT) compilation and compiles code on demand at runtime.&lt;/li&gt;
  &lt;li&gt;IL2CPP uses ahead-of-time (AOT) compilation and compiles your entire application before it is run.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;managed-code-stripping&quot;&gt;Managed code stripping&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;When you build your application, Unity scans the compiled assemblies (.DLLs) to detect and remove unused code.&lt;/li&gt;
  &lt;li&gt;This process reduces the final binary size of your build, but increases build time.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;garbage-collection-gc&quot;&gt;Garbage collection (GC)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Garbage collector only runs for a limited period of time and does not necessarily collect all objects in one pass. This spreads the time it takes to collect objects over a number of frames and reduces the amount of stuttering and CPU spikes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;net-system-libraries&quot;&gt;.NET system libraries&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Unity tries its best to support as much of the .NET ecosystem as possible, there are some exceptions to parts of the .NET system libraries that Unity explicitly does not support.&lt;/li&gt;
  &lt;li&gt;You should use the .NET Standard 2.0 API Compatibility Level for all new projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;third-party-net-libraries&quot;&gt;Third-party .NET libraries&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;You should only use third-party .NET libraries that have been extensively tested on a wide range of Unity configurations and platforms.&lt;/li&gt;
  &lt;li&gt;You should profile the usage of your .NET system libraries on all target platforms.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;c-reflection-overhead&quot;&gt;C# reflection overhead&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;GC continuously scans the cached C# reflection objects, which causes unnecessary overhead.&lt;/li&gt;
  &lt;li&gt;To minimize the overhead, avoid methods such as Assembly.GetTypes and Type.GetMethods().&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;unityengineobject-special-behavior&quot;&gt;UnityEngine.Object special behavior&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;UnityEngine.Object is a special type of C# object in Unity, because it is linked to a native C++ counterpart object.&lt;/li&gt;
  &lt;li&gt;MonoBehaviour/ScriptableObject override the equality (==) and inequality (!=) operators.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;avoid-using-async-and-await&quot;&gt;Avoid using async and await&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;The Unity API is not thread safe and therefore, you should not use async and await tasks.&lt;/li&gt;
  &lt;li&gt;Async tasks often allocate objects when invoked, which might cause performance issues if you overuse them.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>OWASP ZAP Path Traversal and ASP .NET&colon; Notes</title>
   <link href="//owasp-zap-path-traversal-and-asp-dotnet-notes/"/>
   <updated>2020-10-15T00:00:00-03:00</updated>
   <id>//owasp-zap-path-traversal-and-asp-dotnet-notes</id>
   <content type="html">&lt;p&gt;In this post, I wrote some notes of my experience trying to understand the alerts about the &lt;a href=&quot;https://owasp.org/www-community/attacks/Path_Traversal&quot;&gt;Path Traversal&lt;/a&gt; attack while running &lt;a href=&quot;https://www.zaproxy.org/&quot;&gt;OWASP ZAP&lt;/a&gt; against an ASP .NET project.&lt;/p&gt;

&lt;h2 id=&quot;owasp-zap&quot;&gt;OWASP ZAP&lt;/h2&gt;
&lt;p&gt;OWASP ZAP (short for Zed Attack Proxy) is an open-source web application security scanner. It is intended to be used by both those new to application security as well as professional penetration testers.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-200-bda195394.webp 200w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-400-bda195394.webp 400w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-800-bda195394.webp 800w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-1032-bda195394.webp 1032w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-200-bda195394.png 200w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-400-bda195394.png 400w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-800-bda195394.png 800w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-1032-bda195394.png 1032w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-800-bda195394.png&quot; alt=&quot;post image&quot; width=&quot;1032&quot; height=&quot;641&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;More at &lt;a href=&quot;https://owasp.org/www-project-zap/&quot;&gt;https://owasp.org/www-project-zap/&lt;/a&gt;&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;path-traversal&quot;&gt;Path Traversal&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-path-traversal-alert-200-f835e0ab6.webp 200w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-path-traversal-alert-400-f835e0ab6.webp 400w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-path-traversal-alert-495-f835e0ab6.webp 495w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-path-traversal-alert-200-f835e0ab6.png 200w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-path-traversal-alert-400-f835e0ab6.png 400w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-path-traversal-alert-495-f835e0ab6.png 495w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-path-traversal-alert-495-f835e0ab6.png&quot; alt=&quot;post image&quot; width=&quot;495&quot; height=&quot;167&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;As the &lt;a href=&quot;https://owasp.org/www-community/attacks/Path_Traversal&quot;&gt;Path Traversal alert documentation&lt;/a&gt; explains:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;A path traversal attack (also known as directory traversal) aims to access files and directories that are stored outside the web root folder. By manipulating variables that reference files with “dot-dot-slash (../)” sequences and its variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system including application source code or configuration and critical system files.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The most common way to use this kind of attack in ASP .NET applications is trying to download some configuration files, like the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;web.config&lt;/code&gt; file, from the server file system. By default, the IIS handlers will not allow download this kind of file.&lt;/p&gt;

&lt;h2 id=&quot;validating-user-input&quot;&gt;Validating user input&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;It is good practice (mandatory in fact) to validate user input, especially on routes/actions where there is some kind of access to the file system.&lt;/p&gt;

&lt;p&gt;OWASP ZAP docs say:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Validate the user’s input by only accepting known good – do not sanitize the data&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;modelstateisvalid&quot;&gt;ModelState.IsValid&lt;/h3&gt;
&lt;p&gt;An easy way to perform a basic user input validation is to use the ModelState.IsValid, this property will always be false if any data sent by the client has an invalid or unexpected value. This is a good way to only accepted the expected type for model properties.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Model state represents errors that come from two subsystems: model binding and model validation. Errors that originate from model binding are generally data conversion errors. For example, an “x” is entered in an integer field. Model validation occurs after model binding and reports errors where data doesn’t conform to business rules. For example, a 0 is entered in a field that expects a rating between 1 and 5.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A way that you can extend and either improve the validation is using the &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/mvc/models/validation?view=aspnetcore-3.1#validation-attributes&quot;&gt;Validation attributes&lt;/a&gt;, like CreditCard, Compare, EmailAddress, Phone, Range, RegularExpression, Required, StringLength, Url, and Remote,&lt;/p&gt;

&lt;h3 id=&quot;validatemodelattribute&quot;&gt;ValidateModelAttribute&lt;/h3&gt;
&lt;p&gt;You can even use a custom &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ActionFilterAttribute&lt;/code&gt; to validate all your action models like the MS official documentation suggest: &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/web-api/overview/formats-and-model-binding/model-validation-in-aspnet-web-api#handling-validation-errors&quot;&gt;Model Validation in ASP.NET Web API&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/8ebd55525bc250095e95db2eb5712aca.js?file=ValidateModelAttribute.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;And use it on WebApiConfig:
&lt;script src=&quot;https://gist.github.com/8ebd55525bc250095e95db2eb5712aca.js?file=WebApiConfig.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Does not matter if you will use Validation attributes or another validation way, the important thing here is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;you should always validate the user input before use it&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;check-all-file-system-handling-actions&quot;&gt;Check all file system handling actions&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/telescope-128-e0357d1e6.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/telescope-128-e0357d1e6.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/telescope-128-e0357d1e6.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;If you have any action on your API that lets the user define a file system path, be sure to validate if it not passing strings like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;../&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;..\&lt;/code&gt;. If you not validate inputs like this, you can allow an attacker to navigate on your app file system, even the host machine file system.&lt;/p&gt;

&lt;p&gt;OWASP ZAP docs say:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Ensure the user cannot supply all parts of the path – surround it with your path code&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;false-positives&quot;&gt;False Positives&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/problem-128-a3f91d933.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/problem-128-a3f91d933.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/problem-128-a3f91d933.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;OWASP ZAP can report some false positives, especially for routes that have an argument with the same name of the action: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://localhost:8080/api/tests/test1?kind=test1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This happens because OWASP ZAP tries to use action name in all arguments in an attempt to see if can access a different resource or file.&lt;/p&gt;

&lt;p&gt;In my case, all reports like this were false positives.&lt;/p&gt;

&lt;p&gt;You can change the risk alert to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;False Positive&lt;/code&gt; for each URL in the context alert filters:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-200-d561dca0a.webp 200w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-400-d561dca0a.webp 400w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-800-d561dca0a.webp 800w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-1029-d561dca0a.webp 1029w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-200-d561dca0a.png 200w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-400-d561dca0a.png 400w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-800-d561dca0a.png 800w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-1029-d561dca0a.png 1029w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-800-d561dca0a.png&quot; alt=&quot;post image&quot; width=&quot;1029&quot; height=&quot;640&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;Remember: only mark an alert as false positive after had to validate that URL action code and you are certain that is a false positive&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;In most cases ASP .NET Web APIs/Apps are not exposed to a Path Traversal attack, but a poor user input validation in file system handling action can easily expose the whole API/APP.&lt;/p&gt;

&lt;p&gt;These are the basic rules of OWASP ZAP documents:&lt;/p&gt;

&lt;h3 id=&quot;how-to-identify-if-you-are-vulnerable&quot;&gt;How to identify if you are vulnerable&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Be sure you understand how the underlying operating system will process filenames handed off to it.&lt;/li&gt;
  &lt;li&gt;Don’t store sensitive configuration files inside the web root&lt;/li&gt;
  &lt;li&gt;For Windows IIS servers, the web root should not be on the system disk, to prevent recursive traversal back to system directories.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-to-protect-yourself&quot;&gt;How to protect yourself&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Prefer working without user input when using file system calls&lt;/li&gt;
  &lt;li&gt;Use indexes rather than actual portions of file names when templating or using language files (ie value 5 from the user submission = Czechoslovakian, rather than expecting the user to return “Czechoslovakian”)&lt;/li&gt;
  &lt;li&gt;Ensure the user cannot supply all parts of the path – surround it with your path code&lt;/li&gt;
  &lt;li&gt;Validate the user’s input by only accepting known good – do not sanitize the data&lt;/li&gt;
  &lt;li&gt;Use chrooted jails and code access policies to restrict where the files can be obtained or saved to&lt;/li&gt;
  &lt;li&gt;If forced to use user input for file operations, normalize the input before using in file io API’s, such as normalize().&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Azure Pipelines - Generating DB Script with SqlPackage.exe</title>
   <link href="//azure-pipelines-generating-db-script/"/>
   <updated>2019-12-17T00:00:00-03:00</updated>
   <id>//azure-pipelines-generating-db-script</id>
   <content type="html">&lt;p&gt;Recently I needed to automate the generation of a database script deploy from a SQL Server Database Project on our Azure Pipelines continuous integration. Below I will describe the steps to achieve such thing.&lt;/p&gt;

&lt;h2 id=&quot;building-the-solution&quot;&gt;Building the solution&lt;/h2&gt;
&lt;p&gt;A SQL Server Database Project has a solution (.sln) as any other kind of Visual Studio projects and we need to build it to generate our &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/relational-databases/data-tier-applications/data-tier-applications?view=sql-server-ver15&quot;&gt;DACPAC&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A data-tier application (DAC) is a logical database management entity that defines all of the SQL Server objects - like tables, views, and instance objects, including logins - associated with a user’s database. A DAC is a self-contained unit of SQL Server database deployment that enables data-tier developers and database administrators to package SQL Server objects into a portable artifact called a DAC package, also known as a DACPAC&lt;/p&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/30d0b7c0a3e803cb71ce4b1680d2a584.js?file=solution-build.yml&quot;&gt; &lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;The variables used in the script portions are described in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Complete azure-pipelines.yml&lt;/code&gt; in the end of this post&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;generating-the-sql-script&quot;&gt;Generating the .sql script&lt;/h2&gt;
&lt;p&gt;With our .dacpac file built, now we need to generate our .sql database script. To perform this operation we need the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/tools/sqlpackage?view=sql-server-ver15&quot;&gt;sqlpackage.exe&lt;/a&gt;, this command-line is available in some Azure Pipelines images, as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vs2017-win2016&lt;/code&gt;, so you need to use it on your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;azure-pipelines.yml&lt;/code&gt; file:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/30d0b7c0a3e803cb71ce4b1680d2a584.js?file=image.yml&quot;&gt; &lt;/script&gt;

&lt;p&gt;Add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CmdLine&lt;/code&gt; task below to generate the .sql database script:
&lt;script src=&quot;https://gist.github.com/30d0b7c0a3e803cb71ce4b1680d2a584.js?file=db-script-generate.yml&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;publishing-the-sql-script&quot;&gt;Publishing the .sql script&lt;/h2&gt;
&lt;p&gt;Now we need to publish the .sql file to the build artifacts:
&lt;script src=&quot;https://gist.github.com/30d0b7c0a3e803cb71ce4b1680d2a584.js?file=db-script-publish.yml&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;complete-azure-pipelinesyml&quot;&gt;Complete azure-pipelines.yml&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/30d0b7c0a3e803cb71ce4b1680d2a584.js?file=azure-pipelines.yml&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;extra-points&quot;&gt;Extra points&lt;/h2&gt;
&lt;p&gt;In the approach described above the .sql files is not automatically applied to the database, so someone need to download, check and apply the file manually against the target database. If you want to apply the database script automatically you can change &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CmdLine&lt;/code&gt; task that generate the .sql file to update the target database using the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/tools/sqlpackage?view=sql-server-ver15#publish-parameters-properties-and-sqlcmd-variables&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;action:publish&lt;/code&gt; option of sqlpackage.exe&lt;/a&gt;.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>WinForms sample for HarSharp</title>
   <link href="//winforms-sample-for-harsharp/"/>
   <updated>2019-10-29T00:00:00-03:00</updated>
   <id>//winforms-sample-for-harsharp</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/AJ1000&quot;&gt;Ajay Tandon&lt;/a&gt; sent me a WinForms sample that he made using HarSharp.&lt;/p&gt;

&lt;p&gt;The HTTP Archive (HAR) format as defined in the W3C Specification is an archival format for HTTP transactions that can be used by a web browser to export detailed performance data about web pages it loads.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/giacomelli/harsharp&quot;&gt;HarSharp&lt;/a&gt; is a small and easy-to-use library to parse HAR files to .NET objects that I created some years ago for .NET Framework, today I released the version 2.0.0 with support to .NET Core / .NET Standard.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-200-6befe6eac.webp 200w, /assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-400-6befe6eac.webp 400w, /assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-800-6befe6eac.webp 800w, /assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-1385-6befe6eac.webp 1385w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-200-6befe6eac.png 200w, /assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-400-6befe6eac.png 400w, /assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-800-6befe6eac.png 800w, /assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-1385-6befe6eac.png 1385w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-800-6befe6eac.png&quot; alt=&quot;post image&quot; width=&quot;1385&quot; height=&quot;788&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;Har File Analyzer with a HAR file loaded&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;files&quot;&gt;Files&lt;/h1&gt;
&lt;p&gt;If you want to use the the Har File Analyzer or want to know how to create a Win Forms app with HarSharp, you can download to full solution here: &lt;a href=&quot;/assets/2019/10/29/winforms-sample-for-harsharp/HarSharp_wingui.zip&quot;&gt;HarSharp_wingui.zip&lt;a&gt;&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>HarSharp 2.0.0. - .NET Core</title>
   <link href="//harsharp-2.0.0-dotnet-core/"/>
   <updated>2019-09-30T00:00:00-03:00</updated>
   <id>//harsharp-2.0.0-dotnet-core</id>
   <content type="html">&lt;p&gt;The HTTP Archive (HAR) format as defined in the W3C Specification is an archival format for HTTP transactions that can be used by a web browser to export detailed performance data about web pages it loads.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/giacomelli/harsharp&quot;&gt;HarSharp&lt;/a&gt; is a small and easy-to-use library to parse HAR files to .NET objects that I created some years ago for .NET Framework, today I released the version 2.0.0 with support to .NET Core / .NET Standard.&lt;/p&gt;

&lt;p&gt;NuGet package:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;install-package HarSharp&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;More details at: &lt;a href=&quot;&quot;&gt;https://github.com/giacomelli/harsharp&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;thanks-to&quot;&gt;Thanks to&lt;/h2&gt;
&lt;p&gt;I would like to thanks to &lt;a href=&quot;https://github.com/andrecosta-tw&quot;&gt;André Costa&lt;/a&gt; and &lt;a href=&quot;https://github.com/mmoreira2000&quot;&gt;mmoreira2000&lt;/a&gt; for made pull-requests for bug fixes and &lt;a href=&quot;https://github.com/Thoorium&quot;&gt;Olivier Beaudoin&lt;/a&gt; for contributing with the &lt;a href=&quot;https://github.com/giacomelli/HarSharp/pull/9&quot;&gt;support to .NET Core / .NET Standard&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Creating dotnet new templates with samples</title>
   <link href="//creating-dotnet-new-templates-with-samples/"/>
   <updated>2019-09-04T00:00:00-03:00</updated>
   <id>//creating-dotnet-new-templates-with-samples</id>
   <content type="html">&lt;p&gt;In this post I will show the needed steps and samples to create dotnet new templates.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Recently a friend asked me about the steps I follow to create dotnet new templates, while I was describing the steps to him I realized that information could be usefull to someone else or even to my future self.&lt;/p&gt;

&lt;p&gt;Sometime ago I created some dotnet new templates for GeneticSharp: &lt;a href=&quot;http://diegogiacomelli.com.br/dotnet-new-templates-for-GeneticSharp/&quot;&gt;dotnet new templates for GeneticSharp&lt;/a&gt; and I will use that template as samples for the steps below.&lt;/p&gt;

&lt;h2 id=&quot;nuget-pack--dotnet-pack&quot;&gt;Nuget pack / dotnet pack&lt;/h2&gt;
&lt;p&gt;Nowadays there are two main ways to build a dotnet new template: creating a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.nuspec&lt;/code&gt; file or defining the package properties directly inside your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.csproj&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To GeneticSharp templates I used a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.nuspec&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;steps-and-samples&quot;&gt;Steps and samples&lt;/h2&gt;
&lt;p&gt;When I was trying to create the first templates I used this Microsoft documentation to learn about it: &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/core/tools/custom-templates&quot;&gt;Custom templates for dotnet new&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;creating&quot;&gt;Creating&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Templates&lt;/code&gt; folder: &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/tree/master/src/Templates&quot;&gt;sample&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Define the templates in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.csproj&lt;/code&gt; or create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.nuspec&lt;/code&gt;: &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/Templates/GeneticSharp.Templates.nuspec&quot;&gt;sample&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;content&lt;/code&gt; folder inside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Templates&lt;/code&gt; folder: &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/tree/master/src/Templates/content&quot;&gt;sample&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Create a subfolder inside &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;content&lt;/code&gt; for each template and put your template project source code there: &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/tree/master/src/Templates/content/ConsoleApp&quot;&gt;sample&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;For each template folder, create a subfolder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template.config&lt;/code&gt; then create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template.json&lt;/code&gt; file: &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/Templates/content/ConsoleApp/.template.config/template.json&quot;&gt;sample&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;In this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.json&lt;/code&gt; you should define things like template name (shortName) and what it’s root namespace that will be replaced when a new project use this template (sourceName)&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&quot;building-and-testing&quot;&gt;Building and testing&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Now you can create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.nupkg&lt;/code&gt; with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dotnet pack&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nuget pack&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;You can test your templates locally installing them directly from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.nupkg&lt;/code&gt; file: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dotnet new -i your_templates_file.nupkg&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Install the template: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dotnet new template_shortname -n new_project_namespace -o output_folder&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;Here a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.cmd&lt;/code&gt; sample for last 3 steps: &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/tools/buildTemplatesNuget.cmd&quot;&gt;sample&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&quot;publishing&quot;&gt;Publishing&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;If everything is right you can publish your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.nupkg&lt;/code&gt; on &lt;a href=&quot;&quot;&gt;http://nuget.org&lt;/a&gt; or to your private NuGet feed: &lt;a href=&quot;https://www.nuget.org/packages/GeneticSharp.Templates/&quot;&gt;sample&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;That’s it, with just 9 steps you can create your own dotnet new template and jumpstart your next project setup.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Dapper and the NVARCHAR(4000) arguments</title>
   <link href="//dapper-and-the-nvarchar-4000-arguments/"/>
   <updated>2019-08-14T00:00:00-03:00</updated>
   <id>//dapper-and-the-nvarchar-4000-arguments</id>
   <content type="html">&lt;p&gt;Performing a profiler in the queries sended to the database you can see that in some cases Dapper is sending the string arguments as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NVARCHAR (4000)&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This happen because Dapper cannot infer what is the exactly type and length of the table column on database.&lt;/p&gt;

&lt;p&gt;The downside of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NVARCHAR (4000)&lt;/code&gt; in arguments is that the database can choose a bad execution plan for the query.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;To avoid this you can pass the type of the argument to Dapper:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/57f1f930ddd894eb8ab54fffed453842.js?file=dapper.sample1.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;To make this solution easier to use I made two extension methods &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ToVarChar&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ToNVarChar&lt;/code&gt;:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/57f1f930ddd894eb8ab54fffed453842.js?file=dapper.sample2.cs&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;extension-methods&quot;&gt;Extension methods&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/57f1f930ddd894eb8ab54fffed453842.js?file=DapperArgumentExtensions.cs&quot;&gt; &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>Can I send batch messages larger than 256 KB to Azure Service Bus?</title>
   <link href="//can-i-send-batch-messages-larger-than-256-kb-to-azure-service-bus/"/>
   <updated>2019-08-13T00:00:00-03:00</updated>
   <id>//can-i-send-batch-messages-larger-than-256-kb-to-azure-service-bus</id>
   <content type="html">&lt;h2 id=&quot;the-short-answer&quot;&gt;The short answer&lt;/h2&gt;
&lt;p&gt;NO!&lt;/p&gt;

&lt;h2 id=&quot;the-long-answer&quot;&gt;The long answer&lt;/h2&gt;
&lt;p&gt;The Azure Service Bus maximum message size is 256 KB for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Standard tier&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 MB&lt;/code&gt; for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Premium tier&lt;/code&gt; (&lt;a href=&quot;https://docs.microsoft.com/azure/service-bus-messaging/service-bus-quotas&quot;&gt;https://docs.microsoft.com/azure/service-bus-messaging/service-bus-quotas&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;A simple solution to overcome this limitation is split the messages in blocks lower or equal to 256 KB size.&lt;/p&gt;

&lt;p&gt;Below is a simplified version of the code that I used for Standard tier  case:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/ed0d6eb6a8457eabed916e86c369c56c.js&quot;&gt; &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>Deploying a T4 Template with dotnet pack</title>
   <link href="//deploying-a-t4-template-with-dotnet-pack/"/>
   <updated>2019-08-08T00:00:00-03:00</updated>
   <id>//deploying-a-t4-template-with-dotnet-pack</id>
   <content type="html">&lt;p&gt;In this post I will show how to deploy a T4 Template to a target project using a NuGet package built with dotnet CLI pack command.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Recently I had to distribute a T4 template inside a NuGet package, so developers who installed the NuGet package would get, in addition to the library assemblies, a T4 template to help generate some scaffold code.&lt;/p&gt;

&lt;p&gt;Nowadays there are two main ways to build a NuGet package: creating a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.nuspec&lt;/code&gt; file or defining the package properties directly inside your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.csproj&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The project that I want to distributed via NuGet is a .NET Standard library, so I decided to use the the dotnet core way: define the package properties inside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.csproj&lt;/code&gt; file.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-nuget-project&quot;&gt;Creating the NuGet project&lt;/h2&gt;
&lt;p&gt;We will create a sample project to use during the post. Open a command-line/terminal and type:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/34f72d3e54b5ac658a924bbb0f1f7e72.js?file=create-sample-project.sh&quot;&gt; &lt;/script&gt;

&lt;p&gt;Let’s say that the T4 Template that we want to distribute is located inside a folder called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Templates&lt;/code&gt; and the file is named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scaffold.tt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SampleNugetProject.csproj&lt;/code&gt; in the Visual Studio and add a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;T4 Template&lt;/code&gt;:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/add-t4-template-200-26dab70a3.webp 200w, /assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/add-t4-template-400-26dab70a3.webp 400w, /assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/add-t4-template-558-26dab70a3.webp 558w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/add-t4-template-200-26dab70a3.png 200w, /assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/add-t4-template-400-26dab70a3.png 400w, /assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/add-t4-template-558-26dab70a3.png 558w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/add-t4-template-558-26dab70a3.png&quot; alt=&quot;post image&quot; width=&quot;558&quot; height=&quot;412&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;Add new item…&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Solution Explorer&lt;/code&gt; should look like this:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/t4-template-added-solution-explorer-200-b5b822c1f.webp 200w, /assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/t4-template-added-solution-explorer-339-b5b822c1f.webp 339w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/t4-template-added-solution-explorer-200-b5b822c1f.png 200w, /assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/t4-template-added-solution-explorer-339-b5b822c1f.png 339w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/t4-template-added-solution-explorer-339-b5b822c1f.png&quot; alt=&quot;post image&quot; width=&quot;339&quot; height=&quot;194&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;creating-a-targets&quot;&gt;Creating a .targets&lt;/h2&gt;
&lt;p&gt;We need to create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.targets&lt;/code&gt; file, it will be used to copy the T4 Template from the NuGet package folder to the target project in the build process:&lt;/p&gt;

&lt;p&gt;Create a file with the same name of your NuGet package project, but with the extensions &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.targets&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For our sample the file will be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SampleNugetProject.targets&lt;/code&gt;:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/34f72d3e54b5ac658a924bbb0f1f7e72.js?file=SampleNugetProject.targets&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;changing-the-csproj&quot;&gt;Changing the .csproj&lt;/h2&gt;
&lt;p&gt;In the project &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.csproj&lt;/code&gt; just add this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ItemGroup&lt;/code&gt;:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/34f72d3e54b5ac658a924bbb0f1f7e72.js?file=SampleNugetProject.csproj&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;building-the-nuget-package&quot;&gt;Building the NuGet package&lt;/h2&gt;
&lt;p&gt;Inside the folder where are our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.csproj&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.targets&lt;/code&gt; files, type:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/34f72d3e54b5ac658a924bbb0f1f7e72.js?file=dotnet-pack.sh&quot;&gt; &lt;/script&gt;

&lt;p&gt;This will create a file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bin\Debug\SampleNugetProject.1.0.0.nupkg&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;testing-the-nuget-package&quot;&gt;Testing the NuGet package&lt;/h2&gt;
&lt;p&gt;Create a new .NET Core project to test the package:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/34f72d3e54b5ac658a924bbb0f1f7e72.js?file=create-TargetTestProject.sh&quot;&gt; &lt;/script&gt;

&lt;p&gt;Now, add the NuGet package to the target project.
&lt;script src=&quot;https://gist.github.com/34f72d3e54b5ac658a924bbb0f1f7e72.js?file=add-package.sh&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;To test our NuGet package without publish it to a NuGet source, just use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--source&lt;/code&gt; option and point it to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SampleNugetProject.1.0.0.nupkg&lt;/code&gt; folder.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If we look to our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TargetTestProject&lt;/code&gt; there is no &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scaffold.tt&lt;/code&gt; file yet, this is because it will copied from NuGet package folder to the project structure during the build process.&lt;/p&gt;

&lt;p&gt;Just build the target project and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scaffold.tt&lt;/code&gt; will be copied.
&lt;script src=&quot;https://gist.github.com/34f72d3e54b5ac658a924bbb0f1f7e72.js?file=dotnet-build.sh&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;That’s it, now we have created a NuGet package that copy a T4 Template to target project’s structure.&lt;/p&gt;

&lt;p&gt;You can expand this solution to copy other kind of files to the target project.&lt;/p&gt;

&lt;p&gt;If you want to dig deeper into generating NuGet packages using dotnet-cli, starts with &lt;a href=&quot;https://docs.microsoft.com/en-us/nuget/create-packages/creating-a-package-dotnet-cli&quot;&gt;Create a NuGet package using the dotnet CLI&lt;/a&gt;.&lt;/p&gt;

&lt;script&gt;
        $(document).ready(function() {
          $('.gist-meta').remove();
        });
      &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>Publishing a .NET Core project to SonarCloud with Cake</title>
   <link href="//publishing-a-dotnet-core-project-to-sonarcloud-with-cake/"/>
   <updated>2019-07-25T00:00:00-03:00</updated>
   <id>//publishing-a-dotnet-core-project-to-sonarcloud-with-cake</id>
   <content type="html">&lt;p&gt;In this post I will show how to use &lt;a href=&quot;https://cakebuild.net/&quot;&gt;Cake&lt;/a&gt; to build and test a .NET Core project and then publish the results to &lt;a href=&quot;https://sonarcloud.io&quot;&gt;SonarCloud&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Cake&lt;/strong&gt; (C# Make) is a cross-platform build automation system with a C# DSL for tasks such as compiling code, copying files and folders, running unit tests, compressing files and building NuGet packages.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;SonarCloud&lt;/strong&gt; is a cloud service offered by SonarSource and based on SonarQube. SonarQube is a widely adopted open source platform to inspect continuously the quality of source code and detect bugs, vulnerabilities and code smells.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Cake&lt;/strong&gt;: install the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cake&lt;/code&gt; on your .NET Core project before start this tutorial. Follow this &lt;a href=&quot;https://cakebuild.net/docs/tutorials/setting-up-a-new-project&quot;&gt;Setting Up A New Project&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;SonarCloud&lt;/strong&gt;: create an account and add a project on &lt;a href=&quot;https://sonarcloud.io&quot;&gt;https://sonarcloud.io&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;creating-the-buildcake&quot;&gt;Creating the build.cake&lt;/h2&gt;
&lt;p&gt;In project root folder, create a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build.cake&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;adding-the-tools-and-addin-references&quot;&gt;Adding the tools and addin references&lt;/h3&gt;
&lt;p&gt;Add the lines below to the file:
&lt;script src=&quot;https://gist.github.com/2ff83d13a8b970aacd4aa94b9182e7bb.js?file=build.v1.cake&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;We’ll use those tools and addins to create the complete .cake script.&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&quot;setting-the-variables&quot;&gt;Setting the variables&lt;/h3&gt;
&lt;p&gt;Now we need to set some variables:
&lt;script src=&quot;https://gist.github.com/2ff83d13a8b970aacd4aa94b9182e7bb.js?file=build.v2.cake&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Where:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;solutionDir&lt;/strong&gt;: is the subfolder where your solution source code is located.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;sonarLogin&lt;/strong&gt;: Change the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[SONARCLOUD-USER-TOKEN]&lt;/code&gt; for a token you can generate at the page &lt;a href=&quot;https://sonarcloud.io/account/security/&quot;&gt;https://sonarcloud.io/account/security/&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;branch&lt;/strong&gt;: if you are using git, then the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitBranchCurrent(&quot;.&quot;).FriendlyName&lt;/code&gt; will pass the right branch name to SonarCloud, otherwise you can set it manually.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppVeyor&lt;/code&gt; you can use line bellow to allow discover the branch name locally and in the AppVeyor:
&lt;script src=&quot;https://gist.github.com/2ff83d13a8b970aacd4aa94b9182e7bb.js?file=build.v3.cake&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;build-task&quot;&gt;Build task&lt;/h3&gt;
&lt;p&gt;The first task definitions will build our .NET Core project:
&lt;script src=&quot;https://gist.github.com/2ff83d13a8b970aacd4aa94b9182e7bb.js?file=build.v4.cake&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;test-task&quot;&gt;Test task&lt;/h3&gt;
&lt;p&gt;Now we will define the task to run our tests:
&lt;script src=&quot;https://gist.github.com/2ff83d13a8b970aacd4aa94b9182e7bb.js?file=build.v5.cake&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;This task use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Coverlet&lt;/code&gt; to collect the code coverage. Install it on your test project using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Coverlet&lt;/code&gt; NuGet package:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install-package coverlet.msbuild
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;sonar-tasks&quot;&gt;Sonar tasks&lt;/h3&gt;
&lt;p&gt;The lasts tasks to define are responsible to scan the project and send the build and tests results to SonarCloud:
&lt;script src=&quot;https://gist.github.com/2ff83d13a8b970aacd4aa94b9182e7bb.js?file=build.v6.cake&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Where:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Key&lt;/strong&gt;: is your project key on SonarCloud. You can get it throw these steps on &lt;a href=&quot;https://sonarcloud.io&quot;&gt;SonarCloud&lt;/a&gt;:
    &lt;ul&gt;
      &lt;li&gt;Select your project.&lt;/li&gt;
      &lt;li&gt;Open the menu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Administration / Update Key&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Organization&lt;/strong&gt;: is the name of your organization on SonarCloud. If your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;projects&lt;/code&gt; page is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://sonarcloud.io/organizations/YOUR-ORGANIZATION/projects&lt;/code&gt;, then your &lt;strong&gt;Organization&lt;/strong&gt; value is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YOUR-ORGANIZATION&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Exclusions&lt;/strong&gt;: here you can define the wildcards to excluse some files fron Sonar scan, like sample, docs and test files.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;defining-the-tasks-order&quot;&gt;Defining the tasks order&lt;/h3&gt;
&lt;p&gt;The last part of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build.cake&lt;/code&gt; file define the order that tasks will run:
&lt;script src=&quot;https://gist.github.com/2ff83d13a8b970aacd4aa94b9182e7bb.js?file=build.v7.cake&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;running-the-buildcake&quot;&gt;Running the build.cake&lt;/h2&gt;
&lt;p&gt;Now, every time you want to build, test and publish the results to SonarCloud you need to type this command on your project root folder:&lt;/p&gt;

&lt;p&gt;MacOS:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./build.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Windows:&lt;/p&gt;

&lt;p&gt;Open a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;powershell&lt;/code&gt; terminal:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;uild.ps1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When the build finish, you should see something like this:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/cake-terminal-200-ec263fa2c.webp 200w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/cake-terminal-400-ec263fa2c.webp 400w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/cake-terminal-405-ec263fa2c.webp 405w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/cake-terminal-200-ec263fa2c.png 200w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/cake-terminal-400-ec263fa2c.png 400w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/cake-terminal-405-ec263fa2c.png 405w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/cake-terminal-405-ec263fa2c.png&quot; alt=&quot;post image&quot; width=&quot;405&quot; height=&quot;149&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;Cake build&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Then open your project on &lt;a href=&quot;https://sonarcloud.io/projects&quot;&gt;SonarCloud&lt;/a&gt;:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-200-a93997fec.webp 200w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-400-a93997fec.webp 400w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-800-a93997fec.webp 800w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-983-a93997fec.webp 983w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-200-a93997fec.png 200w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-400-a93997fec.png 400w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-800-a93997fec.png 800w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-983-a93997fec.png 983w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-800-a93997fec.png&quot; alt=&quot;post image&quot; width=&quot;983&quot; height=&quot;503&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;SonarCloud dashboard&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;That’s it, now your project is ready to using cake to publish results to SonarCloud.&lt;/p&gt;

&lt;h2 id=&quot;complete-buildcake&quot;&gt;Complete build.cake&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/2ff83d13a8b970aacd4aa94b9182e7bb.js?file=build.cake&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;extras&quot;&gt;Extras&lt;/h2&gt;
&lt;p&gt;If you are using git, you can add this lines to your .gitignore file:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tools/**
!tools/packages.config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>GeneticSharp 2.6.0 - Blazor template</title>
   <link href="//geneticsharp-2.6.0-blazor-template/"/>
   <updated>2019-07-11T00:00:00-03:00</updated>
   <id>//geneticsharp-2.6.0-blazor-template</id>
   <content type="html">&lt;p&gt;The &lt;strong&gt;&lt;a href=&quot;https://github.com/giacomelli/GeneticSharp&quot;&gt;GeneticSharp 2.6.0&lt;/a&gt;&lt;/strong&gt; is out.&lt;/p&gt;

&lt;h2 id=&quot;blazor-template&quot;&gt;Blazor template&lt;/h2&gt;
&lt;p&gt;Now we have 4 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dotnet new&lt;/code&gt; templates, besides the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GeneticSharpConsoleApp&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GeneticSharpTspConsoleApp&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GeneticSharpTspUnity3d&lt;/code&gt; already existent, a new template for a Blazor client app was added: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GeneticSharpTspBlazorApp&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet new -i GeneticSharp.Templates
dotnet new GeneticSharpTspBlazorApp -o TspBlazorApp
cd TspBlazorApp
dotnet run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2019/07/11/geneticsharp-2.6.0-blazor-template/geneticsharp-blazor-template.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If you want to know more about how to use GeneticSharp with Blazor, take a look in this tutorial &lt;a href=&quot;http://diegogiacomelli.com.br/tsp-with-geneticsharp-and-blazor/&quot;&gt;TSP with GeneticSharp and Blazor&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;new-papers-and-projects-using-geneticsharp&quot;&gt;New papers and projects using GeneticSharp&lt;/h2&gt;
&lt;p&gt;Four papers and one project were added to the list:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/docs/mentioning-GeneticSharp/Design-of-a-warehouse-order-picking-policy-using-genetic-algorithm.pdf&quot;&gt;Design of a warehouse order picking policy using genetic algorithm (paper)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ieeexplore.ieee.org/document/8643945&quot;&gt;Fabrication of Adiabatic Quantum-Flux-Parametron Integrated Circuits Using an Automatic Placement Tool Based on Genetic Algorithms (paper)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/docs/mentioning-GeneticSharp/Modelling-and-Simulation-Analysis-of-Goal-Oriented-Business-Process.pdf&quot;&gt;Modelling and Simulation Analysis of Goal-Oriented Business Process (paper)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/docs/mentioning-GeneticSharp/Optimisation-par-algorithme-genetique-de-structures-lattices.pdf&quot;&gt;Optimization by genetic algorithm of lattices structures for the media generation in additive manufacturing (paper)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://trussoptimizationweb.herokuapp.com&quot;&gt;TrussOptimization (project)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-to-install-the-new-version&quot;&gt;How to install the new version&lt;/h2&gt;
&lt;h3 id=&quot;net-standard-20&quot;&gt;.NET Standard 2.0&lt;/h3&gt;
&lt;p&gt;Only GeneticSharp:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install-package GeneticSharp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;GeneticSharp and extensions (TSP, AutoConfig, Bitmap equality, Equality equation, Equation solver, Function builder, etc):&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install-package GeneticSharp.Extensions
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;unity3d&quot;&gt;Unity3D&lt;/h3&gt;
&lt;p&gt;You should use the &lt;a href=&quot;https://github.com/xoofx/UnityNuGet&quot;&gt;UnityNuGet&lt;/a&gt; to install GeneticSharp directly from NuGet.&lt;/p&gt;

&lt;p&gt;Or you can use the latest GeneticSharp.unitypackage available on our &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/releases&quot;&gt;release page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>TSP with GeneticSharp and Blazor</title>
   <link href="//tsp-with-geneticsharp-and-blazor/"/>
   <updated>2019-07-10T00:00:00-03:00</updated>
   <id>//tsp-with-geneticsharp-and-blazor</id>
   <content type="html">&lt;p&gt;In this post I will show how to use GeneticSharp and Blazor to solve the TSP (Travelling salesman problem).&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;According to Wikipedia The travelling salesman problem (TSP) asks the following question:&lt;em&gt;&lt;strong&gt;“Given a list of cities and the distances between each pair of cities, what is the shortest possible route that visits each city and returns to the origin city?”&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;TSP is a classic sample to test some optimization techniques, as well it’s fairly used to demonstrate how to implement a genetic algorithm. For these reasons I will use it to show you how to implement a basic genetic algorithm in Blazor using GeneticSharp.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;This post is a like a mirror of the &lt;a href=&quot;/tsp-with-GeneticSharp-and-Unity3d&quot;&gt;TSP with GeneticSharp an Unity3D&lt;/a&gt;. It’s using the same format to teach TSP and GeneticSharp, but instead of Unity3D, this one is about Blazor.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;You can see the final result of this tutorial on &lt;a href=&quot;/apps/geneticsharp-runner-blazorapp&quot;&gt;http://diegogiacomelli/apps/geneticsharp-runner-blazorapp&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;Note that the performance presented on this demo is not the performance that GeneticSharp presents in other apps kinds, like a ASP .NET Core backend app, a console app or in a Unity 3D game. As WebAssembly do not support create a new thread, we get limited to use a Timer to made this sample interactive. More details about this in next sections of the post.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;To better understand this tutorial, you need to have some experiences/knowledges in:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Blazor (beginner)&lt;/li&gt;
  &lt;li&gt;Genetic algorithms (beginner).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will perform a very basic use of Blazor and everything you need to complete this tutorial will be explained or provided by the code samples, but if you want to find out better what’s happening under the hood, take a look on &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/blazor/get-started?view=aspnetcore-3.0&amp;amp;viewFallbackFrom=aspnetcore-2.2&amp;amp;tabs=netcore-cli&quot;&gt;Blazor Get Started page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you need an introduction to genetic algorithms, take a look at this tutorial &lt;a href=&quot;/function-optimization-with-geneticsharp/&quot;&gt;Function optimization with GeneticSharp&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-blazor-project&quot;&gt;Creating the Blazor project&lt;/h2&gt;
&lt;p&gt;Open a terminal and type:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet new &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; Microsoft.AspNetCore.Blazor.Templates::3.0.0-preview6.19307.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;This will install the latest Blazor templates for .NET Core.&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;This tutorial is based on Blazor &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;preview6&lt;/code&gt;. If you are doing this tutorial using a newer Blazor version and have encountered some problem, leave a comment at the end of the post or contact me on &lt;a href=&quot;https://twitter.com/ogiacomelli&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Now we’ll create a scaffold Blazor app using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;blazor&lt;/code&gt; template:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet new blazor &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; TspWithGeneticSharp
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;TspWithGeneticSharp
dotnet watch run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wait for the message &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Application started. Press Ctrl+C to shut down&lt;/code&gt; show up in terminal, then open the url &lt;a href=&quot;http://localhost:5000&quot;&gt;http://localhost:5000&lt;/a&gt; on your browser, you should see something like this:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-200-f31194f79.webp 200w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-400-f31194f79.webp 400w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-800-f31194f79.webp 800w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-1019-f31194f79.webp 1019w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-200-f31194f79.png 200w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-400-f31194f79.png 400w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-800-f31194f79.png 800w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-1019-f31194f79.png 1019w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-800-f31194f79.png&quot; alt=&quot;post image&quot; width=&quot;1019&quot; height=&quot;310&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;installing-geneticsharp&quot;&gt;Installing GeneticSharp&lt;/h2&gt;
&lt;p&gt;Open a new terminal in the same folder and type:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet add package GeneticSharp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;This will install the latest &lt;a href=&quot;https://www.nuget.org/packages/GeneticSharp/&quot;&gt;GeneticSharp NuGet package&lt;/a&gt; in your newly created Blazor app.&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;opening-the-project&quot;&gt;Opening the project&lt;/h2&gt;
&lt;p&gt;I recommend to you use &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; to open the project. There are some cool VS Code extensions to work with Blazor.&lt;/p&gt;

&lt;p&gt;In the same terminal where you added the GeneticSharp package, type:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;This will open the Blazor project with VS Code.&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In the root folder of your Blazor project create a new subfolder called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tsp&lt;/code&gt;. We’ll add all our C# classes inside this folder.&lt;/p&gt;

&lt;h2 id=&quot;defining-the-tsp-chromosome&quot;&gt;Defining the TSP chromosome&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/route-128-704e92446.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/route-128-704e92446.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/route-128-704e92446.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;The chromosome represents a solution of the problem we are trying to solve. In our case the TSP chromosome should represent &lt;em&gt;&lt;strong&gt;“the shortest possible route that visits each city and returns to the origin city”&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;To represent the cities route each gene of our chromosome will represent an index of a city in the route.&lt;/p&gt;

&lt;p&gt;Create a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TspChromosome.cs&lt;/code&gt;:
&lt;script src=&quot;https://gist.github.com/9addc5182943ba25eb82201e30c76418.js?file=TspChromosome.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;representing-a-city&quot;&gt;Representing a city&lt;/h2&gt;
&lt;p&gt;The next step is define our genetic algorithm fitness function, but first we need to create a simple class to represent a city on a 2D space.&lt;/p&gt;

&lt;p&gt;Create a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TspCity.cs&lt;/code&gt;:
&lt;script src=&quot;https://gist.github.com/9addc5182943ba25eb82201e30c76418.js?file=TspCity.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-fitness-function&quot;&gt;The fitness function&lt;/h2&gt;
&lt;p&gt;Now we need to evaluate the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TspChromosome&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Our fitness function will evaluate the chromosome fitness based on the total distance to reach all cities in the route represented by the chromosome. The shorter the distance, the better the chromosome.&lt;/p&gt;

&lt;p&gt;Create a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TspFitness.cs&lt;/code&gt;: &lt;script src=&quot;https://gist.github.com/9addc5182943ba25eb82201e30c76418.js?file=TspFitness.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;configuring-the-genetic-algorithm&quot;&gt;Configuring the Genetic Algorithm&lt;/h2&gt;
&lt;p&gt;In this step we need to configure our genetic algorithm using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TspChromosome&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TspFitness&lt;/code&gt; and some classic GA operators already built in GeneticSharp.&lt;/p&gt;

&lt;p&gt;Create a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TspGA.cs&lt;/code&gt;: &lt;script src=&quot;https://gist.github.com/9addc5182943ba25eb82201e30c76418.js?file=TspGA.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;h3 id=&quot;why-use-timer&quot;&gt;Why use Timer?&lt;/h3&gt;
&lt;p&gt;GeneticSharp can be used as single threading or multithreading to evaluate chromosomes with the fitness function, but WebAssembly (and Blazor) can use just the UI thread, in this scenario when we call &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GeneticAlgorithm.Start&lt;/code&gt; method it freezes the UI until the GA finish.&lt;/p&gt;

&lt;p&gt;To avoid this behavior, the solution is: run each generation of the GA inside a step in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;System.Threading.Timer&lt;/code&gt; as you can see in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TspGA.Run&lt;/code&gt; method.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;APIs that aren’t applicable inside of a web browser (for example, accessing the file system, opening a socket, and &lt;strong&gt;threading&lt;/strong&gt;) throw a PlatformNotSupportedException.
(&lt;a href=&quot;https://docs.microsoft.com/pt-br/aspnet/core/blazor/?view=aspnetcore-3.0&quot;&gt;https://docs.microsoft.com/pt-br/aspnet/core/blazor/?view=aspnetcore-3.0&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;

&lt;h2 id=&quot;creating-the-razor-page&quot;&gt;Creating the Razor page&lt;/h2&gt;
&lt;p&gt;Inside the folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pages&lt;/code&gt; create a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tsp.razor&lt;/code&gt;: &lt;script src=&quot;https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=Tsp.v1.razor&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;As we need to interop with JavaScript to manipulate DOM, we will use some helper JS functions. Add the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;canvas-helper.js&lt;/code&gt; inside the folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wwwroot/js&lt;/code&gt;:  &lt;script src=&quot;https://gist.github.com/9addc5182943ba25eb82201e30c76418.js?file=canvas-helper.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Open the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.html&lt;/code&gt; and add the tag below inside the tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;head&lt;/code&gt;:  &lt;script src=&quot;https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=index.canvas-helper.html&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;h3 id=&quot;why-use-ijsruntime-do-access-dom&quot;&gt;Why use IJSRuntime do access DOM?&lt;/h3&gt;
&lt;p&gt;It’s awesome we can now use C# in the browser with Blazor. But unfortunately we can’t do everything with it, yet. Currently, WebAssembly isn’t able to directly access the DOM API, which means that Blazor isn’t able to either.
(&lt;a href=&quot;https://chrissainty.com/blazor-bites-javascript-interop&quot;&gt;https://chrissainty.com/blazor-bites-javascript-interop/&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;webassembly-roadmap&quot;&gt;WebAssembly roadmap&lt;/h3&gt;
&lt;p&gt;DOM integration is in the WebAssembly roadmap: &lt;a href=&quot;https://webassembly.org/docs/future-features&quot;&gt;https://webassembly.org/docs/future-features/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Check your terminal window where the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dotnet watch run&lt;/code&gt; is running, if there is no error in that window you can access the url &lt;a href=&quot;http://localhost:5000/tsp&quot;&gt;http://localhost:5000/tsp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Run&lt;/code&gt; button and take a look on the browser console window, you will see the distance to reach all cities getting smaller as the generations ran.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/console-window-200-938b3a100.webp 200w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/console-window-400-938b3a100.webp 400w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/console-window-565-938b3a100.webp 565w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/console-window-200-938b3a100.png 200w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/console-window-400-938b3a100.png 400w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/console-window-565-938b3a100.png 565w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/console-window-565-938b3a100.png&quot; alt=&quot;post image&quot; width=&quot;565&quot; height=&quot;354&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;This is not a tutorial about Blazor good pratices, so everything here is done in the simplest possible way to introduce how to use GenticSharp with Blazor.  I do not talk about things you should use when working with Blazor, such as separate logic from UI and use Blazor components.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;drawing-the-cities&quot;&gt;Drawing the cities&lt;/h2&gt;
&lt;p&gt;Now our GA is running inside the browser, but it needs to display the cities route better.
We need to create a visual representation to the cities.&lt;/p&gt;

&lt;p&gt;In the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tsp.razor&lt;/code&gt; add the method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DrawCitiesAsync&lt;/code&gt;:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=DrawCitiesAsync.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;Then call it from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OnAfterRenderAsync&lt;/code&gt; method, after the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;clearCanvas&lt;/code&gt; call:
&lt;script src=&quot;https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=DrawCitiesAsyncCall.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Reload the url &lt;a href=&quot;http://localhost:5000/tsp&quot;&gt;http://localhost:5000/tsp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now you should see something like this:&lt;/p&gt;
&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/draw-cities.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;drawing-the-route&quot;&gt;Drawing the route&lt;/h2&gt;
&lt;p&gt;In the previous step we drawn the cities and we have the visual of the problem: the cities.&lt;/p&gt;

&lt;p&gt;Now we need to draw the solution: the route represented by the best chromosome of each generation.&lt;/p&gt;

&lt;p&gt;Add the following method to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tsp.razor&lt;/code&gt;:
&lt;script src=&quot;https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=DrawRouteAsync.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Then call it from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OnAfterRenderAsync&lt;/code&gt; method, after the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DrawCitiesAsync&lt;/code&gt; call:
&lt;script src=&quot;https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=DrawRouteAsyncCall.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Reload the url &lt;a href=&quot;http://localhost:5000/tsp&quot;&gt;http://localhost:5000/tsp&lt;/a&gt; again, and hit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Run&lt;/code&gt; button, now you should see the route been optimizing as the generations are ran:&lt;/p&gt;
&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/draw-route.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;With only 4 C# classes, 1 JS file and 1 Blazor page we built a pretty nice sample of genetic algorithms using Blazor with GeneticSharp. Now you can improve it with your own ideas or use some of mine ;):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Maybe let user change the genetic algorithm operators (crossover, mutation, selection, etc)?&lt;/li&gt;
  &lt;li&gt;Move the DrawCitiesAsync and DrawRouteAsync to &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/blazor/components?view=aspnetcore-3.0&quot;&gt;Blazor components&lt;/a&gt; responsible to only draw them?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The full source code used in this post can be download or fork from this Gist: &lt;a href=&quot;https://gist.github.com/giacomelli/9addc5182943ba25eb82201e30c76418&quot;&gt;https://gist.github.com/giacomelli/9addc5182943ba25eb82201e30c76418&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Starting an Unity3D project with GeneticSharp using dotnet new</title>
   <link href="//starting-an-unity3d-project-with-geneticsharp-using-dotnet-new/"/>
   <updated>2019-06-27T00:00:00-03:00</updated>
   <id>//starting-an-unity3d-project-with-geneticsharp-using-dotnet-new</id>
   <content type="html">&lt;p&gt;In this post I will show how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dotnet new&lt;/code&gt; command to start an Unity3D project with GeneticSharp.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Sometime ago I created a NuGet package called &lt;a href=&quot;/dotnet-new-templates-for-GeneticSharp&quot;&gt;GeneticSharp.Templates&lt;/a&gt;, this package allows developers to install &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp&quot;&gt;GeneticSharp&lt;/a&gt; templates using the dotnet new command.&lt;/p&gt;

&lt;p&gt;Among the availables templates in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GeneticSharp.Templates&lt;/code&gt;, there is one specific to create an Unity3D project with GeneticSharp. Besides this, the project has a sample of Travelling Salesman Problem (TSP) using GeneticSharp and can be used as a scaffold to starting use genetic algorithms in your games.&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;Create an Unity3D project using dotnet new is fast and simple, depending of your machine performance, you’ll have the sample running in less than a minute.&lt;/p&gt;

&lt;p&gt;Open a terminal/prompt and type:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet new &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; GeneticSharp.Templates
dotnet new GeneticSharpTspUnity3d &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; GeneticSharpSample
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;The argument &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-o&lt;/code&gt; is the the output folder of the Unity3D project&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now you can open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GeneticSharpSample&lt;/code&gt; in Unity3D editor.
Open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MainScene&lt;/code&gt; scene and hit the play button, you should see something like this:&lt;/p&gt;
&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2019/06/27/starting-an-unity3d-project-with-geneticsharp-using-dotnet-new/geneticsharp-ts-template.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Thats it, now you can use this sample to understand how to use GeneticSharp in your game.&lt;/p&gt;

&lt;p&gt;If you want more details about the code and the sample itself, please, take a look on this tutorial &lt;a href=&quot;/tsp-with-GeneticSharp-and-Unity3d/&quot;&gt;TSP with GeneticSharp and Unity3D&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you need an introduction to genetic algorithms, this tutorial could help you &lt;a href=&quot;/function-optimization-with-geneticsharp/&quot;&gt;Function optimization with GeneticSharp&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using Tesseract 4 with C#</title>
   <link href="//using-tesseract4-with-csharp/"/>
   <updated>2019-06-13T00:00:00-03:00</updated>
   <id>//using-tesseract4-with-csharp</id>
   <content type="html">&lt;p&gt;Recently I built a small tool to read the text of thousands of images.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;A common technique to extract text from images is know as OCR (Optical character recognition) and the best implementation, that I Know, is called &lt;a href=&quot;https://github.com/tesseract-ocr/tesseract&quot;&gt;Tesseract&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When a I started to build the tool, I used the most famous &lt;a href=&quot;https://github.com/charlesw/tesseract&quot;&gt;Tesseract’s wrapper for .NET&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Although the wrapper worked very well, I was curious about if there was a way to get better peformance results. With a little search I noticed that the .NET wrapper still use Tesseract 3, but there was a version 4 available with a lot of performance improvements:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you are running Tesseract 4, you can use the “fast” integer models.&lt;/p&gt;

  &lt;p&gt;Tesseract 4 also uses up to four CPU threads while processing a page, so it will be faster than Tesseract 3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;https://github.com/tesseract-ocr/tesseract/wiki/FAQ#can-i-increase-speed-of-ocr&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;So, I decided to try Tesseract 4 to see how could it impact in the performance of my tool. As at the time there was no .NET wrapper for it, I removed the old wrapper and called Tesseract 4 directly as a process.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;The use of Tesseract 4 cut off the time to read the images in almost half&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;tesseractservice&quot;&gt;TesseractService&lt;/h2&gt;
&lt;p&gt;I ended up developing the class below to call the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tesseract 4&lt;/code&gt; command-line &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(tesseract.exe)&lt;/code&gt; directly from the C# code.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/ae80c1ed9b374894b21890f1d2dee42a.js?file=TesseractService.cs&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Just download the gist above and add it to your .NET project.&lt;/li&gt;
  &lt;li&gt;Install Tesseract 4
    &lt;ul&gt;
      &lt;li&gt;Linux and OSX: &lt;a href=&quot;https://github.com/tesseract-ocr/tesseract/wiki&quot;&gt;https://github.com/tesseract-ocr/tesseract/wiki&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Windows: &lt;a href=&quot;https://github.com/UB-Mannheim/tesseract/wiki&quot;&gt;https://github.com/UB-Mannheim/tesseract/wiki&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Download the trained data model for the language you need to read the images
    &lt;ul&gt;
      &lt;li&gt;More accurate, but slower: &lt;a href=&quot;https://github.com/tesseract-ocr/tessdata_best&quot;&gt;https://github.com/tesseract-ocr/tessdata_best&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Faster, but less accurate: &lt;a href=&quot;https://github.com/tesseract-ocr/tessdata_fast&quot;&gt;https://github.com/tesseract-ocr/tessdata_fast&lt;/a&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/ae80c1ed9b374894b21890f1d2dee42a.js?file=usage-sample.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;If you try to read a image like this one:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-200-171750320.webp 200w, /assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-400-171750320.webp 400w, /assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-800-171750320.webp 800w, /assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-1024-171750320.webp 1024w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-200-171750320.png 200w, /assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-400-171750320.png 400w, /assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-800-171750320.png 800w, /assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-1024-171750320.png 1024w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-800-171750320.png&quot; alt=&quot;post image&quot; width=&quot;1024&quot; height=&quot;800&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You will get this result after call the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TesseractService.GetText&lt;/code&gt; method:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;The (quick) [brown] {fox} jumps!
Over the $43,456.78 &amp;lt;lazy&amp;gt; #90 dog
&amp;amp; duck/goose, as 12.5% of E-mail
from aspammer@website.com is spam.
Der ,.schnelle&quot; braune Fuchs springt
iiber den faulen Hund. Le renard brun
«rapide» saute par-dessus le chien
paresseux. La volpe marrone rapida
salta sopra il cane pigro. El zorro
marron rapido salta sobre el perro
perezoso. A raposa marrom rapida
salta sobre o céo preguicoso.&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;Further reading&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/charlesw/tesseract&quot;&gt;A .Net wrapper for tesseract-ocr&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tesseract-ocr/tesseract/wiki/FAQ#can-i-increase-speed-of-ocr&quot;&gt;Can I increase speed of OCR?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/doxakis/How-to-use-tesseract-ocr-4.0-with-csharp&quot;&gt;How to use Tesseract OCR 4.0 with C#&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://appliedmachinelearning.blog/2018/06/30/performing-ocr-by-running-parallel-instances-of-tesseract-4-0-python/&quot;&gt;Performing OCR by running parallel instances of Tesseract 4.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tesseract-ocr/tesseract&quot;&gt;Tesseract repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Publishing WebJobs with Azure Pipelines</title>
   <link href="//publishing-webjobs-with-azure-pipelines/"/>
   <updated>2019-05-29T00:00:00-03:00</updated>
   <id>//publishing-webjobs-with-azure-pipelines</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-US/azure/app-service/webjobs-sdk-get-started&quot;&gt;Azure WebJobs&lt;/a&gt; are a great way to execute background process.&lt;/p&gt;

&lt;h2 id=&quot;scenario&quot;&gt;Scenario&lt;/h2&gt;
&lt;p&gt;In last days I’ve created a &lt;a href=&quot;https://azure.microsoft.com/pt-br/services/devops/pipelines/&quot;&gt;Azure Pipelines&lt;/a&gt; that publish WebJobs, but in our specific case our WebJobs were not being published to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/site/wwwroot/App_Data/jobs/Continuous/&amp;lt;webjobs name&amp;gt;&lt;/code&gt;, because “reasons” our root web app is using ‘/site/www’ as folder. So, you should expect that the new folder to deploy WebJobs is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/site/www/App_Data/jobs/Continuous/&amp;lt;webjobs name&amp;gt;&lt;/code&gt;, but &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NO&lt;/code&gt;, the new folder is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/site/jobs/Continuous/&amp;lt;webjobs name&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The big problem with the above behaviour is that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebDeploy&lt;/code&gt; via VS or  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AzureRmWebAppDeployment&lt;/code&gt; task via Azure Pipeline will still try to deploy the webjobs to the folder inside &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/site/www/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;My best suspects are these lines on &lt;a href=&quot;https://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureRmWebAppDeploymentV3/azurermwebappdeployment.ts#L73&quot;&gt;AzureRmWebAppDeployment@3&lt;/a&gt;
&lt;script src=&quot;https://gist.github.com/1d47b7bf7e9a2b3806dbd0b0332743d2.js?file=AzureRmWebAppDeployment-lines.ts&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AzureRmWebAppDeployment&lt;/code&gt; just check the physical path configured on Azure when we defined a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VirtualApplicatoin&lt;/code&gt; parameter, but in our case it is not a virtual application, but it is a different folder than &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/site/wwwroot/&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;externalref&quot;&gt;&lt;p&gt;in &lt;a href=&quot;https://github.com/projectkudu/kudu/wiki/WebJobs&quot;&gt;Kudu wiki&lt;/a&gt; there is some explanation about the webjobs folders.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;I used the FtpUpload task to publish the WebJobs binaries to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/site/jobs/Continuous/&amp;lt;webjobs name&amp;gt;&lt;/code&gt; and two instances of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AzureAppServiceManage&lt;/code&gt; task to stop and start the jobs:&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;you’ll need to replace the values between &amp;lt;..&amp;gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;variables&lt;/code&gt; section to specific values of your project&lt;/p&gt;
&lt;/div&gt;
&lt;script src=&quot;https://gist.github.com/1d47b7bf7e9a2b3806dbd0b0332743d2.js?file=azure-pipelines.yml&quot;&gt; &lt;/script&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;I omitted some tasks from the original azure-pipelines.yml for simplicity. The original has a lot of others taks, as unit tests and web api publishing&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;extra-points-graceful-shutdown&quot;&gt;Extra points (graceful shutdown)&lt;/h2&gt;
&lt;p&gt;Now that you’ve automate your WebJobs publishing, is a good idea improve your jobs to check if Azure has requested a shutdown. You can do this taks through the &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/azure-functions/functions-dotnet-class-library#cancellation-tokens&quot;&gt;CancellationToken&lt;/a&gt; parameter passed to the job.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A function can accept a CancellationToken parameter, which enables the operating system to notify your code when the function is about to be terminated. You can use this notification to make sure the function doesn’t terminate unexpectedly in a way that leaves data in an inconsistent state.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;Further reading&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/ftp-upload?view=azure-devops&quot;&gt;FTP Upload task&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-app-service-manage?view=azure-devops&quot;&gt;Azure App Service Manage task&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.amitapple.com/post/2014/05/webjobs-graceful-shutdown&quot;&gt;WebJobs Graceful Shutdown&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&amp;amp;tabs=schema&quot;&gt;YAML schema reference&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&amp;amp;tabs=yaml&quot;&gt;Predefined variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>dotnet new templates for GeneticSharp</title>
   <link href="//dotnet-new-templates-for-GeneticSharp/"/>
   <updated>2019-02-03T00:00:00-02:00</updated>
   <id>//dotnet-new-templates-for-GeneticSharp</id>
   <content type="html">&lt;p&gt;Now GeneticSharp has a NuGet package called GeneticSharp.Templates, this package allows you to install GeneticSharp templates using the &lt;strong&gt;dotnet new&lt;/strong&gt; command.&lt;/p&gt;

&lt;h2 id=&quot;installing-the-geneticsharptemplates&quot;&gt;Installing the GeneticSharp.Templates&lt;/h2&gt;
&lt;p&gt;Before you can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dotnet new&lt;/code&gt; command to create the GeneticSharp projects from templates, you need to install it on your machine:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet new &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; GeneticSharp.Templates
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;After this, if you run the command:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet new GeneticSharp &lt;span class=&quot;nt&quot;&gt;--list&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The GeneticSharp templates will be listed:&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/dotnet-new-list-output-200-b583e7472.webp 200w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/dotnet-new-list-output-400-b583e7472.webp 400w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/dotnet-new-list-output-759-b583e7472.webp 759w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/dotnet-new-list-output-200-b583e7472.png 200w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/dotnet-new-list-output-400-b583e7472.png 400w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/dotnet-new-list-output-759-b583e7472.png 759w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/dotnet-new-list-output-759-b583e7472.png&quot; alt=&quot;post image&quot; width=&quot;759&quot; height=&quot;82&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;creating-a-new-geneticsharp-project-from-templates&quot;&gt;Creating a new GeneticSharp project from templates&lt;/h2&gt;

&lt;h3 id=&quot;console-application&quot;&gt;Console Application&lt;/h3&gt;
&lt;p&gt;Create a new console application template with GeneticSharp where you just need to implement the chromosome and fitness function.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet new GeneticSharpConsoleApp &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; MyNamespace &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; MyOutoputFolder
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-200-98f58dec8.webp 200w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-400-98f58dec8.webp 400w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-800-98f58dec8.webp 800w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-1032-98f58dec8.webp 1032w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-200-98f58dec8.png 200w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-400-98f58dec8.png 400w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-800-98f58dec8.png 800w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-1032-98f58dec8.png 1032w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-800-98f58dec8.png&quot; alt=&quot;post image&quot; width=&quot;1032&quot; height=&quot;685&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;tsp-console-application&quot;&gt;TSP Console application&lt;/h3&gt;
&lt;p&gt;Create a new console application template with GeneticSharp ready to run a Travelling Salesman Problem (TSP).&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet new GeneticSharpTspConsoleApp &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; MyNamespace &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; MyOutoputFolder
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-200-e178fd623.webp 200w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-400-e178fd623.webp 400w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-800-e178fd623.webp 800w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-1024-e178fd623.webp 1024w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-200-e178fd623.png 200w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-400-e178fd623.png 400w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-800-e178fd623.png 800w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-1024-e178fd623.png 1024w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-800-e178fd623.png&quot; alt=&quot;post image&quot; width=&quot;1024&quot; height=&quot;893&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;tsp-unity3d&quot;&gt;TSP Unity3D&lt;/h3&gt;
&lt;p&gt;Create an Unity3D template with GeneticSharp ready to run a Travelling Salesman Problem (TSP).&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet new GeneticSharpTspUnity3d &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; MyNamespace &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; MyOutoputFolder
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-200-a9154db29.webp 200w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-400-a9154db29.webp 400w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-800-a9154db29.webp 800w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-1218-a9154db29.webp 1218w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-200-a9154db29.png 200w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-400-a9154db29.png 400w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-800-a9154db29.png 800w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-1218-a9154db29.png 1218w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-800-a9154db29.png&quot; alt=&quot;post image&quot; width=&quot;1218&quot; height=&quot;902&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GeneticSharp v2.4.0 - New crossovers and TPL implementations</title>
   <link href="//GeneticSharp-v2.4.0-New-Crossovers-and-TPL-implementations/"/>
   <updated>2019-01-19T00:00:00-02:00</updated>
   <id>//GeneticSharp-v2.4.0-New-Crossovers-and-TPL-implementations</id>
   <content type="html">&lt;p&gt;The &lt;strong&gt;&lt;a href=&quot;https://github.com/giacomelli/GeneticSharp&quot;&gt;GeneticSharp v2.4.0&lt;/a&gt;&lt;/strong&gt; is out.&lt;/p&gt;

&lt;p&gt;The additions of this version are the two new crossovers implementations and a new option of ITaskExecutor that use TPL.&lt;/p&gt;

&lt;h2 id=&quot;crossovers&quot;&gt;Crossovers&lt;/h2&gt;
&lt;h3 id=&quot;alternating-position-ap&quot;&gt;Alternating-position (AP)&lt;/h3&gt;
&lt;p&gt;The alternating position crossover operator (Larrañaga et al. 1996a) simply creates an offspring by selecting alternately the next element of the first parent and the next element of the second parent, omitting the elements already present in the offspring.&lt;/p&gt;

&lt;h3 id=&quot;voting-recombination-crossover-vr&quot;&gt;Voting Recombination Crossover (VR)&lt;/h3&gt;
&lt;p&gt;It can be seen as a P-sexual crossover operator, where p (parents number) is a natural number greater than, or equal to, 2.&lt;/p&gt;

&lt;p&gt;It starts by defining a threshold, which is a natural number smaller than, or equal to p.&lt;/p&gt;

&lt;p&gt;Next, for every; i E {l, 2, . . .N} the set of ith elements of all the parents is considered. If in this set an element occurs at least the threshold number of times, it is copied into the offspring.&lt;/p&gt;

&lt;h2 id=&quot;tpl&quot;&gt;TPL&lt;/h2&gt;
&lt;p&gt;Three new classes were implemented to run some key points of genetic algorithm using TPL.&lt;/p&gt;

&lt;p&gt;Those new classes can be used alone, but normally you will use all them together. You can see a sample usage at unit test &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Start_TplManyGenerations_Optimization&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;tpltaskexecutor&quot;&gt;TplTaskExecutor:&lt;/h3&gt;
&lt;p&gt;An ITaskExecutor’s implementation that executes the tasks in a parallel fashion using Task Parallel Library (TPL).&lt;/p&gt;

&lt;h3 id=&quot;tplpopulation&quot;&gt;TplPopulation&lt;/h3&gt;
&lt;p&gt;Represents a population of candidate solutions (chromosomes) using TPL to create them.&lt;/p&gt;

&lt;h3 id=&quot;tploperatorsstrategy&quot;&gt;TplOperatorsStrategy&lt;/h3&gt;
&lt;p&gt;A new interface called IOperatorsStrategy was added to GeneticAlgorithm as an option. Two options of operators strategy were created, the default one, called DefaultOperatorsStrategy and the new one called TplOperatosStrategy.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;thanks-to&quot;&gt;Thanks to&lt;/h2&gt;
&lt;p&gt;I would like to thanks to &lt;a href=&quot;https://github.com/EMostafaAli&quot;&gt;EMostafaAli&lt;/a&gt; and &lt;a href=&quot;https://github.com/InRedikaWB&quot;&gt;Alexey I.&lt;/a&gt; for opened some issues and made small pull requests and &lt;a href=&quot;https://github.com/codingdna2&quot;&gt;Dan&lt;/a&gt; for contributing with the &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/pull/56&quot;&gt;TPL implementations&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GeneticSharp v2.2.0 - Sudoku sample</title>
   <link href="//GeneticSharp-v2.2.0-Sudoku-sample/"/>
   <updated>2018-11-03T00:00:00-03:00</updated>
   <id>//GeneticSharp-v2.2.0-Sudoku sample</id>
   <content type="html">&lt;p&gt;The &lt;strong&gt;&lt;a href=&quot;https://github.com/giacomelli/GeneticSharp&quot;&gt;GeneticSharp v2.2.0&lt;/a&gt;&lt;/strong&gt; is out.&lt;/p&gt;

&lt;p&gt;The additions of this version are the new whole sample and extensions showing how to use GeneticSharp to solve a Sudoku.&lt;/p&gt;

&lt;p&gt;The GeneticSharp.Extensions project receive those new features:&lt;/p&gt;

&lt;h2 id=&quot;multiple&quot;&gt;Multiple&lt;/h2&gt;
&lt;h3 id=&quot;multiplechromosome&quot;&gt;MultipleChromosome&lt;/h3&gt;
&lt;p&gt;Compound chromosome to artificially increase genetics diversity by evolving a list of chromosomes instead of just one.
Sub-genes are inlined into a single compound list of genes.&lt;/p&gt;

&lt;h3 id=&quot;multiplefitness&quot;&gt;MultipleFitness&lt;/h3&gt;
&lt;p&gt;Fitness class that can evaluate a compound chromosome by summing over the evaluation of its sub-chromosomes.&lt;/p&gt;

&lt;h2 id=&quot;sudoku&quot;&gt;Sudoku&lt;/h2&gt;
&lt;h3 id=&quot;isudokuchromosome&quot;&gt;ISudokuChromosome:&lt;/h3&gt;
&lt;p&gt;Represents each type of chromosome for solving a sudoku is simply required to output a list of candidate sudokus.&lt;/p&gt;

&lt;h3 id=&quot;sudokuboard&quot;&gt;SudokuBoard&lt;/h3&gt;
&lt;p&gt;A class that represents a Sudoku, fully or partially completed. 
Holds a list of 81 int for cells, with 0 for empty cells.
Can parse strings and files from most common formats and displays the sudoku in an easy to read format.&lt;/p&gt;

&lt;h3 id=&quot;sudokucellschromosome&quot;&gt;SudokuCellsChromosome&lt;/h3&gt;
&lt;p&gt;This simple chromosome simply represents each cell by a gene with a value between 1 and 9, accounting for the target mask if given.&lt;/p&gt;

&lt;h3 id=&quot;sudokufitness&quot;&gt;SudokuFitness&lt;/h3&gt;
&lt;p&gt;Evaluates a sudoku chromosome for completion by counting duplicates in rows, columns, boxes, and differences from the target mask.&lt;/p&gt;

&lt;h3 id=&quot;sudokupermutationschromosome&quot;&gt;SudokuPermutationsChromosome&lt;/h3&gt;
&lt;p&gt;This more elaborated chromosome manipulates rows instead of cells, and each of its 9 gene holds an integer for the index of the row’s permutation amongst all that respect the target mask.
Permutations are computed once when a new Sudoku is encountered, and stored in a static dictionary for further reference.&lt;/p&gt;

&lt;h3 id=&quot;sudokurandompermutationschromosome&quot;&gt;SudokuRandomPermutationsChromosome&lt;/h3&gt;
&lt;p&gt;This chromosome aims at increasing genetic diversity of SudokuPermutationsChromosome, which exhibits only 9 permutation genes.
Here, instead, an arbitrary number of Sudokus are generated where for each row, a random gene is picked amongst an arbitrary number of corresponding permutation genes.&lt;/p&gt;

&lt;h2 id=&quot;samples&quot;&gt;Samples&lt;/h2&gt;
&lt;p&gt;GTK# sample
&lt;img src=&quot;https://user-images.githubusercontent.com/177389/47957137-6bff2200-df8f-11e8-8b07-a144289389a0.png&quot; alt=&quot;gtk-sudoku-sample&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;thanks-to&quot;&gt;Thanks to&lt;/h2&gt;
&lt;p&gt;I would like to thanks to Jean-Sylvain Boige (@jsboige) for contributing with those great new samples and extensions and for use GeneticSharp in his &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/pull/43#issuecomment-433662175&quot;&gt;Artificial Intelligence course in French engineering schools (course)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Take a look on the pull-request for more details about those new features: &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/pull/43&quot;&gt;New Sudoku extension and GTK# sample #43&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GeneticSharp v2.1.0</title>
   <link href="//GeneticSharp-v2.1.0/"/>
   <updated>2018-10-30T00:00:00-03:00</updated>
   <id>//GeneticSharp-v2.1.0</id>
   <content type="html">&lt;p&gt;The &lt;strong&gt;&lt;a href=&quot;https://github.com/giacomelli/GeneticSharp&quot;&gt;GeneticSharp v2.1.0&lt;/a&gt;&lt;/strong&gt; is out.&lt;/p&gt;

&lt;h3 id=&quot;features&quot;&gt;Features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Add constructor with values to FloatingPointChromosome &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/issues/33&quot;&gt;#33&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;As it is now whenever you create an instance of FloatingPointChromosome, it will randomly create gene values.
I have a case where I need to stop optimization at some time, save results to DB and resume it later. For this, I need to be able to give gene values to FloatingPointChromosome.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;New NuGet version &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/issues/44&quot;&gt;#44&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bug-fix&quot;&gt;Bug fix&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Bug/Error when using ParallelTaskExecutor &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/issues/40&quot;&gt;#40&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;I just discovered that when running the optimizer within a Task/Tread/TPL Dataflow block with TaskExecutor set to ParallelTaskExecutor when instantiating GeneticAlgorithm, it blocks all other outside operations during the lifetime of the optimizer run. This does not happen when not setting the TaskExecutor option.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;thanks-to&quot;&gt;Thanks to&lt;/h3&gt;

&lt;p&gt;I would like to thanks to &lt;a href=&quot;https://github.com/MattWolf74&quot;&gt;@MattWolf74&lt;/a&gt;  and &lt;a href=&quot;https://github.com/mersadk&quot;&gt;@mersadk&lt;/a&gt; for contributing to the open issues and pull-request&lt;/p&gt;

&lt;p&gt;If you want to use this new version on your project, just get the 2.1.0 version from NuGet:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; update-package GeneticSharp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GeneticSharp Unity3d Samples released on Google Play</title>
   <link href="//GeneticSharp-Unity3d-Samples-released-on-Google-Play/"/>
   <updated>2018-09-22T00:00:00-03:00</updated>
   <id>//GeneticSharp-Unity3d-Samples-released-on-Google-Play</id>
   <content type="html">&lt;p&gt;I published on Google Play the &lt;strong&gt;GeneticSharp Unity3d Samples&lt;/strong&gt;.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/pJpZwCW2m4s &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;center&gt;
	&lt;a href=&quot;https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.geneticsharprunnersunityapp&quot;&gt;
		
	&lt;/a&gt;
&lt;/center&gt;

&lt;p&gt;In this app you can see GeneticSharp running on Unity3d in three different samples:&lt;/p&gt;

&lt;h2 id=&quot;car2d&quot;&gt;Car2D&lt;/h2&gt;
&lt;p&gt;Based on famous BoxCar2D, this sample uses a genetic algorithm to create car designs to overcome road challenges, like gaps, hills, and obstacles.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-200-605d2bd7e.webp 200w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-400-605d2bd7e.webp 400w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-800-605d2bd7e.webp 800w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-1600-605d2bd7e.webp 1600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-200-605d2bd7e.png 200w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-400-605d2bd7e.png 400w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-800-605d2bd7e.png 800w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-1600-605d2bd7e.png 1600w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-800-605d2bd7e.png&quot; alt=&quot;post image&quot; width=&quot;1920&quot; height=&quot;1080&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tsp&quot;&gt;TSP&lt;/h2&gt;
&lt;p&gt;The classic TSP sample, but in this, we can change the cities positions while the genetic algorithm is running and see how it finds the best route.&lt;/p&gt;

&lt;p&gt;This sample inspired this post &lt;a href=&quot;/tsp-with-GeneticSharp-and-Unity3d/&quot;&gt;TSP with GeneticSharp and Unity3D&lt;/a&gt;.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-200-fcf1c65a0.webp 200w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-400-fcf1c65a0.webp 400w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-800-fcf1c65a0.webp 800w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-1600-fcf1c65a0.webp 1600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-200-fcf1c65a0.png 200w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-400-fcf1c65a0.png 400w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-800-fcf1c65a0.png 800w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-1600-fcf1c65a0.png 1600w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-800-fcf1c65a0.png&quot; alt=&quot;post image&quot; width=&quot;1920&quot; height=&quot;1080&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;wall-builder&quot;&gt;Wall builder&lt;/h2&gt;
&lt;p&gt;This sample tries to build a higher wall using random initial bricks positions.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-200-44a0f3b6a.webp 200w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-400-44a0f3b6a.webp 400w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-800-44a0f3b6a.webp 800w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-1600-44a0f3b6a.webp 1600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-200-44a0f3b6a.png 200w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-400-44a0f3b6a.png 400w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-800-44a0f3b6a.png 800w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-1600-44a0f3b6a.png 1600w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-800-44a0f3b6a.png&quot; alt=&quot;post image&quot; width=&quot;1920&quot; height=&quot;1080&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You can get the full source code here: &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/tree/master/src/GeneticSharp.Runner.UnityApp&quot;&gt;https://github.com/giacomelli/GeneticSharp/tree/master/src/GeneticSharp.Runner.UnityApp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GeneticSharp Car2D</title>
   <link href="//GeneticSharp-Car2D/"/>
   <updated>2018-06-01T00:00:00-03:00</updated>
   <id>//GeneticSharp-Car2D</id>
   <content type="html">&lt;p&gt;I made an Unity3D sample for &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp&quot;&gt;GeneticSharp&lt;/a&gt; inspired by amazing &lt;a href=&quot;http://boxcar2d.com/about.html&quot;&gt;BoxCar2D&lt;/a&gt; where a genetic algorithm tries to design 2D cars to overcome roads challenges.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-200-6761995cb.webp 200w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-400-6761995cb.webp 400w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-800-6761995cb.webp 800w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-801-6761995cb.webp 801w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-200-6761995cb.png 200w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-400-6761995cb.png 400w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-800-6761995cb.png 800w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-801-6761995cb.png 801w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-800-6761995cb.png&quot; alt=&quot;post image&quot; width=&quot;801&quot; height=&quot;388&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I was always amazed by the 2D cars designed by &lt;a href=&quot;http://boxcar2d.com/about.html&quot;&gt;BoxCar2D&lt;/a&gt;  and see how genetic algorithm make new and (probably) better cars each new generation and I always wanted make a sample inspired by it using GeneticSharp.&lt;/p&gt;

&lt;p&gt;The sample that I will talk about is available on the GeneticSharp repository at GeneticSharp.Runner.UnityApp. You can fork GeneticSharp and open it on Unity3D editor, then run the MenuScene.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you need some introduction to genetic algorithms or GeneticSharp:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Introduction to genetic algorithms: &lt;a href=&quot;/function-optimization-with-geneticsharp/&quot;&gt;Function optimization with GeneticSharp&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;Using GeneticSharp on Unity3D: &lt;a href=&quot;/tsp-with-GeneticSharp-and-Unity3d/&quot;&gt;TSP with GeneticSharp and Unity3D&lt;/a&gt;.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;what-is-our-2d-car&quot;&gt;What is our 2D car?&lt;/h2&gt;
&lt;p&gt;In GeneticSharp Car2D, a car is composed of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;8 vectors with 64 meters max size and an angle that will be calculate from the car center.&lt;/li&gt;
  &lt;li&gt;0 to 8 wheels
    &lt;ul&gt;
      &lt;li&gt;Radius from 0 to 3&lt;/li&gt;
      &lt;li&gt;Vector index (a vector can have more than one wheel)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The vectors and wheels have mass, so bigger ones will made a slower car.&lt;/p&gt;

&lt;h2 id=&quot;the-chromosome&quot;&gt;The chromosome&lt;/h2&gt;
&lt;p&gt;To represent the phenotype described above the car chromosome will be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A float to represent the vector size (7 bits)&lt;/li&gt;
  &lt;li&gt;A float to represent the vector angle (9 bits)&lt;/li&gt;
  &lt;li&gt;An integer to represent the wheel vector index (7 bits)&lt;/li&gt;
  &lt;li&gt;A float to represent the wheel radius (4 bits)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This structure will take 27 bits, then we will repeat it 8 times, that is the number of the car vectors. This give us a chromosome with 216 bits.&lt;/p&gt;

&lt;p&gt;The bit string chromosome will look like this:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;001101110101110100001000010010100100111000100000010101010100000111100100001110010010010101010111100000000011011100000001110000001110010000110101011111100000100011011101101011101000001110000011011000110111000000000011
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;the-roads&quot;&gt;The roads&lt;/h2&gt;
&lt;p&gt;The roads and cars can be configured using the scriptable object CarSampleConfig. The GeneticSharp Car2D allows create any number of different roads and car configs, but for this post, I will show 3 roads configurations with the same car configuration mentioned above.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you want to add new roads, just create a new CarSampleConfig in “Assets / Create / GeneticSharp / Car / CarSampleConfig”. The new road will automatically appear on Car2D menu when you run the sample.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A road is defined by its points quantity and distance, height, rotation, gaps, and obstacles. The gravity and everything about physics is automatically simulated by Unity3d itself.&lt;/p&gt;

&lt;h2 id=&quot;the-fitness-function&quot;&gt;The fitness function&lt;/h2&gt;
&lt;p&gt;The fitness of each car (chromosome) to the road will be the &lt;strong&gt;sum of the max distance&lt;/strong&gt; reach by it &lt;strong&gt;plus the average velocity&lt;/strong&gt; at that moment.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-200-40a0bcc10.webp 200w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-400-40a0bcc10.webp 400w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-800-40a0bcc10.webp 800w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-1053-40a0bcc10.webp 1053w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-200-40a0bcc10.png 200w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-400-40a0bcc10.png 400w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-800-40a0bcc10.png 800w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-1053-40a0bcc10.png 1053w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-800-40a0bcc10.png&quot; alt=&quot;post image&quot; width=&quot;1053&quot; height=&quot;550&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;genetic-algorithm-and-the-simulation&quot;&gt;Genetic algorithm and the simulation&lt;/h2&gt;
&lt;p&gt;The genetic algorithm to evaluate the simulation is configured with this operators:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Population: 16 chromosomes per generation&lt;/li&gt;
  &lt;li&gt;Crossover: Uniform&lt;/li&gt;
  &lt;li&gt;Mutation: Flip Bit&lt;/li&gt;
  &lt;li&gt;Selection: Elite&lt;/li&gt;
  &lt;li&gt;Termination: Time evolving&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Besides that, the chromosomes are evaluated in parallel using the GeneticSharp’s ParallelTaskExecutor and you can see all them in 4x4 grid:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-200-277a451e7.webp 200w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-400-277a451e7.webp 400w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-800-277a451e7.webp 800w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-1600-277a451e7.webp 1600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-200-277a451e7.png 200w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-400-277a451e7.png 400w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-800-277a451e7.png 800w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-1600-277a451e7.png 1600w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-800-277a451e7.png&quot; alt=&quot;post image&quot; width=&quot;1915&quot; height=&quot;988&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you are running the sample inside Unity3D editor you can change the size of the simulation grid in the SampleController game object from CarScene.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;designing-the-cars&quot;&gt;Designing the cars&lt;/h2&gt;
&lt;p&gt;Now that we have our Car2D and roads defining, we can put the genetic algorithm to run and see how it design the cars for each road.&lt;/p&gt;

&lt;p&gt;Besides the roads that are different, the car setup is the same. This way we can compare how genetic algorithm will reach different car designs to different challenges (roads).&lt;/p&gt;

&lt;h3 id=&quot;gap-road&quot;&gt;Gap road&lt;/h3&gt;
&lt;p&gt;The first is a road with gaps that getting greater. 
The next video resumes how GeneticSharp designs the car for the gap road.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/hxt2E3QGZw4 &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;blockquote&gt;
  &lt;p&gt;All videos are recording running the GeneticSharp Car2D on my Android. I used the &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.duapps.recorder&amp;amp;hl=en_US&quot;&gt;DU Recorder&lt;/a&gt; to record them. Amazing app BTW.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;About 100 generations, GeneticSharp generate a car that has a front wheel suspend in the air that allows it to reach the other side of the gap without fall on it.&lt;/p&gt;

&lt;h3 id=&quot;hill-road&quot;&gt;Hill road&lt;/h3&gt;
&lt;p&gt;This road has some hills that increase as the car travels.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/x0zCDyGc80s &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;p&gt;For hill road, the genetic algorithm creates a car with enough length to touch the two sides of the downhills at the same time, this allows the car to keep the velocity needed to overcome the hill part. The middle wheel is what allows the car to pass the hill part of the road.&lt;/p&gt;

&lt;h3 id=&quot;obstacle-road&quot;&gt;Obstacle road&lt;/h3&gt;
&lt;p&gt;Some fixed obstacles are placed on the road and force the cars to pass over them&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/gJCz79xdCFY &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;p&gt;This is probably the most curious design because the genetic algorithm found out that to overcome the obstacle, the car needed to reach it at high velocity and needs to have a back support to avoid car rollover.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;A think two things are quite clear after I build this sample:&lt;/p&gt;

&lt;h3 id=&quot;incremental-challenges&quot;&gt;Incremental challenges&lt;/h3&gt;
&lt;p&gt;All the challenges in the roads are incremental, the gaps start small and get bigger by the extension of the road. The same was did to the hills and the obstacle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why do the challenges need to be incremental?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;During first tests with the gap road I realized if I just put an 8 meters gap in front of first-generation cars, the genetic algorithm cannot choose better designs, because most of them just fall in the first gap. The challenge was too much for the initial generations, but if I just increased the size of the gaps from small size until it gets to 8 meters, the genetic algorithm could choose better and better designs each generation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It’s how we learn&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The same happens on how we learn many things, like math: first basic operations, then simple equations and in some years we are calculating integrals (or trying at least).&lt;/p&gt;

&lt;p&gt;It’s easy to spot this behavior on evolution itself, where the genetic algorithms are based. In the book “Guns, Germs and Steel” Jared Diamond says:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“The near-simultaneous disappearance of so many large species raises an
obvious question: what caused it? An obvious possible answer is that they
were killed off or else eliminated indirectly by the first arriving humans.
Recall that Australian / New Guinean animals had evolved for millions of
years in the absence of human hunters. We know that Galapagos and Antarctic
birds and mammals, which similarly evolved in the absence of
humans and did not see humans until modern times, are still incurably
tame today.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The Australian / New Guinean animals got a challenge that was too much to them in that time, different of the other animals from other continents that evolved together with humans (or proto-humans) and learn to survive this predator.&lt;/p&gt;

&lt;h3 id=&quot;different-design&quot;&gt;Different design&lt;/h3&gt;
&lt;p&gt;Different challenges lead to different car designs. 
It’s quite clear that the best cars design to each of the 3 roads are different between them and only works in its specific road.&lt;/p&gt;

&lt;p&gt;Now, it’s up to you, fork &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/fork&quot;&gt;GeneticSharp&lt;/a&gt; and run the GeneticSharp Car2D on your Unity3D editor. &lt;a href=&quot;http://twitter.com/ogiacomelli&quot;&gt;Let me know&lt;/a&gt; what roads and results you created.&lt;/p&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GeneticSharp - Unity3d sample</title>
   <link href="//GeneticSharp-Unity3d-sample/"/>
   <updated>2018-05-31T00:00:00-03:00</updated>
   <id>//GeneticSharp-Unity3d-sample</id>
   <content type="html">&lt;p&gt;I just pushed to GeneticSharp master branch the &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/tree/master/src/GeneticSharp.Runner.UnityApp&quot;&gt;GeneticSharp.Runners.UnityApp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this Unity3d project there are 3 samples:&lt;/p&gt;

&lt;h2 id=&quot;car2d&quot;&gt;Car2D&lt;/h2&gt;
&lt;p&gt;Based on famous BoxCar2D, this sample uses a genetic algorithm to create car designs to overcome road challenges, like gaps, hills, and obstacles.&lt;/p&gt;

&lt;p&gt;A post explaining this sample in detail will be published tomorrow.&lt;/p&gt;

&lt;h2 id=&quot;tsp&quot;&gt;TSP&lt;/h2&gt;
&lt;p&gt;The classic TSP sample, but in this, we can change the cities positions while the genetic algorithm is running and see how it finds the best route.&lt;/p&gt;

&lt;p&gt;This sample inspired this post &lt;a href=&quot;/tsp-with-GeneticSharp-and-Unity3d/&quot;&gt;TSP with GeneticSharp and Unity3D&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;wall-builder&quot;&gt;Wall builder&lt;/h2&gt;
&lt;p&gt;This sample tries to build a higher wall using random initial bricks positions.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/xXqNcgeOU_g &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;experimental-components&quot;&gt;Experimental components&lt;/h2&gt;
&lt;p&gt;In the folder _runner/Commons there are the BitStringChromosome class and some phenotype implementations. At the moment they are experimental, but I will wait for the community feedback to see if they can be promoted to GeneticSharp library code.&lt;/p&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>TSP with GeneticSharp and Unity3D</title>
   <link href="//tsp-with-GeneticSharp-and-Unity3d/"/>
   <updated>2018-05-16T00:00:00-03:00</updated>
   <id>//tsp-with-GeneticSharp-and-Unity3d</id>
   <content type="html">&lt;style&gt;
div.gist-meta { display:none; }
&lt;/style&gt;

&lt;p&gt;In this post I will show how to use GeneticSharp and Unity3D to solve the TSP (Travelling salesman problem).&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;According to Wikipedia &lt;em&gt;&lt;strong&gt;“The travelling salesman problem (TSP) asks the following question: “Given a list of cities and the distances between each pair of cities, what is the shortest possible route that visits each city and returns to the origin city?”&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;TSP is a classic sample to test some optimization techniques, as well it’s fairly used to demonstrate how to implement a genetic algorithm. For these reasons I will use it to show you how to implement a basic genetic algorithm in Unity3D using GeneticSharp.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;To better understand this tutorial, you need to have some experiences/knowledges in:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Unity3D (beginner)&lt;/li&gt;
  &lt;li&gt;Genetic algorithms (beginner).&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you need an introduction to genetic algorithms, take a look at this tutorial  &lt;a href=&quot;/function-optimization-with-geneticsharp/&quot;&gt;Function optimization with GeneticSharp&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;creating-the-unity3d-project&quot;&gt;Creating the Unity3D project&lt;/h2&gt;
&lt;p&gt;Using Unity 2018.1+, create a new project called TspSample.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/creating-project-200-e53d80e12.webp 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/creating-project-400-e53d80e12.webp 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/creating-project-669-e53d80e12.webp 669w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/creating-project-200-e53d80e12.png 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/creating-project-400-e53d80e12.png 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/creating-project-669-e53d80e12.png 669w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/creating-project-669-e53d80e12.png&quot; alt=&quot;post image&quot; width=&quot;669&quot; height=&quot;321&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;using-net-standard-20&quot;&gt;Using .NET Standard 2.0&lt;/h2&gt;
&lt;p&gt;Go to “Player settings” / “Other settings” / “Configuration”, select “.NET 4.x Equivalent” on “Scripting Runtime Version”. Unity will ask to restart, you can confirm.&lt;/p&gt;

&lt;p&gt;After restart, go back to “Player settings”, select “.NET Standard 2.0” on “Api Compability Level”.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/player-settings-200-444856e1a.webp 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/player-settings-400-444856e1a.webp 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/player-settings-426-444856e1a.webp 426w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/player-settings-200-444856e1a.png 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/player-settings-400-444856e1a.png 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/player-settings-426-444856e1a.png 426w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/player-settings-426-444856e1a.png&quot; alt=&quot;post image&quot; width=&quot;426&quot; height=&quot;82&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;installing-geneticsharp&quot;&gt;Installing GeneticSharp&lt;/h2&gt;
&lt;p&gt;Install GeneticSharp using the .unitypackage available on &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/releases&quot;&gt;GeneticSharp release page&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;defining-the-tsp-chromosome&quot;&gt;Defining the TSP chromosome&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/route-128-704e92446.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/route-128-704e92446.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/route-128-704e92446.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;The chromosome represents a solution of the problem we are trying to solve. In our case the TSP chromosome should represent &lt;em&gt;&lt;strong&gt;“the shortest possible route that visits each city and returns to the origin city”&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;To represent the cities route each gene of our chromosome will represent an index of a city in the route.&lt;/p&gt;

&lt;p&gt;Create a C# script called “TspChromosome.cs”:
&lt;script src=&quot;https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=TspChromosome.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;representing-a-city&quot;&gt;Representing a city&lt;/h2&gt;
&lt;p&gt;The next step is define our genetic algorithm fitness function, but first we need to create a simple class to represent a city on a 2D space.&lt;/p&gt;

&lt;p&gt;Create a C# script called “City.cs”:
&lt;script src=&quot;https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=City.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-fitness-function&quot;&gt;The fitness function&lt;/h2&gt;
&lt;p&gt;Now we need to evaluate the TspChromosome.&lt;/p&gt;

&lt;p&gt;Our fitness function will evaluate the TspChromosome fitness based on the total distance to reach all cities in the route represented by the chromosome. The shorter the distance, the better the chromosome.&lt;/p&gt;

&lt;p&gt;Create a C# script called “TspFitness.cs”: &lt;script src=&quot;https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=TspFitness.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;running-the-genetic-algorithm&quot;&gt;Running the Genetic Algorithm&lt;/h2&gt;
&lt;p&gt;In this step we need to configure our genetic algorithm using the TspChromosome, TspFitness and some classic GA operators already built in GeneticSharp.&lt;/p&gt;

&lt;p&gt;Create a C# script called “GAController.cs”: &lt;script src=&quot;https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=GAController.v1.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Create a GameObject called “GAController” in the scene and add the GAController.cs to it.&lt;/p&gt;

&lt;p&gt;Save the scene.&lt;/p&gt;

&lt;p&gt;Run the scene on editor and take a look on the console window, you will see the distance to reach all cities getting smaller as the generations ran.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/console-window-200-cb99efe0f.webp 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/console-window-400-cb99efe0f.webp 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/console-window-488-cb99efe0f.webp 488w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/console-window-200-cb99efe0f.png 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/console-window-400-cb99efe0f.png 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/console-window-488-cb99efe0f.png 488w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/console-window-488-cb99efe0f.png&quot; alt=&quot;post image&quot; width=&quot;488&quot; height=&quot;361&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;drawing-the-cities&quot;&gt;Drawing the cities&lt;/h2&gt;
&lt;p&gt;Now our GA is running inside Unity3D, but it need to display the cities route better.
We need to create a visual representation to the cities.&lt;/p&gt;

&lt;h3 id=&quot;city-prefab&quot;&gt;City prefab&lt;/h3&gt;
&lt;p&gt;We will create a prefab based on a sprite of a pin. You can use an icon as this one from &lt;a href=&quot;https://www.flaticon.com/free-icon/maps-and-flags_447031#term=pin&amp;amp;page=1&amp;amp;position=6&quot;&gt;www.flaticon.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Download it to inside your Unity3D project.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Maybe you will need to change the ‘Pixels Per Unit’ to 1000 to get a good pin size on screen.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Drag it to the hierarchy panel, rename the new GameObject to CityPrefab and drag it back to your Assets folder on Project panel. Now our CityPrefab is created.&lt;/p&gt;

&lt;p&gt;Delete the CityPrefab game object from the current scene.&lt;/p&gt;

&lt;h3 id=&quot;instantiating-the-cities-prefabs&quot;&gt;Instantiating the cities prefabs&lt;/h3&gt;
&lt;p&gt;Add the following field to the GAController.cs
&lt;script src=&quot;https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=GAController.change1.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Then, create the method DrawCities:
&lt;script src=&quot;https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=GAController.change2.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;And then call it from Start method:
&lt;script src=&quot;https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=GAController.change3.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Now, select the GAController game object on hierarchy and set the CityPrefab property.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/setting-cityprefab-200-e77776a1f.webp 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/setting-cityprefab-400-e77776a1f.webp 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/setting-cityprefab-595-e77776a1f.webp 595w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/setting-cityprefab-200-e77776a1f.png 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/setting-cityprefab-400-e77776a1f.png 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/setting-cityprefab-595-e77776a1f.png 595w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/setting-cityprefab-595-e77776a1f.png&quot; alt=&quot;post image&quot; width=&quot;595&quot; height=&quot;190&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Try to run the scene, you should see something like this:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-200-e9b99a942.webp 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-400-e9b99a942.webp 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-800-e9b99a942.webp 800w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-1600-e9b99a942.webp 1600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-200-e9b99a942.png 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-400-e9b99a942.png 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-800-e9b99a942.png 800w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-1600-e9b99a942.png 1600w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-800-e9b99a942.png&quot; alt=&quot;post image&quot; width=&quot;2032&quot; height=&quot;1209&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;drawing-the-route&quot;&gt;Drawing the route&lt;/h2&gt;
&lt;p&gt;In the previous step we drawn the cities and we have the visual of the problem: the cities.&lt;/p&gt;

&lt;p&gt;Now we need to draw the solution: the route represented by the best chromosome of each generation.&lt;/p&gt;

&lt;p&gt;One of the simplest ways to draw some lines in Unity3D is using the LineRenderer component.&lt;/p&gt;

&lt;p&gt;Add the following code to the GAController.cs:
&lt;script src=&quot;https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=GAController.change4.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Create the method DrawRoute:
&lt;script src=&quot;https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=GAController.change5.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Then call it from Update method:
&lt;script src=&quot;https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=GAController.change6.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Before run the scene, we need to add a LineRenderer component to our GAController game object.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Change the width property of the LineRenderer from 1 to 0.1.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Run the scene again, now you should see the route been optimizing as the generations are ran:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-200-4154f5d73.webp 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-400-4154f5d73.webp 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-800-4154f5d73.webp 800w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-1600-4154f5d73.webp 1600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-200-4154f5d73.png 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-400-4154f5d73.png 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-800-4154f5d73.png 800w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-1600-4154f5d73.png 1600w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-800-4154f5d73.png&quot; alt=&quot;post image&quot; width=&quot;2032&quot; height=&quot;1209&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;changing-the-cities-positions&quot;&gt;Changing the cities positions&lt;/h2&gt;
&lt;p&gt;Our sample could be considered done, but would it be nice if we you could change the cities positions while the genetic algorithm are running and see how it manages these cities positions changes.&lt;/p&gt;

&lt;h3 id=&quot;citycontroller&quot;&gt;CityController&lt;/h3&gt;
&lt;p&gt;Create a C# script called “CityController.cs”: &lt;script src=&quot;https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=CityController.cs&quot;&gt; &lt;/script&gt;
I won’t getting in details about how this is script works, but it’s allow the user to drag the cities’ pin using the mouse or the finger touch if build it to mobile.&lt;/p&gt;

&lt;p&gt;Add the CityController.cs to the CityPrefab.&lt;/p&gt;

&lt;p&gt;Change the GAController.cs script adding the line below to the end of the for loop of DrawCities method:
&lt;script src=&quot;https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=GAController.change7.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Finally, our sample is really done and you should be capable to change the cities positions, by dragging the pins around, and genetic algorithm will try to figure out the best route in real time.&lt;/p&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/tsp-sample.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;With only 5 C# scripts and 1 prefab we built a pretty nice sample of genetic algorithms using in Unity3D with GeneticSharp. Now you can improve it with your own ideas or use some of mine ;):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How about make it 3D and using a Vector3 instead of Vector2 on City.Position?&lt;/li&gt;
  &lt;li&gt;Maybe let user change the number of cities or change the genetic algorithm operators?&lt;/li&gt;
  &lt;li&gt;Move the DrawCities and DrawRoutes methods to a script responsible to only draw the GA.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The full source code used in this post can be download or fork from this Gist: &lt;a href=&quot;https://gist.github.com/giacomelli/94721a46d33c6bcb1f3ae11117b7f888&quot;&gt;https://gist.github.com/giacomelli/94721a46d33c6bcb1f3ae11117b7f888&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;

&lt;div&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot; title=&quot;Freepik&quot;&gt;Freepik&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot; title=&quot;Flaticon&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot; title=&quot;Creative Commons BY 3.0&quot; target=&quot;_blank&quot;&gt;CC 3.0 BY&lt;/a&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>GeneticSharp v2.0.0 - .NET Core</title>
   <link href="//GeneticSharp-v2.0.0-dotnet-core/"/>
   <updated>2018-05-12T00:00:00-03:00</updated>
   <id>//GeneticSharp-v2.0.0-dotnet-core</id>
   <content type="html">&lt;p&gt;The &lt;strong&gt;&lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/releases/tag/v2.0.0&quot;&gt;GeneticSharp v2.0.0&lt;/a&gt;&lt;/strong&gt; is out with support to .NET Standard 2.0 and .NET Framework 4.6.2.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;In march GenetichSharp start to support .NET Standard 2.0 in the 2.0.0-rc version. Two months have pass and in the meanwhile the community have time to test that release candidate version and now Unity3D has an official .NET Standard 2.0 profile.&lt;/p&gt;

&lt;p&gt;So, it’s time to release the GeneticSharp v2.0.0.&lt;/p&gt;

&lt;h2 id=&quot;installing&quot;&gt;Installing&lt;/h2&gt;
&lt;p&gt;Only GeneticSharp:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install-package GeneticSharp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;GeneticSharp and extensions (TSP, AutoConfig, Bitmap equality, Equality equation, Equation solver, Function builder, etc):&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install-package GeneticSharp.Extensions
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you’re still in a .NET Framework version lower than 4.6.2 project use the &lt;a href=&quot;https://www.nuget.org/packages/GeneticSharp/1.2.0&quot;&gt;1.2.0 version&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install-package GeneticSharp &lt;span class=&quot;nt&quot;&gt;-Version&lt;/span&gt; 1.2.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;breaking-changes&quot;&gt;Breaking changes&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/breaking-changes-128-473f11369.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/breaking-changes-128-473f11369.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/breaking-changes-128-473f11369.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;blockquote&gt;
  &lt;p&gt;I’ve already talk about these breaking changes on the post about the release candidate version, but I guess is good to point them again:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;The GeneticSharp NuGet package was split into two packages:
    &lt;ul&gt;
      &lt;li&gt;GeneticSharp: only GeneticSharp.Domain.dll and GeneticSharp.Infrastructure.Framework.dll&lt;/li&gt;
      &lt;li&gt;GeneticSharp.Extensions: depends on GenetiSharp.Package and add the GeneticSharp.Extensions.dll.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;SmartThreadPoolTaskExecutor does not exists anymore. You should use ParallelTaskExecutor class (not disposable).&lt;/li&gt;
  &lt;li&gt;The projects are not signed anymore:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/cli/issues/6911#issuecomment-309647478&quot;&gt;Error signing output with public key from file ‘x.snk’ – Assembly signing not supported&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;In the ConsoleApp the EquationSolverSampleController was removed until the &lt;a href=&quot;https://github.com/pieterderycke/Jace&quot;&gt;Jace&lt;/a&gt; library suportt .NET Core.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;

&lt;div&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot; title=&quot;Freepik&quot;&gt;Freepik&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot; title=&quot;Flaticon&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot; title=&quot;Creative Commons BY 3.0&quot; target=&quot;_blank&quot;&gt;CC 3.0 BY&lt;/a&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>DocsByReflection v1.0.13 - .NET Standard 2.0</title>
   <link href="//DocsByRelection-v1.0.13-netstandard2.0/"/>
   <updated>2018-04-05T00:00:00-03:00</updated>
   <id>//DocsByRelection-v1.0.13-netstandard2.0</id>
   <content type="html">&lt;p&gt;The &lt;strong&gt;&lt;a href=&quot;https://github.com/giacomelli/DocsByReflection/releases/tag/v1.0.13&quot;&gt;DocsByReflection v1.0.13&lt;/a&gt;&lt;/strong&gt; is out.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you don’t know what is DocsByReflection or what you can do with it, take a look in my previous post about it “&lt;a href=&quot;/getting-your-code-documentation-at-runtime/&quot;&gt;Getting your code documentation at runtime&lt;/a&gt;”.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;net-standard-20-and-net-framework-46&quot;&gt;.NET Standard 2.0 and .NET Framework 4.6&lt;/h2&gt;
&lt;p&gt;In this version &lt;a href=&quot;https://github.com/giacomelli/DocsByReflection&quot;&gt;DocsByReflection&lt;/a&gt; starts to support .NET Standard 2.0.&lt;/p&gt;

&lt;p&gt;Now, if you need to use the library on .NET Standard 2.0 or .NET Framework 4.6 projects:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install-package DocsByReflection.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;net-framework&quot;&gt;.NET Framework&lt;/h2&gt;
&lt;p&gt;If you are in a .NET Framework project lower than .NET Framework 4.6 you can use the previous version:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install-package DocsByReflection &lt;span class=&quot;nt&quot;&gt;-Version&lt;/span&gt; 1.0.12.20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;thanks-to&quot;&gt;Thanks to&lt;/h2&gt;
&lt;p&gt;I would like to thanks &lt;a href=&quot;https://github.com/onionhammer&quot;&gt;Erik O’Leary&lt;/a&gt; to perform the whole migration of DocsByReflection to .NET Standard 2.0.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Porting GeneticSharp to .NET Core</title>
   <link href="//porting-GeneticSharp-to-dotnet-core/"/>
   <updated>2018-03-28T00:00:00-03:00</updated>
   <id>//porting-GeneticSharp-to-dotnet-core</id>
   <content type="html">&lt;p&gt;The &lt;strong&gt;&lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/releases/tag/v2.0.0-rc1&quot;&gt;GeneticSharp v2.0.0-rc1&lt;/a&gt;&lt;/strong&gt; is out.&lt;/p&gt;

&lt;p&gt;In this version GeneticSharp starts to support .NET Standard 2.0 and .NET Framework 4.6.2.&lt;/p&gt;

&lt;p&gt;Porting 
to &lt;img class=&quot;icon&quot; src=&quot;/assets/logos/netcore.svg &quot; alt=&quot;post image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/ogiacomelli/status/958114986601172992&quot;&gt;Sometime ago I started to porting GeneticSharp to .NET Core&lt;/a&gt; and today, after more than 40 hours of work, I finally finish it.&lt;/p&gt;

&lt;p&gt;Although GeneticSharp born as a multi-platform library that ran in any OS supported by .NET Framework and Mono, convert it to .NET Core was a desired thing, because .NET Core is where .NET ecosystem is targeting.&lt;/p&gt;

&lt;h2 id=&quot;release-candidate&quot;&gt;Release candidate&lt;/h2&gt;
&lt;p&gt;This 2.0.0-rc1 was already published to nuget.org, but it’s marked as a pre-realease package. I will kept it as a RC until get sure that there is no issue with the porting and until the Unity3d remove the “experimental” status to its support to .NET Standard 2.0.&lt;/p&gt;

&lt;p&gt;If you are in .NET Core or in .NET Framework 4.6.2+ project, please try the the &lt;a href=&quot;https://www.nuget.org/packages/GeneticSharp/2.0.0-rc1&quot;&gt;2.0.0-rc1&lt;/a&gt; version.&lt;/p&gt;

&lt;p&gt;Only GeneticSharp:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install-package GeneticSharp &lt;span class=&quot;nt&quot;&gt;-Version&lt;/span&gt; 2.0.0-rc1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;GeneticSharp and extensions (TSP, AutoConfig, Bitmap equality, Equality equation, Equation solver, Function builder, etc):&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install-package GeneticSharp.Extensions &lt;span class=&quot;nt&quot;&gt;-Version&lt;/span&gt; 2.0.0-rc1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you’re still in a .NET Framework version lower than 4.6.2 project use the &lt;a href=&quot;https://www.nuget.org/packages/GeneticSharp/1.2.0&quot;&gt;1.2.0 version&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install-package GeneticSharp &lt;span class=&quot;nt&quot;&gt;-Version&lt;/span&gt; 1.2.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;porting&quot;&gt;Porting&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/porting-128-43430b71d.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/porting-128-43430b71d.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/porting-128-43430b71d.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;warmup&quot;&gt;Warmup&lt;/h3&gt;

&lt;p&gt;To start the porting I followed the good pratices describe on links below:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/core/porting/libraries&quot;&gt;Porting to .NET Core - Libraries&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/core/porting/index&quot;&gt;Porting to .NET Core from .NET Framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Based on those reads, I decided to support the .NET Standard 2.0 (netstandard2.0) and the .NET Framework 4.6.2 (net462). This meaning that GeneticSharp can be used in .NET Standard and .NET Framework projects, with no differences.&lt;/p&gt;

&lt;p&gt;Another thing that I considered was the Unity3d support, so based on this post &lt;a href=&quot;https://blogs.unity3d.com/pt/2018/01/10/get-early-access-to-unity-2018-1-the-beta-is-out/&quot;&gt;Unity 2018.1 - .NET Standard 2.0 and .NET 4.6 support&lt;/a&gt; Unity is already using a experimental support to netstandard2.0 and net462 libraries.&lt;/p&gt;

&lt;h3 id=&quot;domain&quot;&gt;Domain&lt;/h3&gt;
&lt;p&gt;The domain part of the library, the GeneticSharp.Domain library was the easy part to port, if I cleary remember there was no change it all, besides the changes on .csproj.&lt;/p&gt;

&lt;h3 id=&quot;extensions&quot;&gt;Extensions&lt;/h3&gt;
&lt;p&gt;The extensions from GeneticSharp.Extensions project needed some more work, because the System.Drawing do not exists directly in .NET Standard 2.0. That was resolved using the &lt;a href=&quot;https://www.nuget.org/packages/System.Drawing.Common/&quot;&gt;System.Drawing.Common&lt;/a&gt; NuGet package.&lt;/p&gt;

&lt;p&gt;The NCalc library used on FunctionBuilderFitness was updated to use the &lt;a href=&quot;https://www.nuget.org/packages/NCalc.NetCore/&quot;&gt;NCalc.NetCore&lt;/a&gt; version.&lt;/p&gt;

&lt;h3 id=&quot;threading&quot;&gt;Threading&lt;/h3&gt;
&lt;p&gt;One of the most tricky porting was the GeneticSharp.Infrastructure.Threading, because it used the external library &lt;a href=&quot;https://github.com/amibar/SmartThreadPool&quot;&gt;SmartThreadPool&lt;/a&gt; and that one was not supporting .NET Core at that time. I decided to implement the parallel task executor using the .NET built-in ThreadPool class, this implementation was done on &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Infrastructure.Framework/Threading/ParallelTaskExecutor.cs&quot;&gt;ParallelTaskExecutor&lt;/a&gt; and its use can be tested on  &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Infrastructure.Framework.UnitTests/Threading/ParallelTaskExecutorTest.cs&quot;&gt;ParallelTaskExecutorTest&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;gtkapp&quot;&gt;GtkApp&lt;/h3&gt;
&lt;p&gt;GeneticSharp sample app (GeneticSharp.Runner.GtkApp) was built using Gtk# 2, but only version 3 was ported to .NET Core, and there are huge breaking changes between these two Gtk# versions, so for a while I’ll keeping the sample app still running only on .NET Framework/Mono.&lt;/p&gt;

&lt;p&gt;I hope in a near future we can built a cross-platform sample app, maybe using Xamarin Forms for iOS, Android, macOS and UWP. This would be great, but perform this task during the to .NET Core supporting is far from the scope right now.&lt;/p&gt;

&lt;p&gt;The links below are some readings that I did while looking for some GTK# alternatives:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.xamarin.com/building-xamarin-forms-apps-net-standard/&quot;&gt;Building Xamarin.Forms Apps with .NET &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.xamarin.com/preview-bringing-macos-to-xamarin-forms/&quot;&gt;Preview: Bringing macOS to Xamarin.Forms&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/xamarin/mac/get-started/hello-mac&quot;&gt;Xamarin.Mac - Hello, Mac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;unit-tests&quot;&gt;Unit tests&lt;/h3&gt;
&lt;p&gt;Unit tests projects were using the &lt;a href=&quot;https://github.com/ayende/rhino-mocks&quot;&gt;Rhino Mocks&lt;/a&gt; as the mocking library, but Rhino Mocks was not supporting (maybe never) .NET Core, so it was replaced by the amazing &lt;a href=&quot;http://nsubstitute.github.io/&quot;&gt;NSubstitute&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;code-coverage&quot;&gt;Code Coverage&lt;/h4&gt;
&lt;p&gt;As the time I wrote this, there was no unanimity about what is the best cross-platform tool to collect code-coverage in .NET Core.
There are some tools, but each one has some pros and cons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;VS 2017 Code Coverage
Can be easily used on Windows platform directly on VS 2017 or in command line:
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--collect&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Code Coverage&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/SteveGilham/altcover&quot;&gt;altcover&lt;/a&gt;
Instrumenting coverage tool for .net/.net core and Mono, emitting NCover or OpenCover format output.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/lucaslorentz/minicover&quot;&gt;MiniCover&lt;/a&gt;
Minimalist Code Coverage Tool for .NET Core.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tonerdo/coverlet&quot;&gt;coverlet&lt;/a&gt;
Cross platform code coverage library for .NET Core.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I guess the most promising tool is the coverlet, but I’ll waiting until the end of GeneticSharp 2.0.0 release candidate period to choose one.&lt;/p&gt;

&lt;h3 id=&quot;problems-readings-tricks-and-hacks&quot;&gt;Problems, readings, tricks and hacks&lt;/h3&gt;
&lt;p&gt;Of course that a porting always come with some problems that will you need to figure out by doing some research and solve them, most of time, using some trick and hacks. These one was some of I’ve done:&lt;/p&gt;

&lt;h4 id=&quot;net-sdk-20-projects-targeting-net-4x-on-mono&quot;&gt;.NET SDK 2.0 projects targeting .NET 4.x on Mono&lt;/h4&gt;
&lt;p&gt;As GeneticSharp need to support .NET Framework 4.6.2, but the msbuild does not know where to looking for the framework assemblies in macOS and Linux, so I found thi .NET SDK issue comment &lt;a href=&quot;https://github.com/dotnet/sdk/issues/335#issuecomment-368669050&quot;&gt;issue comment&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;When compiling .NET SDK 2.0 projects targeting .NET 4.x on Mono using ‘dotnet build’ you have to teach MSBuild where the Mono copy of the reference asssemblies is.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This msbuild file &lt;a href=&quot;src/msbuilds/GeneticSharp.dotnet-core.targets&quot;&gt;GeneticSharp.dotnet-core.targets&lt;/a&gt; was created and referenced in all .csproj.&lt;/p&gt;

&lt;h4 id=&quot;dotnet-test-failed-to-initialize-client-proxy&quot;&gt;dotnet test “Failed to initialize client proxy”&lt;/h4&gt;
&lt;p&gt;Sometimes dotnet test gives the error:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Starting &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;execution, please wait...
Failed to initialize client proxy: could not connect to &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;process.

Test Run Aborted
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Delete the “obj” and “bin” folders from unit test project will “fix” the problem.&lt;/p&gt;

&lt;h2 id=&quot;breaking-changes&quot;&gt;Breaking changes&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/breaking-changes-128-473f11369.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/breaking-changes-128-473f11369.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/breaking-changes-128-473f11369.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;ul&gt;
  &lt;li&gt;The GeneticSharp NuGet package was split into two packages:
    &lt;ul&gt;
      &lt;li&gt;GeneticSharp: only GeneticSharp.Domain.dll and GeneticSharp.Infrastructure.Framework.dll&lt;/li&gt;
      &lt;li&gt;GeneticSharp.Extensions: depends on GenetiSharp.Package and add the GeneticSharp.Extensions.dll.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;SmartThreadPoolTaskExecutor does not exists anymore. You should use ParallelTaskExecutor class (not disposable).&lt;/li&gt;
  &lt;li&gt;The projects are not signed anymore:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/cli/issues/6911#issuecomment-309647478&quot;&gt;Error signing output with public key from file ‘x.snk’ – Assembly signing not supported&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;In the ConsoleApp the EquationSolverSampleController was removed until the &lt;a href=&quot;https://github.com/pieterderycke/Jace&quot;&gt;Jace&lt;/a&gt; library suportt .NET Core.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reads-during-the-porting&quot;&gt;Reads during the porting&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;Some readings I did during the whole process, maybe can be useful to someone porting a library to .NET Core too.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/amibar/SmartThreadPool/pull/17&quot;&gt;SmartThreadPool - Adding support to .NET Core 2.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/43605256/956886&quot;&gt;How to set &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OutputPath&lt;/code&gt; attribute in Visual Studio 2017 project ( new .csproj file format ) without target framework cluttering the resolved path?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/42787747/956886&quot;&gt;How do you multi-target a .NET Core class library with csproj?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.natemcmaster.com/blog/2017/03/09/vs2015-to-vs2017-upgrade/&quot;&gt;Old csproj to new csproj: Visual Studio 2017 upgrade guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wrightfully.com/guide-to-nsubstitute-for-rhino-mocks-users&quot;&gt;A Guide to NSubstitute for Rhino.Mocks Users&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/cli/issues/4710&quot;&gt;Duplicate ‘System.Reflection.AssemblyCompanyAttribute’ attribute&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nunit/dotnet-test-nunit/issues/122&quot;&gt;NUnit - Support .NET Core 2.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://weblog.west-wind.com/posts/2017/Jun/22/MultiTargeting-and-Porting-a-NET-Library-to-NET-Core-20&quot;&gt;Multi-Targeting and Porting a .NET Library to .NET Core 2.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/core/porting/project-structure&quot;&gt;Organizing your project to support .NET Framework and .NET Core&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/standard/issues/443&quot;&gt;System.Drawing.Bitmap class is claimed to be present in netcoreapp2.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/dotnet/2017/01/19/net-core-image-processing/&quot;&gt;.NET Core Image Processing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/vstest/issues/981&quot;&gt;Add support for dotnet test –collect:”Code Coverage”&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/nuget/create-packages/prerelease-packages&quot;&gt;Building pre-release packages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/NuGet/Home/issues/6636&quot;&gt;dotnet pack with nuspec file does not set PackageVersion from csproj&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/NuGet/Home/issues/5655&quot;&gt;Invalid warning “Assembly outside lib folder.” in dotnet pack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/NuGet/Home/issues/3891#issuecomment-375501212&quot;&gt;Feature : Allow project reference DLLs to be added to the parent nupkg for pack target like IncludeReferencedProjects in nuget.exe&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/cli/issues/5504&quot;&gt;https://github.com/dotnet/cli/issues/5504&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-200-e18b9b55c.webp 200w, /assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-400-e18b9b55c.webp 400w, /assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-800-e18b9b55c.webp 800w, /assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-1600-e18b9b55c.webp 1600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-200-e18b9b55c.png 200w, /assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-400-e18b9b55c.png 400w, /assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-800-e18b9b55c.png 800w, /assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-1600-e18b9b55c.png 1600w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-800-e18b9b55c.png&quot; alt=&quot;post image&quot; width=&quot;1992&quot; height=&quot;632&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now I’m planning to create a GeneticSharp’s sample using Unity3d’s new beta features, like the new ECS (Entity Component System), C# Job System and the Burst compiler.&lt;/p&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;

&lt;div&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot; title=&quot;Freepik&quot;&gt;Freepik&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot; title=&quot;Flaticon&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot; title=&quot;Creative Commons BY 3.0&quot; target=&quot;_blank&quot;&gt;CC 3.0 BY&lt;/a&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>GeneticSharp v1.2.0 - Sequence mutations</title>
   <link href="//GeneticSharp-v1.2.0-sequence-mutations/"/>
   <updated>2018-01-26T00:00:00-02:00</updated>
   <id>//GeneticSharp-v1.2.0-sequence-mutations</id>
   <content type="html">&lt;p&gt;The &lt;strong&gt;&lt;a href=&quot;https://github.com/giacomelli/GeneticSharp&quot;&gt;GeneticSharp v1.2.0&lt;/a&gt;&lt;/strong&gt; is out.&lt;/p&gt;

&lt;p&gt;The additions of this version are the new sequence mutation operators: Displacement, InsertionMutation and Partial Shuffle (PSM).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Displacement Mutation&lt;/strong&gt;: a substring is randomly selected from chromosome, is removed, then replaced at a randomly selected position.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Insertion Mutation&lt;/strong&gt;: a gene is randomly selected from chromosome, is removed, then replaced at a randomly selected position.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Partial Shuffle Mutation (PSM)&lt;/strong&gt;: we take a sequence S limited by two positions i and j randomly chosen. The gene order in this sequence will be shuffled. Sequence will be shuffled until it becomes different than the starting order.&lt;/p&gt;

&lt;p&gt;I would like to thanks to Ahmet Can Saner (&lt;a href=&quot;https://github.com/cansaner&quot;&gt;@cansaner&lt;/a&gt;) for contribute with those great new mutations that him developed during his master degree.&lt;/p&gt;

&lt;p&gt;If you want to use the new mutations in your project, just get the new GeneticSharp version from Nuget.&lt;/p&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;

&lt;div&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot; title=&quot;Freepik&quot;&gt;Freepik&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot; title=&quot;Flaticon&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot; title=&quot;Creative Commons BY 3.0&quot; target=&quot;_blank&quot;&gt;CC 3.0 BY&lt;/a&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Function optimization with GeneticSharp</title>
   <link href="//function-optimization-with-geneticsharp/"/>
   <updated>2017-06-13T00:00:00-03:00</updated>
   <id>//function-optimization-with-geneticsharp</id>
   <content type="html">&lt;p&gt;In this tutorial we will learn how to use GeneticSharp to optimize the inputs of math function and more about genetic algorithms meanwhile.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I created &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp&quot;&gt;GeneticSharp&lt;/a&gt; a long time ago because three main reasons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I needed a fast, extensible, multi-platform and multithreading C# genetic algorithm library to use in my GA experiments;&lt;/li&gt;
  &lt;li&gt;I wanted to study and understand GA better;&lt;/li&gt;
  &lt;li&gt;and Genetic algorithm are pretty fun to implement and use!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As far as I know GeneticSharp has been used in a lot of different projects, since card games deck optimization, self managing distributed file system, context-sensitive code completion, even in airplanes trajectories optimization. These are pretty cool and exciting topics, but this tutorial is not about this advanced topics. Here I want to take a very simple sample and show how easy and fast you can add genetic algorithms on your project using GeneticSharp. So, let’s evolve!&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The problem&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/problem-128-a3f91d933.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/problem-128-a3f91d933.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/problem-128-a3f91d933.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In our sample we will optimize the input of a mathematical function, this function will be used as our fitness evaluation function. For this sample we will use a function that everyone saw in school time, the famous &lt;a href=&quot;https://en.wikipedia.org/wiki/Euclidean_distance&quot;&gt;Euclidean distance&lt;/a&gt; or commonly know as distance of two points function:&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharp-EuclideanDistanceFunction-200-d144504d3.webp 200w, /assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharp-EuclideanDistanceFunction-320-d144504d3.webp 320w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharp-EuclideanDistanceFunction-200-d144504d3.png 200w, /assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharp-EuclideanDistanceFunction-320-d144504d3.png 320w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharp-EuclideanDistanceFunction-320-d144504d3.png&quot; alt=&quot;post image&quot; width=&quot;320&quot; height=&quot;53&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;We will consider our chromosome fitness as the result of this function. The higher the result, the better is the chromosome fitness.&lt;/p&gt;

&lt;p&gt;Our chromosome will be the Euclidean distance function arguments, the X1, Y1, X2 and Y2.&lt;/p&gt;

&lt;h2 id=&quot;what-our-genetic-algorithm-is-looking-for&quot;&gt;What our genetic algorithm is looking for?&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/telescope-128-e0357d1e6.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/telescope-128-e0357d1e6.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/telescope-128-e0357d1e6.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The goal of our genetic algortim is &lt;strong&gt;find the input values of Euclidean distance function: X1, Y1 and X2, Y2 that result in the greatest distance in a rectangular area&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;What? You can think: &lt;em&gt;“this is a stupid goal”&lt;/em&gt;, because everyone knows that the longest distance between two points in a rectangular area are their diagonals. Yeah, you are right, but this is one of the best things about genetic algorithm, our GA code does not know anything about this, it just know that some X1, Y1 and X2, Y2 inputs generate a fitness value and greatest fitness are better. The other justification to use this so simple GA objective is that everyone can understand what is happening and we can focus to learn genetic algorithm.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We can easly create a brute force solution with four nested loops that will find the solution of our problem, but as I mencioned before this ‘problem’ is just for the tutorial purpose, because in normal applications genetic algoritm find solutions to problems that the solution is not so obvious or in some cases the solutions are even unknow.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;creating-the-project&quot;&gt;Creating the project&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/project-128-4f597ed4f.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/project-128-4f597ed4f.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/project-128-4f597ed4f.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Open your IDE (Visual Studio/Xamarin Studio) and create a new console project.&lt;/p&gt;

&lt;p&gt;Install the GeneticSharp package:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install-package GeneticSharp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;using-geneticsharp&quot;&gt;Using GeneticSharp&lt;/h2&gt;

&lt;p&gt;GeneticSharp implements all the classic components of a genetic algorithm, like gene, chromosome, population, fitness, selection, crossover, mutation, reinsetion and termination. When you use it to build your genetic algorithm code you just need to implement a few things, mostly you will need to code just your solution’s chromosome and fitness.&lt;/p&gt;

&lt;h2 id=&quot;creating-an-euclidean-distance-chromosome&quot;&gt;Creating an Euclidean distance chromosome&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/chromosome-128-8b4102796.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/chromosome-128-8b4102796.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/chromosome-128-8b4102796.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Chromosome is the representation of a possible solution in genetic algoritms.&lt;/p&gt;

&lt;p&gt;In GeneticSharp a chromosome needs to implement the &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Chromosomes/IChromosome.cs&quot;&gt;IChromosome&lt;/a&gt; interface, but in most of cases you just need to inherit the &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Chromosomes/ChromosomeBase.cs&quot;&gt;ChromosomeBase&lt;/a&gt; class and override the methods GenerateGene and CreateNew.&lt;/p&gt;

&lt;p&gt;Besides IChromosome and ChromosomeBase also exist the classes: &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Chromosomes/BinaryChromosomeBase.cs&quot;&gt;BinaryChromosomeBase&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Chromosomes/FloatingPointChromosome.cs&quot;&gt;FloatingPointChromosome&lt;/a&gt; and &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Chromosomes/IntegerChromosome.cs&quot;&gt;IntegerChromosome&lt;/a&gt; that are chromosome classes that can be directly used when your solution chromosome can be represented as numbers or a string representation of 0 and 1.&lt;/p&gt;

&lt;p&gt;In our case we need to create a chromosome that represent the input variables of the Euclidean distance function: X1, Y1 and X2, Y2.&lt;/p&gt;

&lt;p&gt;The FloatingPointChromosome is a perfect fit for this kind of representation, because it allows represent more than one number inside of it.&lt;/p&gt;

&lt;p&gt;Open the Program.cs file and inside the Main function enter the code below:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=CreatingAnEuclideanDistanceChromsome.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;In the code above we create two variables to represent our rectangle area size: maxWidth and maxHeight, then we created a new instance of FloatingPointChromome, this will be the template to all chromsome in our solution.&lt;/p&gt;

&lt;p&gt;The constructor receive four arrays, they are:&lt;/p&gt;

&lt;p&gt;1) The minimum values of numbers inside the chromosome. Our rectangle area will start at 0 points, so the min value of X1, Y1, X2 and Y2 are 0 (zero).&lt;/p&gt;

&lt;p&gt;2) The maximum values. We use our previous created variables.&lt;/p&gt;

&lt;p&gt;3) The total bits used to represent each number. The maximum value is 998, so 10 bits is what we need.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;GeneticSharp will warn you if you try to use a total bits that cannot hold a number inside your floating point chromosome.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;4) The number of fraction (scale or decimal) part of the number. In our case we will not use any.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-population&quot;&gt;Creating the population&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/population-128-3f5c6fbb1.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/population-128-3f5c6fbb1.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/population-128-3f5c6fbb1.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The population represents the possible solutions to our problem, so we need to create a population of our Euclidean distance chromosome.&lt;/p&gt;

&lt;p&gt;In GeneticSharp a population is represented by the &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Populations/IPopulation.cs&quot;&gt;IPopulation&lt;/a&gt; interface, but in most cases you can directly use the &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Populations/Population.cs&quot;&gt;Population&lt;/a&gt; class.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=CreatingThePopulation.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;We created a population that will have a minimum number of 50 chromosomes and a maximum number of 100 and used our chromosome template as the “Adam chromosome” (yeah, you get the reference) of our GA.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-fitness-function&quot;&gt;Creating the fitness function&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/score-128-702a2b758.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/score-128-702a2b758.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/score-128-702a2b758.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The fitness function is where the genetic algoritm will evaluate and give a value (fitness) to each chromosome generated inside it. A good fitness function can guide your GA to a fast and optimum solution.&lt;/p&gt;

&lt;p&gt;In GeneticSharp we represent a fitness function through the &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Fitnesses/IFitness.cs&quot;&gt;IFitness&lt;/a&gt; interface. Almost always you wil have to code a class that implement this interface, but for our tutorial we can use the simple and lower friction class &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Fitnesses/FuncFitness.cs&quot;&gt;FuncFitness&lt;/a&gt;. This class allow us to build our fitness evalution as its constructor argument.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=CreatingTheFitnessFunction.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;We receive a IChromosome in the variable “c”, then we cast it to FloatingPointChromosme.&lt;/p&gt;

&lt;p&gt;To allow us to evaluate the chromosome we need to convert it from its genotype (FloatingPointChromosome) to its phenotype (x1, y1 and x2, y2), we do this calling the ToFloatingPoints method. This method return an array of numbers using that configuration we used when we created our Euclidean distance chromosome. Now we have our X1, Y1 and X2 and Y2 numbers we just need to pass it to the Euclidean distance function and return the value as the fitness value of the current chromosome.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-selection&quot;&gt;Creating the selection&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/podium-128-f9f44969b.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/podium-128-f9f44969b.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/podium-128-f9f44969b.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;A selection is the genetic algorithm operator responsible for decing which chromosomes of current population will be selected as parent of the next population.&lt;/p&gt;

&lt;p&gt;You can code your our selection through the &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Selections/ISelection.cs&quot;&gt;ISelection&lt;/a&gt; interface or extending the &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Selections/SelectionBase.cs&quot;&gt;SelectionBase&lt;/a&gt; class.&lt;/p&gt;

&lt;p&gt;Besides this, you can use the already implemented classic selections: &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Selections/EliteSelection.cs&quot;&gt;Elite&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Selections/RouletteWheelSelection.cs&quot;&gt;Roulete Wheel&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Selections/StochasticUniversalSamplingSelection.cs&quot;&gt;Stochastic Universal Sampling&lt;/a&gt; and &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Selections/TournamentSelection.cs&quot;&gt;Tournament&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=CreatingTheSelection.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;Elite selection is a good option, because it will select the chromosomes with the best fitness (greatest distance). You can try the others selection options too and see how they change the GA speed and results.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-crossover&quot;&gt;Creating the crossover&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/cross-128-ffae692c2.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/cross-128-ffae692c2.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/cross-128-ffae692c2.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The chromosomes selected by the selection need to cross to generate new possible solutions of the next generation of the GA. The crossover operator is responsible for crossing these selected chromosomes.&lt;/p&gt;

&lt;p&gt;There are the &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/ICrossover.cs&quot;&gt;ICrossover&lt;/a&gt; interface and &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/CrossoverBase.cs&quot;&gt;CrossoverBase&lt;/a&gt; class if you want to code your crossover from scratch or you can use one of already available: &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/CutAndSpliceCrossover.cs&quot;&gt;Cut and Splice&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/CycleCrossover.cs&quot;&gt;Cycle (CX)&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/OnePointCrossover.cs&quot;&gt;One-Point (C1)&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/OrderBasedCrossover.cs&quot;&gt;Order-based (OX2)&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/OrderedCrossover.cs&quot;&gt;Ordered (OX1)&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/PartiallyMappedCrossover.cs&quot;&gt;Partially Mapped (PMX)&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/PositionBasedCrossover.cs&quot;&gt;Position-based (POS)&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/ThreeParentCrossover.cs&quot;&gt;Three parent&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/TwoPointCrossover.cs&quot;&gt;Two-Point (C2)&lt;/a&gt; and &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/UniformCrossover.cs&quot;&gt;Uniform&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Some of those classics crossovers, like OX1 and OX2, cannot be used in our tutorial because they need chromosomes with ordered genes and this is not the case of our chromosomes with 0101001100 genes. Do not worry, because GeneticSharp will warn you if you try to use an invalid chromosome in an ordered crossover&lt;/p&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=CreatingTheCrossover.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;Uniform Crossover enables the parent chromosomes to contribute the gene level rather than the segment level, for example: if the mix probability is 0.5, the offspring has approximately half of the genes from first parent and the other half from second parent.&lt;/p&gt;

&lt;p&gt;So, in our case Uniform crossover is a very good option, because using the 0.5f mix probability it will generate new chromosomes that are combination of X1, Y1 from one parent and X2, Y2 from another parent.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-mutation&quot;&gt;Creating the mutation&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/mutation-128-a489f3853.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/mutation-128-a489f3853.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/mutation-128-a489f3853.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The biology definition of mutations is: 
&lt;em&gt;“In genetics, mutation may be small scale (affecting a gene) or large scale (involving a change in the chromosome). It may arise from faulty deletions, insertions, or exchanges of the genetic material. Such a change may result in the creation of a new character or trait.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This biological process is one of the process responsible for I am able to write this tutorial and you be able read it. Without mutation, our species might have been found an local optima and perhaps we would never have evolved into what we are now.&lt;/p&gt;

&lt;p&gt;The mutation operator has the same purpose in genetic algorithm, it avoid that our GA get stuck in optima local and end up never finding a better solution.&lt;/p&gt;

&lt;p&gt;Like the other operators, you can create your own mutation implementing the &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Mutations/src/GeneticSharp.Domain/Mutations/IMutation.cs&quot;&gt;IMutation&lt;/a&gt; interface or extending &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Mutations/src/GeneticSharp.Domain/Mutations/MutationBase.cs&quot;&gt;MutationBase&lt;/a&gt; or use some from the GeneticSharp menu: &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Mutations/src/GeneticSharp.Domain/Mutations/FlipBitMutation.cs&quot;&gt;Flip-bit&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Mutations/src/GeneticSharp.Domain/Mutations/ReverseSequenceMutation.cs&quot;&gt;Reverse Sequence (RSM)&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Mutations/src/GeneticSharp.Domain/Mutations/TworsMutation.cs&quot;&gt;Twors&lt;/a&gt; and &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Mutations/src/GeneticSharp.Domain/Mutations/UniformMutation.cs&quot;&gt;Uniform&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=CreatingTheMutation.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;Flip-bit mutation is a mutation specific to chromosomes that implement &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Chromosomes/IBinaryChromosome.cs&quot;&gt;IBinaryChromosome&lt;/a&gt; interface, as our FloatingPointChromosome does. It will randomly chose a gene and flip it bit, so a gene with value 0 will turn to 1 and vice-versa.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-termination&quot;&gt;Creating the termination&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/end-128-2cdd65c40.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/end-128-2cdd65c40.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/end-128-2cdd65c40.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;A termination decide when a GA should be stopped. GeneticSharp use the generation number termination with just one generation as default termination. This mean that the genetic algoritm will run just one generation when you call the Start method, after this you can increment the expected generation number of the termination and call the method Resume how many times you want.&lt;/p&gt;

&lt;p&gt;There are cases where you want to call the Start method in just wait until some condition be reached, this why termination exist.&lt;/p&gt;

&lt;p&gt;If you have some special condition to terminate your GA you can implement the &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Terminations/src/GeneticSharp.Domain/Terminations/ITermination.cs&quot;&gt;ITermination&lt;/a&gt; interface or extend the &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Terminations/src/GeneticSharp.Domain/Terminations/TerminationBase.cs&quot;&gt;TerminationBase&lt;/a&gt; class, but for most of cases you just need to use some of the availables terminations: &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Terminations/src/GeneticSharp.Domain/Terminations/GenerationNu&quot;&gt;Generation number&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Terminations/src/GeneticSharp.Domain/Terminations/TimeEvolvingTermination.cs&quot;&gt;Time evolving&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Terminations/src/GeneticSharp.Domain/Terminations/FitnessStagnationTermination.cs&quot;&gt;Fitness stagnation&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Terminations/src/GeneticSharp.Domain/Terminations/FitnessThresholdTermination.cs&quot;&gt;Fitness threshold&lt;/a&gt;, &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Terminations/src/GeneticSharp.Domain/Terminations/AndTermination.cs&quot;&gt;And&lt;/a&gt; e &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Terminations/src/GeneticSharp.Domain/Terminations/OrTermination.cs&quot;&gt;Or&lt;/a&gt; (allows combine others terminations).&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=CreatingTheTermination.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;In our tutorial we will use the fitness stagnation termination with a expected stagnant generations number of 100, this mean that if our GA generate the same best chromsome fitness in the last 100 generations then it will be terminated.&lt;/p&gt;

&lt;h2 id=&quot;running-the-ga&quot;&gt;Running the GA&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/running-128-bc0b48bec.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/running-128-bc0b48bec.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/running-128-bc0b48bec.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now that everything is set up, we just need to instantiate and start our genetic algorithm and watch it run.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=RunningtheGA1.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;So the GA ran, but where is the result? You can always get the best chromosome from the GeneticAlgorithm.BestChromosome property.&lt;/p&gt;

&lt;p&gt;Another and better way to monitor the current best chromosome is use the GeneticAlgorithm.GenerationRan event. This event is raised right after a generation finish to run. Using this event you can see in 
realtime how the genetic algorithm is evolving.&lt;/p&gt;

&lt;p&gt;Let’s replace our last “ga.Start();” line to the code below:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=RunningtheGA2.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;Now if your run the program you will see an output like that:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Generation  1: (178,330),(974,228) = 802.508566932466
Generation  2: (950,487),(45,520) = 905.601457596
Generation  3: (935,103),(38,617) = 1033.83025686038
Generation  4: (998,680),(49,65) = 1130.85189127489
Generation  8: (998,680),(57,1) = 1160.39734573981
Generation  9: (998,680),(49,1) = 1166.89416829462
Generation 11: (998,680),(17,19) = 1182.91250733095
Generation 12: (998,680),(25,3) = 1185.35142468384
Generation 14: (998,680),(17,3) = 1191.92701118819
Generation 16: (998,680),(17,1) = 1193.06412233375
Generation 17: (998,680),(16,1) = 1193.88651051932
Generation 23: (998,680),(0,1) = 1207.08119030991
Generation 32: (998,680),(0,0) = 1207.6439872744
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If we plot these generations the output image will be like this:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-200-d0df984ce.webp 200w, /assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-400-d0df984ce.webp 400w, /assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-800-d0df984ce.webp 800w, /assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-983-d0df984ce.webp 983w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-200-d0df984ce.png 200w, /assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-400-d0df984ce.png 400w, /assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-800-d0df984ce.png 800w, /assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-983-d0df984ce.png 983w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-800-d0df984ce.png&quot; alt=&quot;post image&quot; width=&quot;983&quot; height=&quot;677&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;We can see that in the first generations (black lines) the genetic algorithm as some intermediate results and at the end (red line) &lt;strong&gt;it found the best possible solution: a diagonal.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;complete-source-code&quot;&gt;Complete source code&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/programmer-128-6cef95d36.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/programmer-128-6cef95d36.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/programmer-128-6cef95d36.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;When you finish the tutorial your source code will be this one:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=CompleteSourceCode.cs&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/conclusion-128-875fc7bbb.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/conclusion-128-875fc7bbb.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/conclusion-128-875fc7bbb.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In this tutorial we learn how genetic algoritm works and how to use GeneticSharp to solve a very simple sample. Now you can try it to solve more complex problems.&lt;/p&gt;

&lt;p&gt;Let’s evolve!
&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot; title=&quot;Freepik&quot;&gt;Freepik&lt;/a&gt; and &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot; title=&quot;Vignesh Oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot; title=&quot;Flaticon&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot; title=&quot;Creative Commons BY 3.0&quot; target=&quot;_blank&quot;&gt;CC 3.0 BY&lt;/a&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>GeneticSharp v1.1.0 - Binary chromosomes</title>
   <link href="//GeneticSharp-v1.1.0-binary-chromosomes/"/>
   <updated>2017-06-11T00:00:00-03:00</updated>
   <id>//GeneticSharp-v1.1.0-binary-chromosomes</id>
   <content type="html">&lt;p&gt;The &lt;strong&gt;&lt;a href=&quot;https://github.com/giacomelli/GeneticSharp&quot;&gt;GeneticSharp v1.1.0&lt;/a&gt;&lt;/strong&gt; is out. The greatest additions of this version are the binary chromosomes: &lt;strong&gt;FloatingPointChromosome and IntegerChromosome.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Binary chromosomes can be directly used when your solution chromosome can be represented as numbers or a string representation of 0 and 1.&lt;/p&gt;

&lt;p&gt;A new sample has been added to the GeneticSharp.Runner.GtkApp, this sample called “Function optimization” show the FloatingPointChromsome in action:&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/Q62tGjEDsYM &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;p&gt;Besides these new chromosomes, there is a new mutation: FlipBit, a special mutation to IBinaryChromosome that takes the chosen gene and inverts the bits.&lt;/p&gt;

&lt;p&gt;If you want to use the new chromosomes in your project, just get the new GeneticSharp version from Nuget.&lt;/p&gt;

&lt;p&gt;In the next days I will post a tutorial showing how to optimize a very simple function using GeneticSharp and the new FloatingPointChromosome.&lt;/p&gt;

&lt;p&gt;Let’s evolve!
&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot; title=&quot;Freepik&quot;&gt;Freepik&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot; title=&quot;Flaticon&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot; title=&quot;Creative Commons BY 3.0&quot; target=&quot;_blank&quot;&gt;CC 3.0 BY&lt;/a&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Buildron 2.0.0</title>
   <link href="//buildron.2.0.0/"/>
   <updated>2016-09-24T00:00:00-03:00</updated>
   <id>//buildron.2.0.0</id>
   <content type="html">&lt;p&gt;After some months to test the &lt;a href=&quot;https://github.com/skahal/Buildron/releases/tag/v2.0.0-RC1&quot;&gt;v2.0.0-RC1&lt;/a&gt; we are releasing the final version of &lt;a href=&quot;https://github.com/skahal/Buildron/&quot;&gt;Buildron&lt;/a&gt; mods support with this &lt;a href=&quot;https://github.com/skahal/Buildron/releases/tag/v2.0.0&quot;&gt;2.0.0 version&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mods supports represents a great change in Buildron code structure, because we built a mods support that allow any developer add his own mods to Buildron.&lt;/p&gt;

&lt;h2 id=&quot;mods-available&quot;&gt;Mods available&lt;/h2&gt;
&lt;p&gt;The classic visual and behavior that you already know at Buildron was moved to mods, you can see them at &lt;a href=&quot;https://github.com/skahal/Buildron-Classic-Mods&quot;&gt;Buildron Classic Mods repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Right now we have 9 mods developed to Buildron:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/giacomelli/Buildron-ConsoleMod/releases&quot;&gt;ConsoleMod&lt;/a&gt;: adds a console window to Buildron and let you monitor his events.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Classic Mods
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/skahal/Buildron-Classic-Mods&quot;&gt;BuildMod&lt;/a&gt;: represents each build as part of totem.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/skahal/Buildron-Classic-Mods&quot;&gt;CameraMod&lt;/a&gt;: auto position of camera to show all builds and users.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/skahal/Buildron-Classic-Mods&quot;&gt;EasterEggMod&lt;/a&gt;: surprise.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/skahal/Buildron-Classic-Mods&quot;&gt;EnvironmentMod&lt;/a&gt;: the classic Tron style floor.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/skahal/Buildron-Classic-Mods&quot;&gt;SoundMod&lt;/a&gt;: the classic explosion sounds and allow change the sounds for each user.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/skahal/Buildron-Classic-Mods&quot;&gt;UserMod&lt;/a&gt;: each user is represented by a robot and an avatar.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/giacomelli/Buildron.SlackBotMod/releases&quot;&gt;SlackBotMod&lt;/a&gt;: adds a bot to your Slack that acts as Buildron and your team can interact with it, like filter builds, sort builds, move camera, receive build status change notifications and taking screenshots.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/skahal/Buildron-Mod-Samples&quot;&gt;ToastyMod&lt;/a&gt;: the Mortal Kombat “Toasty!” easter egg that can be configured to show on build success, running or failed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;developing-new-mods&quot;&gt;Developing new mods&lt;/h2&gt;
&lt;p&gt;Do you want to develop your own mod to Buildron? Take a look on our wiki pages about mods and start to build your mod now:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/skahal/buildron/wiki/mods-introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/starting-a-buildron-mod-with-a-mod-template/&quot;&gt;Starting a Buildron mod with a mod template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/skahal/buildron/wiki/mods-getting-started&quot;&gt;Getting started&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/skahal/buildron/wiki/mods-ModSdk&quot;&gt;ModSdk&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/skahal/buildron/wiki/mods-tutorial-creating-a-mod&quot;&gt;Tutorial “Creating a mod”&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2016/08/28/buildron.2.0.0-rc1-mods-support/BuildronBuildMod.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;BuildMod running inside Buildron.ModSdk simulator&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>Buildron SlackBotMod</title>
   <link href="//buildron-slackbotmod/"/>
   <updated>2016-09-22T00:00:00-03:00</updated>
   <id>//buildron-slackbotmod</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/skahal/buildron&quot;&gt;Buildron&lt;/a&gt; is a build radiator to help software development teams to see the current status of their continous integration server and &lt;a href=&quot;https://slack.com/&quot;&gt;Slack&lt;/a&gt; is the omnipresent communication app for almost every developer in the world.&lt;/p&gt;

&lt;p&gt;For these reasons, I made a mod called &lt;a href=&quot;https://github.com/giacomelli/Buildron.SlackBotMod&quot;&gt;Buildron.SlackBotMod&lt;/a&gt; that let you interact with Buildron through the Slack.&lt;/p&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2016/09/22/buildron-slackbotmod/Buildron.SlackBotMod-2016-09-18.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;
&lt;p&gt;Currently Buildron SlackBotMod has the follow features:&lt;/p&gt;

&lt;h3 id=&quot;status-changed-notifications&quot;&gt;Status changed notifications&lt;/h3&gt;
&lt;p&gt;Your team can be notified by Buildron about builds status changed. In the mod preferences you can choose what status you want to receive notifications (running|succes|failed).&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-build-status-change-notifications-200-0e248dd25.webp 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-build-status-change-notifications-400-0e248dd25.webp 400w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-build-status-change-notifications-450-0e248dd25.webp 450w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-build-status-change-notifications-200-0e248dd25.png 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-build-status-change-notifications-400-0e248dd25.png 400w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-build-status-change-notifications-450-0e248dd25.png 450w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-build-status-change-notifications-450-0e248dd25.png&quot; alt=&quot;post image&quot; width=&quot;450&quot; height=&quot;106&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;filter-builds&quot;&gt;Filter builds&lt;/h3&gt;
&lt;p&gt;Filter buils by status or text.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-filter-by-200-2de211b94.webp 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-filter-by-400-2de211b94.webp 400w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-filter-by-565-2de211b94.webp 565w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-filter-by-200-2de211b94.png 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-filter-by-400-2de211b94.png 400w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-filter-by-565-2de211b94.png 565w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-filter-by-565-2de211b94.png&quot; alt=&quot;post image&quot; width=&quot;565&quot; height=&quot;186&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;reset-filter&quot;&gt;Reset filter&lt;/h3&gt;
&lt;p&gt;Reset previous builds filter (no filter).&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-filter-200-220e5013f.webp 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-filter-248-220e5013f.webp 248w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-filter-200-220e5013f.png 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-filter-248-220e5013f.png 248w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-filter-248-220e5013f.png&quot; alt=&quot;post image&quot; width=&quot;248&quot; height=&quot;102&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;sort-builds&quot;&gt;Sort builds&lt;/h3&gt;
&lt;p&gt;Sort buils by status, text or date.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-sort-by-200-b97f5d2a2.webp 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-sort-by-218-b97f5d2a2.webp 218w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-sort-by-200-b97f5d2a2.png 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-sort-by-218-b97f5d2a2.png 218w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-sort-by-218-b97f5d2a2.png&quot; alt=&quot;post image&quot; width=&quot;218&quot; height=&quot;95&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;move-camera&quot;&gt;Move camera&lt;/h3&gt;
&lt;p&gt;Move the camera the amount of pixels define in the x,y,z coordinates.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-move-camera-200-3cb740d22.webp 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-move-camera-256-3cb740d22.webp 256w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-move-camera-200-3cb740d22.png 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-move-camera-256-3cb740d22.png 256w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-move-camera-256-3cb740d22.png&quot; alt=&quot;post image&quot; width=&quot;256&quot; height=&quot;95&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;reset-camera&quot;&gt;Reset camera&lt;/h3&gt;
&lt;p&gt;Reset the camera position.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-camera-200-dee0bb971.webp 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-camera-213-dee0bb971.webp 213w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-camera-200-dee0bb971.png 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-camera-213-dee0bb971.png 213w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-camera-213-dee0bb971.png&quot; alt=&quot;post image&quot; width=&quot;213&quot; height=&quot;97&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;take-a-screenshot&quot;&gt;Take a screenshot&lt;/h3&gt;
&lt;p&gt;Take a screenshot of current Buildron state.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-take-screenshot-200-ddc5d66d5.webp 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-take-screenshot-400-ddc5d66d5.webp 400w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-take-screenshot-418-ddc5d66d5.webp 418w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-take-screenshot-200-ddc5d66d5.png 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-take-screenshot-400-ddc5d66d5.png 400w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-take-screenshot-418-ddc5d66d5.png 418w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-take-screenshot-418-ddc5d66d5.png&quot; alt=&quot;post image&quot; width=&quot;418&quot; height=&quot;424&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;If you are not using Buildron yet, &lt;a href=&quot;https://github.com/skahal/buildron&quot;&gt;give it a try&lt;/a&gt;.
If you are already using Buildron and Slack, try my &lt;a href=&quot;https://github.com/giacomelli/Buildron.SlackBotMod&quot;&gt;Buildron.SlackBotMod&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sending a Slackbot message from Unity3d</title>
   <link href="//sending-a-slackbot-message-from-unity3d/"/>
   <updated>2016-09-17T00:00:00-03:00</updated>
   <id>//sending-a-slackbot-message-from-unity3d</id>
   <content type="html">&lt;p&gt;I was looking for a way to send a message to a Slack channel using the Slackbot API.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This is a pretty easy task to perform in C#, because there are some great client libraries implementations to the Slack API, like: &lt;a href=&quot;https://github.com/Inumedia/SlackAPI&quot;&gt;SlackApi&lt;/a&gt;, &lt;a href=&quot;https://github.com/jammerware/margiebot&quot;&gt;MargieBot&lt;/a&gt; and &lt;a href=&quot;https://github.com/noobot/SlackConnector&quot;&gt;SlackConnector&lt;/a&gt;. However, in the Unity3d world the story is a little different, because Unity3d uses an older .NET version and those mentioned client libraries are implemented using newer .NET framework versions that are incompatible with Unity3d.&lt;/p&gt;

&lt;p&gt;I could have tried to compile those client libraries projects using a older .NET version, what I really tried to do, but almost all are using things like Task and async, that are really not supported by Unity3d .NET version right now.&lt;/p&gt;

&lt;p&gt;Then I decided to try a very raw solution using the Unity3d WWWForm and it worked well, very simple, but can be useful to someone. The result is the code bellow:&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-200-c91ea3bd8.webp 200w, /assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-400-c91ea3bd8.webp 400w, /assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-611-c91ea3bd8.webp 611w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-200-c91ea3bd8.png 200w, /assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-400-c91ea3bd8.png 400w, /assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-611-c91ea3bd8.png 611w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-611-c91ea3bd8.png&quot; alt=&quot;post image&quot; width=&quot;611&quot; height=&quot;119&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;botcontroller&quot;&gt;BotController&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/1c8e405116e1b48a7d25dec9b36edbea.js&quot;&gt; &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>Creating a ConsoleMod to Buildron</title>
   <link href="//creating-a-consolemod-to-buildron/"/>
   <updated>2016-09-15T00:00:00-03:00</updated>
   <id>//creating-a-consolemod-to-buildron</id>
   <content type="html">&lt;p&gt;In this post we’ll create a mod that adds a console window to Buildron and let you monitor its events. Our ConsoleMod will have 2 classes: ModController and Mod.&lt;/p&gt;

&lt;h2 id=&quot;modcontroller-class&quot;&gt;ModController class&lt;/h2&gt;
&lt;p&gt;ModController class will be a MonoBehaviour responsible to showing to the user a window where the Buildron events will be logged. It’s a very simple Unity3d MonoBehaviour that use some GUILayout stuffs to build its UI.&lt;/p&gt;

&lt;h2 id=&quot;mod-class&quot;&gt;Mod class&lt;/h2&gt;
&lt;p&gt;Mod class is the basic class for every Buildron mod and it will be responsible to creating the ModController GameObject and attach to listen a lot of the Buildron events.&lt;/p&gt;

&lt;h2 id=&quot;download-buildron-mod-template&quot;&gt;Download Buildron-Mod-Template&lt;/h2&gt;
&lt;p&gt;Go to Buildron &lt;a href=&quot;https://github.com/skahal/Buildron/releases&quot;&gt;release page&lt;/a&gt; and download Buildron-Mod-Template.zip&lt;/p&gt;

&lt;h2 id=&quot;create-your-mod-solution&quot;&gt;Create your mod solution&lt;/h2&gt;
&lt;p&gt;Unzip the Buildron-Mod-Template.zip.&lt;/p&gt;

&lt;p&gt;Open a prompt/terminal and go to the folder of unzip Buildron-Mod-Template.&lt;/p&gt;

&lt;p&gt;Type:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jumpstart.exe &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; ConsoleMod
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you are using jumpstart in Mac/Linux, remember to call it with “mono “ prefix.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A folder called ConsoleMod should be created. Open the src/Code/ConsoleMod.sln.&lt;/p&gt;

&lt;h2 id=&quot;creating-modcontroller-class&quot;&gt;Creating ModController class&lt;/h2&gt;
&lt;p&gt;Delete the sample file BoxController.cs&lt;/p&gt;

&lt;p&gt;Create a new class called ModController and add the code below to it:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ModController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MonoBehaviour&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;region&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fields&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rect&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_windowRect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_msgs&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endregion&lt;/span&gt;

   &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;region&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Constructors&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ModController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;m_title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Console mod (v.{0})&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;With&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endregion&lt;/span&gt;

   &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;region&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Methods&lt;/span&gt;    
   &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;/// Adds the message to the console window.&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;param name=&quot;message&quot;&amp;gt;The message.&amp;lt;/param&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;param name=&quot;args&quot;&amp;gt;The arguments.&amp;lt;/param&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AddMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formattedMessage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;With&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;m_msgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;[{0:HH:mm:ss}] {1}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;With&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formattedMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_msgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;m_msgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;RemoveAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnGUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;GUILayout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_windowRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HandleWindowFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GUILayout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;MinWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GUILayout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;MinHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HandleWindowFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;GUILayout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;BeginVertical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_msgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;GUILayout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;GUILayout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;EndVertical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endregion&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;creating-the-mod-class&quot;&gt;Creating the Mod class&lt;/h2&gt;
&lt;p&gt;Replace the content of Mod.cs with the code below:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Buildron.Domain.Mods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;UnityEngine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ConsoleMod&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;/// Responsible to create the ModController GameObject and attach to listen a lot of the Buildron events.&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Mod&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IMod&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;/// Initialize the mod with the context.&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;/// &amp;lt;param name=&quot;context&quot;&amp;gt;The mod context.&amp;lt;/param&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IModContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CreateModController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;nf&quot;&gt;ListenEvents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;            
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModController&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CreateModController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		    	&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GameObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ConsoleController&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		    	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ModController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ListenEvents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IModContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModController&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildFound&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				        &lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Build found: {0}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

			    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildRemoved&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Build removed: {0}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

			    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildsRefreshed&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Build refreshed: {0} builds found, {1} builds removed, {2} builds status changed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildsFound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildsRemoved&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildsStatusChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

			    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildStatusChanged&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Build status changed: {0}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

			    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildTriggeredByChanged&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Build triggered by changed: {0}/{1}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TriggeredBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

			    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildUpdated&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Build updated: {0}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

			    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CIServerStatusChanged&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CI server status changed: {0}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

			    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RemoteControlChanged&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;RC changed: {0}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RemoteControl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

			    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserAuthenticationCompleted&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;User authentication completed: {0}:{1}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Success&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;success&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;failed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

			    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserFound&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;User found: {0}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

			    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserRemoved&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;User remoed: {0}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

			    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserTriggeredBuild&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;User triggered build: {0}/{1}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

			    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserUpdated&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;User updated: {0}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Compile the project.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;testing-on-mod-simulator&quot;&gt;Testing on mod simulator&lt;/h2&gt;
&lt;p&gt;Open the project src/Unity/ConsoleMod inside Unity3d editor.&lt;/p&gt;

&lt;p&gt;Open SimulatorScene.&lt;/p&gt;

&lt;p&gt;Hit the “Play” button.&lt;/p&gt;

&lt;p&gt;You should see a scene like this:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-opened-200-b1f078f34.webp 200w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-opened-400-b1f078f34.webp 400w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-opened-722-b1f078f34.webp 722w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-opened-200-b1f078f34.png 200w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-opened-400-b1f078f34.png 400w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-opened-722-b1f078f34.png 722w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-opened-722-b1f078f34.png&quot; alt=&quot;post image&quot; width=&quot;722&quot; height=&quot;467&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In the menu “Buildron”, click on “Show Simulator”.&lt;/p&gt;

&lt;p&gt;Click on “BuildFound”, “BuildStatusChanged” and “BuildRemoved” buttons, you should see these events been registered on ConsoledMod window.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-events-registered-200-4fd87f6f7.webp 200w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-events-registered-400-4fd87f6f7.webp 400w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-events-registered-421-4fd87f6f7.webp 421w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-events-registered-200-4fd87f6f7.png 200w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-events-registered-400-4fd87f6f7.png 400w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-events-registered-421-4fd87f6f7.png 421w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-events-registered-421-4fd87f6f7.png&quot; alt=&quot;post image&quot; width=&quot;421&quot; height=&quot;111&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Hit the “Play” button again to stop playing the scene.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There are two folders inside your Unity3d project called “Materials” and “Prefabs”. They are created from Buildron-Mod-Template, but ConsoleMod don’t need them. You can remove them.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;building-the-mod&quot;&gt;Building the mod&lt;/h2&gt;
&lt;p&gt;ConsoleMod has no Unity3d assets, in this case you don’t need to use the menu “Buildron / BuildMod”, you just need to compile your project inside your IDE, as we did on section “Creating the Mod class” to get your mod inside Buildron.&lt;/p&gt;

&lt;h2 id=&quot;testing-on-buildron&quot;&gt;Testing on Buildron&lt;/h2&gt;
&lt;p&gt;Go to folder ConsoleMod/build and open the Buildron of your platform.&lt;/p&gt;

&lt;p&gt;Hit the play button on Buildron.&lt;/p&gt;

&lt;p&gt;You should see the ConsoleMod window registering a lot of Buildron events.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-Buildron-200-7a03018c3.webp 200w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-Buildron-400-7a03018c3.webp 400w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-Buildron-639-7a03018c3.webp 639w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-Buildron-200-7a03018c3.png 200w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-Buildron-400-7a03018c3.png 400w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-Buildron-639-7a03018c3.png 639w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-Buildron-639-7a03018c3.png&quot; alt=&quot;post image&quot; width=&quot;639&quot; height=&quot;478&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;That’s it! We created a Buildron mod that can help to debug what is happening in Buildron and mods in runtime.&lt;/p&gt;

&lt;p&gt;So, why you don’t try to &lt;strong&gt;create your own Buildron mod now&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;You can see the full source code of this post on &lt;a href=&quot;https://github.com/giacomelli/Buildron-ConsoleMod&quot;&gt;https://github.com/giacomelli/Buildron-ConsoledMod&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>jumpstart</title>
   <link href="//jumpstart/"/>
   <updated>2016-09-12T00:00:00-03:00</updated>
   <id>//jumpstart</id>
   <content type="html">&lt;p&gt;I present to you my newest tool…&lt;/p&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2016/09/12/jumpstart/jumpstart-convention-sample.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/giacomelli/jumpstart&quot;&gt;jumpstart&lt;/a&gt; is a command-line tool to create new C# projects from prebuilt/templates.&lt;/p&gt;

&lt;p&gt;As an experienced developers it’s very common we have some kind of template solution when we start a new project. Maybe it’s the latest project we work on, maybe it’s a very good template we used every time to bootstrap a specific kind of project.&lt;/p&gt;

&lt;p&gt;I created &lt;a href=&quot;https://github.com/giacomelli/jumpstart&quot;&gt;jumpstart&lt;/a&gt; to simplify the process of create the new project based on those templates or prebuilt solutions.&lt;/p&gt;

&lt;p&gt;The idea of the tool was born a long time ago and became a little stronger every time that I had to create a new solution and all the projects by hand, but when I saw the message bellow in the &lt;a href=&quot;http://xamarin.com/prebuilt&quot;&gt;http://xamarin.com/prebuilt&lt;/a&gt; page I decided to finally write the tool… and the name was very clear, almost.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-200-ef756f97b.webp 200w, /assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-400-ef756f97b.webp 400w, /assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-800-ef756f97b.webp 800w, /assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-1057-ef756f97b.webp 1057w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-200-ef756f97b.png 200w, /assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-400-ef756f97b.png 400w, /assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-800-ef756f97b.png 800w, /assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-1057-ef756f97b.png 1057w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-800-ef756f97b.png&quot; alt=&quot;post image&quot; width=&quot;1057&quot; height=&quot;74&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The first name that I thought to the tool was prebuilt, but later, my friend &lt;a href=&quot;https://twitter.com/giusepe&quot;&gt;Giusepe Casagrande&lt;/a&gt; convinced me that jumpstart was really better name… and he was right!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;how-does-it-work&quot;&gt;How does it work?&lt;/h2&gt;
&lt;p&gt;jumpstart is very simple, it get a folder with a template solution and copy it to a new folder replacing the root namespace of the template to the new project namespace.&lt;/p&gt;

&lt;p&gt;A template folder like this:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jumpstart-template/MyClass.cs
jumpstart-template/Properties
jumpstart-template/Properties/AssemblyInfo.cs
jumpstart-template/JumpStartTemplate.csproj
JumpStartTemplate.sln
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With this command:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jumpstart &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; My.Amazing.NewProject
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Will become:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;My.Amazing.NewProject/MyClass.cs
My.Amazing.NewProject/Properties
My.Amazing.NewProject/Properties/AssemblyInfo.cs
My.Amazing.NewProject/My.Amazing.NewProject.csproj
My.Amazing.NewProject.sln
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;The MyClass.cs, AssemblyInfo.cs, My.Amazing.NewProject.csproj and My.Amazing.NewProject.sln contents was updated by jumpstart to use the namespace My.Amazing.NewProject.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;using-it&quot;&gt;Using it&lt;/h2&gt;
&lt;p&gt;Download it from the &lt;a href=&quot;https://github.com/giacomelli/jumpstart/releases&quot;&gt;releases page&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;available-options&quot;&gt;Available options:&lt;/h3&gt;
&lt;p&gt;To see all available options.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jumpstart.exe &lt;span class=&quot;nt&quot;&gt;-help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you are using jumpstart in Mac/Linux, remember to call it with “mono “ prefix.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;basic-using-conventions&quot;&gt;Basic (using conventions)&lt;/h3&gt;
&lt;p&gt;If your template folder is called “jumpstart-template” and its namespace is JumpStartTemplate, the only argument you need to pass to jumpstart is -n(namespace).&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jumpstart &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; My.Amazing.NewProject
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;The “jumpstart-template” folder should be in the same folder where you are calling jumpstart.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;advanced-specifying-template-folder-and-namespace&quot;&gt;Advanced (specifying template folder and namespace)&lt;/h3&gt;
&lt;p&gt;For example, your template folder is “my-template” and your template namespace is “My.Template”, in this case you should call jumpstart in this way:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jumpstart &lt;span class=&quot;nt&quot;&gt;-tf&lt;/span&gt; my-template &lt;span class=&quot;nt&quot;&gt;-tn&lt;/span&gt; My.Template &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; My.Amazing.NewProject
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;advanced-using-a-remote-zip-template&quot;&gt;Advanced (using a remote .zip template)&lt;/h3&gt;
&lt;p&gt;You can use a remote .zip file as your template folder. For example, if you want to start a new project with any of those prebuilt apps that Xamarin make available on &lt;a href=&quot;http://xamarin.com/prebuilt&quot;&gt;http://xamarin.com/prebuilt&lt;/a&gt;, you can use the command bellow to jumpstart your new project using those templates:&lt;/p&gt;

&lt;h5 id=&quot;jumpstart-xamarin-sport-prebuilt-app&quot;&gt;jumpstart Xamarin Sport prebuilt app&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jumpstart &lt;span class=&quot;nt&quot;&gt;-tf&lt;/span&gt; https://github.com/xamarin/sport/archive/master.zip &lt;span class=&quot;nt&quot;&gt;-tn&lt;/span&gt; Sport.Mobile &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; My.Sport.Mobile 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I hope you can use jumpstart in your next project bootstrap. &lt;a href=&quot;https://github.com/giacomelli/jumpstart/releases&quot;&gt;Download&lt;/a&gt; and use it.&lt;/p&gt;

&lt;p&gt;If you want to colaborate, take a look on its &lt;a href=&quot;https://github.com/giacomelli/jumpstart&quot;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Starting a Buildron mod with a mod template</title>
   <link href="//starting-a-buildron-mod-with-a-mod-template/"/>
   <updated>2016-09-04T00:00:00-03:00</updated>
   <id>//starting-a-buildron-mod-with-a-mod-template</id>
   <content type="html">&lt;p&gt;In this post I will show how to start building a mod to Buildron using a mod template.&lt;/p&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulation.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;download&quot;&gt;Download&lt;/h2&gt;
&lt;p&gt;Download the Buildron-Mod-Template.zip from &lt;a href=&quot;https://github.com/skahal/Buildron/releases&quot;&gt;releases page&lt;/a&gt;.
Unzip it in any folder.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-solution&quot;&gt;Creating the solution&lt;/h2&gt;
&lt;p&gt;Open a prompt (win) or a terminal (linux/mac).&lt;/p&gt;

&lt;p&gt;Go to the folder where you unzip Buildron-Mod-Template.zip.&lt;/p&gt;

&lt;p&gt;Type:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jumpstart-exe &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &amp;lt;the name of your mod&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you are in Linux/Mac andfix commands with “mono “.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example, if your mod name is “MyAmazingMod”, you should type:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jumpstart.exe &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; MyAmazingMod
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://github.com/giacomelli/jumpstart&quot;&gt;jumpstart&lt;/a&gt; is a tool that I made to help create solutions from pre built templates. I will talk about of it in an future post.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateJumpstart-200-5cb3e86ea.webp 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateJumpstart-400-5cb3e86ea.webp 400w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateJumpstart-497-5cb3e86ea.webp 497w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateJumpstart-200-5cb3e86ea.png 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateJumpstart-400-5cb3e86ea.png 400w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateJumpstart-497-5cb3e86ea.png 497w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateJumpstart-497-5cb3e86ea.png&quot; alt=&quot;post image&quot; width=&quot;497&quot; height=&quot;126&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;After jumpstart is done you will see a new folder called MyAmazingMod, inside of it there are the following folders:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;build: full Buildron executable with the classic mods to all platforms (linux, mac and win).&lt;/li&gt;
  &lt;li&gt;src
    &lt;ul&gt;
      &lt;li&gt;Code: the C# class library of your mod&lt;/li&gt;
      &lt;li&gt;Unity: the Unity3d project of your mod.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateFolders-200-65576a7d2.webp 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateFolders-261-65576a7d2.webp 261w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateFolders-200-65576a7d2.png 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateFolders-261-65576a7d2.png 261w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateFolders-261-65576a7d2.png&quot; alt=&quot;post image&quot; width=&quot;261&quot; height=&quot;406&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-c-project&quot;&gt;The C# project&lt;/h2&gt;
&lt;p&gt;Open the MyAmazingMod/src/Code/MyAmazingMod.sln.&lt;/p&gt;

&lt;p&gt;Select the configuration of your platform.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplatePlatformConfiguration-200-77d13f09f.webp 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplatePlatformConfiguration-334-77d13f09f.webp 334w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplatePlatformConfiguration-200-77d13f09f.png 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplatePlatformConfiguration-334-77d13f09f.png 334w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplatePlatformConfiguration-334-77d13f09f.png&quot; alt=&quot;post image&quot; width=&quot;334&quot; height=&quot;237&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Inside of it you can see the Mod.cs and ModController.cs.&lt;/p&gt;

&lt;p&gt;Compile the whole solution.&lt;/p&gt;

&lt;h2 id=&quot;the-unity3d-project&quot;&gt;The Unity3d project&lt;/h2&gt;
&lt;p&gt;Open the MyAmazingMod/src/Unity/MyAmazingMod on Unity3d.&lt;/p&gt;

&lt;p&gt;Open the scene Assets/SimulatorScene and click on play button.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulatorScene-200-f286a3e11.webp 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulatorScene-298-f286a3e11.webp 298w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulatorScene-200-f286a3e11.png 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulatorScene-298-f286a3e11.png 298w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulatorScene-298-f286a3e11.png&quot; alt=&quot;post image&quot; width=&quot;298&quot; height=&quot;236&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Click on the menu “Buildron/Show Simulator”.&lt;/p&gt;

&lt;p&gt;In the simulator click on button “BuildStatusChanged”.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulator-200-74879a55e.webp 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulator-400-74879a55e.webp 400w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulator-640-74879a55e.webp 640w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulator-200-74879a55e.png 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulator-400-74879a55e.png 400w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulator-640-74879a55e.png 640w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulator-640-74879a55e.png&quot; alt=&quot;post image&quot; width=&quot;640&quot; height=&quot;493&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You will see a box falling down every time you hit the button. This behavior is made by Mod.cs and ModController.cs on C# project. If you are curious about it, take a look on the classes implementations.&lt;/p&gt;

&lt;h2 id=&quot;testing-on-buildron&quot;&gt;Testing on Buildron&lt;/h2&gt;
&lt;p&gt;In the Unity3d editor click on menu “Buildron / Build mod”.&lt;/p&gt;

&lt;p&gt;Select your platform: Mac, Linux or Windows.&lt;/p&gt;

&lt;p&gt;Type your Buildron mods folder:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Linux: ../../../build/linux/Mods&lt;/li&gt;
  &lt;li&gt;Mac: ../../../build/mac/Buildron.app/Mods&lt;/li&gt;
  &lt;li&gt;Win: ../../../build/win/Mods&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Click on “Build” button.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildMod-200-ab89078f5.webp 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildMod-400-ab89078f5.webp 400w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildMod-641-ab89078f5.webp 641w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildMod-200-ab89078f5.png 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildMod-400-ab89078f5.png 400w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildMod-641-ab89078f5.png 641w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildMod-641-ab89078f5.png&quot; alt=&quot;post image&quot; width=&quot;641&quot; height=&quot;362&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Go to folder MyAmazingMod/build and open the Buildron of your platform.&lt;/p&gt;

&lt;p&gt;Hit the play button on Buildron.&lt;/p&gt;

&lt;p&gt;You should see the same falling down box that you see on simulator falling down inside Buildron every time a build changed status.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildronTest-200-34474df72.webp 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildronTest-400-34474df72.webp 400w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildronTest-639-34474df72.webp 639w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildronTest-200-34474df72.png 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildronTest-400-34474df72.png 400w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildronTest-639-34474df72.png 639w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildronTest-639-34474df72.png&quot; alt=&quot;post image&quot; width=&quot;639&quot; height=&quot;501&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;With this post you learned how you can starting to create your own mod from mod template.&lt;/p&gt;

&lt;p&gt;If you want to build more sofisticated mods, please take a look on our tutorial &lt;a href=&quot;https://github.com/skahal/buildron/wiki/mods-tutorial-creating-a-mod&quot;&gt;“Creating a mod”&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Buildron 2.0.0-RC1 - Mods support</title>
   <link href="//buildron.2.0.0-rc1-mods-support/"/>
   <updated>2016-08-28T00:00:00-03:00</updated>
   <id>//buildron.2.0.0-rc1-mods-support</id>
   <content type="html">&lt;p&gt;After some months of hard work I finally released the Buildron mods support.&lt;/p&gt;

&lt;p&gt;This &lt;a href=&quot;https://github.com/skahal/Buildron/releases/tag/v2.0.0-RC1&quot;&gt;Buildron 2.0.0-RC1&lt;/a&gt; represents a great change in Buildron code structure, because we built a mods support that allow any developer add his own mods to Buildron.&lt;/p&gt;

&lt;p&gt;Hope to see you building some mods to Buildron. We’re curious about what crazy mods ideas you could have ;).&lt;/p&gt;

&lt;p&gt;We really appreciate your opinion about the mods support, &lt;a href=&quot;https://github.com/skahal/Buildron/wiki/Mods-introduction&quot;&gt;documentation&lt;/a&gt;, &lt;a href=&quot;https://github.com/skahal/Buildron/wiki/Mods-tutorial-creating-a-mod&quot;&gt;tutorial&lt;/a&gt; and &lt;a href=&quot;https://github.com/skahal/Buildron/wiki/Mods-ModSdk&quot;&gt;ModSdk&lt;/a&gt;. Please, get in touch at &lt;a href=&quot;http://twitter.com/ogiacomelli&quot;&gt;@ogiacomelli&lt;/a&gt;.&lt;/p&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2016/08/28/buildron.2.0.0-rc1-mods-support/BuildronBuildMod.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;BuildMod running inside Buildron.ModSdk simulator&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;mods&quot;&gt;Mods&lt;/h3&gt;
&lt;p&gt;The classic visual and behavior that you already know at Buildron was moved to mods too, you can see them at &lt;a href=&quot;http://github.com/skahal/Buildron-Classic-Mods&quot;&gt;Buildron Classic Mods&lt;/a&gt; repository.&lt;/p&gt;

&lt;p&gt;The full list of mods is available here: &lt;a href=&quot;https://github.com/skahal/Buildron/wiki/Mods-Mods-list&quot;&gt;Mods list&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;i-wanna-build-a-mod&quot;&gt;I wanna build a mod&lt;/h3&gt;
&lt;p&gt;If you want to build a mod, take a look on this &lt;a href=&quot;https://github.com/skahal/Buildron/wiki/mods-getting-started&quot;&gt;Getting started&lt;/a&gt; and this &lt;a href=&quot;https://github.com/skahal/Buildron/wiki/mods-tutorial-creating-a-mod&quot;&gt;Tutorial creating a mod&lt;/a&gt; that teach how build Buildron’s mod.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Buildron - Your builds, our world! ...and now our open source code too</title>
   <link href="//buildron-your-builds-our-world-and-now-our-open-source-code-too/"/>
   <updated>2016-06-02T00:00:00-03:00</updated>
   <id>//buildron-your-builds-our-world-and-now-our-open-source-code-too</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://github.com/skahal/buildron&quot;&gt;Buildron&lt;/a&gt; is a build radiator to continuous integration server like TeamCity, Jenkins and Hudson.&lt;/p&gt;

&lt;p&gt;We’ve built it as a &lt;a href=&quot;http://skahal.com&quot;&gt;Skahal’s&lt;/a&gt; product and now we decide to &lt;strong&gt;open source it: &lt;a href=&quot;http://github.com/skahal/buildron&quot;&gt;http://github.com/skahal/buildron&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can run it on Windows, OSX and Linux: &lt;a href=&quot;https://github.com/skahal/Buildron/releases&quot;&gt;https://github.com/skahal/Buildron/releases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is a remote control app too (Windows, OSX, Linux, iOS and Android), where you can sort and filter builds, among other things: &lt;a href=&quot;https://github.com/skahal/Buildron-rc/releases&quot;&gt;https://github.com/skahal/Buildron-rc/releases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Give it a try:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/sEghUYUvTHg &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

</content>
 </entry>
 
 <entry>
   <title>Using a FxCop badge on your GitHub repository</title>
   <link href="//using-a-fxcop-badge-on-your-github-repository/"/>
   <updated>2015-10-26T00:00:00-02:00</updated>
   <id>//using-a-fxcop-badge-on-your-github-repository</id>
   <content type="html">&lt;p&gt;The use of badges on GitHub repositories helps us to promote good pratices about our code. Some amazing services like the &lt;a href=&quot;http://shields.io&quot;&gt;Shileds.io&lt;/a&gt; can generate almost all badges you can imagine, but what about those badges where there is no such online service to perform this job? One common case is when you program with C# and want some FxCop badge but there is no online service to run FxCop.&lt;/p&gt;

&lt;h3 id=&quot;badgessharp&quot;&gt;BadgesSharp&lt;/h3&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2015/10/26/using-a-fxcop-badge-on-your-github-repository/FxCopBadge-200-92805d6b2.webp 200w, /assets/images/generated/assets/2015/10/26/using-a-fxcop-badge-on-your-github-repository/FxCopBadge-400-92805d6b2.webp 400w, /assets/images/generated/assets/2015/10/26/using-a-fxcop-badge-on-your-github-repository/FxCopBadge-700-92805d6b2.webp 700w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2015/10/26/using-a-fxcop-badge-on-your-github-repository/FxCopBadge-200-92805d6b2.png 200w, /assets/images/generated/assets/2015/10/26/using-a-fxcop-badge-on-your-github-repository/FxCopBadge-400-92805d6b2.png 400w, /assets/images/generated/assets/2015/10/26/using-a-fxcop-badge-on-your-github-repository/FxCopBadge-700-92805d6b2.png 700w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2015/10/26/using-a-fxcop-badge-on-your-github-repository/FxCopBadge-700-92805d6b2.png&quot; alt=&quot;post image&quot; width=&quot;700&quot; height=&quot;101&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;To fill this gap I created the BadgesSharp service: &lt;a href=&quot;http://badgessharp.apphb.com&quot;&gt;http://badgessharp.apphb.com&lt;/a&gt;. BadgesSharp is a free service to generate badges that need some kind of input and processing before you can display them on GitHub repositories.&lt;/p&gt;

&lt;p&gt;In the case of FxCop, we need to run it against our .NET code and send the result report to BadgesSharp and then the service will generate the FxCop badge.&lt;/p&gt;

&lt;p&gt;Here is a small tutorial on how to get the FxCop badge in your GitHub repo:&amp;lt;/p&amp;gt;&lt;/p&gt;

&lt;h3 id=&quot;install-fxcop&quot;&gt;Install FxCop&lt;/h3&gt;
&lt;p&gt;If you don’t have it yet, &lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=6544&quot;&gt;download&lt;/a&gt; and install FxCop.&lt;/p&gt;

&lt;h3 id=&quot;run-fxcop&quot;&gt;Run FxCop&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;C:\Program Files (x86)\Microsoft Fxcop 10.0\FxCopCmd.exe&quot; /project:[Your FxCop file].FxCop /out:fxcop-report.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The report will be saved to fxcop-report.xml&lt;/p&gt;

&lt;h3 id=&quot;generate-fxcop-badge&quot;&gt;Generate FxCop badge&lt;/h3&gt;
&lt;p&gt;Download &lt;a href=&quot;https://github.com/giacomelli/BadgesSharp/releases&quot;&gt;BadgesSharpCmd&lt;/a&gt; and run it:&amp;lt;/p&amp;gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;BadgesSharpCmd -o [your GitHub username] -r [your GitHub repository] -a %GITHUB_REPO_TOKEN% -b FxCop -c fxcop-report.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note: you will need a GitHub personal token: &lt;a href=&quot;https://github.com/settings/tokens&quot;&gt;https://github.com/settings/tokens&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;More info at:&lt;a href=&quot;https://badgessharp.apphb.com/Docs/GettingStarted&quot;&gt;https://badgessharp.apphb.com/Docs/GettingStarted&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;show-the-badge-at-your-github-repository&quot;&gt;Show the badge at your GitHub repository&lt;/h3&gt;
&lt;p&gt;Edit your readme.md and add the line below:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![FxCop](https://badgessharp.apphb.com/badges/:owner/:repo/FxCop)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;how-use-it-on-your-continuous-integration&quot;&gt;How use it on your Continuous Integration?&lt;/h3&gt;
&lt;p&gt;Probably you’re using some continuous integration service, below are some samples:&lt;/p&gt;

&lt;h4 id=&quot;appveyor&quot;&gt;AppVeyor&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Add to your AppVeyor.yml file:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;after_build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;rogram&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Files&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(x86)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Microsoft&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Fxcop&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;FxCopCmd.exe&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/project:[Your FxCop file].FxCop /out:fxcop-report.xml&lt;/span&gt;

        &lt;span class=&quot;s&quot;&gt;BadgesSharpCmd -o [your GitHub username] -r [your GitHub repository] -a %GITHUB_REPO_TOKEN% -b FxCop -c fxcop-report.xml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;teamcity&quot;&gt;TeamCity&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Add the ‘FxCop’ step to your configuration (probably you already have it);&lt;/li&gt;
  &lt;li&gt;Add a final ‘Command Line’ step to your configuration:
    &lt;ul&gt;
      &lt;li&gt;Execute step: Even if some of the previous steps failed&lt;/li&gt;
      &lt;li&gt;Run: Custom script
Custom script:&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;BadgesSharpCmd -o [your GitHub username] -r [your GitHub repository] -a %GITHUB_REPO_TOKEN% -b FxCop -c &quot;%system.teamcity.build.tempDir%\fxcop-output-*\fxcop-result.xml&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;That’s it! Now you have a FxCop badge to show on your GitHub repository.&lt;/p&gt;

&lt;p&gt;BadgesSharp support others badges too: StyleCop, DupFinder and Plato.&lt;/p&gt;

&lt;p&gt;If you like it, take a look on GitHub repository: &lt;a href=&quot;https://github.com/giacomelli/BadgesSharp&quot;&gt;https://github.com/giacomelli/BadgesSharp&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Getting your code documentation at runtime</title>
   <link href="//getting-your-code-documentation-at-runtime/"/>
   <updated>2014-08-03T00:00:00-03:00</updated>
   <id>//getting-your-code-documentation-at-runtime</id>
   <content type="html">&lt;p&gt;In some situations, like generate a live console for a web api or generate code using T4 template we need a way to read the code documentation at runtime.&lt;/p&gt;

&lt;p&gt;Some time ago I’ve faced that situation again and I thought: &lt;em&gt;“Should be an easy way to read this code documentation!”&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;After some googled I found a code from Jim Blackler that allowed developers read C# code documentation at runtime, but at that time the code was just a downloadable .zip in Jim’s blog. I asked him if I could put the source code on GitHub to allow better code improvements and community collaboration, he said: “Please go ahead with your plan”.&lt;/p&gt;

&lt;p&gt;So, I created the project at GitHub, &lt;strong&gt;DocsByReflection&lt;/strong&gt;: &lt;a href=&quot;https://github.com/giacomelli/DocsByReflection&quot;&gt;https://github.com/giacomelli/DocsByReflection&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;docsbyreflection&quot;&gt;DocsByReflection&lt;/h3&gt;
&lt;p&gt;With DocsByReflection you can easy get your code documentation at runtime in many ways, like:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// From type.&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;typeDoc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DocsService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetXmlFromType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Stub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// From property.&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propertyInfo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Stub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PropertyWithDoc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propertyDoc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DocsService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetXmlFromMember&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propertyInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// From method.&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodInfo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Stub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MethodWithGenericParameter&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodDoc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DocsService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetXmlFromMember&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;methodInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// From assembly.&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assemblyDoc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DocsService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetXmlFromAssembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Stub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you want colaborate, just &lt;a href=&quot;https://github.com/giacomelli/DocsByReflection/fork&quot;&gt;fork it at GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;nuget&quot;&gt;Nuget&lt;/h4&gt;
&lt;p&gt;If you want just use it, there is a NuGet package with latest binaries version:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Install-Package DocsByReflection
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Improving your debug with DebuggerDisplay</title>
   <link href="//improving-your-debug-with-debuggerdisplay/"/>
   <updated>2014-07-14T00:00:00-03:00</updated>
   <id>//improving-your-debug-with-debuggerdisplay</id>
   <content type="html">&lt;p&gt;There is an amazing and easy to use custom attribute on .NET Framework stack that I rarely see in use. It helps and improve the way you can debug your code and you just need a line of code to use it: &lt;strong&gt;DebuggerDisplay&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Maybe you’ve used it a lot and already love it, in this case just spread the word ;), but if you are a beginner or an experienced .NET developer and don’t know DebuggerDisplay, this is the chance to you to improve your debug skills.&lt;/p&gt;

&lt;h3 id=&quot;imagine-this-scenario&quot;&gt;Imagine this scenario:&lt;/h3&gt;
&lt;p&gt;We have a class called Tweet:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Tweet&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RetweetsCount&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FavoritesCount&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You are debugging a list of Tweets, let me say 200 tweets, and all tweets in the debugger view looks like the image below:&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/NoDebuggerDisplay-139-3a9bad96a.webp 139w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/NoDebuggerDisplay-139-3a9bad96a.png 139w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/NoDebuggerDisplay-139-3a9bad96a.png&quot; alt=&quot;post image&quot; width=&quot;139&quot; height=&quot;163&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;It’s clear that is not easy to know what tweets are inside that list. Of course you can use breakpoint conditions, trace, logs and many others resources to help the debug process, but DebuggerDisplay is an easier and very cheap solution.&lt;/p&gt;

&lt;p&gt;In our scenario, the most important things about the Tweet class are the text, the username and the retweets count. We’ll add the DebuggerDisplay attribute to the class:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;DebuggerDisplay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{Text} ({User.UserName}) - RTs: {RetweetCount}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Tweet&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RetweetsCount&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FavoritesCount&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Now, that “secret” tweet list looks like:&lt;/strong&gt;&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-200-02058a557.webp 200w, /assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-400-02058a557.webp 400w, /assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-800-02058a557.webp 800w, /assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-840-02058a557.webp 840w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-200-02058a557.png 200w, /assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-400-02058a557.png 400w, /assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-800-02058a557.png 800w, /assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-840-02058a557.png 840w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-800-02058a557.png&quot; alt=&quot;post image&quot; width=&quot;840&quot; height=&quot;52&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/whenDebugIsEasyThanExpected.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;When debugging is easier than expected&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;More information about DebuggerDisplay on official documentation: &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms228992(v=vs.110).aspx&quot;&gt;msdn.microsoft.com/en-us/library/ms228992(v=vs.110).aspx&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Why we should avoid DateTime.UtcNow inside a Linq to Entities query?</title>
   <link href="//why-we-should-avoid-datetime-utcnow-inside-a-linq-to-entities-query/"/>
   <updated>2014-05-12T00:00:00-03:00</updated>
   <id>//why-we-should-avoid-datetime-utcnow-inside-a-linq-to-entities-query</id>
   <content type="html">&lt;p&gt;Why we should avoid &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DateTime.UtcNow&lt;/code&gt; inside a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Linq to Entities&lt;/code&gt; query?&lt;/p&gt;

&lt;p&gt;Because we can get unexpected results!&lt;br /&gt;
After read this tip, will be expected results 😉&lt;/p&gt;

&lt;h2 id=&quot;what-is-the-diference-between-these-two-linq-queries&quot;&gt;What is the diference between these two Linq queries?&lt;/h2&gt;

&lt;h4 id=&quot;query-1&quot;&gt;Query 1&lt;/h4&gt;
&lt;script src=&quot;https://gist.github.com/9a3a88fac354f3af8294381b30552ade.js?file=sample1.cs&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;query-2&quot;&gt;Query 2&lt;/h4&gt;
&lt;script src=&quot;https://gist.github.com/9a3a88fac354f3af8294381b30552ade.js?file=sample2.cs&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;sql-generated&quot;&gt;SQL generated&lt;/h4&gt;
&lt;p&gt;The first one will generate a SQL with WHERE clause like this:
&lt;script src=&quot;https://gist.github.com/9a3a88fac354f3af8294381b30552ade.js?file=sample3.cs&quot;&gt; &lt;/script&gt;
Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@p__linq__1&lt;/code&gt; is the value of our filterDate variable.&lt;/p&gt;

&lt;p&gt;The second one will generate this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; clause:
&lt;script src=&quot;https://gist.github.com/9a3a88fac354f3af8294381b30552ade.js?file=sample4.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-is-the-problem&quot;&gt;What is the problem?&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/problem-128-a3f91d933.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/problem-128-a3f91d933.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/problem-128-a3f91d933.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;Imagine that we’re using the second query inside some sync algorithm in our C# code, this algorithm is very sensitive about time, now imagine that the server where our C# code is running has a difference about seconds or minutes with the database server?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;YES, UNEXPECTED RESULTS!&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;Linq to Entities is very smart and it is able to translate our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DateTime.Now&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DateTime.UtcNow&lt;/code&gt; to a matching command on database side.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;The important here is: we should remember that it can do this and we should use features like these with parsimony.&lt;/p&gt;
&lt;/div&gt;

&lt;script&gt;
        $(document).ready(function() {
          $('.gist-meta').remove();
        });
      &lt;/script&gt;

</content>
 </entry>
 
</feed>