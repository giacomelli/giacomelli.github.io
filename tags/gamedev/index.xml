<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>Diego Giacomelli - gamedev</title>
 <link href="//tags/gamedev/index.xml" rel="self"/>
 <link href="/tag/gamedev.html"/>
 <updated>2022-07-09T10:36:55-03:00</updated>
 <id>/tag/gamedev.html</id>
 <author>
   <name>Diego Giacomelli</name>
 </author>
 
 <entry>
   <title>NO MORE ROOM IN HELL released</title>
   <link href="//no-more-room-in-hell-released/"/>
   <updated>2022-06-14T00:00:00-03:00</updated>
   <id>//no-more-room-in-hell-released</id>
   <content type="html">&lt;p&gt;On June 14th I released my newest solo game called “NO MORE ROOM IN HELL”.&lt;/p&gt;

&lt;p&gt;You can download it for Windows, MacOS, Linux or play directly on browser from its itch.io page: &lt;a href=&quot;https://giacomelli.itch.io/no-more-room-in-hell&quot;&gt;https://giacomelli.itch.io/no-more-room-in-hell&lt;/a&gt;.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe class=&quot;itchio-iframe&quot; frameborder=&quot;0&quot; src=&quot;https://itch.io/embed/1573240 &quot;&gt;         
        &lt;/iframe&gt;
       &lt;/center&gt;

&lt;h2 id=&quot;what-is-it&quot;&gt;What is it?&lt;/h2&gt;
&lt;p&gt;A 2D top-down survival shooter game where you will be a rookie soldier in a secret government lab when a zombie apocalypse starts out of blue and now you need to find your way to the docks for a chance to be with your wife and son again.&lt;/p&gt;

&lt;center&gt;&lt;video width=&quot;640&quot; autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot;&gt;
          &lt;source src=&quot;/assets/2022/06/14/no-more-room-in-hell-released/digging-your-way-out.mp4 &quot; type=&quot;video/mp4&quot; /&gt;
          Your browser does not support the video tag.
       &lt;/video&gt;&lt;/center&gt;

&lt;h2 id=&quot;game-development&quot;&gt;Game development&lt;/h2&gt;
&lt;p&gt;I started this side project game development in early 2021, but stopped and restarted again now and then while doing other things.
The whole programming and Unity game development was made only by me.&lt;/p&gt;

&lt;p&gt;I took a lot of features I wanted in this type of game and implemented them, like inventory management, lots of weapons, missions, and a backstory that you can try to discover as you play the game.&lt;/p&gt;

&lt;p&gt;There are 7 weapons available: gun, double gun, shotgun, grenade launcher, mine launcher, ice caster and mine. Well, you can also drive a car and kill a lot of zombies while driving, so maybe there are 8 weapons available.&lt;/p&gt;

&lt;p&gt;Another cool thing I developed for the game is that a lot of the environment can be blown up and destroyed, I used &lt;a href=&quot;https://www.youtube.com/watch?v=oKX5uiaXG0s&amp;amp;list= PLxgDXMPVF8JrqhM6v01wtUwPpMBDqdZn_&quot;&gt;my destructible sprite library&lt;/a&gt; for that.&lt;/p&gt;

&lt;p&gt;I organized the game as a series, so the first 4 levels available are like the 4 episodes of season 1.&lt;/p&gt;

&lt;h2 id=&quot;credits&quot;&gt;Credits&lt;/h2&gt;

&lt;h4 id=&quot;sprites&quot;&gt;Sprites&lt;/h4&gt;
&lt;p&gt;Almost all sprites used in the game are from &lt;a href=&quot;https://kenney.nl/&quot;&gt;Kenney&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;soundtrack&quot;&gt;Soundtrack&lt;/h4&gt;
&lt;p&gt;The incredible soundtracks used in the game were created by Daniel HDR, a comic book artist, working on projects for DC Comics (Green Lantern Corps, Superman, Nightwing, Legion of Super-Heroes), Marvel Comics (Avengers, X-Men Forever, Falcon and Winter Soldier) and Dynamite Entertainment (The Shadow, Red Sonja, Kiss) Winner of the Dragon Awards as 2020’s “BEST GRAPHIC NOVEL” with Battlestar Galactica: Counterstrike.&lt;/p&gt;

&lt;p&gt;Daniel HDR also has a sound side project called &lt;a href=&quot;https://open.spotify.com/artist/4i6kwo29VbAMwFIlkMOwSL&quot;&gt;D3FCON1&lt;/a&gt;. I had discovered D3FCON1 during the game’s development and thought that some of their music matched the mood of the game perfectly.&lt;/p&gt;

&lt;p&gt;Daniel was very kind to give me permission to use the music in the game, as well as providing an art to be used as the cover of the game (as you can see at the top of this post)&lt;/p&gt;

&lt;h4 id=&quot;sound-fx&quot;&gt;Sound FX&lt;/h4&gt;
&lt;p&gt;The sound fx are from &lt;a href=&quot;https://www.gamemasteraudio.com&quot;&gt;Peter Wayne&lt;/a&gt; and his amazing sound effects packages on Unity Asset Store, called &lt;a href=&quot;https://assetstore.unity.com/publishers/16891&quot;&gt;Pro Sound Collection&lt;/a&gt;&lt;/p&gt;

&lt;center&gt;
        &lt;iframe class=&quot;itchio-iframe&quot; frameborder=&quot;0&quot; src=&quot;https://itch.io/embed/1573240 &quot;&gt;         
        &lt;/iframe&gt;
       &lt;/center&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/QKbeli5Jn0I &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;
</content>
 </entry>
 
 <entry>
   <title>Puzzimals on itch.io</title>
   <link href="//puzzimals-on-itch-io/"/>
   <updated>2022-01-20T00:00:00-03:00</updated>
   <id>//puzzimals-on-itch-io</id>
   <content type="html">&lt;p&gt;Now you can play my game &lt;a href=&quot;/games/puzzimals&quot;&gt;Puzzimals&lt;/a&gt; directly in the browser through itch.io: &lt;a href=&quot;https://giacomelli.itch.io/puzzimals&quot;&gt;https://giacomelli.itch.io/puzzimals&lt;/a&gt;&lt;/p&gt;

&lt;center&gt;
        &lt;iframe class=&quot;itchio-iframe&quot; frameborder=&quot;0&quot; src=&quot;https://itch.io/embed/1361011 &quot;&gt;         
        &lt;/iframe&gt;
       &lt;/center&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/AKhcDVZgUAA &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;what-is-puzzimals&quot;&gt;What is Puzzimals?&lt;/h2&gt;

&lt;p&gt;Don’t let the cute look or super fun animations fool you, Puzzimals is a cube-matching game challenging you to match identical tiles in 100 levels of thought-provoking puzzles in a world map.&lt;/p&gt;

&lt;p&gt;Packed with features and creative puzzles you can combine cubes of ice, wild cards, bombs and so much more!&lt;/p&gt;

&lt;p&gt;Each level unlocks and increases in difficulty and offers an almost infinite number of combos.&lt;/p&gt;

&lt;p&gt;Fans of casual puzzle games will enjoy the crisp, colorful graphics featuring cute animals and the compelling music offers great relaxation.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity 2020.2&colon; What's new</title>
   <link href="//unity-2020-2-whats/"/>
   <updated>2020-12-16T00:00:00-03:00</updated>
   <id>//unity-2020-2-whats</id>
   <content type="html">&lt;h2 id=&quot;unity-20202&quot;&gt;Unity 2020.2&lt;/h2&gt;
&lt;p&gt;The Unity 2020.2 was official release on &lt;a href=&quot;https://blogs.unity3d.com/2020/12/15/unity-2020-2-tech-stream-is-now-available-for-download/&quot;&gt;December 15, 2020&lt;/a&gt; with a lot of fixes, API changes, changes, improvements and features.
You can find the new features directly on the Unity manual accessing this search: &lt;a href=&quot;https://docs.unity3d.com/2020.2/Documentation/Manual/30_search.html?q=newin20202&quot;&gt;newin20202&lt;/a&gt;.
To read all items, access the complete &lt;a href=&quot;https://unity3d.com/unity/whats-new/2020.2.0&quot;&gt;release notes&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;stats&quot;&gt;Stats&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Fixes: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;828&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;API Changes: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;128&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Changes: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;86&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Improvements: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;261&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Features: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;66&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/4r2thboZ_xY &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;my-feature-highlights&quot;&gt;My feature highlights&lt;/h2&gt;
&lt;p&gt;Below are the features that most caught my attention and that I believe can positively impact my development workflow.&lt;/p&gt;

&lt;h3 id=&quot;reorder-arrays-and-lists-in-the-inspector&quot;&gt;Reorder Arrays and Lists in the Inspector&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Arrays and Lists are now reorderable in the Inspector, and you can use the attribute [NonReorderable] to disable this function if you prefer&lt;/p&gt;
&lt;/blockquote&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/wYc1uevu73Q &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h3 id=&quot;root-namespace-in-asmdef-inspector&quot;&gt;Root namespace in asmdef inspector&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Root Namespace is now available as a new field in the asmdef inspector.
The Root Namespace will be used to add the namespace when creating scripts in Unity and in Visual Studio and Rider.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/XTsy45o1OnE &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h3 id=&quot;c-80-support&quot;&gt;C# 8.0 support&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Supports all the newest C# 8 features and enhancements, except for default interface methods.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2020/12/16/unity-2020-2-whats/unitytips-tuple-patterns.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;p&gt;You can learn more about C# 8 features in &lt;a href=&quot;/tags/csharp-8-new-features&quot;&gt;this posts&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;roslyn-analyzers-support&quot;&gt;Roslyn analyzers support&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;The compilation pipeline now supports Roslyn analyzers. This enables you to run C# code analyzers asynchronously in the background inside the Unity Editor without interrupting your iteration workflow. You can also run them synchronously from the command line.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Roslyn analyzers and ruleset files in Unity projects are powerful tools to help inspect your code for style, quality, and other issues. You can use existing analyzer libraries to inspect your code and write your own analyzers to promote the best practices or conventions within your organization.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/hbHyArijG3M &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h3 id=&quot;quick-search-20&quot;&gt;Quick Search 2.0&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Unity Quick Search is a handy package that enables you to search for anything in Unity. Quick Search 2.0 is now available and comes with more search tokens and the ability to provide contextual completion when typing queries. Scene searching is no longer limited to just the open Scene, but instead, it’s now possible to search through all the Scenes and Prefabs of your project at once.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/5xGLXxsm7QM &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h3 id=&quot;roslyn-reference-assemblies&quot;&gt;Roslyn Reference Assemblies&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Enables the Roslyn Reference Assemblies option by default when compiling C# scripts in the Editor, avoiding unnecessary recompiling of asmdef references. If you make changes that don’t involve code – for example, to materials, shaders or prefabs – the IL2CPP conversion from .NET assemblies to C++ will now be skipped entirely when building a player.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;These were the features that brought my attention to Unity 2020.2.&lt;br /&gt;
What were the features that caught your attention?&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>ARC-8&colon; devlog &num;4 - CHIP-8 inside Unity Inspector</title>
   <link href="//arc-8-devlog-4/"/>
   <updated>2020-11-11T00:00:00-03:00</updated>
   <id>//arc-8-devlog-4</id>
   <content type="html">&lt;p&gt;Some years ago I coded a CHIP-8 emulator in C# just for fun, that emulator was hibernating in a private repository that I never released. Some days ago I started to working on it again with the idea to release it running on Blazor and as a Unity asset where any game developer could drag its prefabs as easter eggs directly to their games.&lt;/p&gt;

&lt;p&gt;In this post, I will talk about how I put a &lt;strong&gt;CHIP-8 emulator to run inside the Unity Editor Inspector Window&lt;/strong&gt;.&lt;/p&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2020/11/11/arc-8-devlog-4/arc-8-running-chip-8-emulator-inside-unity-inspector.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;

&lt;p&gt;To help to understand everything in this post I recommend you read the previous &lt;a href=&quot;/tags/arc8-devlog&quot;&gt;ARC-8 devlog posts&lt;/a&gt;, in special the &lt;a href=&quot;/arc-8-devlog-3&quot;&gt;last one&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;The source code is not yet published on GitHub, I will notify in this series of posts about ARC-8 devlog and on my &lt;a href=&quot;https://twitter.com/ogiacomelli&quot;&gt;Twitter&lt;/a&gt; too when this happens.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I wanted to run the graphics of the emulator inside the Unity Editor Inspector Window. Maybe, you can ask “why?”, well there is an inside joke among Unity developers where we try to play not expected things inside the inspector window, as you can see in the links below:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/DJ_Link/status/1134489432130818048&quot;&gt;https://twitter.com/DJ_Link/status/1134489432130818048&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/alexanderameye/status/1006916653777596416&quot;&gt;https://twitter.com/alexanderameye/status/1006916653777596416&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/DevdogUnity/status/1007563448174219265&quot;&gt;https://twitter.com/DevdogUnity/status/1007563448174219265&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;chip8loadereditorcs&quot;&gt;Chip8LoaderEditor.cs&lt;/h2&gt;
&lt;p&gt;This is a simplified version of the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Editor.html&quot;&gt;Editor&lt;/a&gt; script for &lt;a href=&quot;/arc-8-devlog-3&quot;&gt;Chip8Loader&lt;/a&gt;.
&lt;script src=&quot;https://gist.github.com/746f415fa4571dccd52008c4dc0c2b31.js?file=Chip8LoaderEditor.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h4 id=&quot;startemulator-and-stopemulator-methods&quot;&gt;StartEmulator and StopEmulator methods&lt;/h4&gt;
&lt;p&gt;In the method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;StartEmulator&lt;/code&gt; we start the emulation inside the Inspector Window.
After starting the emulator by calling the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Run&lt;/code&gt; method of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chip8Loader&lt;/code&gt; passing our local &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorChip8Input&lt;/code&gt; to override the emulator input to always use the keyboard.
We use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorCoroutineUtility.StartCoroutine&lt;/code&gt; method from the &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.editorcoroutines@0.0/manual/index.html&quot;&gt;Editor Coroutines package&lt;/a&gt; to start two coroutines for update and render emulator inside the editor.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;StopEmulator&lt;/code&gt; stops the emulation inside the Inspector Window using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorCoroutineUtility.StopCoroutine&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;updateemulator-and-renderemulator-methods&quot;&gt;UpdateEmulator and RenderEmulator methods&lt;/h4&gt;
&lt;p&gt;In the method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UpdateEmulator&lt;/code&gt; we call &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/MonoBehaviour.LateUpdate.html&quot;&gt;LateUpdate&lt;/a&gt; from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chip8Loader&lt;/code&gt; to run a emulation cycle.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RenderEmulator&lt;/code&gt; calls the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Editor.Repaint.html&quot;&gt;Repaint&lt;/a&gt; from Editor to redraw the inspector using the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Editor.OnInspectorGUI.html&quot;&gt;OnInspectorGUI&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;oninspectorgui-method&quot;&gt;OnInspectorGUI method&lt;/h4&gt;
&lt;p&gt;When the emulation is not running this method just draws the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chip8Loader&lt;/code&gt; inspector using the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Editor.DrawDefaultInspector.html&quot;&gt;DrawDefaultInspector&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When we click on the button &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Test emulator&lt;/code&gt; on the inspector, the emulation is activated and the emulation will be rendered on the inspector.&lt;/p&gt;

&lt;p&gt;When we use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GUI.BeginClip&lt;/code&gt; everything that we draw using the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/GL.html&quot;&gt;GL (Low-level graphics library)&lt;/a&gt; will be rendered inside the area passed as an argument to BeginClip. This is why we call &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Graphic.Render&lt;/code&gt; between the BeginClip and EndClip.&lt;/p&gt;

&lt;p&gt;In the last step, we read the input using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;input.ReadKeys&lt;/code&gt;.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/YMz62z3xlAo &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;next-step&quot;&gt;Next step&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;In the next &lt;a href=&quot;/tags/arc8-devlog&quot;&gt;ARC-8 devlog&lt;/a&gt; post I will probably talk about the release of the ARC-8 as an open-source project.&lt;/p&gt;

&lt;p&gt;If you have any doubts about what I talk about above or any tip about the CHIP-8 emulator (or Unity) and you like to share it, please let me know in the comments section below.&lt;/p&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;Further reading&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.unity.com/tutorial/editor-scripting&quot;&gt;Editor Scripting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/Manual/editor-CustomEditors.html&quot;&gt;Custom Editors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Editor.html&quot;&gt;Editor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.editorcoroutines@0.0/manual/index.html&quot;&gt;Editor Coroutines package&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/ScriptReference/MonoBehaviour.LateUpdate.html&quot;&gt;LateUpdate&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Editor.Repaint.html&quot;&gt;Repaint&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Editor.OnInspectorGUI.html&quot;&gt;OnInspectorGUI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Editor.DrawDefaultInspector.html&quot;&gt;DrawDefaultInspector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Gamedev Utility Belt&colon; Graphy</title>
   <link href="//gamedev-utility-belt-graphy/"/>
   <updated>2020-11-05T00:00:00-03:00</updated>
   <id>//gamedev-utility-belt-graphy</id>
   <content type="html">&lt;p&gt;I decided to start a &lt;a href=&quot;/tags/gamedev-utility-belt/&quot;&gt;series of posts&lt;/a&gt; about some game development resources that are part of my gamedev utility belt and that helps me on my game projects.&lt;/p&gt;

&lt;p&gt;For this second post, the chosen one is the &lt;strong&gt;&lt;a href=&quot;https://github.com/Tayx94/graphy&quot;&gt;Graphy&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&quot;https://twitter.com/martinTayx&quot;&gt;Martín Pane&lt;/a&gt; that I used in a lot of my Unity projects.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Graphy is:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;a feature packed FPS Counter, stats monitor and debugger&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My main use for it was to monitor the FPS of my mobile games, but Graphy has many other features:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;With this tool you will be able to visualize and catch when your game has some unexpected hiccup or stutter, and act accordingly!&lt;/p&gt;

  &lt;p&gt;The debugger allows you to set one or more conditions, that if met will have the consequences you desire, such as taking a screenshot, pausing the editor, printing a message to the console and more! Even call a method from your own code if you want!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;
&lt;p&gt;You can follow the instructions on the plugin GitHub repository: &lt;a href=&quot;https://github.com/Tayx94/graphy#installation&quot;&gt;https://github.com/Tayx94/graphy&lt;/a&gt; to install it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using the OpenUPM&lt;/li&gt;
  &lt;li&gt;Via Package Manager&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;Just drag the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[Graphy]&lt;/code&gt; prefab from folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assets/Taxy/Graphy - Ultimate Stats Monitor&lt;/code&gt; to your scene and Play the scene to see it in action.&lt;/p&gt;
&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2020/11/05/gamedev-utility-belt-graphy/graphy-puzzimals-sample.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
</content>
 </entry>
 
 <entry>
   <title>ARC-8&colon; devlog &num;3 - Unity</title>
   <link href="//arc-8-devlog-3/"/>
   <updated>2020-11-04T00:00:00-03:00</updated>
   <id>//arc-8-devlog-3</id>
   <content type="html">&lt;p&gt;Some years ago I coded a CHIP-8 emulator in C# just for fun, that emulator was hibernating in a private repository that I never released. Some days ago I started to working on it again with the idea to release it running on Blazor and as a Unity asset where any game developer could drag its prefabs as easter eggs directly to their games.&lt;/p&gt;

&lt;p&gt;In this post, I will talk about &lt;strong&gt;how I implemented the graphics, sound, input, and log systems for Unity 3D&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can read the other &lt;a href=&quot;/tags/arc8-devlog&quot;&gt;ARC-8’s devlog posts&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;The source code is not yet published on GitHub, I will notify in this series of posts about ARC-8 devlog and on my &lt;a href=&quot;https://twitter.com/ogiacomelli&quot;&gt;Twitter&lt;/a&gt; too when this happens.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;If you were out of the planet in the last decade, maybe you don’t know what is &lt;a href=&quot;https://unity.com&quot;&gt;Unity&lt;/a&gt;: Unity is a cross-platform game engine developed in C++, but the games made on it are developed using .NET and C#.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Unity is a cross-platform game engine developed by Unity Technologies, first announced and released in June 2005 at Apple Inc.’s Worldwide Developers Conference as a Mac OS X-exclusive game engine. As of 2018, the engine had been extended to support more than 25 platforms. The engine can be used to create three-dimensional, two-dimensional, virtual reality, and augmented reality games, as well as simulations and other experiences. The engine has been adopted by industries outside video gaming, such as film, automotive, architecture, engineering and construction.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In older versions, Unity only supported a subset of .NET Framework (4.x), but nowadays it’s supporting .NET Standard 2.0.
This is why we can use our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ARC-8 Core&lt;/code&gt;, mentioned in the &lt;a href=&quot;/arc-8-devlog-1&quot;&gt;first devlog&lt;/a&gt;, because it is a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.NET Standard class library&lt;/code&gt; and can run directly on Unity.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/jSR-pu0WqHY &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;The 3D models of the arcade cabinet and arcade room were created by my talented friend &lt;a href=&quot;https://twitter.com/giusepe/status/1324050160779956227&quot;&gt;Giusepe Casagrande&lt;/a&gt;.&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;systems-interfaces-implementations&quot;&gt;Systems interfaces implementations&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/component-128-1eb69a9dc.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/component-128-1eb69a9dc.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/component-128-1eb69a9dc.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;The system interfaces &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGraphic&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ISound&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IInput&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ILog&lt;/code&gt; will be implemented as &lt;a href=&quot;https://docs.unity3d.com/Manual/class-MonoBehaviour.html&quot;&gt;MonoBehaviour&lt;/a&gt;.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/arc-8-unity-components-186-6eee669de.webp 186w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/arc-8-unity-components-186-6eee669de.jpg 186w&quot; type=&quot;image/jpeg&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/arc-8-unity-components-186-6eee669de.jpg&quot; alt=&quot;post image&quot; width=&quot;186&quot; height=&quot;320&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;blockquote&gt;
  &lt;p&gt;The MonoBehaviour class is the base class from which every Unity script derives, by default. TPovides the framework which allows you to attach your script to a GameObject in the editor, as well as providing hooks into useful Events such as Start and Update.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;chip8graphiccs-monobehaviour-igraphic&quot;&gt;Chip8Graphic.cs MonoBehaviour (IGraphic)&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGraphic&lt;/code&gt; implementation.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-200-12d224ad6.webp 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-400-12d224ad6.webp 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-518-12d224ad6.webp 518w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-200-12d224ad6.png 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-400-12d224ad6.png 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-518-12d224ad6.png 518w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-518-12d224ad6.png&quot; alt=&quot;post image&quot; width=&quot;518&quot; height=&quot;130&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;script src=&quot;https://gist.github.com/560a0d0eda7762fc73ad0aa84f3d3ebb.js?file=Chip8Graphic.cs&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;intialize-method&quot;&gt;Intialize method&lt;/h4&gt;
&lt;p&gt;In the method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Initialize&lt;/code&gt; we verify if will render to the main camera or to a specific target camera, then we set some camera configuration, create the material we will use to render the CHIP-8 graphic, get the screen size, then we initialize our &lt;a href=&quot;https://gameprogrammingpatterns.com/double-buffer.html&quot;&gt;Double Buffer&lt;/a&gt; array.&lt;/p&gt;

&lt;p&gt;In most cases, we don’t use the main camera, but instead, use a target camera that uses a &lt;a href=&quot;https://docs.unity3d.com/Manual/class-RenderTexture.html&quot;&gt;RenderTexture&lt;/a&gt;, and then we can use that texture on any surface on our game, like a TV screen or an arcade cabinet.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Render Textures are special types of Textures that are created and updated at run time. To use them, you first create a new Render Texture and designate one of your Cameras to render into it. Then you can use the Render Texture in a Material just like a regular Texture.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;draw-method&quot;&gt;Draw method&lt;/h4&gt;
&lt;p&gt;This is one of the two methods that needed to be implemented of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGraphic&lt;/code&gt; interface. We received the array (64x32) of bytes representing the current state of CHIP-8 graphics and just update our local array variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_gfx&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;onrenderobject&quot;&gt;OnRenderObject&lt;/h4&gt;
&lt;p&gt;The method &lt;a href=&quot;https://docs.unity3d.com/2017.3/Documentation/ScriptReference/Camera.OnRenderObject.html&quot;&gt;OnRenderObject&lt;/a&gt; is called after the camera has rendered the scene.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;OnRenderObject can be used to render your own objects using Graphics.DrawMeshNow or other functions. This function is similar to OnPostRender, except OnRenderObject is called on any object that has a script with the function; no matter if it’s attached to a Camera or not.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;render-method&quot;&gt;Render method&lt;/h4&gt;
&lt;p&gt;The method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Render&lt;/code&gt; will be called by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OnRenderObject&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;This method is used to draw the state of CHIP-8 graphics (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_gfx&lt;/code&gt; array) to the current camera using the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/GL.html&quot;&gt;GL (Low-level graphics library)&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Use GL class to manipulate active transformation matrices, issue rendering commands similar to OpenGL’s immediate mode and do other low-level graphics tasks. GL immediate drawing functions use whatever is the “current material” set up right now (see Material.SetPass). The material controls how the rendering is done (blending, textures, etc.)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We use a second array called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_buffer&lt;/code&gt; to implement a &lt;a href=&quot;https://gameprogrammingpatterns.com/double-buffer.html&quot;&gt;Double Buffer&lt;/a&gt; and reduce the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;screen flickering&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;A byte with value 1 should be drawn (foreground color) and a byte with value 0 should not be drawn (background color).&lt;/p&gt;
&lt;/div&gt;

&lt;h4 id=&quot;invalidate-method&quot;&gt;Invalidate method&lt;/h4&gt;
&lt;p&gt;This is the second of the two methods needed to be implemented of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGraphic&lt;/code&gt; interface, but as we implemented a Double Buffer, this method does not need to perform any operation.&lt;/p&gt;

&lt;h4 id=&quot;setrendertexture-method&quot;&gt;SetRenderTexture method&lt;/h4&gt;
&lt;p&gt;It just set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RenderTexture&lt;/code&gt; of the current target camera.&lt;/p&gt;

&lt;h2 id=&quot;chip8soundcs-monobehaviour-isound&quot;&gt;Chip8Sound.cs MonoBehaviour (ISound)&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/sound-128-972082c3e.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/sound-128-972082c3e.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/sound-128-972082c3e.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ISound&lt;/code&gt; implementation.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-200-7b130dbfe.webp 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-400-7b130dbfe.webp 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-529-7b130dbfe.webp 529w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-200-7b130dbfe.png 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-400-7b130dbfe.png 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-529-7b130dbfe.png 529w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-529-7b130dbfe.png&quot; alt=&quot;post image&quot; width=&quot;529&quot; height=&quot;70&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;script src=&quot;https://gist.github.com/560a0d0eda7762fc73ad0aa84f3d3ebb.js?file=Chip8Sound.cs&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;awake-method&quot;&gt;Awake method&lt;/h4&gt;
&lt;p&gt;We just try to locate our &lt;a href=&quot;https://docs.unity3d.com/2019.3/Documentation/Manual/class-AudioSource.html&quot;&gt;AudioSource&lt;/a&gt; component that will be used to play the sound.&lt;/p&gt;

&lt;h4 id=&quot;play-method&quot;&gt;Play method&lt;/h4&gt;
&lt;p&gt;This is the only method we need to implement of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ISound&lt;/code&gt; interface and it just calls the AudioSource’s &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/AudioSource.PlayOneShot.html&quot;&gt;PlayOneShot&lt;/a&gt; using the &lt;a href=&quot;https://docs.unity3d.com/2019.3/Documentation/Manual/class-AudioClip.html&quot;&gt;AudioClip&lt;/a&gt; defined on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_beep&lt;/code&gt; field.&lt;/p&gt;

&lt;h2 id=&quot;keyboardchip8inputcs-monobehaviour-iinput&quot;&gt;KeyboardChip8Input.cs MonoBehaviour (IInput)&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/joystick-128-82c7ade06.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/joystick-128-82c7ade06.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/joystick-128-82c7ade06.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IInput&lt;/code&gt; implementation for the keyboard.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-200-5789d9288.webp 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-400-5789d9288.webp 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-527-5789d9288.webp 527w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-200-5789d9288.png 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-400-5789d9288.png 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-527-5789d9288.png 527w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-527-5789d9288.png&quot; alt=&quot;post image&quot; width=&quot;527&quot; height=&quot;53&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;script src=&quot;https://gist.github.com/560a0d0eda7762fc73ad0aa84f3d3ebb.js?file=KeyboardChip8Input.cs&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;key-mapping&quot;&gt;Key mapping&lt;/h4&gt;
&lt;p&gt;First, we create the dictionary &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_map&lt;/code&gt; to map the real keyboard keys to CHIP-8 keypad keys.&lt;/p&gt;

&lt;h4 id=&quot;updatekeys-method&quot;&gt;UpdateKeys method&lt;/h4&gt;
&lt;p&gt;The only method we need to implement for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IInput&lt;/code&gt; interface. 
In this method, we set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt; the CHIP-8’s keypad keys that were pressed by the player using the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Input.GetKey.html&quot;&gt;Input.GetKey&lt;/a&gt; method.&lt;/p&gt;

&lt;h2 id=&quot;chip8logcs-monobehaviour-ilog&quot;&gt;Chip8Log.cs MonoBehaviour (ILog)&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/logging-128-de6e1a017.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/logging-128-de6e1a017.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/logging-128-de6e1a017.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ILog&lt;/code&gt; implementation.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-200-9c411a016.webp 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-400-9c411a016.webp 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-521-9c411a016.webp 521w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-200-9c411a016.png 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-400-9c411a016.png 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-521-9c411a016.png 521w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-521-9c411a016.png&quot; alt=&quot;post image&quot; width=&quot;521&quot; height=&quot;62&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;script src=&quot;https://gist.github.com/560a0d0eda7762fc73ad0aa84f3d3ebb.js?file=Chip8Log.cs&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;debug-and-error-methods&quot;&gt;Debug and Error methods&lt;/h4&gt;
&lt;p&gt;The two methods implemented for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ILog&lt;/code&gt; interface use methods available on Unity &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Debug.html&quot;&gt;Debug&lt;/a&gt; class to send log messages to the &lt;a href=&quot;https://docs.unity3d.com/Manual/Console.html&quot;&gt;console window&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;chip8loadercs&quot;&gt;Chip8Loader.cs&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This is a simplified version of the component responsible to load all systems (IGraphic, ISound, IInput, and ILog), initialize the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chip8&lt;/code&gt; class emulator, and load the ROM.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-200-a9c0f3f99.webp 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-400-a9c0f3f99.webp 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-529-a9c0f3f99.webp 529w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-200-a9c0f3f99.png 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-400-a9c0f3f99.png 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-529-a9c0f3f99.png 529w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-529-a9c0f3f99.png&quot; alt=&quot;post image&quot; width=&quot;529&quot; height=&quot;191&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;script src=&quot;https://gist.github.com/560a0d0eda7762fc73ad0aa84f3d3ebb.js?file=Chip8Loader.cs&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;start-method&quot;&gt;Start method&lt;/h4&gt;
&lt;p&gt;Verifies if all the systems needed to run the emulator were configured in the editor, then &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Application-targetFrameRate.html&quot;&gt;sets the desired FPS&lt;/a&gt; and starts to run the emulator.&lt;/p&gt;

&lt;h4 id=&quot;run-and-restart-methods&quot;&gt;Run and Restart methods&lt;/h4&gt;
&lt;p&gt;These two methods have some overloads, but in the end, they will create a new instance of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Arc8.Chip8&lt;/code&gt; class using the systems defined and will load the ROM.&lt;/p&gt;

&lt;h4 id=&quot;lateupdate-method&quot;&gt;LateUpdate method&lt;/h4&gt;
&lt;p&gt;We use the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/MonoBehaviour.LateUpdate.html&quot;&gt;LateUpdate&lt;/a&gt; method from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MonoBehaviour&lt;/code&gt; to run the emulator &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EmulateCycle&lt;/code&gt; method.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;LateUpdate is called every frame after all Update functions have been called.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;next-step&quot;&gt;Next step&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;In the next &lt;a href=&quot;/tags/arc8-devlog&quot;&gt;ARC-8 devlog&lt;/a&gt; I will talk about how I put a &lt;a href=&quot;https://www.reddit.com/r/Unity3D/comments/ip507l/space_invaders_inside_the_unity_inspector_window/&quot;&gt;CHIP-8 emulator to run inside the Unity editor inspector window&lt;/a&gt;.&lt;/p&gt;
&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2020/11/04/arc-8-devlog-3/arc-8-running-chip-8-emulator-inside-unity-inspector.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;

&lt;p&gt;If you have any doubts about what I talk about above or any tip about the CHIP-8 emulator (or Unity) and you like to share it, please let me know in the comments section below.&lt;/p&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;Further reading&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://unity.com/learn/get-started&quot;&gt;Get started with Unity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/Manual/index.html&quot;&gt;Unity User Manual&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/Manual/class-MonoBehaviour.html&quot;&gt;MonoBehaviour&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gameprogrammingpatterns.com/double-buffer.html&quot;&gt;Double Buffer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/Manual/class-RenderTexture.html&quot;&gt;RenderTexture&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/2017.3/Documentation/ScriptReference/Camera.OnRenderObject.html&quot;&gt;OnRenderObject&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/ScriptReference/GL.html&quot;&gt;GL (Low-level graphics library)&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/2019.3/Documentation/Manual/class-AudioSource.html&quot;&gt;AudioSource&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/2019.3/Documentation/Manual/class-AudioClip.html&quot;&gt;AudioClip&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/Manual/class-InputManager.html&quot;&gt;Input Manager&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Debug.html&quot;&gt;Debug&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/Manual/Console.html&quot;&gt;Console Window&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Application-targetFrameRate.html&quot;&gt;TargetFrameRate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Scene Selection Toolbar</title>
   <link href="//unitytips-scene-selection-toolbar/"/>
   <updated>2020-11-03T00:00:00-03:00</updated>
   <id>//unitytips-scene-selection-toolbar</id>
   <content type="html">&lt;p&gt;Using &lt;a href=&quot;https://github.com/marijnz/unity-toolbar-extender&quot;&gt;Unity Toolbar Extender&lt;/a&gt; by &lt;a href=&quot;https://github.com/marijnz&quot;&gt;Marijn Zwemmer’s&lt;/a&gt; and &lt;a href=&quot;https://github.com/OndrejPetrzilka&quot;&gt;Ondrej Petrzilka’s&lt;/a&gt; you can easily add buttons side by side of play/pause/step buttons on the Unity editor toolbar.&lt;/p&gt;

&lt;h2 id=&quot;scene-selection-toolbar&quot;&gt;Scene Selection Toolbar&lt;/h2&gt;
&lt;p&gt;I created a gist, called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scene Selection Toolbar&lt;/code&gt;, that uses the &lt;a href=&quot;https://github.com/marijnz/unity-toolbar-extender&quot;&gt;Unity Toolbar Extender&lt;/a&gt; and allows us to have a dropdown with the most used scenes right on the side of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Play&lt;/code&gt; button.&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/9NfVyDsj1rQ &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Import the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Unity Toolbar Extender&lt;/code&gt; as described in the &lt;a href=&quot;https://github.com/marijnz/unity-toolbar-extender#importing&quot;&gt;Import section&lt;/a&gt; on GitHub.&lt;/li&gt;
  &lt;li&gt;Then, just add it the gist below to any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor&lt;/code&gt; folder of your project or use the &lt;a href=&quot;/unitytips-gist-importer&quot;&gt;Gist Importer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/4122c117c927d5c370dd562e619129e6.js?file=SceneSelectionToolbar.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;h4 id=&quot;adding-removing-and-opening-scenes&quot;&gt;Adding, removing, and opening scenes&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Add the current scene to the list&lt;/strong&gt;: with any scene opened, you can click on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+&lt;/code&gt; button to add it to the scenes dropdown.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Remove the current scene from the list&lt;/strong&gt;: just click the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-&lt;/code&gt; button to remove the current scene from the list.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Open a scene from the list&lt;/strong&gt;: select any scene in the dropdown to open that scene on the editor.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>ARC-8&colon; devlog &num;2 - Blazor</title>
   <link href="//arc-8-devlog-2/"/>
   <updated>2020-10-29T00:00:00-03:00</updated>
   <id>//arc-8-devlog-2</id>
   <content type="html">&lt;p&gt;Some years ago I coded a CHIP-8 emulator in C# just for fun, that emulator was hibernating in a private repository that I never released. Some days ago I started to working on it again with the idea to release it running on Blazor and as a Unity asset where any game developer could drag its prefabs as easter eggs directly to their games.&lt;/p&gt;

&lt;p&gt;In this post, I will talk about &lt;strong&gt;how I implemented the graphics, sound, input, and log systems for Blazor&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can read the other &lt;a href=&quot;/tags/arc8-devlog&quot;&gt;ARC-8’s devlog posts&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;The source code is not yet published on GitHub, I will notify in this series of posts about ARC-8 devlog and on my &lt;a href=&quot;https://twitter.com/ogiacomelli&quot;&gt;Twitter&lt;/a&gt; too when this happens.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor&quot;&gt;Blazor&lt;/a&gt; is a feature of ASP.NET that extends the .NET developer platform with tools and libraries for building web apps.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Blazor can run your client-side C# code directly in the browser, using WebAssembly. Because it’s real .NET running on WebAssembly, you can re-use code and libraries from server-side parts of your application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is why we can use our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ARC-8 Core&lt;/code&gt;, mentioned in the previous &lt;a href=&quot;/arc-8-devlog-1&quot;&gt;devlog&lt;/a&gt;, because it is a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.NET Standard class library&lt;/code&gt; and can run directly on Blazor web assembly.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;For some components, like menu, inputs, and buttons I use the &lt;a href=&quot;https://blazorise.com/&quot;&gt;Blazorise library&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;online-demo&quot;&gt;Online demo&lt;/h2&gt;
&lt;p&gt;You can test and play the CHIP-8’s games directly on your browser with our online demo: &lt;a href=&quot;/apps/arc-8&quot;&gt;ARC-8 Blazor Online Demo&lt;/a&gt;.&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/9eHBdCTipZs &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;systems-interfaces-implementations&quot;&gt;Systems interfaces implementations&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/component-128-1eb69a9dc.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/component-128-1eb69a9dc.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/component-128-1eb69a9dc.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;The system interfaces &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGraphic&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ISound&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IInput&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ILog&lt;/code&gt; will be implemented as &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/blazor/components/?view=aspnetcore-3.1#:~:text=Blazor%20apps%20are%20built%20using,Components%20are%20flexible%20and%20lightweight.&quot;&gt;Blazor components&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A component is a self-contained chunk of user interface (UI), such as a page, dialog, or form. A component includes HTML markup and the processing logic required to inject data or respond to UI events. Components are flexible and lightweight. They can be nested, reused, and shared among projects.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/29/arc-8-devlog-2/arc-8-blazor-components-200-4b7f14cbd.webp 200w, /assets/images/generated/assets/2020/10/29/arc-8-devlog-2/arc-8-blazor-components-320-4b7f14cbd.webp 320w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/29/arc-8-devlog-2/arc-8-blazor-components-200-4b7f14cbd.jpg 200w, /assets/images/generated/assets/2020/10/29/arc-8-devlog-2/arc-8-blazor-components-320-4b7f14cbd.jpg 320w&quot; type=&quot;image/jpeg&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/29/arc-8-devlog-2/arc-8-blazor-components-320-4b7f14cbd.jpg&quot; alt=&quot;post image&quot; width=&quot;320&quot; height=&quot;246&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h2 id=&quot;chip8graphicrazor-component-igraphic&quot;&gt;Chip8Graphic.razor component (IGraphic)&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This a simplified version of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGraphic&lt;/code&gt; implementation (without of color selector that you can see in the demo).&lt;/p&gt;

&lt;h3 id=&quot;c-side&quot;&gt;C# side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=Chip8Graphic.razor&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;js-side&quot;&gt;JS side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=chip8-helper-graphic.js&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;onafterrenderasync-method&quot;&gt;OnAfterRenderAsync method&lt;/h4&gt;
&lt;p&gt;In the method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OnAfterRenderAsync&lt;/code&gt; we verify if it’s the component’s first render, then we call a JS method that will initialize a JS helper for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chip8Graphic.razor&lt;/code&gt; that will return the size of the canvas to C# code, then we use this information to scale our 64 x 32 CHIP-8’s display.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;OnAfterRenderAsync and OnAfterRender are called after a component has finished rendering. Element and component references are populated at this point. Use this stage to perform additional initialization steps using the rendered content, such as activating third-party JavaScript libraries that operate on the rendered DOM elements.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;draw-method&quot;&gt;Draw method&lt;/h4&gt;
&lt;p&gt;This is one of the two methods needed to be implemented of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGraphic&lt;/code&gt; interface. We received the array (64x32) of bytes representing the current state of CHIP-8 graphics and just update our local array variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_gfx&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;renderasync-method&quot;&gt;RenderAsync method&lt;/h4&gt;
&lt;p&gt;The method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RenderAsync&lt;/code&gt; will be called by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chip8Loader&lt;/code&gt; component during the &lt;a href=&quot;https://gameprogrammingpatterns.com/game-loop.html&quot;&gt;Game Loop&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This method is used to draw the state of CHIP-8 graphics (_gfx array) to the HTML page. 
We use a second array called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_buffer&lt;/code&gt; to implement a &lt;a href=&quot;https://gameprogrammingpatterns.com/double-buffer.html&quot;&gt;Double Buffer&lt;/a&gt; and reduce the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;screen flickering&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;A byte with value 1 should be drawn (foreground color) and a byte with value 0 should not be drawn (background color).&lt;/p&gt;
&lt;/div&gt;

&lt;h4 id=&quot;invalidate-method&quot;&gt;Invalidate method&lt;/h4&gt;
&lt;p&gt;This is the second of the two methods needed to be implemented of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGraphic&lt;/code&gt; interface, but as we implemented a Double Buffer, this method does not need to perform any operation.&lt;/p&gt;

&lt;h4 id=&quot;resize-method&quot;&gt;Resize method&lt;/h4&gt;
&lt;p&gt;Called by the JS side every time that the user resizes the browser window.&lt;/p&gt;

&lt;h4 id=&quot;clearcanvasasync-method&quot;&gt;ClearCanvasAsync method&lt;/h4&gt;
&lt;p&gt;We use this one to invalidate our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_buffer&lt;/code&gt; and reset the canvas to the background color.&lt;/p&gt;

&lt;h2 id=&quot;chip8soundrazor-component-isound&quot;&gt;Chip8Sound.razor component (ISound)&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/sound-128-972082c3e.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/sound-128-972082c3e.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/sound-128-972082c3e.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This a simplified version of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ISound&lt;/code&gt; implementation.&lt;/p&gt;

&lt;h3 id=&quot;c-side-1&quot;&gt;C# side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=Chip8Sound.razor&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;js-side-1&quot;&gt;JS side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=chip8-helper-sound.js&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;oninitialized-method&quot;&gt;OnInitialized method&lt;/h4&gt;
&lt;p&gt;We just use the information from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NavigationManager&lt;/code&gt; to set the audio file we want to play.&lt;/p&gt;

&lt;h4 id=&quot;play-method&quot;&gt;Play method&lt;/h4&gt;
&lt;p&gt;This is the only method we need to implement of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ISound&lt;/code&gt; interface and it just calls a JS method that will get the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;audio&lt;/code&gt; tag on the component, set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioSource&lt;/code&gt;, then load, and play it.&lt;/p&gt;

&lt;h2 id=&quot;chip8inputrazor-component-iinput&quot;&gt;Chip8Input.razor component (IInput)&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/joystick-128-82c7ade06.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/joystick-128-82c7ade06.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/joystick-128-82c7ade06.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IInput&lt;/code&gt; implementation.&lt;/p&gt;

&lt;h3 id=&quot;c-side-2&quot;&gt;C# side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=Chip8Input.razor&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;js-side-2&quot;&gt;JS side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=chip8-helper-input.js&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;key-mapping&quot;&gt;Key mapping&lt;/h4&gt;
&lt;p&gt;First we create the dictionary &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_map&lt;/code&gt; to map the real keyboard keys to CHIP-8 keypad keys.
The second dictionary we create is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_keyDown&lt;/code&gt;. It will be used to map what keys the player is pressing.&lt;/p&gt;

&lt;h4 id=&quot;onafterrenderasync-method-1&quot;&gt;OnAfterRenderAsync method&lt;/h4&gt;
&lt;p&gt;We call the JS method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chip8Input.init&lt;/code&gt; that will add two event listeners, one for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keydown&lt;/code&gt; and the other for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keyup&lt;/code&gt; that will call the C# methods &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HandleKeyDown&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HandleKeyUp&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;updatekeys-method&quot;&gt;UpdateKeys method&lt;/h4&gt;
&lt;p&gt;The only method we need to implement for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IInput&lt;/code&gt; interface. 
In this method, we set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt; the CHIP-8’s keypad keys that were pressed by the player.&lt;/p&gt;

&lt;h4 id=&quot;handlekeydown-and-handlekeyup-methods&quot;&gt;HandleKeyDown and HandleKeyUp methods&lt;/h4&gt;
&lt;p&gt;This method is responsible to set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_keyDown&lt;/code&gt; dictionary by the keyboard keys that the player pressed.&lt;/p&gt;

&lt;h2 id=&quot;chip8lograzor-component-ilog&quot;&gt;Chip8Log.razor component (ILog)&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/logging-128-de6e1a017.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/logging-128-de6e1a017.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/logging-128-de6e1a017.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This is a simplified version of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ILog&lt;/code&gt; implementation.&lt;/p&gt;

&lt;h3 id=&quot;c-side-3&quot;&gt;C# side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=Chip8Log.razor&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;debug-and-error-methods&quot;&gt;Debug and Error methods&lt;/h4&gt;
&lt;p&gt;The two methods implemented for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ILog&lt;/code&gt; interface use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Microsoft.Extensions.Logging.ILogger&amp;lt;T&amp;gt;&lt;/code&gt; to send log messages to the browser console.&lt;/p&gt;

&lt;h2 id=&quot;chip8loaderrazor&quot;&gt;Chip8Loader.razor&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This is a simplified version of the component responsible to load all systems (IGraphic, ISound, IInput, and ILog), initialize the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chip8&lt;/code&gt; class emulator,  load the ROM and perform the game loop.&lt;/p&gt;

&lt;h3 id=&quot;c-side-4&quot;&gt;C# side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=Chip8Loader.razor&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;js-side-3&quot;&gt;JS side&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=chip8-helper-loader.js&quot;&gt; &lt;/script&gt;

&lt;h4 id=&quot;onafterrenderasync-method-2&quot;&gt;OnAfterRenderAsync method&lt;/h4&gt;
&lt;p&gt;Initializes the emulator with the systems, then calls the JS &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chip8Loader.init&lt;/code&gt; function that will use the browser &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame&quot;&gt;window.requestAnimationFrame&lt;/a&gt; to call the C# method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RunCycle&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser calls a specified function to update an animation before the next repaint.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;runcycle-method&quot;&gt;RunCycle method&lt;/h4&gt;
&lt;p&gt;This method is called by the JS  (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window.requestAnimationFrame&lt;/code&gt;).
We implement a &lt;a href=&quot;https://gameprogrammingpatterns.com/game-loop.html&quot;&gt;Game Loop&lt;/a&gt; and in the end, call the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chip8Graphic.RenderAsync&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;next-step&quot;&gt;Next step&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;In the next &lt;a href=&quot;/tags/arc8-devlog&quot;&gt;ARC-8 devlog&lt;/a&gt; I will talk about the ARC-8’s implementation on Unity3D.&lt;/p&gt;

&lt;p&gt;If you have any doubts about what I talk about above or any tip about the CHIP-8 emulator (or Blazor) and you like to share it, please let me know in the comments section below.&lt;/p&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;Further reading&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/learn/aspnet/blazor-tutorial/intro&quot;&gt;Blazor Tutorial - Build your first Blazor app&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blazorise.com/docs/start/&quot;&gt;Blazorise quick-start&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/blazor/components/?view=aspnetcore-3.1#:~:text=Blazor%20apps%20are%20built%20using,Components%20are%20flexible%20and%20lightweight.&quot;&gt;Create and use ASP.NET Core Razor components&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/blazor/components/lifecycle?view=aspnetcore-3.1&quot;&gt;ASP.NET Core Blazor lifecycle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/blazor/call-javascript-from-dotnet?view=aspnetcore-3.1&quot;&gt;Call JavaScript functions from .NET methods in ASP.NET Core Blazor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/blazor/fundamentals/logging?view=aspnetcore-3.1&quot;&gt;ASP.NET Core Blazor logging&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gameprogrammingpatterns.com/double-buffer.html&quot;&gt;Double Buffer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gameprogrammingpatterns.com/game-loop.html&quot;&gt;Game Loop&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame&quot;&gt;RequestAnimationFrame&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Overview of .NET in Unity</title>
   <link href="//unitytips-overview-of-donet-in-unity/"/>
   <updated>2020-10-27T00:00:00-03:00</updated>
   <id>//unitytips-overview-of-donet-in-unity</id>
   <content type="html">&lt;p&gt;Unity Official documentation has an amazing page called &lt;a href=&quot;https://docs.unity3d.com/Manual/overview-of-dot-net-in-unity.html&quot;&gt;Overview of .NET in Unity&lt;/a&gt; that highlight 8 points about the usage o .NET in Unity.&lt;/p&gt;

&lt;p&gt;I think it’s important to any pro programmer in Unity quite understand those points, because of this I list them below, in a brief way. &lt;strong&gt;You can (and should) read the full documentation to understand all the 8 points listed in more depth&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;overview-of-net-in-unity&quot;&gt;Overview of .NET in Unity&lt;/h2&gt;
&lt;p&gt;Read the full documentation: &lt;a href=&quot;https://docs.unity3d.com/Manual/overview-of-dot-net-in-unity.html&quot;&gt;https://docs.unity3d.com/Manual/overview-of-dot-net-in-unity.html&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;infographic&quot;&gt;Infographic&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Download &lt;a href=&quot;/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic.png&quot;&gt;overview-of-donet-in-unity-infographic.png&lt;a&gt;&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Download &lt;a href=&quot;/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic.pdf&quot;&gt;overview-of-donet-in-unity-infographic.pdf&lt;a&gt;&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-200-76d1c217b.webp 200w, /assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-400-76d1c217b.webp 400w, /assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-800-76d1c217b.webp 800w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-200-76d1c217b.png 200w, /assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-400-76d1c217b.png 400w, /assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-800-76d1c217b.png 800w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-800-76d1c217b.png&quot; alt=&quot;post image&quot; width=&quot;800&quot; height=&quot;2000&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h3 id=&quot;scripting-backends&quot;&gt;Scripting backends&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Mono uses just-in-time (JIT) compilation and compiles code on demand at runtime.&lt;/li&gt;
  &lt;li&gt;IL2CPP uses ahead-of-time (AOT) compilation and compiles your entire application before it is run.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;managed-code-stripping&quot;&gt;Managed code stripping&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;When you build your application, Unity scans the compiled assemblies (.DLLs) to detect and remove unused code.&lt;/li&gt;
  &lt;li&gt;This process reduces the final binary size of your build, but increases build time.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;garbage-collection-gc&quot;&gt;Garbage collection (GC)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Garbage collector only runs for a limited period of time and does not necessarily collect all objects in one pass. This spreads the time it takes to collect objects over a number of frames and reduces the amount of stuttering and CPU spikes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;net-system-libraries&quot;&gt;.NET system libraries&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Unity tries its best to support as much of the .NET ecosystem as possible, there are some exceptions to parts of the .NET system libraries that Unity explicitly does not support.&lt;/li&gt;
  &lt;li&gt;You should use the .NET Standard 2.0 API Compatibility Level for all new projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;third-party-net-libraries&quot;&gt;Third-party .NET libraries&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;You should only use third-party .NET libraries that have been extensively tested on a wide range of Unity configurations and platforms.&lt;/li&gt;
  &lt;li&gt;You should profile the usage of your .NET system libraries on all target platforms.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;c-reflection-overhead&quot;&gt;C# reflection overhead&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;GC continuously scans the cached C# reflection objects, which causes unnecessary overhead.&lt;/li&gt;
  &lt;li&gt;To minimize the overhead, avoid methods such as Assembly.GetTypes and Type.GetMethods().&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;unityengineobject-special-behavior&quot;&gt;UnityEngine.Object special behavior&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;UnityEngine.Object is a special type of C# object in Unity, because it is linked to a native C++ counterpart object.&lt;/li&gt;
  &lt;li&gt;MonoBehaviour/ScriptableObject override the equality (==) and inequality (!=) operators.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;avoid-using-async-and-await&quot;&gt;Avoid using async and await&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;The Unity API is not thread safe and therefore, you should not use async and await tasks.&lt;/li&gt;
  &lt;li&gt;Async tasks often allocate objects when invoked, which might cause performance issues if you overuse them.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Gamedev Utility Belt&colon; Unity Native Share Plugin</title>
   <link href="//gamedev-utility-belt-unity-native-share-plugin/"/>
   <updated>2020-10-23T00:00:00-03:00</updated>
   <id>//gamedev-utility-belt-unity-native-share-plugin</id>
   <content type="html">&lt;p&gt;I decided to start a &lt;a href=&quot;/tags/gamedev-utility-belt/&quot;&gt;series of posts&lt;/a&gt; about some game development resources that are part of my gamedev utility belt and that helps me on my game projects.&lt;/p&gt;

&lt;p&gt;For this first post, the chosen one is the &lt;strong&gt;&lt;a href=&quot;https://github.com/yasirkula/UnityNativeShare&quot;&gt;Unity Native Share Plugin&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&quot;https://twitter.com/yasirkula&quot;&gt;Süleyman Yasir KULA&lt;/a&gt; that I used on my latest mobile game &lt;a href=&quot;http://diegogiacomelli.com.br/games/puzzimals&quot;&gt;Puzzimals&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Unity Native Share Plugin is:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;A Unity plugin to natively share files (images, videos, documents, etc.) and/or plain text on Android &amp;amp; iOS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When you use this plugin on the Android and iOS project you will be able to invoke the native share of the target operating system.
For example, here is the result when I used it on Android:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/23/gamedev-utility-belt-unity-native-share-plugin/unity-native-share-plugin-puzzimals-sample-200-f02b99f71.webp 200w, /assets/images/generated/assets/2020/10/23/gamedev-utility-belt-unity-native-share-plugin/unity-native-share-plugin-puzzimals-sample-360-f02b99f71.webp 360w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/23/gamedev-utility-belt-unity-native-share-plugin/unity-native-share-plugin-puzzimals-sample-200-f02b99f71.jpg 200w, /assets/images/generated/assets/2020/10/23/gamedev-utility-belt-unity-native-share-plugin/unity-native-share-plugin-puzzimals-sample-360-f02b99f71.jpg 360w&quot; type=&quot;image/jpeg&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/23/gamedev-utility-belt-unity-native-share-plugin/unity-native-share-plugin-puzzimals-sample-360-f02b99f71.jpg&quot; alt=&quot;post image&quot; width=&quot;360&quot; height=&quot;640&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;
&lt;p&gt;You can follow the instructions on the plugin GitHub repository: &lt;a href=&quot;https://github.com/yasirkula/UnityNativeShare#installation&quot;&gt;https://github.com/yasirkula/UnityNativeShare&lt;/a&gt; to install it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using .unitypackage&lt;/li&gt;
  &lt;li&gt;Cloning the repository&lt;/li&gt;
  &lt;li&gt;Via Asset Store&lt;/li&gt;
  &lt;li&gt;Via Package Manager&lt;/li&gt;
  &lt;li&gt;Using the OpenUPM&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;The plugin is quite simple to be used, there is an &lt;a href=&quot;https://github.com/yasirkula/UnityNativeShare#example-code&quot;&gt;example code on its repository&lt;/a&gt; that show how you can use it with few lines of code.&lt;/p&gt;

&lt;p&gt;Some time ago I made the gist below that uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Unity Native Share Plugin&lt;/code&gt; to add a social share component to any game object:
&lt;script src=&quot;https://gist.github.com/c03ec79fa0f0def94726f4b6914b4769.js?file=SocialShare.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity Game Growth Program&colon; Tips & Tricks</title>
   <link href="//unity-game-growth-program-tips-and-tricks/"/>
   <updated>2020-10-20T00:00:00-03:00</updated>
   <id>//unity-game-growth-program-tips-and-tricks</id>
   <content type="html">&lt;p&gt;In this post, I will list some tips and tricks that I learned while applying my game &lt;a href=&quot;https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.puzzimals&quot;&gt;Puzzimals&lt;/a&gt; to the &lt;a href=&quot;https://unity.com/solutions/mobile/game-growth-program&quot;&gt;Unity Game Growth Program&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Unity has recently &lt;a href=&quot;https://blogs.unity3d.com/2020/10/13/introducing-the-game-growth-program/&quot;&gt;launch the Unity Game Growth Program&lt;/a&gt; an accelerator program for free-to-play indie iOS/Android games made with Unity.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Game Growth is a new game accelerator for mobile indie developers. We partner with indie game devs so they can quickly and effectively scale their games while remaining 100% independent. Becoming a partner gives you access to user acquisition funding alongside industry-leading tools and experts in game operations. The best part? You keep full ownership of your studio and intellectual property.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you meet the criteria and we accept you into the program, Unity will fund user acquisition for your game and provide the technology and Unity experts to help manage player engagement and monetization. We take care of the process that helps grow your game while you concentrate on development.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Game Growth is a revenue-sharing program – Unity and the developer team split the revenue from advertising and in-app purchases 50/50 after the user acquisition spend has been recouped. Put simply, Unity covers the cost of bringing in new players while we both share in the reward.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can read more about the program here:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blogs.unity3d.com/2020/10/13/introducing-the-game-growth-program/&quot;&gt;Introducing the Game Growth program&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://unity.com/solutions/mobile/game-growth-program&quot;&gt;Game Growth Program&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/route-128-704e92446.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/route-128-704e92446.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/route-128-704e92446.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;According to documentation, the Unity Game Growth Program works through 4 steps:&lt;/p&gt;

&lt;h3 id=&quot;submit-game--integrate-package&quot;&gt;Submit Game &amp;amp; Integrate Package&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Getting started is easy. All you need is a published free-to-play mobile game made with Unity. Begin your application by submitting your project, advertising assets, and installing the Game Growth package.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;evaluation&quot;&gt;Evaluation&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;This stage determines if your game is a good candidate for the program. We take a look at your core game performance, project details and overall program fit. If everything looks good, Unity covers the cost of a full user acquisition test.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;optimize-game-operations&quot;&gt;Optimize Game Operations&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;If you become a partner, we work with you to design features, integrate business services, and optimize player engagement and monetization. You will also have access to a dedicated game ops team that works with you every step of the way.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;accelerate-your-game&quot;&gt;Accelerate your Game&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Game Growth gives you access to the user acquisition funding and resources to take your game to the next level - with a 50/50 revenue sharing model. We acquire the right players then effectively manage those lifecycles and provide guidance for monetization.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/requirements-128-8b68e8c6b.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/requirements-128-8b68e8c6b.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/requirements-128-8b68e8c6b.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;There are 7 requirements that your game must meet to apply to the program:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Made with Unity&lt;/code&gt;: game must be made with Unity 2018.4 or later.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mobile Free-to Play&lt;/code&gt;: game must be free-to-play on iOS or Android.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Published Games&lt;/code&gt;: game must be currently live and published on the Google Play or Apple App Store.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Connected to Unity Dashboard&lt;/code&gt;: game must be connected to the Unity Dashboard and have a valid project ID.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Age Restrictions&lt;/code&gt;: not accepting games aimed at audiences under 13 years of age.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Advertising Assets&lt;/code&gt;: submit images and videos for use in Unity ads.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Language&lt;/code&gt;: game must support English.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;More details at: &lt;a href=&quot;https://dashboard.unity3d.com/&quot;&gt;Unity Dashboard / Game Growth&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting started&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/start-128-ea031347f.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/start-128-ea031347f.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/start-128-ea031347f.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;Is not the intent of this post cover everything about how to get through the Unity Game Growth Program, I guess this quite well documented on &lt;a href=&quot;https://unity.com/solutions/mobile/game-growth-program&quot;&gt;Unity Game Growth Program page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The idea of this post is focused on the first of the four-step: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Submit Game &amp;amp; Integrate Package&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;read-the-docs&quot;&gt;Read the docs&lt;/h3&gt;
&lt;p&gt;Please, if you did not read the official documentation yet, go to &lt;a href=&quot;https://unity.com/solutions/mobile/game-growth-program&quot;&gt;Game Growth Program page&lt;/a&gt;, click in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Apply&lt;/code&gt; button and follow the instructions&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-200-ee7227d70.webp 200w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-400-ee7227d70.webp 400w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-800-ee7227d70.webp 800w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-805-ee7227d70.webp 805w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-200-ee7227d70.png 200w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-400-ee7227d70.png 400w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-800-ee7227d70.png 800w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-805-ee7227d70.png 805w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-800-ee7227d70.png&quot; alt=&quot;post image&quot; width=&quot;805&quot; height=&quot;170&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;p&gt;After you finish the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;6 - Confirm&lt;/code&gt; come back here. You’ll better understand this post and tips &amp;amp; tricks after that.&lt;/p&gt;

&lt;h2 id=&quot;submit-game--integrate-package-1&quot;&gt;Submit Game &amp;amp; Integrate Package&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Submit Game &amp;amp; Integrate Package&lt;/code&gt; step is divided into 3 sub-steps:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Download and Install Package&lt;/li&gt;
  &lt;li&gt;Run &amp;amp; Validate Integration&lt;/li&gt;
  &lt;li&gt;Publish &amp;amp; Validate Integration&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;download-and-install-package&quot;&gt;Download and Install Package&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Download the Game Growth package and integrate it into your project. Once installed, refer to the package documentation for next steps.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You need to download the package through the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Download Package&lt;/code&gt;, then in Unity, open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Package Manager&lt;/code&gt; window install it from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tarball&lt;/code&gt; option.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-package-manager-tarball-200-35c02476c.webp 200w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-package-manager-tarball-200-35c02476c.png 200w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-package-manager-tarball-200-35c02476c.png&quot; alt=&quot;post image&quot; width=&quot;200&quot; height=&quot;102&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;if you are using Unity version previous 2019.4, you need to use the option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add package from disk&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&quot;tip--trick&quot;&gt;Tip &amp;amp; Trick&lt;/h3&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/tip-128-d93c80d98.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/tip-128-d93c80d98.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/tip-128-d93c80d98.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;After installing the package, if your using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UnityEngine.Purchasing&lt;/code&gt; in your project and you use &lt;a href=&quot;https://docs.unity3d.com/Manual/ScriptCompilationAssemblyDefinitionFiles.html&quot;&gt;Assembly Definitions&lt;/a&gt; too you can see a lot of errors in the console about it, like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;error CS0246: The type or namespace name 'IStoreController' could not be found (are you missing a using directive or an assembly reference?)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To fix it, just reference again the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UnityEngine.Purchasing&lt;/code&gt; on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assembly Definition references&lt;/code&gt;:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-assembly-definition-references-200-dcdbf7a02.webp 200w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-assembly-definition-references-369-dcdbf7a02.webp 369w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-assembly-definition-references-200-dcdbf7a02.png 200w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-assembly-definition-references-369-dcdbf7a02.png 369w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-assembly-definition-references-369-dcdbf7a02.png&quot; alt=&quot;post image&quot; width=&quot;369&quot; height=&quot;76&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h3 id=&quot;easy-on-boarding&quot;&gt;Easy On-Boarding&lt;/h3&gt;
&lt;p&gt;Now, open the menu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Game Growth / Easy onboarding&lt;/code&gt; and follow the steps.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-eash-on-boarding-200-57c9a0919.webp 200w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-eash-on-boarding-400-57c9a0919.webp 400w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-eash-on-boarding-770-57c9a0919.webp 770w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-eash-on-boarding-200-57c9a0919.png 200w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-eash-on-boarding-400-57c9a0919.png 400w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-eash-on-boarding-770-57c9a0919.png 770w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-eash-on-boarding-770-57c9a0919.png&quot; alt=&quot;post image&quot; width=&quot;770&quot; height=&quot;530&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h2 id=&quot;run--validate-integration&quot;&gt;Run &amp;amp; Validate Integration&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;After the package has been installed and configured for sandbox, run your game on the devices . To confirm integration, make sure you remove the game from your device, reinstall, and then launch the game.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Build, install, and run the game on your target device (iOS / Android).
Then go to Unity Dashboard and try to confirm the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Run &amp;amp; Validate integration&lt;/code&gt;, this can take minutes or even hours to allow you to confirm successfully.&lt;/p&gt;

&lt;h3 id=&quot;tip--trick-1&quot;&gt;Tip &amp;amp; Trick&lt;/h3&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/tip-128-d93c80d98.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/tip-128-d93c80d98.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/tip-128-d93c80d98.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;Running the shell &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./adb logcat -s Unity PackageManager dalvikvm DEBUG&lt;/code&gt; while running the game on an Android device I saw errors like this on the game log:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UriFormatException: Invalid URI: The hostname could not be parsed
at DeltaDNA.Network+&amp;lt;SendRequest&amp;gt;
[DDSDK] [WARNING] Event upload failed - try again later&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I found out that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;collect_url&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;engagement_url&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Assets/DeltaDNA/Resources/ddna_configuration.xml&lt;/code&gt; file were empty and this was an error cause.&lt;/p&gt;

&lt;p&gt;To fix it, I had to go to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Game Growth / Configuration&lt;/code&gt; menu, then click on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Configure SDKs&lt;/code&gt; button, so &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;collect_url&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;engagement_url&lt;/code&gt; were correctly configured in the file.&lt;/p&gt;

&lt;h2 id=&quot;publish--validate-integration&quot;&gt;Publish &amp;amp; Validate Integration&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;The final step is to publish your project on the Apple App Store and Google Play Store. Don’t forget to switch the package environment dropdown from Sandbox to Store in GGLauncher prefab. Run your game on the devices.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Build and publish the game to the store (App Store or Google Play), download/update the game and run it on your device.
Then go to Unity Dashboard again and try to confirm the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Publish &amp;amp; Validate integration&lt;/code&gt;, this can take minutes or even hours to allow you to confirm successfully.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;I hope that these tips and tricks that I learned while applying my game &lt;a href=&quot;https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.puzzimals&quot;&gt;Puzzimals&lt;/a&gt; to the &lt;a href=&quot;https://unity.com/solutions/mobile/game-growth-program&quot;&gt;Unity Game Growth Program&lt;/a&gt; can be useful to you too.&lt;/p&gt;

&lt;p&gt;If you have any other tips &amp;amp; tricks you use on the Unity Game Growth Program process and you like to share it, please let me know in the comments section below.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Sprites Collection</title>
   <link href="//unitytips-sprites-collection/"/>
   <updated>2020-10-13T00:00:00-03:00</updated>
   <id>//unitytips-sprites-collection</id>
   <content type="html">&lt;p&gt;Sometimes we have related sprites that can be used in a prefab, like sprites for the environment, props, and scenario. Would be cool if we can easily swap them directly on the prefab without need to find and set the sprite directly in the SpriteRenderer component?&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/TJ-Ou9YMFdA &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;spritescollection-component&quot;&gt;SpritesCollection component&lt;/h2&gt;
&lt;p&gt;I created this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SpritesCollection&lt;/code&gt; component that allows us to define a collection of sprites to a prefab/GameObject and then easily swap between the sprites available.&lt;/p&gt;

&lt;h3 id=&quot;source-code&quot;&gt;Source code&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/d5d7c720eb910d00a5a3e217b5f95fff.js?file=SpritesCollection.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;I strongly recommend that you use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gist Importer&lt;/code&gt; to import this gist to your project, but if want to import it manually, just access &lt;a href=&quot;https://gist.github.com/giacomelli/d5d7c720eb910d00a5a3e217b5f95fff&quot;&gt;the gist&lt;/a&gt; and add all .cs files to any folder on your Unity project, except the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SpritesCollectionEditor.cs&lt;/code&gt;, this one should be added to an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor&lt;/code&gt; folder.&lt;/p&gt;
&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Triangle Classifier Made With Unity</title>
   <link href="//triangle-classifier-made-with-unity/"/>
   <updated>2020-09-24T00:00:00-03:00</updated>
   <id>//triangle-classifier-made-with-unity</id>
   <content type="html">&lt;p&gt;These days were studying polygons and thought that would be cool build a triangle classifier to help people learn and teach about types of triangle.&lt;/p&gt;

&lt;h2 id=&quot;types-of-triangle&quot;&gt;Types of triangle&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/project-128-4f597ed4f.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/project-128-4f597ed4f.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/project-128-4f597ed4f.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;Triangles can be classified &lt;a href=&quot;https://en.wikipedia.org/wiki/Triangle#Types_of_triangle&quot;&gt;by lengths of sides and by internal angles&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;by-lengths-of-sides&quot;&gt;By lengths of sides&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Equilateral_triangle&quot;&gt;Equilateral&lt;/a&gt;: all three sides have the same length.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Isosceles_triangle&quot;&gt;Isosceles&lt;/a&gt;: has two sides of equal length.&lt;/li&gt;
  &lt;li&gt;Scalene: has all its sides of different lengths.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;by-internal-angles&quot;&gt;By internal angles&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Right_triangle&quot;&gt;Right&lt;/a&gt;: has one of its interior angles measuring 90°.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Oblique_triangle&quot;&gt;Oblique&lt;/a&gt;: do not have an angle measuring 90°.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Acute_triangle&quot;&gt;Acute&lt;/a&gt;: with all interior angles measuring less than 90°.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Obtuse_triangle&quot;&gt;Obtuse&lt;/a&gt;: with one interior angle measuring more than 90°.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;triangle-classifier&quot;&gt;Triangle Classifier&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/podium-128-f9f44969b.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/podium-128-f9f44969b.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/podium-128-f9f44969b.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;Below you can use the Triangle Classifier that I made with Unity.&lt;/p&gt;

&lt;h3 id=&quot;instructions&quot;&gt;Instructions&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;You can move any of the 3 vertices (A, B, C)&lt;/li&gt;
  &lt;li&gt;The vertices positions can be changed too from the inputs on the top of the screen.&lt;/li&gt;
  &lt;li&gt;Each time that any vertices are updated you can see the types of the triangle be updated in the top message.&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe src=&quot;/apps/triangle-classifier/index.html&quot; style=&quot;width: 100%;min-height: 700px;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The font and the vertice sprite used are from &lt;a href=&quot;http://kenney.nl&quot;&gt;Kenney&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; ShadowCaster2DFromCollider Component</title>
   <link href="//unitytips-shadowcaster2-from-collider-component/"/>
   <updated>2020-09-21T00:00:00-03:00</updated>
   <id>//unitytips-shadowcaster2-from-collider-component</id>
   <content type="html">&lt;p&gt;If you try to use a &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.render-pipelines.universal@7.1/manual/2DShadows.html&quot;&gt;ShadowCaster2D&lt;/a&gt; in a &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.2d.spriteshape@3.0/manual/index.html&quot;&gt;SpriteShape&lt;/a&gt; the shadow produced will have a box form, no matter the form of your SpriteShape.&lt;/p&gt;

&lt;p&gt;This happens because &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ShadowCaster2D&lt;/code&gt; does not update its internal shape according to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SpriteShape's&lt;/code&gt; form.&lt;/p&gt;

&lt;h2 id=&quot;shadowcaster2dfromcollider-component&quot;&gt;ShadowCaster2DFromCollider component&lt;/h2&gt;
&lt;p&gt;I created this script to help to have &lt;strong&gt;SpriteShape with ShadowCaster2D casting right shadows&lt;/strong&gt;.&lt;br /&gt;
To use it you need to add a &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/PolygonCollider2D.html&quot;&gt;PolygonCollider2D&lt;/a&gt; or an &lt;a href=&quot;https://docs.unity3d.com/Manual/class-EdgeCollider2D.html&quot;&gt;EdgeCollider2D&lt;/a&gt; to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SpriteShape's&lt;/code&gt; gameobject and then add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ShadowCaster2DFromCollider&lt;/code&gt; component to the same gameobject.&lt;/p&gt;

&lt;p&gt;Below you can see a video showing a scene with some SpriteShapes before and after applying the ShadowCaster2DFromCollider component.&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/m8nnTek5U0Y &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;source-code&quot;&gt;Source code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/c208e20ecf75a77e0833f4c7671a0052.js&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;This solution was based on this Unity Forum post: https://forum.unity.com/threads/can-2d-shadow-caster-use-current-sprite-silhouette.861256&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Editor Coroutines</title>
   <link href="//unitytips-editor-coroutines/"/>
   <updated>2020-09-15T00:00:00-03:00</updated>
   <id>//unitytips-editor-coroutines</id>
   <content type="html">
&lt;p&gt;Recently, I was doing a small experiment trying to run an &lt;a href=&quot;https://en.wikipedia.org/wiki/CHIP-8&quot;&gt;CHIP-8&lt;/a&gt; emulator inside the Unity Editor inspector window and for that I needed to update from times to time the inspector.&lt;/p&gt;

&lt;p&gt;Initially I tried to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorApplication.update&lt;/code&gt;, but as it is only called when something changes in the inspector, it ended up not serving this purpose.&lt;/p&gt;

&lt;p&gt;It was then that I discovered this official Unity package: &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.editorcoroutines@0.0/manual/index.html&quot;&gt;Editor Coroutines&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Editor Coroutines package allows the user to start the execution of iterator methods within the Editor similar to how we handle Coroutines inside MonoBehaviour scripts during runtime.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;At this time we cannot use any of the yield classes present inside the Unity Scripting API, like WaitForSeconds and WaitForEndOfFrame, except for the CustomYieldInstruction.&lt;/p&gt;

&lt;p&gt;However, there is a specific yielding class for wait seconds on Editor: &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.editorcoroutines@0.0/api/Unity.EditorCoroutines.Editor.EditorWaitForSeconds.html&quot;&gt;EditorWaitForSeconds&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In my case, I used the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yield return null&lt;/code&gt; to skip a frame within the Editor and get the refresh rate that I would like.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/96086201cb5cc512ce7a15a02ebcf29a.js&quot;&gt; &lt;/script&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2020/09/15/unitytips-editor-coroutines/chip-8-inside-unity-editor.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;The result of using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorCoroutineUtility.StartCoroutine&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;More details in the official documentation: &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.editorcoroutines@0.0/api/Unity.EditorCoroutines.Editor.EditorCoroutineUtility.html&quot;&gt;Editor Coroutines&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Using Gulp for Chrome Extension development workflow</title>
   <link href="//using-gulp-for-chrome-extension-dev-workflow/"/>
   <updated>2020-09-11T00:00:00-03:00</updated>
   <id>//using-gulp-for-chrome-extension-dev-workflow</id>
   <content type="html">&lt;p&gt;In this tutorial, we will learn how to create a development workflow for a Chrome extension, with different configurations and manifest.json for each environment, like DEV, TEST, and PROD.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;A few months ago we built a Chrome Extension to a customer to allow users to capture Netflix captions and sent them to the customer web site to study them later.&lt;/p&gt;

&lt;p&gt;While we were developing it we needed to change some configurations on the extension to use different URLs of our API depending on what environment the Chrome Extension was using, like DEV (local), TEST, and Production.&lt;/p&gt;

&lt;h2 id=&quot;chrome-extension&quot;&gt;Chrome Extension&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/chrome-extension-200-209699985.webp 200w, /assets/images/generated/assets/logos/chrome-extension-400-209699985.webp 400w, /assets/images/generated/assets/logos/chrome-extension-496-209699985.webp 496w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/chrome-extension-200-209699985.png 200w, /assets/images/generated/assets/logos/chrome-extension-400-209699985.png 400w, /assets/images/generated/assets/logos/chrome-extension-496-209699985.png 496w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/chrome-extension-496-209699985.png&quot; alt=&quot;post image&quot; width=&quot;496&quot; height=&quot;150&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;For this tutorial, I’ll use a Chrome Extension basic sample called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hello Extensions&lt;/code&gt;.&lt;br /&gt; 
You can download it from this page &lt;a href=&quot;https://developer.chrome.com/extensions/samples&quot;&gt;https://developer.chrome.com/extensions/samples&lt;/a&gt; or directly from &lt;a href=&quot;https://developer.chrome.com/extensions/examples/tutorials/hello_extensions.zip&quot;&gt;here&lt;/a&gt;.
&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;Is not the intent of this tutorial explains how to create a Chrome Extension from scratch, for this you can use the official documentation: &lt;a href=&quot;https://developer.chrome.com/extensions/getstarted&quot;&gt;Getting Started Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;gulp&quot;&gt;Gulp&lt;/h2&gt;
&lt;p&gt;&lt;img class=&quot;icon&quot; src=&quot;/assets/logos/gulp.svg &quot; alt=&quot;post image&quot; /&gt;
At that time we did not find any builtin or other solution to make this workflow easier and streamlined, so we decided to create our own solution using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gulp&lt;/code&gt;. This whole solution will be explaining below.
&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;gulp is an open-source JavaScript toolkit created by Eric Schoffstall used as a streaming build system in front-end web development.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We decided to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gulp&lt;/code&gt;, because a Chrome Extensions is a bunch of .js, .html and .json files. Perfect to use gulp.&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The problem&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/problem-128-a3f91d933.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/problem-128-a3f91d933.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/problem-128-a3f91d933.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;If we just try to open our download &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hello Extension&lt;/code&gt; .zip file or the opened folder directly on the Chrome extensions page, it will work and you see the extension’s icon in the toolbar.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/basic-sample-chrome-extension-113-f70b16101.webp 113w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/basic-sample-chrome-extension-113-f70b16101.png 113w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/basic-sample-chrome-extension-113-f70b16101.png&quot; alt=&quot;post image&quot; width=&quot;113&quot; height=&quot;145&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;p&gt;This is not a problem if you have only one environment or if you don’t need different configurations for different environments, but as I’ve already explained, we needed different configs for different environments.&lt;/p&gt;

&lt;p&gt;To the purpose of this tutorial we will work with 3 environments: DEV, TEST, and PROD and will use our configuration file just to change our plugin &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello.html&lt;/code&gt; text:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DEV: Hello, World! (DEV)&lt;/li&gt;
  &lt;li&gt;TEST: Hello, World! (TEST)&lt;/li&gt;
  &lt;li&gt;PROD: Hello, World!&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-200-3afbb65ab.webp 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-336-3afbb65ab.webp 336w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-200-3afbb65ab.png 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-336-3afbb65ab.png 336w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-336-3afbb65ab.png&quot; alt=&quot;post image&quot; width=&quot;336&quot; height=&quot;167&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h2 id=&quot;files-structure&quot;&gt;Files structure&lt;/h2&gt;
&lt;p&gt;Move the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hello Extensions&lt;/code&gt; files to a subfolder called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt;.
At the end of this tutorial, our files structure will look like this:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/files-structure-200-484bbc2a8.webp 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/files-structure-202-484bbc2a8.webp 202w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/files-structure-200-484bbc2a8.png 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/files-structure-202-484bbc2a8.png 202w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/files-structure-202-484bbc2a8.png&quot; alt=&quot;post image&quot; width=&quot;202&quot; height=&quot;142&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;If have any doubt about the files structure during this tutorial, you can download the full solution in section &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Download&lt;/code&gt; at the end of the tutorial&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;installing-gulp&quot;&gt;Installing gulp&lt;/h2&gt;
&lt;p&gt;To allow us to build our workflow, first, we need to install gulp.&lt;/p&gt;

&lt;p&gt;Follow the instructions described in &lt;a href=&quot;https://gulpjs.com/docs/en/getting-started/quick-start/&quot;&gt;Quick Start&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;In the section &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Create a project directory and navigate into it&lt;/code&gt; you just need to open the root folder of our file structure described in the previous section&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;In the section &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Create a package.json file in your project directory&lt;/code&gt; you can use the default values for all the questions of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm init&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;You don’t need to perform the section &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Create a gulpfile&lt;/code&gt;, because we will perform it in the next section.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;the-gulpfilejs-file&quot;&gt;The gulpfile.js file&lt;/h2&gt;
&lt;p&gt;Create a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gulpfile.js&lt;/code&gt; in the root folder.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=gulpfile.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;This is the full &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gulpfile.js&lt;/code&gt; file that will allow our development workflow for different environments.&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-gulpfilejs-sections&quot;&gt;The gulpfile.js sections&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/project-128-4f597ed4f.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/project-128-4f597ed4f.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/project-128-4f597ed4f.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;Now I will explain each section of it.
&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;requires-section&quot;&gt;Requires section&lt;/h3&gt;
&lt;p&gt;This section define the NPM packages need for our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gulpfile.js&lt;/code&gt;.
&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=requires.section.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The first one is &lt;a href=&quot;https://www.npmjs.com/package/gulp&quot;&gt;gulp&lt;/a&gt;, then we need the package &lt;a href=&quot;&quot;&gt;del&lt;/a&gt; that will allow us to clean our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dist&lt;/code&gt; folder, 
after &lt;a href=&quot;https://www.npmjs.com/package/gulp-merge-json&quot;&gt;gulp-merge-json&lt;/a&gt; to allow us to merge our environment config files. The last one is &lt;a href=&quot;https://www.npmjs.com/package/fs&quot;&gt;fs&lt;/a&gt; to allow read and write files.&lt;/p&gt;

&lt;h3 id=&quot;consts-section&quot;&gt;Consts section&lt;/h3&gt;
&lt;p&gt;This is quite simple, we are just reading the command-line argument called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config&lt;/code&gt;. If it is not present, the default value is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DEV&lt;/code&gt;. 
&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=consts.section.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;exports-section&quot;&gt;Exports section&lt;/h3&gt;
&lt;p&gt;Now we jump to the last line of the file to explain the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exports.default&lt;/code&gt;. 
Here we are basically defining the order of each function that will be called when we run our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gulpfile.js&lt;/code&gt; file:
&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=exports.section.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;clean-section&quot;&gt;Clean section&lt;/h3&gt;
&lt;p&gt;Cleans our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dist&lt;/code&gt; folder.
&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=clean.section.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;copyallfiles-section&quot;&gt;CopyAllFiles section&lt;/h3&gt;
&lt;p&gt;Copies all files from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt; folder to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dist&lt;/code&gt; folder
&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=copyAllFiles.section.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;transformconfig-section&quot;&gt;TransformConfig section&lt;/h3&gt;
&lt;p&gt;Transforms our config.json files, merging the source one with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;environment&lt;/code&gt; one.
&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=transformConfig.section.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;writeconfigjsfile-section&quot;&gt;WriteConfigJsFile section&lt;/h3&gt;
&lt;p&gt;Writes our transformed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config.json&lt;/code&gt; file to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scripts&lt;/code&gt; folder to allow our Chrome Extension’s .js files access the config values.
&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=writeConfigJsFile.section.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;transformmanifest-section&quot;&gt;TransformManifest section&lt;/h3&gt;
&lt;p&gt;Transforms our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;manifest.json&lt;/code&gt; file too.
&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=transformManifest.section.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;watch-section&quot;&gt;Watch section&lt;/h3&gt;
&lt;p&gt;Watches for any change in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt; folder and automatically repeat the previous steps.
&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=watch.section.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;packagesjson-file&quot;&gt;packages.json file&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/package-128-f3193c47c.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;Change the content of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;packages.json&lt;/code&gt; file to the content below to update the dependencies.
&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=packages.json&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Then run the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install&lt;/code&gt; in the root folder, after that run the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install gulp&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;running-the-gulp-for-the-first-time&quot;&gt;Running the gulp for the first time&lt;/h2&gt;
&lt;p&gt;Now, if you just run the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gulp&lt;/code&gt; in the root folder, you should see an output like this:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-failed-config-200-d0dfc6cee.webp 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-failed-config-369-d0dfc6cee.webp 369w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-failed-config-200-d0dfc6cee.png 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-failed-config-369-d0dfc6cee.png 369w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-failed-config-369-d0dfc6cee.png&quot; alt=&quot;post image&quot; width=&quot;369&quot; height=&quot;148&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h2 id=&quot;creating-the-configjson-files&quot;&gt;Creating the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config.json&lt;/code&gt; files&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/config-128-c46695ddc.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/config-128-c46695ddc.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/config-128-c46695ddc.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;We need to create our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config.json&lt;/code&gt; files.
They are 3 files:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config.json&lt;/code&gt;: the baseline file, our common configuration should be defined here and will be used for the DEV environment.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config.TEST.json&lt;/code&gt;: the file that the define specific configuration values for the TEST environment&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config.PROD.json&lt;/code&gt;: the file that the define specific configuration values for the PROD environment
&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;If you’re familiar with &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/web-forms/overview/deployment/visual-studio-web-deployment/web-config-transformations&quot;&gt;Web.config File Transformations&lt;/a&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;appsettings.json&lt;/code&gt; files transformation, the philosophy used here is the same: the baseline file (config.json) contains all the common configuration values, and the specific environment files, like config.TEST.json and config.PROD.json, need to define only the values that are different for that environment&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Create the 3 files inside the subfolder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt;.
Here is the content of each one:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=config.json&quot;&gt; &lt;/script&gt;

&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=config.TEST.json&quot;&gt; &lt;/script&gt;

&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=config.PROD.json&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;running-the-gulp-for-the-second-time&quot;&gt;Running the gulp for the second time&lt;/h2&gt;
&lt;p&gt;Run the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gulp&lt;/code&gt; in the root folder, you should see an output like this:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-ok-no-manifest-200-b124fa8a9.webp 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-ok-no-manifest-379-b124fa8a9.webp 379w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-ok-no-manifest-200-b124fa8a9.png 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-ok-no-manifest-379-b124fa8a9.png 379w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-ok-no-manifest-379-b124fa8a9.png&quot; alt=&quot;post image&quot; width=&quot;379&quot; height=&quot;255&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;p&gt;There is a new subfolder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dist&lt;/code&gt; created. Load it on Chrome Extensions page:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/chrome-extension-page-200-0991800ea.webp 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/chrome-extension-page-400-0991800ea.webp 400w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/chrome-extension-page-423-0991800ea.webp 423w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/chrome-extension-page-200-0991800ea.png 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/chrome-extension-page-400-0991800ea.png 400w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/chrome-extension-page-423-0991800ea.png 423w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/chrome-extension-page-423-0991800ea.png&quot; alt=&quot;post image&quot; width=&quot;423&quot; height=&quot;230&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;p&gt;The plugin should work ok.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;Remember to remove the plugin previously loaded on Chrome and add it again from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dist&lt;/code&gt; folder.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;creating-the-hellojs&quot;&gt;Creating the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello.js&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Create a new file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello.js&lt;/code&gt; inside the subfolder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scripts&lt;/code&gt;.
We will use this file to change the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;H1&lt;/code&gt; tag inside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello.html&lt;/code&gt;
&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=hello.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;loading-scripts-on-hellohtml&quot;&gt;Loading scripts on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello.html&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Change the content of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello.html&lt;/code&gt; file to the content bellow:
&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=hello.html&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;This will load the .js and add an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt; attribute to our  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;H1&lt;/code&gt; tag.&lt;/p&gt;

&lt;h2 id=&quot;reading-the-configuration-inside-the-scripts&quot;&gt;Reading the configuration inside the scripts&lt;/h2&gt;
&lt;p&gt;The first thing we need to do is change our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;manifest.json&lt;/code&gt; file to allow the content of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scripts/config.js&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scripts/hello.js&lt;/code&gt; been read by the extension .js.
Open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;manifest.json&lt;/code&gt; and change it to the content below:
&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=manifest.json&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The line &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;/scripts/config.js&quot;&lt;/code&gt; is what we need to access the configuration values.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-manifestjson-files&quot;&gt;Creating the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;manifest.json&lt;/code&gt; files&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/manifest-128-579a71043.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/manifest-128-579a71043.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/manifest-128-579a71043.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;We need to create our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;manifest.json&lt;/code&gt; files, in the same way, we created our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config.json&lt;/code&gt; files.
&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
They are 3 files:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;manifest.json&lt;/code&gt;: the baseline file, our common manifest definition, and used by DEV environment (already created).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;manifest.TEST.json&lt;/code&gt;: the file that the define specific manifest configuration values for the TEST environment&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;manifest.PROD.json&lt;/code&gt;: the file that the define specific manifest configuration values for the PROD environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create the 2 files inside the subfolder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt;.
Here is the content of each one:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=manifest.TEST.json&quot;&gt; &lt;/script&gt;

&lt;script src=&quot;https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=manifest.PROD.json&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;running-the-gulp-for-each-environment&quot;&gt;Running the gulp for each environment&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-200-3afbb65ab.webp 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-336-3afbb65ab.webp 336w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-200-3afbb65ab.png 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-336-3afbb65ab.png 336w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-336-3afbb65ab.png&quot; alt=&quot;post image&quot; width=&quot;336&quot; height=&quot;167&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;Run the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gulp&lt;/code&gt; in the root folder.
This will use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DEV&lt;/code&gt; configuration from config.js and manifest.json&lt;/p&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;Is the same if you run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gulp --config DEV&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Now, try to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gulp --config TEST&lt;/code&gt;.
In the Chrome Extensions page you should see something like this:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-extension-test-chrome-200-439243e20.webp 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-extension-test-chrome-400-439243e20.webp 400w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-extension-test-chrome-468-439243e20.webp 468w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-extension-test-chrome-200-439243e20.png 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-extension-test-chrome-400-439243e20.png 400w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-extension-test-chrome-468-439243e20.png 468w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-extension-test-chrome-468-439243e20.png&quot; alt=&quot;post image&quot; width=&quot;468&quot; height=&quot;358&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;p&gt;Your extension is using the TEST environment values.
When you click on the extension icon on the Chrome toolbar, you should see something like this:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-world-test-129-24527d511.webp 129w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-world-test-129-24527d511.png 129w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-world-test-129-24527d511.png&quot; alt=&quot;post image&quot; width=&quot;129&quot; height=&quot;177&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;You can try to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gulp --config PROD&lt;/code&gt;. To see the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PROD&lt;/code&gt; environment values on the extension.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;running-gulp---watch&quot;&gt;Running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gulp --watch&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;To have a fast and streamline workflow, we need that every time we change something on our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt; folder, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dist&lt;/code&gt; folder automatically updates and we can see the changes right on Chrome.&lt;/p&gt;

&lt;p&gt;Run the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gulp --watch&lt;/code&gt;. It’ll monitor your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt; folder and update the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dist&lt;/code&gt;.&lt;br /&gt;
You can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--config&lt;/code&gt; option combine, like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gulp --watch --config TEST&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;download&quot;&gt;Download&lt;/h2&gt;
&lt;p&gt;You can download the full source code of the plugin of this tutorial: &lt;a href=&quot;/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/chrome-extension-sample.zip&quot;&gt;chrome-extension-sample.zip&lt;a&gt;.&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this .zip are all files mentioned in this tutorial, you just need to set up your gulp environment and call the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install gulp&lt;/code&gt; before starting to use it.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;In this tutorial, we learned how to create a development workflow for a Chrome extension, with different configurations and manifest.json for each environment, like DEV, TEST, and PROD.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Focused Inspector</title>
   <link href="//unitytips-focused-inspector/"/>
   <updated>2020-09-08T00:00:00-03:00</updated>
   <id>//unitytips-focused-inspector</id>
   <content type="html">&lt;p&gt;Starting in Unity 2020.1, you can add a dedicated inspector window for a specific GameObject, Component, or Asset. 
It always displays the properties of the item you opened it for, even if you select something else in the editor.&lt;/p&gt;

&lt;p&gt;To activate a Focused Inspector, select an item &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(GameObject, Component, or Asset)&lt;/code&gt; and in the context menu hit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Properties...&lt;/code&gt; menu item.&lt;/p&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2020/09/08/unitytips-focused-inspector/focused-inspector.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;More details in the official documentation: &lt;a href=&quot;https://docs.unity3d.com/2020.1/Documentation/Manual/InspectorFocused.html&quot;&gt;Focused Inspectors&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity 2020.1&colon; What's new</title>
   <link href="//unity-2020-1-whats-new/"/>
   <updated>2020-09-04T00:00:00-03:00</updated>
   <id>//unity-2020-1-whats-new</id>
   <content type="html">
&lt;h2 id=&quot;unity-20201&quot;&gt;Unity 2020.1&lt;/h2&gt;
&lt;p&gt;The Unity 2020.1 was official release on &lt;a href=&quot;https://blogs.unity3d.com/2020/07/23/unity-2020-1-is-now-available/&quot;&gt;July 23, 2020&lt;/a&gt; with a lot of fixes, API changes, changes, improvements and features.
You can find the new features directly on the Unity manual accessing this search: &lt;a href=&quot;https://docs.unity3d.com/2020.1/Documentation/Manual/30_search.html?q=newin20201&quot;&gt;newin20201&lt;/a&gt;.
To read all items, access the complete &lt;a href=&quot;https://unity3d.com/unity/whats-new/2020.1.0&quot;&gt;release notes&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;stats&quot;&gt;Stats&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Fixes: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;805&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;API Changes: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;79&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Changes: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;70&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Improvements: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;215&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Features: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;74&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/yYjqJvd8lQI &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;my-feature-highlights&quot;&gt;My feature highlights&lt;/h2&gt;
&lt;p&gt;Below are the features that most caught my attention and that I believe can positively impact my development workflow.&lt;/p&gt;

&lt;h3 id=&quot;focused-inspector&quot;&gt;Focused Inspector&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Editor: Add focused Inspector, a property editor to inspect single object.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is something I have been looking for for a while, an inspector editor for a specific item in the hierarchy.
Unity went further, allowing an editor focused on a component too.&lt;/p&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2020/09/04/unity-2020-1-whats-new/focused-inspector.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;

&lt;h4 id=&quot;for-gameobjects-and-project-assets&quot;&gt;For GameObjects and Project Assets&lt;/h4&gt;
&lt;p&gt;Right-click a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GameObject&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hierarchy view&lt;/code&gt;, or an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Asset&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Project view&lt;/code&gt;.
From the context menu, select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Properties&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Alternatively, select the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GameObject&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Asset&lt;/code&gt; and do one of the following:&lt;br /&gt;
From the main menu, select Assets &amp;gt; Properties.
Use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Alt + P / Option + Shift + P&lt;/code&gt; shortcut.&lt;/p&gt;

&lt;h4 id=&quot;for-components&quot;&gt;For components&lt;/h4&gt;
&lt;p&gt;Inspect the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GameObject&lt;/code&gt; and locate the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;component&lt;/code&gt; you want to open a focused Inspector for.&lt;br /&gt;
From the component’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;More items (⋮) menu&lt;/code&gt;, select Properties.&lt;/p&gt;

&lt;p&gt;More details in the &lt;a href=&quot;https://docs.unity3d.com/2020.1/Documentation/Manual/InspectorFocused.html&quot;&gt;official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;previewscenestage&quot;&gt;PreviewSceneStage&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Editor: Introduced PreviewSceneStage. Implement custom stages by inheriting from this class.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I found this interesting but did not found any good documentation on how to use it.&lt;/p&gt;

&lt;h3 id=&quot;switch-between-debug-and-release-code-optimizations&quot;&gt;Switch between debug and release code optimizations&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Editor: Support to switch between debug and release code optimizations without restarting the Unity Editor improving Unity Editor performance when compiling in release.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/switch-compilation-mode-200-29e77de54.webp 200w, /assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/switch-compilation-mode-388-29e77de54.webp 388w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/switch-compilation-mode-200-29e77de54.png 200w, /assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/switch-compilation-mode-388-29e77de54.png 388w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/switch-compilation-mode-388-29e77de54.png&quot; alt=&quot;post image&quot; width=&quot;388&quot; height=&quot;149&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h3 id=&quot;lighting-settings-as-an-asset&quot;&gt;Lighting settings as an asset&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;GI: Added all lighting settings as an asset. This will allow the user to share them between scenes or switch them out in an easy way.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This can be quite useful when we need different lighting setups for different target platforms.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/lighting-seetings-asset-200-198be746b.webp 200w, /assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/lighting-seetings-asset-400-198be746b.webp 400w, /assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/lighting-seetings-asset-554-198be746b.webp 554w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/lighting-seetings-asset-200-198be746b.png 200w, /assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/lighting-seetings-asset-400-198be746b.png 400w, /assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/lighting-seetings-asset-554-198be746b.png 554w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/lighting-seetings-asset-554-198be746b.png&quot; alt=&quot;post image&quot; width=&quot;554&quot; height=&quot;638&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h3 id=&quot;graphics-getpixeldata-api-was-added&quot;&gt;Graphics: GetPixelData API was added&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Graphics: GetPixelData API was added to Texture2D, Texture3D, Texture2DArray, Cubemap and CubemapArray classes. It allows getting a pointer to the data of a particular mip level/array element in a Texture for reading/writing, and without creating any memory allocations (similar to Texture2D.GetRawTextureData).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;input-system-is-now-verified&quot;&gt;Input System is now verified&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Input: The Input System has moved out of preview.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/sQaF9_jd9k4 &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h3 id=&quot;save-and-restore-particle-system-state-data&quot;&gt;Save and restore Particle System state data&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Particles: Abiltiy to save and restore Particle System state data, making it possible to save a snapshot of an entire Particle System at a point in time. A use case for this is for efficient rewind support, by saving periodic keyframes of the particle state, to avoid full resimulations.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It seems to be possible through methods &lt;a href=&quot;https://docs.unity3d.com/2020.1/Documentation/ScriptReference/ParticleSystem.GetPlaybackState.html&quot;&gt;GetPlaybackState&lt;/a&gt; and &lt;a href=&quot;https://docs.unity3d.com/2020.1/Documentation/ScriptReference/ParticleSystem.SetPlaybackState.html&quot;&gt;SetPlaybackState&lt;/a&gt;, but they were already available in Unity 2019.4.&lt;/p&gt;

&lt;h3 id=&quot;new-component-articulationbody&quot;&gt;New component ArticulationBody&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Physics: Add a new component ArticulationBody that helps to create articulations. An articulation is a set of bodies, some of which have their relative motion constrained. All bodies are organized in a logical tree, where parent-child relation expresses the constrained motion. Unlike regular Rigidbodies with Joints, articulations are solved with a different solver (Featherstone) in reduced coordinates which guarantees there will never be any stretch of locked degrees of freedom. Typical examples of articulations include robotic arms, ragdolls, etc.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This blog post talks in more details this new physics component: &lt;a href=&quot;https://blogs.unity3d.com/2020/05/20/use-articulation-bodies-to-easily-prototype-industrial-designs-with-realistic-motion-and-behavior/&quot;&gt;Use articulation bodies to easily prototype industrial designs with realistic motion and behavior&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;new-shader-preprocessor&quot;&gt;New shader preprocessor&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Shaders: New shader preprocessor (experimental).&lt;/li&gt;
    &lt;li&gt;Faster shader compilation.&lt;/li&gt;
    &lt;li&gt;Accurate include dependency tracking.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;These were the features that brought my attention to Unity 2020.1.&lt;br /&gt;
What were the features that caught your attention?&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity Distribution Portal (UDP) Journey&colon; Tips & Tricks</title>
   <link href="//unity-distribution-portal-udp-journey-tips-and-tricks/"/>
   <updated>2020-09-01T00:00:00-03:00</updated>
   <id>//unity-distribution-portal-udp-journey-tips-and-tricks</id>
   <content type="html">&lt;p&gt;In this post, I will list some tips and tricks that I learned in my journey using the &lt;a href=&quot;https://unity.com/products/unity-distribution-portal&quot;&gt;Unity Distribution Portal (UDP)&lt;/a&gt; to publish my game &lt;a href=&quot;https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.puzzimals&quot;&gt;Puzzimals&lt;/a&gt; to 4 new stores, reaching millions of new users, with a single build.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Unity has recently &lt;a href=&quot;https://blogs.unity3d.com/2020/08/28/unlock-access-to-over-a-billion-new-players-for-your-android-mobile-game/&quot;&gt;launch to everyone the Unity Distribution Portal (UDP)&lt;/a&gt; a platform that enable Unity developers to distribute Android games beyond Google Play, into stores like Samsung Galaxy Store, ONE Store, Mi GetApps, HUAWEI AppGallery, QooApp Game Store, SHAREit Game Store, TPAY MOBILE Stores, APPTUTTI, and VIVEPORT.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Unity Distribution Portal was created to help make publishing mobile games on alternative app stores faster and easier for developers. When you submit your game, UDP automatically creates specific builds with all required SDKs in the background, saving you a substantial amount of time when publishing to multiple stores.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Unity Distribution Portal (UDP) lets you distribute your games to multiple app stores through a single hub. UDP repacks your Android build with each store’s dedicated In-App Purchase SDK. You can manage all your store submissions from the UDP console.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This post is focused on games that have IAP and use Google Play Services, like leaderboards and achievements.
If your game does not have any of these features, publish to UDP is quite a more straightforward process and probably these tips here won’t be useful for you.&lt;/p&gt;

&lt;h2 id=&quot;available-stores&quot;&gt;Available Stores&lt;/h2&gt;
&lt;p&gt;As I write this post Unity is working to add even more stores to UDP.
From the 9 stores supported, 7 are fully integrated with UDP. What this meaning? You just need to create your account on each store, via UDP (in some cases fill some forms and send some ID and bank docs), and UDP will perform all the steps need to make your game available on the store.&lt;/p&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting started&lt;/h2&gt;
&lt;p&gt;Is not the intent of this post cover everything about how to publish your game using UDP, I guess this quite well documented on &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.purchasing.udp@2.0/manual/index.html&quot;&gt;UDP package documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The idea of this post is to point out some tips and tricks that can help you, as helped me, to understand how to use UDP.&lt;/p&gt;

&lt;h2 id=&quot;read-the-docs&quot;&gt;Read the docs&lt;/h2&gt;
&lt;p&gt;Please, if you did not read the official documentation yet, go and &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.purchasing.udp@2.0/manual/index.html&quot;&gt;read it&lt;/a&gt;, then come back here. You’ll better understand this post and the whole UDP solution after educated yourself about it.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-200-51d2d476b.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-400-51d2d476b.webp 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-800-51d2d476b.webp 800w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-1024-51d2d476b.webp 1024w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-200-51d2d476b.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-400-51d2d476b.png 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-800-51d2d476b.png 800w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-1024-51d2d476b.png 1024w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-800-51d2d476b.png&quot; alt=&quot;post image&quot; width=&quot;1024&quot; height=&quot;768&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h2 id=&quot;1-implement&quot;&gt;1. Implement&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;What docs says: Set up and configure UDP in the Unity Editor, implement UDP in your game project, and populate your IAP Catalog with your in-app purchase products (if any).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;11-create-a-new-game-on-udp&quot;&gt;1.1 Create a new game on UDP&lt;/h3&gt;
&lt;p&gt;Go to the UDP dashboard and just create a new game. 
At this moment just set the game title.&lt;/p&gt;

&lt;h3 id=&quot;12-iap-and-target-udp&quot;&gt;1.2 IAP and Target UDP&lt;/h3&gt;
&lt;p&gt;There is two way to use UDP on your project: using the UDP package or using the Unity IAP.
In my case, I was using IAP already in the project.&lt;/p&gt;

&lt;p&gt;This tip is in the official &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.purchasing.udp@2.0/manual/games-with-iap.html&quot;&gt;documentation&lt;/a&gt;, but would like to reinforce it:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In the Unity Editor, to choose UDP as the Android build target, select Window &amp;gt; Unity IAP &amp;gt; Android &amp;gt; Target Unity Distribution Portal (UDP).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You’ll need this when you build to UDP and remember to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Target Google Play&lt;/code&gt; when you build to Google Play.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-200-2be9cf25c.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-400-2be9cf25c.webp 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-800-2be9cf25c.webp 800w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-1000-2be9cf25c.webp 1000w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-200-2be9cf25c.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-400-2be9cf25c.png 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-800-2be9cf25c.png 800w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-1000-2be9cf25c.png 1000w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-800-2be9cf25c.png&quot; alt=&quot;post image&quot; width=&quot;1000&quot; height=&quot;375&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;2-build--deploy&quot;&gt;2. Build &amp;amp; deploy&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;What docs says: Build your UDP Android package (apk), test it in the UDP Sandbox environment, and deploy it to the UDP console where you’ll begin preparing your game for submission to the stores.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;21-sandbox-environment-test&quot;&gt;2.1 Sandbox environment test&lt;/h3&gt;
&lt;p&gt;In the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sandbox Testing&lt;/code&gt; section of your game page on UDP, you will find some instructions on how to test your game on the UDP sandbox.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;You will need to do this before repacking your game for the stores.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Just build your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.apk&lt;/code&gt; on Unity and open it on emulator (like &lt;a href=&quot;https://www.bluestacks.com/&quot;&gt;BlueStacks&lt;/a&gt;) or directly on your Android device.
If you setup UDP right, you should see a screen like below when the game starts.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-login-200-65a5a4303.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-login-400-65a5a4303.webp 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-login-489-65a5a4303.webp 489w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-login-200-65a5a4303.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-login-400-65a5a4303.png 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-login-489-65a5a4303.png 489w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-login-489-65a5a4303.png&quot; alt=&quot;post image&quot; width=&quot;489&quot; height=&quot;239&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;To login in this screen, use the accounts in the setup on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sandbox Test Account&lt;/code&gt;. Remember those e-mails don’t need to exist, they are just test accounts to validate UDP setup&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Perform the login on the UDP sandbox and test your IAP.&lt;/p&gt;

&lt;p&gt;After this, you can refresh your game page on UDP and you should see the result below on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sandbox Testing&lt;/code&gt; section:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/sandbox-testing-200-289a63222.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/sandbox-testing-346-289a63222.webp 346w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/sandbox-testing-200-289a63222.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/sandbox-testing-346-289a63222.png 346w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/sandbox-testing-346-289a63222.png&quot; alt=&quot;post image&quot; width=&quot;346&quot; height=&quot;86&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;If you did not setup the UDP on your project, you should see a message like this on UDP dashboard notifications &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apk analytics failed, caused by: analyse apk failed, caused by:Failed to find GameSettings.prop, please import udp sdk and generate GameSettings.&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&quot;22-package-name-extensions-and-google-play-services&quot;&gt;2.2 Package name extensions and Google Play Services&lt;/h3&gt;
&lt;p&gt;When UDP repacks your game with store-specific SDK it will, most of the time, change the name of the package, adding a store-specific extension, like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gs&lt;/code&gt; to Samsung Galaxy Store&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.unity.migc&lt;/code&gt; to Mi GetApps&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.qooapp&lt;/code&gt; QooApp to Game Store&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Because of this extension, we will need to configure a new OAuth credential to each extension on &lt;a href=&quot;https://console.developers.google.com/apis&quot;&gt;Google API Console&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In my case on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;App Signature&lt;/code&gt; section of the game info, a used the recommend option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Export and upload your own key and certificate&lt;/code&gt;. This is the same certificate used by Google Play Services and APIs.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-200-3a4a50966.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-400-3a4a50966.webp 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-800-3a4a50966.webp 800w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-882-3a4a50966.webp 882w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-200-3a4a50966.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-400-3a4a50966.png 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-800-3a4a50966.png 800w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-882-3a4a50966.png 882w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-800-3a4a50966.png&quot; alt=&quot;post image&quot; width=&quot;882&quot; height=&quot;238&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;p&gt;Go to &lt;a href=&quot;https://console.developers.google.com/apis&quot;&gt;Google API Console&lt;/a&gt;, select your game project on the dropdown, then go to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credentials&lt;/code&gt; section, then on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OAuth 2.0 Client IDs&lt;/code&gt; section select the item with the name of your game, then copy the value of the field &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHA-1 certificate fingertip&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, go back to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credentials&lt;/code&gt; section and click on the button &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Create credentials&lt;/code&gt;, then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OAuth client ID&lt;/code&gt;.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/google-api-credentials-200-ef36e16c7.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/google-api-credentials-400-ef36e16c7.webp 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/google-api-credentials-596-ef36e16c7.webp 596w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/google-api-credentials-200-ef36e16c7.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/google-api-credentials-400-ef36e16c7.png 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/google-api-credentials-596-ef36e16c7.png 596w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/google-api-credentials-596-ef36e16c7.png&quot; alt=&quot;post image&quot; width=&quot;596&quot; height=&quot;240&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;p&gt;In the new page, select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Android&lt;/code&gt; on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Application type&lt;/code&gt; dropdown.&lt;/p&gt;

&lt;p&gt;In the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Name&lt;/code&gt; field you can write anything you want, but maybe use your game name following with the extension store can help to find it later.&lt;/p&gt;

&lt;p&gt;In the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Package name&lt;/code&gt; field you should add the exact package name for the specific store on UDP. For example, in my case for Mi GetApps store, the package name was &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;br.com.diegogiacomelli.puzzimals.unity.migc&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;If you have doubted what is the exact package name for your game on a specific store on UDP, you can click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Advanced&lt;/code&gt; link of that store on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Publish&lt;/code&gt; tab of UDP&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Now in the field &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHA-1 certificate fingertip&lt;/code&gt; you should paste the value you copy before from the original &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OAuth 2.0 Client IDs&lt;/code&gt; configuration.&lt;/p&gt;

&lt;p&gt;Then click on the button &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Create&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You will need to repeat those steps for each store that change your package name.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;3-game-info&quot;&gt;3. Game Info&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;What docs says: On the UDP console, provide app store listing information and resources for your game, such as multi-language descriptions, multi-currency price points, screenshots, video trailers, and create releases for distribution.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;31-import-from-google-play&quot;&gt;3.1 Import from Google Play&lt;/h3&gt;
&lt;p&gt;As you follow the UDP documentation you will reach the point will need to create your game on the UDP dashboard.
If you already have the game published on Google Play, as was my case with &lt;a href=&quot;https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.puzzimals&quot;&gt;Puzzimals&lt;/a&gt;, you can use the right-top button &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IMPORT FROM GOOGLE PLAY&lt;/code&gt; in the game page.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/import-from-google-200-0e5146f1b.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/import-from-google-400-0e5146f1b.webp 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/import-from-google-610-0e5146f1b.webp 610w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/import-from-google-200-0e5146f1b.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/import-from-google-400-0e5146f1b.png 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/import-from-google-610-0e5146f1b.png 610w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/import-from-google-610-0e5146f1b.png&quot; alt=&quot;post image&quot; width=&quot;610&quot; height=&quot;239&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;p&gt;After the import, you can edit the information as well.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;You can add the argument &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hl&lt;/code&gt; to your Google Play url to import a specific translation, like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.puzzimals&amp;amp;hl=pt&lt;/code&gt; to import Portuguese translation&lt;/p&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;4-submission&quot;&gt;4. Submission&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;What docs says: Sign up with the stores using your UnityID, and register your game with the app stores directly from inside the UDP console.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Go to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Publish&lt;/code&gt; tab, select a store and click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sign up to...&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Follow the needed steps for each store you would like to publish.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;5-publish&quot;&gt;5. Publish&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;What docs says: Select the stores you want to submit your game to. UDP automatically repacks your game into store-specific builds and submits them to the stores along with the relevant game descriptions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;51-upload&quot;&gt;5.1 Upload&lt;/h3&gt;
&lt;p&gt;Now that you have a valid UDP &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.apk&lt;/code&gt; and game info filled, you can upload it on the UDP dashboard, inside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Binary&lt;/code&gt; section.&lt;/p&gt;

&lt;h3 id=&quot;52-testing-your-repack-apk&quot;&gt;5.2 Testing your repack .apk&lt;/h3&gt;
&lt;p&gt;Now the specific store should show a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Repack game&lt;/code&gt; dropdown on the UDP dashboard.&lt;/p&gt;

&lt;p&gt;Select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Repack game&lt;/code&gt; and UDP should generate a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.apk&lt;/code&gt; of your game with the store SDK. This &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.apk&lt;/code&gt; will be available to download on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Advanced&lt;/code&gt; link. Download it from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Download APK Certificate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For each store, you need to test your repack &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.apk&lt;/code&gt; to certificate that everything in your game is running ok.&lt;/p&gt;

&lt;p&gt;Open the repack &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.apk&lt;/code&gt; on an emulator or an Android device.&lt;/p&gt;

&lt;p&gt;Test your IAP and Google Play Services, they are working as expected?&lt;/p&gt;

&lt;p&gt;For each store, you will see different screens. For example, for QooApp you will see something like this:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/qooapp-login-200-1e49178bb.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/qooapp-login-282-1e49178bb.webp 282w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/qooapp-login-200-1e49178bb.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/qooapp-login-282-1e49178bb.png 282w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/qooapp-login-282-1e49178bb.png&quot; alt=&quot;post image&quot; width=&quot;282&quot; height=&quot;268&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h3 id=&quot;53-send-it-to-review&quot;&gt;5.3 Send it to review&lt;/h3&gt;
&lt;p&gt;Now you can select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Submit to Store&lt;/code&gt; in the dropdown, then select the checkbox store on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Publish&lt;/code&gt; page and click on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Publish&lt;/code&gt; button.
UDP will send the game to store review and you can monitor the progress on the dashboard.
UDP will send to you an e-mail when the game is approved.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-200-3447a9f64.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-400-3447a9f64.webp 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-800-3447a9f64.webp 800w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-1000-3447a9f64.webp 1000w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-200-3447a9f64.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-400-3447a9f64.png 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-800-3447a9f64.png 800w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-1000-3447a9f64.png 1000w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-800-3447a9f64.png&quot; alt=&quot;post image&quot; width=&quot;1000&quot; height=&quot;470&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;6-performance&quot;&gt;6. Performance&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;What docs says: When your game is published, monitor its performance across the different stores from the UDP reporting dashboard.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wait the game been published on the store and will see the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Reporting Dashboard&lt;/code&gt; been populated with stats about the game.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;With these tips and tricks that I learned while using UDP I hope I helped you to the UDP Journey:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Implement UDP in your Unity project&lt;/li&gt;
  &lt;li&gt;Build and deploy your game to UDP&lt;/li&gt;
  &lt;li&gt;Edit your game information&lt;/li&gt;
  &lt;li&gt;Prepare your game for submission&lt;/li&gt;
  &lt;li&gt;Publish to stores&lt;/li&gt;
  &lt;li&gt;Track game performance&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Drawing a Maurer Rose With Unity</title>
   <link href="//drawing-a-maurer-rose-with-unity/"/>
   <updated>2020-08-21T00:00:00-03:00</updated>
   <id>//drawing-a-maurer-rose-with-unity</id>
   <content type="html">&lt;p&gt;In this tutorial we will learn how to draw a &lt;a href=&quot;https://en.wikipedia.org/wiki/Maurer_rose&quot;&gt;Maurer Rose&lt;/a&gt; with a &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/LineRenderer.html&quot;&gt;LineRenderer&lt;/a&gt; in Unity.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Recently, I was watching a video by &lt;a href=&quot;https://twitter.com/shiffman&quot;&gt;Daniel Shiffman&lt;/a&gt; about Maurer Rose that inspired me to try it out at Unity.&lt;/p&gt;

&lt;p&gt;Now you must be thinking “What the hell is a Maurer Rose?”, Well, I didn’t know it until I watched &lt;a href=&quot;https://youtu.be/4uU9lZ-HSqA&quot;&gt;that video&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let’s see what Wikipedia says about:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A Maurer rose of the rose r = sin(nθ) consists of the 360 lines successively connecting the above 361 points. Thus a Maurer rose is a polygonal curve with vertices on a rose.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The following gif shows the evolution of a Maurer Rose (n = 2, d = 29°) from 1 point to 361 points.&lt;/p&gt;
&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-sample.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;definition&quot;&gt;Definition&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/project-128-4f597ed4f.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/project-128-4f597ed4f.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/project-128-4f597ed4f.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;A Maurer Rose is always defined by two input parameters: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt; represents the number of petals. The rose has n petals if n is odd, and 2n petals if n is even (look to the gif above, n = 2, then 4 petals).&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d&lt;/code&gt; represents the angle in degrees for each line.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Let r = sin(nθ) be a rose in the polar coordinate system, where n is a positive integer.&lt;/p&gt;

  &lt;p&gt;We then take 361 points on the rose:
(sin(nk), k) (k = 0, d, 2d, 3d, …, 360d),
where d is a positive integer and the angles are in degrees, not radians.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This definition talks about &lt;a href=&quot;https://en.wikipedia.org/wiki/Polar_coordinate_system&quot;&gt;polar coordinate system&lt;/a&gt;. The more important thing to know about it is this: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;each point on a plane is determined by a distance from a reference point and an angle from a reference direction&lt;/code&gt;. So, if you want to draw a line from a point, we need to take that point, an angle, and distance to calculate the second point.&lt;/p&gt;

&lt;h2 id=&quot;the-formula&quot;&gt;The formula&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/math-128-7fe17d269.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/math-128-7fe17d269.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/math-128-7fe17d269.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;The basic formula is: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;r = sin(nθ)&lt;/code&gt; and we need to apply it to 361 points, where:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;r = sin(n * (d * point))&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In C# the code is something like this:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/9dc5d4d408c00e92143827293a017936.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;We calculate the angle for each point, then we get the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;r&lt;/code&gt; and find the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt; for the second point on the polar coordinate system.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mathf.PI / 180f&lt;/code&gt; is to convert from degrees to radians to work properly with the Mathf functions.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;maurerroselinerenderer&quot;&gt;MaurerRoseLineRenderer&lt;/h2&gt;
&lt;p&gt;Now the complete code for a MonoBehaviour that takes the formula we saw in the previous section and combine it with a LineRenderer to draw the Maurer Rose.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/f4aba5c5d7cbeb396ca784dff150e194.js&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;h2 id=&quot;using-the-maurerroselinerenderer&quot;&gt;Using the MaurerRoseLineRenderer&lt;/h2&gt;
&lt;p&gt;To use it, just create a new GameObject and add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MaurerRoseLineRenderer&lt;/code&gt; component to it.&lt;/p&gt;

&lt;p&gt;If you just hit play button, you will see something like this:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-first-try-200-d24407ade.webp 200w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-first-try-256-d24407ade.webp 256w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-first-try-200-d24407ade.png 200w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-first-try-256-d24407ade.png 256w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-first-try-256-d24407ade.png&quot; alt=&quot;post image&quot; width=&quot;256&quot; height=&quot;242&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;p&gt;&lt;br /&gt;
Go to the LineRenderer component and change the line width to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0.03&lt;/code&gt;, then hit play button again.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-second-try-200-71a3f234d.webp 200w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-second-try-256-71a3f234d.webp 256w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-second-try-200-71a3f234d.png 200w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-second-try-256-71a3f234d.png 256w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-second-try-256-71a3f234d.png&quot; alt=&quot;post image&quot; width=&quot;256&quot; height=&quot;224&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h2 id=&quot;testing-new-inputs&quot;&gt;Testing new inputs&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/programmer-128-6cef95d36.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;If you change the values of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;N&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;D&lt;/code&gt; of the component in the inspector, you will see a new Maurer Rose been drawing.&lt;/p&gt;

&lt;p&gt;The image below shows the result of 6 different inputs (the same inputs used on &lt;a href=&quot;https://en.wikipedia.org/wiki/Maurer_rose&quot;&gt;Wikipedia&lt;/a&gt;):&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-200-5a8621fe1.webp 200w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-400-5a8621fe1.webp 400w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-800-5a8621fe1.webp 800w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-1600-5a8621fe1.webp 1600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-200-5a8621fe1.png 200w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-400-5a8621fe1.png 400w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-800-5a8621fe1.png 800w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-1600-5a8621fe1.png 1600w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-800-5a8621fe1.png&quot; alt=&quot;post image&quot; width=&quot;2400&quot; height=&quot;400&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h2 id=&quot;going-beyond&quot;&gt;Going beyond&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/beyond-128-1d53f18c1.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/beyond-128-1d53f18c1.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/beyond-128-1d53f18c1.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;Now that you understand what is a Maurer Rose and how to code it inside Unity you can try to do some crazy things with it, like animate the input values or the number of points, or still using it to build a particle system.&lt;/p&gt;

&lt;p&gt;Below I show my realtime try on this matter:&lt;/p&gt;

&lt;iframe src=&quot;/apps/maurer-rose/index.html&quot; style=&quot;width: 100%;min-height: 700px;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In this tutorial, we learned how to draw a Maurer Rose with a LineRenderer.
This simple formula show how math can be used to explore creativity and beauty.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The font used on the WebGL sample is from &lt;a href=&quot;http://kenney.nl&quot;&gt;Kenney&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Puzzimals&colon; Open beta</title>
   <link href="//puzzimals-open-beta/"/>
   <updated>2020-08-12T00:00:00-03:00</updated>
   <id>//puzzimals-open-beta</id>
   <content type="html">&lt;p&gt;After 4 months of work, I am finally starting the open beta of Puzzimals: &lt;a href=&quot;https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.puzzimals&quot;&gt;https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.puzzimals&lt;/a&gt;&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/RmLcK4Z7EUY &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;cute-but-challenging&quot;&gt;Cute, but challenging!&lt;/h2&gt;

&lt;p&gt;Don’t let the cute look or super fun animations fool you, Puzzimals is a cube-matching game challenging you to match identical tiles in 100 levels of thought-provoking puzzles in a world map.&lt;/p&gt;

&lt;p&gt;Packed with features and creative puzzles you can combine cubes of ice, wild cards, bombs and so much more!&lt;/p&gt;

&lt;p&gt;Each level unlocks and increases in difficulty and offers an almost infinite number of combos.&lt;/p&gt;

&lt;p&gt;Fans of casual puzzle games will enjoy the crisp, colorful graphics featuring cute animals and the compelling music offers great relaxation.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; SettingsProvider</title>
   <link href="//unitytips-settings-provider/"/>
   <updated>2020-07-21T00:00:00-03:00</updated>
   <id>//unitytips-settings-provider</id>
   <content type="html">&lt;p&gt;You can add a custom section to &lt;a href=&quot;https://docs.unity3d.com/Manual/comp-ManagerGroup.html&quot;&gt;Project Settings&lt;/a&gt; window that allows you to configure some global settings for your project using a &lt;a href=&quot;https://docs.unity3d.com/2018.3/Documentation/ScriptReference/SettingsProvider.html&quot;&gt;SettingsProvider&lt;/a&gt;&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-200-27b940cc8.webp 200w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-400-27b940cc8.webp 400w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-800-27b940cc8.webp 800w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-1572-27b940cc8.webp 1572w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-200-27b940cc8.jpg 200w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-400-27b940cc8.jpg 400w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-800-27b940cc8.jpg 800w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-1572-27b940cc8.jpg 1572w&quot; type=&quot;image/jpeg&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-800-27b940cc8.jpg&quot; alt=&quot;post image&quot; width=&quot;1572&quot; height=&quot;618&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/623de59997fa6f2aaeeb231a2a789933.js?file=FrameworkSettings.cs&quot;&gt; &lt;/script&gt;

&lt;script src=&quot;https://gist.github.com/623de59997fa6f2aaeeb231a2a789933.js?file=FrameworkSettingsRegister.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; HelpBox Attribute (with docs button)</title>
   <link href="//unitytips-helpbox-attribute/"/>
   <updated>2020-07-14T00:00:00-03:00</updated>
   <id>//unitytips-helpbox-attribute</id>
   <content type="html">&lt;p&gt;You can create a &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/PropertyAttribute.html&quot;&gt;PropertyAttribute&lt;/a&gt; to display a help box on inspector showing a few lines of information, like &lt;a href=&quot;https://docs.unity3d.com/2020.1/Documentation/ScriptReference/EditorGUI.HelpBox.html&quot;&gt;EditorGUI.HelpBox&lt;/a&gt;, but with a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docs&lt;/code&gt; button to the documentation page.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-200-8dae754d8.webp 200w, /assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-400-8dae754d8.webp 400w, /assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-467-8dae754d8.webp 467w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-200-8dae754d8.png 200w, /assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-400-8dae754d8.png 400w, /assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-467-8dae754d8.png 467w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-467-8dae754d8.png&quot; alt=&quot;post image&quot; width=&quot;467&quot; height=&quot;413&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/be4850e86a0aacd3de4266830566b139.js?file=HelpBoxAttribute.cs&quot;&gt; &lt;/script&gt;

&lt;script src=&quot;https://gist.github.com/be4850e86a0aacd3de4266830566b139.js?file=HelpBoxDrawer.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/be4850e86a0aacd3de4266830566b139.js?file=SampleComponent.cs&quot;&gt; &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Social Share</title>
   <link href="//unitytips-social-share/"/>
   <updated>2020-07-07T00:00:00-03:00</updated>
   <id>//unitytips-social-share</id>
   <content type="html">&lt;p&gt;Using &lt;a href=&quot;https://github.com/yasirkula&quot;&gt;Süleyman Yasir KULA&lt;/a&gt; &lt;a href=&quot;https://github.com/yasirkula/UnityNativeShare&quot;&gt;Unity Native Share Plugin&lt;/a&gt; you can easily add native share to your Android/iOS games.&lt;/p&gt;

&lt;p&gt;I made the gist below that uses the plugin to add a social share component to any game object.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/07/07/unitytips-social-share/component-200-f6e7f7555.webp 200w, /assets/images/generated/assets/2020/07/07/unitytips-social-share/component-256-f6e7f7555.webp 256w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/07/07/unitytips-social-share/component-200-f6e7f7555.jpg 200w, /assets/images/generated/assets/2020/07/07/unitytips-social-share/component-256-f6e7f7555.jpg 256w&quot; type=&quot;image/jpeg&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/07/07/unitytips-social-share/component-256-f6e7f7555.jpg&quot; alt=&quot;post image&quot; width=&quot;256&quot; height=&quot;382&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/c03ec79fa0f0def94726f4b6914b4769.js?file=SocialShare.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Dynamic Log</title>
   <link href="//unitytips-dynamic-log/"/>
   <updated>2020-06-30T00:00:00-03:00</updated>
   <id>//unitytips-dynamic-log</id>
   <content type="html">&lt;p&gt;You can create a simple logging component to record logs from any UnityEvent and configure them directly in the editor:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/HHcZeWjV7vY &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/bba329d772f4fb7c8e6c9a1d3047bae2.js?file=DynamicLog.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Using ScriptableObject and EditorApplication.isPlaying to refresh the game view</title>
   <link href="//unitytips-using-scriptableobject-and-editorapplication-isplaying-to-refresh-the-game-view/"/>
   <updated>2020-04-28T00:00:00-03:00</updated>
   <id>//unitytips-using-scriptableobject-and-editorapplication-isplaying-to-refresh-the-game-view</id>
   <content type="html">&lt;p&gt;You can use &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/EditorApplication-isPlaying.html&quot;&gt;EditorApplication.isPlaying&lt;/a&gt; in your custom editor to update the game view when a &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/ScriptableObject.html&quot;&gt;ScriptableObject&lt;/a&gt; is updated and you need to restart the scene or do something more complex to see the result of ScriptableObject changed during the game’s playing in the editor.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/oM5-RJU6g2I &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; TimeSpan Box Drawer</title>
   <link href="//unitytips-timespan-box-drawer/"/>
   <updated>2020-04-21T00:00:00-03:00</updated>
   <id>//unitytips-timespan-box-drawer</id>
   <content type="html">&lt;p&gt;You can create a &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/PropertyDrawer.html&quot;&gt;PropertyDrawer&lt;/a&gt; to display a help box on inspector showing the time information in seconds fields using &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-timespan-format-strings&quot;&gt;TimeSpan format strings&lt;/a&gt;:&lt;/p&gt;
&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2020/04/21/unitytips-timespan-box-drawer/TimeSpanBox.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/bb3b4bf52e560c3d673cd3d50f563cfb.js?file=TimeSpanBoxAttribute.cs&quot;&gt; &lt;/script&gt;

&lt;script src=&quot;https://gist.github.com/bb3b4bf52e560c3d673cd3d50f563cfb.js?file=TimeSpanBoxDrawer.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/bb3b4bf52e560c3d673cd3d50f563cfb.js?file=TimeSpanBoxDrawerUsage.cs&quot;&gt; &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>Google Play Games Plugin for Unity&colon; Tips & Tricks</title>
   <link href="//google-play-games-plugin-for-unity-tips-and-tricks/"/>
   <updated>2020-04-18T00:00:00-03:00</updated>
   <id>//google-play-games-plugin-for-unity-tips-and-tricks</id>
   <content type="html">&lt;p&gt;In this post I will list some tips and tricks that I learned while using the &lt;a href=&quot;https://github.com/playgameservices/play-games-plugin-for-unity&quot;&gt;Google Play Games Plugin for Unity&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The Unity3D has a code interface for questions regarding social features in games, these interfaces are called &lt;a href=&quot;https://docs.unity3d.com/Manual/net-SocialAPI.html&quot;&gt;Social API&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It provides a unified interface to different social back-ends, such as GameCenter, and is meant to be used primarily by programmers on the game project.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When you use it on a real platform, you will need to use some plugin that implement those interfaces, in the case of Android this job is done by the &lt;a href=&quot;https://github.com/playgameservices/play-games-plugin-for-unity&quot;&gt;Google Play Games Plugin for Unity&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;configuring-the-game-on-google-play-console&quot;&gt;Configuring the game on Google Play Console&lt;/h2&gt;
&lt;p&gt;First of all you need to create the game on &lt;a href=&quot;https://play.google.com/publish&quot;&gt;Google Play Console&lt;/a&gt; as any other game and make an app release (an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Internal test track&lt;/code&gt; already works).&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-200-619cc16bd.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-400-619cc16bd.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-800-619cc16bd.webp 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-1600-619cc16bd.webp 1600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-200-619cc16bd.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-400-619cc16bd.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-800-619cc16bd.png 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-1600-619cc16bd.png 1600w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-800-619cc16bd.png&quot; alt=&quot;post image&quot; width=&quot;1912&quot; height=&quot;1278&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Then go to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Services &amp;amp; APIS&lt;/code&gt; menu, after enter on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Play game services&lt;/code&gt;.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-200-d9c94847a.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-400-d9c94847a.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-800-d9c94847a.webp 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-1600-d9c94847a.webp 1600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-200-d9c94847a.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-400-d9c94847a.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-800-d9c94847a.png 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-1600-d9c94847a.png 1600w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-800-d9c94847a.png&quot; alt=&quot;post image&quot; width=&quot;1872&quot; height=&quot;212&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Fill only the required information for test, then go to menu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Linked apps&lt;/code&gt; and link it to your game on with the app on Google Play Console.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-200-e3ebbde48.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-400-e3ebbde48.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-800-e3ebbde48.webp 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-1600-e3ebbde48.webp 1600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-200-e3ebbde48.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-400-e3ebbde48.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-800-e3ebbde48.png 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-1600-e3ebbde48.png 1600w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-800-e3ebbde48.png&quot; alt=&quot;post image&quot; width=&quot;1906&quot; height=&quot;390&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;creating-some-achievements-for-test&quot;&gt;Creating some achievements for test&lt;/h2&gt;
&lt;p&gt;In the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Game services section&lt;/code&gt; open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Achievements&lt;/code&gt; menu and add some achievements.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-200-06befe59c.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-400-06befe59c.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-800-06befe59c.webp 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-1600-06befe59c.webp 1600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-200-06befe59c.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-400-06befe59c.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-800-06befe59c.png 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-1600-06befe59c.png 1600w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-800-06befe59c.png&quot; alt=&quot;post image&quot; width=&quot;1916&quot; height=&quot;404&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I found empirically that test achievements that did not have an icon set on the Google Play Console did not show the standard Google Play Games UI when unlocked and were automatically locked again about 1 hour after they were unlocked.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;installing-the-plugin&quot;&gt;Installing the plugin&lt;/h2&gt;
&lt;p&gt;To install the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Play Games Plugin for Unity&lt;/code&gt;, you should follow the steps in &lt;a href=&quot;https://github.com/playgameservices/play-games-plugin-for-unity#plugin-installation&quot;&gt;Plugin Installation&lt;/a&gt; and &lt;a href=&quot;https://github.com/playgameservices/play-games-plugin-for-unity#android-setup&quot;&gt;Android Setup&lt;/a&gt; sections.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/android-setup-200-86fe283d8.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/android-setup-400-86fe283d8.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/android-setup-643-86fe283d8.webp 643w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/android-setup-200-86fe283d8.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/android-setup-400-86fe283d8.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/android-setup-643-86fe283d8.png 643w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/android-setup-643-86fe283d8.png&quot; alt=&quot;post image&quot; width=&quot;643&quot; height=&quot;191&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;oauth-and-upload-certificate&quot;&gt;OAuth and Upload Certificate&lt;/h2&gt;
&lt;p&gt;One thing can be a little confusing is about the certificate fingerprints.&lt;/p&gt;

&lt;p&gt;Go to &lt;a href=&quot;https://play.google.com/publish&quot;&gt;Google Play Console&lt;/a&gt; on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;App Signing&lt;/code&gt;section and use the option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;App Signing by Google Play&lt;/code&gt;&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-200-ffdbecbe0.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-400-ffdbecbe0.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-800-ffdbecbe0.webp 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-1014-ffdbecbe0.webp 1014w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-200-ffdbecbe0.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-400-ffdbecbe0.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-800-ffdbecbe0.png 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-1014-ffdbecbe0.png 1014w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-800-ffdbecbe0.png&quot; alt=&quot;post image&quot; width=&quot;1014&quot; height=&quot;264&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now you need to copy your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHA-1&lt;/code&gt; fingerprint of your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Upload certificate&lt;/code&gt; from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;App signing&lt;/code&gt; section.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-200-6193a130c.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-400-6193a130c.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-800-6193a130c.webp 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-1600-6193a130c.webp 1600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-200-6193a130c.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-400-6193a130c.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-800-6193a130c.png 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-1600-6193a130c.png 1600w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-800-6193a130c.png&quot; alt=&quot;post image&quot; width=&quot;1932&quot; height=&quot;566&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Then go to your OAuth credentials on &lt;a href=&quot;https://console.developers.google.com/apis&quot;&gt;Google API console&lt;/a&gt;.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-200-4695c1fdb.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-400-4695c1fdb.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-800-4695c1fdb.webp 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-1600-4695c1fdb.webp 1600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-200-4695c1fdb.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-400-4695c1fdb.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-800-4695c1fdb.png 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-1600-4695c1fdb.png 1600w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-800-4695c1fdb.png&quot; alt=&quot;post image&quot; width=&quot;2018&quot; height=&quot;814&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;the Google API console&lt;/code&gt;, select your game on the top dropdown, then go to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credentials&lt;/code&gt; menu and edit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OAuth 2.0 Client IDs&lt;/code&gt;. Paste the fingertip on the field &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHA-1 certificate fingertip&lt;/code&gt; and save it.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-200-d4e86c82d.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-400-d4e86c82d.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-800-d4e86c82d.webp 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-1600-d4e86c82d.webp 1600w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-200-d4e86c82d.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-400-d4e86c82d.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-800-d4e86c82d.png 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-1600-d4e86c82d.png 1600w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-800-d4e86c82d.png&quot; alt=&quot;post image&quot; width=&quot;1608&quot; height=&quot;812&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;remember to remove the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHA-1&lt;/code&gt; prefix, if you copied it together.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;testing-on-android&quot;&gt;Testing on Android&lt;/h2&gt;
&lt;p&gt;Now we have the basic setup done, we need to write some code to test it on an Android device:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/c8bff996de4473c201f010b17d42fd2b.js?file=AchievementsController.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;Add the script above to a game object in the scene, build and run the game on a Android device.&lt;/p&gt;

&lt;p&gt;If everything was done correctly, you should see a screen like this:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-ui-200-aa631ec71.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-ui-400-aa631ec71.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-ui-640-aa631ec71.webp 640w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-ui-200-aa631ec71.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-ui-400-aa631ec71.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-ui-640-aa631ec71.png 640w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-ui-640-aa631ec71.png&quot; alt=&quot;post image&quot; width=&quot;640&quot; height=&quot;617&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/conclusion-128-2cdd65c40.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/conclusion-128-2cdd65c40.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/conclusion-128-2cdd65c40.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;p&gt;With this basic setup you can start to use the other features from Google Play Games Plugin for Unity plugin, as:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;unlock/reveal/increment achievement&lt;/li&gt;
  &lt;li&gt;post score to leaderboard&lt;/li&gt;
  &lt;li&gt;cloud save read/write&lt;/li&gt;
  &lt;li&gt;show built-in achievement/leaderboards UI&lt;/li&gt;
  &lt;li&gt;events&lt;/li&gt;
  &lt;li&gt;video recording of gameplay&lt;/li&gt;
  &lt;li&gt;nearby connections&lt;/li&gt;
  &lt;li&gt;turn-based multiplayer&lt;/li&gt;
  &lt;li&gt;real-time multiplayer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn more about then on &lt;a href=&quot;https://github.com/playgameservices/play-games-plugin-for-unity&quot;&gt;plugin GitHub page&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;extra-tips-and-tricks&quot;&gt;Extra tips and tricks&lt;/h2&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/extra-tips-tricks-128-4f597ed4f.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/extra-tips-tricks-128-4f597ed4f.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/extra-tips-tricks-128-4f597ed4f.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;Below a list of tips and tricks for non-common scenarios.&lt;/p&gt;

&lt;h3 id=&quot;log-on-device&quot;&gt;Log on device&lt;/h3&gt;
&lt;p&gt;If anything goes wrong on Android device you will need to see it logs, to do so, you can use adb logcat:&lt;/p&gt;

&lt;p&gt;On MacOS, this shell do the job:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local/Caskroom/android-platform-tools/29.0.5/platform-tools/

./adb logcat &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; Unity PackageManager dalvikvm DEBUG
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;If you are using a different version of Android Platform Tools you will need to change the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;29.0.5&lt;/code&gt; version.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;assembly-definition&quot;&gt;Assembly definition&lt;/h3&gt;
&lt;p&gt;If your game is using &lt;a href=&quot;https://docs.unity3d.com/Manual/ScriptCompilationAssemblyDefinitionFiles.html&quot;&gt;Assembly Definition&lt;/a&gt; you will need this step.&lt;/p&gt;

&lt;p&gt;The plugin code come without any assembly definition, so to use in our code you will need to create two assembly definitions to the plugin:&lt;/p&gt;

&lt;p&gt;Go to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assets/GooglePlayGames&lt;/code&gt; folder and create a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assembly Definition&lt;/code&gt; called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GooglePlayGames&lt;/code&gt;.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-runtime-200-12caebe29.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-runtime-312-12caebe29.webp 312w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-runtime-200-12caebe29.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-runtime-312-12caebe29.png 312w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-runtime-312-12caebe29.png&quot; alt=&quot;post image&quot; width=&quot;312&quot; height=&quot;640&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Go to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assets/GooglePlayGames/Editor&lt;/code&gt; folder and create a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assembly Definition&lt;/code&gt; called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GooglePlayGames.Editor&lt;/code&gt;.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-editor-200-c0b33e16c.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-editor-309-c0b33e16c.webp 309w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-editor-200-c0b33e16c.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-editor-309-c0b33e16c.png 309w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-editor-309-c0b33e16c.png&quot; alt=&quot;post image&quot; width=&quot;309&quot; height=&quot;640&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now, go to your game assembly definition and add a reference to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GooglePlayGames&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;After this, if you receive some compilation error about &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BasicApi.Nearby&lt;/code&gt; namespace, just close and open Unity again.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;exception-class-not-found-comgoogleandroidgmsgamesgames&quot;&gt;Exception class not found com.google.android.gms.games.Games&lt;/h3&gt;
&lt;p&gt;If you see the the log message above on the adb logcat, you need to check on Unity &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Player Settings / Publishing Settings&lt;/code&gt; if the minify settings are set up correctly as describe here: &lt;a href=&quot;https://github.com/playgameservices/play-games-plugin-for-unity/blob/master/README.md#play-games-services-proguard-configuration&quot;&gt;Play Games Services Proguard configuration&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity and Game Development links (Aug 5th 2019)</title>
   <link href="//unity-and-gamedev-links-aug-5th-2019/"/>
   <updated>2019-08-05T00:00:00-03:00</updated>
   <id>//unity-and-gamedev-links-aug-5th-2019</id>
   <content type="html">
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Phi Dinh&lt;/strong&gt; remembered a Twitter moment with tips and tutorials about the shaders used on Recompile. (&lt;a href=&quot;https://twitter.com/i/moments/1122251136239570947&quot;&gt;Recompile Unity Tips and Tutorials&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Thomas Krogh-Jacobsen&lt;/strong&gt; wrote a blog post about Unity 2019.2 release. This version has more than 170 new features. (&lt;a href=&quot;https://blogs.unity3d.com/2019/07/30/heres-whats-in-the-brand-new-unity-2019-2&quot;&gt;Here’s what’s in the brand-new Unity 2019.2&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Screen.cutouts for iOS/Android, Burst Compiler updates, TypeCache API in Editor code, PhysX Cloth Solver update, DSPGraph audio mixing/rendering engine, Intel® VTune™ Amplifier support, IDE support moving to packages, .NET 4.x is now default and Incremental Garbage Collection.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; made a video about Unity 2019.2 features too (&lt;a href=&quot;https://www.youtube.com/watch?v=qoERAtLGq-8&quot;&gt;Unity 2019.2 is now available!&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/qoERAtLGq-8 &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Andy Touch&lt;/strong&gt; created a Twitter thread about the different 2D Light Types available in Unity 2019.2 (&lt;a href=&quot;https://twitter.com/andytouch/status/1156204606562738176&quot;&gt;2D Light Types&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Dilmer Valecillos&lt;/strong&gt; made a video showing how to use low polly assets for VR (&lt;a href=&quot;https://www.youtube.com/watch?v=4SVUeuV6TpU&quot;&gt;Unity3d Oculus Quest Development - Adding A Low Poly Asset for VR Usage from the Asset Store&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Alex Lindman&lt;/strong&gt; wrote a blog post on custom lighting in Shader Graph (&lt;a href=&quot;https://blogs.unity3d.com/2019/07/31/custom-lighting-in-shader-graph-expanding-your-graphs-in-2019&quot;&gt;Custom Lighting in Shader Graph: Expanding your graphs in 2019&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;With the release of Unity Editor 2019.1, the Shader Graph package officially came out of preview! Now, in 2019.2, we’re bringing even more features and functionality to Shader Graph.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Kenney&lt;/strong&gt; has an incredible collection of free game assets that any game developer can use (&lt;a href=&quot;https://kenney.nl/assets&quot;&gt;Kenney Assets&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;License: (CC0 1.0 Universal) You’re free to use these game assets in any project, personal or commercial. There’s no need to ask permission before using these. Giving attribution is not required, but is greatly appreciated!&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Lindsay Cox&lt;/strong&gt; made a peformance test comparing single thead, TPL and C# Job System (&lt;a href=&quot;http://lindsaycox.co.uk/blog/unity/single-thread-vs-tasks-vs-unity-c-jobs-simple-performance-test/&quot;&gt;Single Thread Vs Tasks Vs Unity C# Jobs – Simple Performance Test&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;In conclusion then, based on the above tests, if you are going to crunch through work without the Burst Compiler, maybe look at using something like Tasks first before opting for Jobs. If you are going to use the Burst Compiler, use the Job System.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Kristin Stock&lt;/strong&gt; made a video on procedurally generated low-poly planets (&lt;a href=&quot;https://www.youtube.com/watch?v=2FfzEdALOGQ&quot;&gt;Procedurally Generated Low-Poly Planets in Unity&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/2FfzEdALOGQ &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Eduardo Oriz and Mike Geig&lt;/strong&gt; wrote a blog post about how to set up your Unity project for retro 16-bit games (&lt;a href=&quot;https://blogs.unity3d.com/2019/08/02/2d-pixel-perfect-how-to-set-up-your-unity-project-for-retro-16-bit-games&quot;&gt;2D Pixel Perfect: How to set up your Unity project for retro 16-bit games&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;In our first 2D Pixel Perfect guide for retro games, we showed you how to set up the 2D Pixel Perfect tool and how 8-bit graphics were made back in the day. In this post, we fast-forward to the 16-bit era. With the help of Mega Cat Studios, you’ll learn how to create authentic art for Sega Genesis (or Mega Drive) and Super NES-style games using Unity settings, graphics structures, and color palettes&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Unity&lt;/strong&gt; released the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ML-Agents Beta 0.9.0&lt;/code&gt; (&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/releases/tag/0.9.0&quot;&gt;ML-Agents Beta 0.9.0&lt;/a&gt;)
    &lt;blockquote&gt;
      &lt;p&gt;Generative Adversarial Imitation Learning, pre-training for the PPO trainer, training generalized reinforcement learning agents, options for Nature and ResNet CNN architectures.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity Toasty Notification</title>
   <link href="//unity-toasty-notification/"/>
   <updated>2019-07-30T00:00:00-03:00</updated>
   <id>//unity-toasty-notification</id>
   <content type="html">&lt;p&gt;Last saturday I created the &lt;a href=&quot;https://github.com/giacomelli/Giacomelli.Unity.ToastyNotification&quot;&gt;ToastyNotification&lt;/a&gt; package, a fun editor log interceptor that play Mortal Kombat’s Toasty easter-egg every time an error is logged.&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/wwhz2wPN_wU &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;p&gt;Just install the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ToastyNotification.package&lt;/code&gt; from the repository &lt;a href=&quot;https://github.com/giacomelli/Giacomelli.Unity.ToastyNotification/releases&quot;&gt;release page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now every time your game raise an error on Unity’s editor console log, the Toasty Notifcation will warning you 😉!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity and Game Development links (July 29th 2019)</title>
   <link href="//unity-and-gamedev-links-july-29th-2019/"/>
   <updated>2019-07-29T00:00:00-03:00</updated>
   <id>//unity-and-gamedev-links-july-29th-2019</id>
   <content type="html">
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Kristin Stock&lt;/strong&gt; published an amazing video about SPH (Smoothed Particle Hydrodynamics) in Unity. (&lt;a href=&quot;https://www.youtube.com/watch?v=NJBz8rMJ0ZU&quot;&gt;Fluid Simulation / Smoothed Particle Hydrodynamics in Unity&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/NJBz8rMJ0ZU &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;SIGGRAPH 2019&lt;/strong&gt; is taking place in Los Angeles, between July 28 and August 1. Unity has made a page where you can see the Unity’s  presentations calendar (&lt;a href=&quot;https://unity.com/events/siggraph-2019&quot;&gt;Unity at SIGGRAPH 2019&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Kin&lt;/strong&gt; is a currency for the digital world that just now caught my attention. There is an SDK for Unity. They are posing a challenge for Unity developers, the deadline is December 30, 2019 (&lt;a href=&quot;https://kin.org/developers/unityapply/gaming-challenge/&quot;&gt;Kin Gaming Challenge&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Kin enables the free and instant transfer of value between users, no matter how small the amount. This lets users give something more meaningful than a like, making your app even more fun and engaging.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Lasse Jon Fuglsang Pedersen and Robert Cupisz&lt;/strong&gt; in the making of The Heretic, a real-time short film made with Unity. (&lt;a href=&quot;https://www.youtube.com/watch?v=5H9Jo2qjJXs&quot;&gt;Lasse Jon Fuglsang Pedersen, Robert Cupisz - Making of The Heretic&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/5H9Jo2qjJXs &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; made two videos, one showing his top 5 assets for Unity in 2019 (&lt;a href=&quot;https://www.youtube.com/watch?v=s-4s9KhO_D0&quot;&gt;5 AWESOME ASSETS FOR UNITY 2019!&lt;/a&gt;) and a second one about the new Multiplayer system that Unity is working on (&lt;a href=&quot;https://www.youtube.com/watch?v=n3kcbUBuPpk&quot;&gt;NEW MULTIPLAYER in Unity 2019 – Connected Games (Overview)&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Tyler Hurd&lt;/strong&gt; presented to the world a tool that him have been working: Actuator leverages real-time physics and tracked VR devices for rigging, animating and puppeteering. (&lt;a href=&quot;http://tylerhurd.com/projects/actuator/&quot;&gt;Actuator)&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/moYfppZzf2c &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Scene Preview Window</title>
   <link href="//unitytips-scene-preview-window/"/>
   <updated>2019-07-23T00:00:00-03:00</updated>
   <id>//unitytips-scene-preview-window</id>
   <content type="html">&lt;p&gt;I created this window that extends the Unity 3D editor so you can preview the scenes by selecting them in the project window.&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/eh8nqfDCUVo &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h1 id=&quot;usage&quot;&gt;Usage&lt;/h1&gt;
&lt;p&gt;As can be seen from the video above the extension can be used in two ways after adding the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scene Preview&lt;/code&gt; window to the editor (via the&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; Window / Scene Preview&lt;/code&gt; menu):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Selects &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scene&lt;/code&gt; and clicking the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Capture screenshot&lt;/code&gt; button in both edit mode and play mode.&lt;/li&gt;
  &lt;li&gt;Running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scene&lt;/code&gt; in play mode and if there is still no preview screenshot for the scene, a screenshot will be taken automatically after 10 seconds.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;p&gt;Below you can see only the code of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ScenePreviewEditor.cs&lt;/code&gt;. There are 3 more files for this extension.&lt;/p&gt;

&lt;p&gt;Download the full &lt;a href=&quot;https://gist.github.com/giacomelli/ad9d4dcdb702d2d1edf0663628ca9608&quot;&gt;gist&lt;/a&gt; or use the &lt;a href=&quot;/unitytips-gist-importer&quot;&gt;Gist Importer&lt;/a&gt; to import the complete &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scene Preview Window&lt;/code&gt; for your project.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/ad9d4dcdb702d2d1edf0663628ca9608.js?file=ScenePreviewWindow.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;Remember that you need to save the above .cs files inside any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor&lt;/code&gt; folder&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity and Game Development links (July 22th 2019)</title>
   <link href="//unity-and-gamedev-links-july-22th-2019/"/>
   <updated>2019-07-22T00:00:00-03:00</updated>
   <id>//unity-and-gamedev-links-july-22th-2019</id>
   <content type="html">
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Stephen Palmer&lt;/strong&gt; presented the preview of Addressables, the Unity new system for editor and runtime asset management. (&lt;a href=&quot;https://blogs.unity3d.com/2019/07/15/addressable-asset-system&quot;&gt;Addressable Asset System&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;What we found when talking to developers about their experience using Asset Bundles was that almost everyone doing so successfully were more or less writing the same high level systems a thousand slightly different ways. Addressables was born out of this obvious need for a framework to solve a set of common problems related to addressing, building, and loading assets.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Cyan&lt;/strong&gt; made a blog post about Voronoi noise, a type of noise based on cells,  and shaders (&lt;a href=&quot;https://cyangamedev.wordpress.com/2019/07/16/voronoi/&quot;&gt;Voronoi&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Kat Woolley&lt;/strong&gt; introduced the Creator Kits, a beginners kit to learn Unity basics without writing code. (&lt;a href=&quot;https://blogs.unity3d.com/2019/07/17/creator-kits-get-creating-quickly&quot;&gt;Creator Kits – Get creating quickly&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;We’ve produced three kits: A puzzle game, an FPS and an RPG. Get a brief introduction to each game genre and learn the basics of Unity without writing code. The kits offer beginners a good way to create your own game in under an hour before embarking on something with a broader scope like the Game Kits.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Unity&lt;/strong&gt; made a case study about Playkot, the creators of Age Of Magic (&lt;a href=&quot;https://unity.com/case-study/playkot-age-of-magic&quot;&gt;Playkot – A Unity developer case study&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;How do a businessman and a software developer working at an improvised kitchen table in St. Petersburg, Russia go on to produce sophisticated social games and mobile RPGs with some of the best graphics in the industry? Meet Sasha Pavlov and Oleg Sysoev, who started Playkot Games in 2009. Since then, they’ve grown their team to 150+ by carefully combining the right people, adopting Unity, and implementing the right strategies to capture significant market share around the world.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Anna Lee&lt;/strong&gt; wrote a blog post on the series &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Faces of Unity&lt;/code&gt;, now presenting Dave Hunt, Lead Technical Artist in Copenhagen (&lt;a href=&quot;https://blogs.unity3d.com/2019/07/19/faces-of-unity-dave-hunt&quot;&gt;Faces of Unity – Dave Hunt)&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Learn more about Dave as he shares about his career journey and work-life balance as a parent here at Unity!&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Brackeys&lt;/strong&gt; published a video about learnings in 10 years of game development! (&lt;a href=&quot;https://youtu.be/T18X1HuawRc&quot;&gt;What I learned after 10 Years of Game Development!&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; made a video showing how to make explosions and shockwave effects in Unity (&lt;a href=&quot;https://youtu.be/u7lwL7ubwKA&quot;&gt;SHOCKWAVE &amp;amp; EXPLOSION IN UNITY 2019! (Tutorial)&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Hierarchy Window GameObject Icon</title>
   <link href="//unitytips-hierarchy-window-gameobject-icon/"/>
   <updated>2019-07-16T00:00:00-03:00</updated>
   <id>//unitytips-hierarchy-window-gameobject-icon</id>
   <content type="html">&lt;p&gt;You can show the game objects icons in hierarchy window using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorGUIUtility.ObjectContent&lt;/code&gt;&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/fwtQ51ybHpc &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/a73c947508ee0b32eef7c422620ec6b6.js?file=HierarchyWindowGameObjectIcon.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;p&gt;The icons used in the video are &lt;a href=&quot;https://fontawesome.com/icons&quot;&gt;Font Awesome&lt;/a&gt; icons and I used &lt;a href=&quot;http://fa2png.io/&quot;&gt;fa2png.io&lt;/a&gt; to convert them to .png.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;Remember that you need to save the above .cs inside any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor&lt;/code&gt; folder&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity and Game Development links (July 15th 2019)</title>
   <link href="//unity-and-gamedev-links-july-15th-2019/"/>
   <updated>2019-07-15T00:00:00-03:00</updated>
   <id>//unity-and-gamedev-links-july-15th-2019</id>
   <content type="html">
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Alexander Ameye&lt;/strong&gt; made a tutorial about edge detection shaders with Shader Graph and how to use some Lightweight Rendering Pipeline customization to generate DepthNormals (&lt;a href=&quot;https://alexanderameye.github.io/edgedetection&quot;&gt;Edge Detection Shader&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cyan&lt;/strong&gt; made a blog post about Render Textures and how to read them  in a C# script (&lt;a href=&quot;https://cyangamedev.wordpress.com/2019/07/08/render-textures/&quot;&gt;Render Textures&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Render Textures are stored and handled on the GPU, which means we can’t access the data from them in a C# script which runs on the CPU – and you shouldn’t really need to for most effects. However, I wanted my player to be able to interact with water which was based on a Render Texture and only spawn particles if the player was in the water, along with some other effects.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Frank Manley&lt;/strong&gt; wrote about the Unity Hackweek 2019 (&lt;a href=&quot;https://blogs.unity3d.com/2019/07/08/unity-hackweek-2019-tackling-hard-problems-building-team-skills&quot;&gt;Unity Hackweek 2019: Tackling hard problems, building team skills&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;What happens when you put 700+ people from Unity and our ecosystem in a secluded location once a year and tell them to solve hard tech, coding, and process problems? Their instructions? Unleash your creativity, collaborate like crazy, and embrace diverse perspectives.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tracy Joseph and Brittany Edmond,&lt;/strong&gt; wrote a blog post about their experience on Cannes Lions 2019 (&lt;a href=&quot;https://blogs.unity3d.com/2019/07/09/cannes-lions-2019-celebrating-creativity-innovation-storytelling&quot;&gt;Cannes Lions 2019: Celebrating creativity, innovation &amp;amp; storytelling&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;This year at the Cannes Lions International Festival of Creativity, Unity showed up as the leading real-time 3D creation platform.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Garrexus&lt;/strong&gt; made a breakdown on the Screen space Cosmic shader (&lt;a href=&quot;https://realtimevfx.com/t/screen-space-cosmic-shader-breakdown-unity-ase-shaders-textures-included/9753&quot;&gt;Screen space Cosmic shader breakdown (Unity/ASE, Shaders/Textures included)&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Alexander Ameye&lt;/strong&gt; again, now with a tutorial about collision effect (&lt;a href=&quot;https://alexanderameye.github.io/collision.html&quot;&gt;Collision Effect&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tenzin W. and Eduardo Oriz,&lt;/strong&gt; wrote about the results of the latest Asset Store challenge (&lt;a href=&quot;https://blogs.unity3d.com/2019/07/11/the-winners-inside-the-vault-3d-environment-art-contest&quot;&gt;The Winners! Inside the Vault: 3D Environment Art Contest&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;A number of judges evaluated all of the impressive submissions to pick the winners of the latest Asset Store challenge: Use Substance Painter to texture stunning assets that expand the futuristic world of Buried Memories: Yggdrasil.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Anis Benyoub&lt;/strong&gt; made a speech about ray tracing hardware acceleration (&lt;a href=&quot;https://www.youtube.com/watch?v=wbuvrAdNtmQ&quot;&gt;Anis Benyoub - Leveraging Ray Tracing Hardware Acceleration In The Unity Game Engine&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Ray tracing hardware acceleration (RTX) is a newly available feature that allows graphics developers to increase their image quality. While solving complex problems, properly integrating this new set of APIs (DXR and Vulkan ray tracing) in a game engine is tricky, especially so when the engine supports anything from mobile to virtual production.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Brackeys&lt;/strong&gt; published a video about gamepad input (&lt;a href=&quot;https://www.youtube.com/watch?v=p-3S73MaDP8&quot;&gt;CONTROLLER INPUT in Unity!&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; made a video showing how to make terrains (&lt;a href=&quot;https://www.youtube.com/watch?v=2Vvwjfp-hg8&quot;&gt;How to make Terrains with Unity 2019! (Tutorial)&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Hierarchy Window Layer Info</title>
   <link href="//unitytips-hierarchy-window-layer-info/"/>
   <updated>2019-07-09T00:00:00-03:00</updated>
   <id>//unitytips-hierarchy-window-layer-info</id>
   <content type="html">&lt;p&gt;You can create a visual layer info to any component on your hierarchy window using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorApplication.hierarchyWindowItemOnGUI&lt;/code&gt;:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/JxvOshwNdfE &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/096005d0d0df79b94321f950138220a3.js?file=HierarchyWindowLayerInfo.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity and Game Development links (July 8th 2019)</title>
   <link href="//unity-and-gamedev-links-july-8th-2019/"/>
   <updated>2019-07-08T00:00:00-03:00</updated>
   <id>//unity-and-gamedev-links-july-8th-2019</id>
   <content type="html">
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; released a YouTube video about the new Unity Terrain Tools package (&lt;a href=&quot;https://www.youtube.com/watch?v=aExdxF4OKBo&quot;&gt;Build Beautiful Terrains with Unity 2019! – New Terrain Tools Package&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Stacey Haffner&lt;/strong&gt; made a blog post about the new experience for Collaborate that they are designing, like new UI and Git command-line support (&lt;a href=&quot;https://blogs.unity3d.com/2019/07/01/collaborate-developer-diary-1-exploring-the-new-design&quot;&gt;Collaborate Developer Diary #1: Exploring the New Design&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Based on a set of guiding principles focused on delivering value to teams with diverse skill sets, we are designing a brand new experience for Collaborate.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Matthew Crosby&lt;/strong&gt; released the Animal-AI Olympics, a AI competition with $32,000 in prizes. (&lt;a href=&quot;https://www.mdcrosby.com/blog/animalailaunch.html&quot;&gt;Animal-AI Olympics now released into the wild!&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;The Animal-AI Olympics is an AI competition with tests inspired by animal cognition. Participants are given a small environment with just seven different classes of objects that can be placed inside. In each test, the agent needs to retrieve the food in the environment, but to do so there are obstacles to overcome, ramps to climb, boxes to push, and areas that must be avoided.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Unity&lt;/strong&gt; published the IAP Playbook: 12 strategies to help you monetize your game (&lt;a href=&quot;https://create.unity3d.com/iap-playbook&quot;&gt;The IAP playbook&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;In-app purchases are an important part of your monetization strategy, but implementing them correctly can be challenging. Understanding how to create, surface, and optimize them without disrupting the game experience takes hard work.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; published a YouTube video about how to make NPCs for your games (&lt;a href=&quot;https://www.youtube.com/watch?v=FRFjggLMXFU&quot;&gt;How to Make AWESOME NPCs for Your Game!&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Brackeys&lt;/strong&gt; made a video about how to add physics to ragdolls in Unity (&lt;a href=&quot;https://www.youtube.com/watch?v=DInV-jHm9rk&quot;&gt;RAGDOLL PHYSICS in Unity!&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pierre Bosset&lt;/strong&gt; interviewed &lt;strong&gt;Mirko Vescio&lt;/strong&gt; about how to use Substance and Unity combined for realistic architectural visualization  (&lt;a href=&quot;https://www.substance3d.com/blog/creating-realistic-archviz-experiences-oneiros-using-unity&quot;&gt;Creating Realistic Archviz Experiences by Oneiros using Unity&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;It is important not to forget that one advantage of using Unity in architectural visualization is that you can get different types of output from the same scene. For example, it is possible to make a video in cinematic mode, as well as in virtual reality mode.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Alexandre Mutel&lt;/strong&gt; released the the first preview version of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UnityNuGet&lt;/code&gt; providing a service to install NuGet packages into an Unity project via the Unity Package Manager (&lt;a href=&quot;https://github.com/xoofx/UnityNuGet&quot;&gt;UnityNuGet&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; made another video, this time about realistic lighting in Unity (&lt;a href=&quot;https://www.youtube.com/watch?v=zmF29YGEMUU&quot;&gt;REALISTIC LIGHTING in Unity! (Tutorial)&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips Museum</title>
   <link href="//unitytips-museum/"/>
   <updated>2019-07-02T00:00:00-03:00</updated>
   <id>//unitytips-museum</id>
   <content type="html">&lt;p&gt;I &lt;a href=&quot;https://twitter.com/ogiacomelli/status/1144379461317648384&quot;&gt;recently&lt;/a&gt; started studying &lt;a href=&quot;https://dotnet.microsoft.com/apps/aspnet/web-apps/client&quot;&gt;Blazor&lt;/a&gt; and last weekend I created this simple app that I called: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#unitytips Museum&lt;/code&gt;, a collection of best #unitytips.&lt;/p&gt;

&lt;p&gt;You can access it directly in my site, in this url: &lt;a href=&quot;http://diegogiacomelli.com.br/apps/unitytips-museum&quot;&gt;http://diegogiacomelli.com.br/apps/unitytips-museum&lt;/a&gt;&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/B9eTNZWhojI &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;the-unitytips-collection&quot;&gt;The #unitytips collection&lt;/h2&gt;
&lt;p&gt;Every week all #unitytips retweeted by &lt;a href=&quot;https://twitter.com/unity3d&quot;&gt;@unity3d&lt;/a&gt; will be included to the collection.&lt;/p&gt;

&lt;p&gt;If you know a really good #unitytips (at least 50 retweets) that should be added to the collection, please follow one of options above:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Contact me on Twitter &lt;a href=&quot;https://twitter.com/ogiacomelli&quot;&gt;@ogiacomelli&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/giacomelli/unitytips-museum&quot;&gt;Fork it on GitHub&lt;/a&gt;, add the #unitytips to the wwwroot/data/tips.json file and create a pull-request.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;about-blazor&quot;&gt;About Blazor&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Blazor can run your client-side C# code directly in the browser, using WebAssembly. Because it’s real .NET running on WebAssembly, you can re-use code and libraries from server-side parts of your application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In a future post I will discuss what I learned about Blazor while developing the #unitytips Museum, but I can give a spoiler: I really liked it!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity and Game Development links (July 1st 2019)</title>
   <link href="//unity-and-gamedev-links-july-1st-2019/"/>
   <updated>2019-07-01T00:00:00-03:00</updated>
   <id>//unity-and-gamedev-links-july-1st-2019</id>
   <content type="html">
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Unity&lt;/strong&gt; released a YouTube tutorial about how to create a portal effect in Lightweight Render Pipeline with Shader Graph (&lt;a href=&quot;https://www.youtube.com/watch?v=TkzASwVgnj8&quot;&gt;Making Portals with Shader Graph in Unity! (Tutorial)&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Dilmer Valecillos&lt;/strong&gt; posted a video on augmented reality while implementing a dragging feature with ray-casting (&lt;a href=&quot;https://www.youtube.com/watch?v=nBftG-gXUE8&quot;&gt;AR Foundation with Unity3d and Adding Dragging Functionality with AR Raycast and Physics Raycast&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Felipe Lira&lt;/strong&gt; created a GitHub repository with a bare bones Scriptable Render Pipeline. (&lt;a href=&quot;https://github.com/phi-lira/HelloSRP&quot;&gt;HelloSRP&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Bare Bones Scriptable Render Pipeline. Use it as a base to create your own.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sebastian Lague&lt;/strong&gt; made some updates to his path creation tool (&lt;a href=&quot;https://github.com/SebLague/Path-Creator&quot;&gt;Bézier Path Creator&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;An intuitive and lightweight editor for quickly creating smooth paths in the editor.
You can easily make objects move along these paths, or use them as a guide for spawning objects and generating meshes.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Unity&lt;/strong&gt;, started its annual survey asking for community feedback (&lt;a href=&quot;https://on.unity.com/2xdSRmX&quot;&gt;survey&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; published a YouTube video showing what he learned after making more than 100 game levels (&lt;a href=&quot;https://www.youtube.com/watch?v=WPimiBP8d6o&quot;&gt;What I Learned after Making 100+ GAME LEVELS! (Unity Level Design)&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Nichole Wong&lt;/strong&gt; wrote about the new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Unity Learn Premium&lt;/code&gt; (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/27/introducing-unity-learn-premium/&quot;&gt;Introducing Unity Learn Premium: Get direct guidance from experts&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;We’ve heard your requests for more advanced and in-depth content, and resources for specific industries like automotive, architecture, or media and entertainment. And we’ve also heard that you want access to experts who can give you immediate guidance and feedback on specific challenges or questions&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Eduardo Oriz and Alitt Khaliq&lt;/strong&gt; made a post showing the behind the scenes and dive further into the creative process behind Buried Memories Volume 2: Serekh (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/28/the-creative-process-behind-serekh/&quot;&gt;The creative process behind Serekh&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Developing a strong game, large or small, depends on having a dedicated team of skilled and specialized people who share a vision and care deeply about what they are making. The development of Serekh was a combined effort by Edvige Faini, the Concept Artist, and the Unity Icon Collective. Some of the most significant challenges on this project were conceptual rather than technical.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; again, with a video on tips, tricks, and list of features in Unity for making 2D games (&lt;a href=&quot;https://www.youtube.com/watch?v=-MuWAydTjY0&quot;&gt;How to make 2D Games with Unity 2019!&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Gist Importer</title>
   <link href="//unitytips-gist-importer/"/>
   <updated>2019-06-25T00:00:00-03:00</updated>
   <id>//unitytips-gist-importer</id>
   <content type="html">&lt;p&gt;Using the Gist below you can easily import other Gists to your Unity project just copying the URL from browser:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/YljjAkebxiE &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/9a248eecf5c1ffc477b59524f63264d3.js&quot;&gt; &lt;/script&gt;

&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;All Gists are imported to folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assets/Gists&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity and Game Development links (June 24th 2019)</title>
   <link href="//unity-and-gamedev-links-june-24th-2019/"/>
   <updated>2019-06-24T00:00:00-03:00</updated>
   <id>//unity-and-gamedev-links-june-24th-2019</id>
   <content type="html">
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; made a video about the Buried Memories Volume 2: Serekh (&lt;a href=&quot;https://www.youtube.com/watch?v=5CTAVFOrbsM&quot;&gt;Buried Memories: Serekh – New HDRP Asset Pack for Unity! (Overview)&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Jean-Christophe Cimetiere&lt;/strong&gt; wrote a post about how to use Unity as a library inside other apps (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/17/add-features-powered-by-unity-to-native-mobile-apps&quot;&gt;Add features powered by Unity to native mobile apps&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Unity 2019.3 will add support for using Unity as a library controlled by native Android/Java and iOS/Objective C apps so you can easily insert AR and other Unity features.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Egor Bogatov&lt;/strong&gt; created a GitHub repository with a sample Xamarin app using Unity as a library (&lt;a href=&quot;https://github.com/EgorBo/XamarinWithUnityApp&quot;&gt;XamarinWithUnityApp&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;You can now easily add a Unity scene (e.g. ARCore scene) to any native or Xamarin app via .aar file.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Jacob Shriar&lt;/strong&gt; posted about a survey that Unity made with 1000 creatives within advertising and marketing about AR (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/18/creative-professionals-are-struggling-to-implement-augmented-reality&quot;&gt;Creative professionals are struggling to implement augmented reality&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;In anticipation for Cannes this year, we surveyed 1000 creatives within advertising and marketing to gauge a better understanding on their comfort level, technical competency, and enthusiasm towards AR, including what it means for the future of storytelling. And what we found was very telling&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Harry Alisavakis&lt;/strong&gt;, released another tutorial in his series &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VFX Master Shader&lt;/code&gt; (&lt;a href=&quot;https://halisavakis.com/my-take-on-shaders-vfx-master-shader-part-ii/&quot;&gt;My take on shaders: VFX Master Shader (Part II)&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Nick Davis&lt;/strong&gt; wrote about how automotive companies are leveraging real-time 3D to reduce costs and accelerate development (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/19/how-real-time-3d-is-changing-every-industry&quot;&gt;How real-time 3D is changing every industry&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Real-time 3D is changing everything, in much deeper ways than most people realize. Forged in gaming, this technology continues to transform the way games are created, operated and monetized. Its impact now also extends to industries of all kinds, from film to automotive.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Seth Barton&lt;/strong&gt; made a post about how HDRP is taking next-gen graphics to a new level (&lt;a href=&quot;https://www.mcvuk.com/in-the-pipeline-unitys-hdrp-brings-next-gen-graphics-to-the-worlds-most-used-game-engine/&quot;&gt;In the pipeline: Unity’s HDRP brings next-gen graphics to the world’s most-used game engine&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;What do System Shock 3, Oddworld: Soulstorm and Harold Halibut have in common? Well, all of these incredible-looking upcoming titles are built on Unity, and more specifically will utilise Unity’s upcoming High Definition Render Pipeline or HDRP for short.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Caitlin W and Macy Mills&lt;/strong&gt; wrote a post about the new Unity’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Verified Solutions Partners&lt;/code&gt; (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/20/unitys-new-partnerships-bring-verified-solutions-to-developers-across-industries&quot;&gt;Unity’s new partnerships bring verified solutions to developers across industries&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Verified Solutions Partners represent a collection of 3rd-party SDKs, plugins, editor applications, cloud services, and more that enable the success of your project while ensuring deeper technical alignment with partners’ products and services to ensure 0% developer downtime. Partners accepted into the program go through a verification process to ensure their SDK or software is optimized for the latest version of Unity.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Elena Nizhnik&lt;/strong&gt; released a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Community Component&lt;/code&gt; post, highlighting some games, posts, videos and tools (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/22/community-component-audio-design-pixel-games-custom-tools-and-best-of-made-with-unity-on-youtube&quot;&gt;Community Component – audio design, pixel games, custom tools and Best of Made with Unity on YouTube&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; again, now with a timelapse level design video (&lt;a href=&quot;https://www.youtube.com/watch?v=f3vNNUC1tnE&quot;&gt;LEVEL DESIGN IN UNITY! - Village &amp;amp; Castle Scene (Timelapse)&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Brackeys&lt;/strong&gt; made a video about the new Terrain System in Unity (&lt;a href=&quot;https://www.youtube.com/watch?v=MWQv2Bagwgk&quot;&gt;How to make Terrain in Unity!&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Changing the style of the Hierarchy Window Group Header</title>
   <link href="//unitytips-changing-the-style-of-the-hierarchy-window-group-header/"/>
   <updated>2019-06-20T00:00:00-03:00</updated>
   <id>//unitytips-changing-the-style-of-the-hierarchy-window-group-header</id>
   <content type="html">&lt;p&gt;In my last &lt;a href=&quot;/tags/unitytips/&quot;&gt;#unitytips&lt;/a&gt; I demonstrated how you could create a visual header to any group of components on your hierarchy window using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorApplication.hierarchyWindowItemOnGUI&lt;/code&gt;. Now I’m improving it allowing you to &lt;strong&gt;customize its style&lt;/strong&gt;.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/g2lq0lIJzh8 &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;To change the style, you just need to edit the values of the HierarchyWindowGroupHeaderSettings in the inspector&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/bb6a9932e5f49a072c57a7c17135bf6b.js?file=HierarchyWindowGroupHeader.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;Remember that you need to save the above .cs inside any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor&lt;/code&gt; folder&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;It’s a good practice add the tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorOnly&lt;/code&gt; to your group header game objects&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Hierarchy Window Group Header</title>
   <link href="//unitytips-hierarchy-window-group-header/"/>
   <updated>2019-06-18T00:00:00-03:00</updated>
   <id>//unitytips-hierarchy-window-group-header</id>
   <content type="html">&lt;p&gt;You can create a visual header to any group of components on your hierarchy window using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorApplication.hierarchyWindowItemOnGUI&lt;/code&gt;:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/YS5H8Y2Ytww &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/35410d682e41a504c7869a464a96c30a.js?file=HierarchyWindowGroupHeader.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;Any GameObject with name that starts with “—” will be considered a group header&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;You can set tag of the headers game objects as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorOnly&lt;/code&gt; to avoid them on runtime&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity and Game Development links (June 17th 2019)</title>
   <link href="//unity-and-gamedev-links-june-17th-2019/"/>
   <updated>2019-06-17T00:00:00-03:00</updated>
   <id>//unity-and-gamedev-links-june-17th-2019</id>
   <content type="html">
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Sebastian Lague&lt;/strong&gt; made an ecosystem simulation with foxes and rabbits in Unity3d (&lt;a href=&quot;https://www.youtube.com/watch?v=r_It_X7v-1E&quot;&gt;Coding Adventure: Simulating an Ecosystem&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Marius Horga&lt;/strong&gt; wrote an overview about Metal 3 (&lt;a href=&quot;http://metalkit.org/2019/06/10/introducing-metal-3.html&quot;&gt;Introducing Metal 3&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Metal 3 was announced last week at WWDC 2019. Apple presented it along with relevant numbers:&lt;/p&gt;

      &lt;ul&gt;
        &lt;li&gt;Metal can now make 100 times more draw calls than OpenGL.&lt;/li&gt;
        &lt;li&gt;Metal runs on roughly 1.4 billion devices currently.&lt;/li&gt;
        &lt;li&gt;Metal can drive up to 56 TFLOPS of single precision.&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Mike Wuetherick&lt;/strong&gt;, Head of Tech for Unity’s Innovation Group, posted about “Sherman”, the new short film made in real-time using Unity (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/11/introducing-sherman-part-1&quot;&gt;Introducing Sherman (Part 1) – a Unity project featuring Real time fur, HDRP and Visual FX Graph for animators&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Created by the Emmy-winning team that brought you Baymax Dreams, Sherman is a new real time Unity short that delivers the most advanced real time fur ever!&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Brandi House&lt;/strong&gt; posted a guidance to transition the games between UNet and the new connected games stack (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/13/navigating-unitys-multiplayer-netcode-transition&quot;&gt;Navigating Unity’s multiplayer Netcode transition&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;As many of you know, we put UNet into maintenance mode because we believe there is a better way forward with our new connected games stack&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;War Robots case study&lt;/strong&gt; shows how Pixonic used Unity to lift up their revenue from War Robots without negatively impacting user experience (&lt;a href=&quot;https://unity.com/case-study/pixonic-war-robots&quot;&gt;Pixonic - War Robots case study&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;How do you find new revenue opportunities in a free-to-play game that’s been going strong for over five years? Moscow-based Pixonic, a Top 100-grossing game developer in the CIS, has driven War Robots’ monthly players’ spending to over $5M.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Keijiro Takahashi&lt;/strong&gt;, an Unity evangelist, released the first version of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MidiAnimationTrack&lt;/code&gt; that imports .mid files into Unity Timeline. It allows creating musically synchronized animation (&lt;a href=&quot;https://github.com/keijiro/MidiAnimationTrack&quot;&gt;MIDI Animation Track&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Is a custom timeline/playables package that provides functionality to control object properties based on sequence data contained in a standard MIDI file&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; made a new video about his 5 favorite assets from Unity Asset Store (&lt;a href=&quot;https://www.youtube.com/watch?v=LLlJzQNYsAI&quot;&gt;5 AMAZING ASSETS for Unity 2019&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Brackeys&lt;/strong&gt; released a video about new 2D renderer in Unity (&lt;a href=&quot;https://www.youtube.com/watch?v=nkgGyO9VG54&quot;&gt;2D Lights in Unity!&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; MenuItem "CONTEXT/component"</title>
   <link href="//unitytips-menuitem-context-component/"/>
   <updated>2019-06-11T00:00:00-03:00</updated>
   <id>//unitytips-menuitem-context-component</id>
   <content type="html">&lt;p&gt;You can create a context menu for any component using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;CONTEXT/&amp;lt;component&amp;gt;/&amp;lt;menu name&amp;gt;&quot;&lt;/code&gt; on a MenuItem attribute:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/ZCGsunoO-TA &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/3c05b37b9af2ec6cfef0db58a2e5e3a7.js?file=TransformContextMenu.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity and Game Development links (June 10th 2019)</title>
   <link href="//unity-and-gamedev-links-june-10th-2019/"/>
   <updated>2019-06-10T00:00:00-03:00</updated>
   <id>//unity-and-gamedev-links-june-10th-2019</id>
   <content type="html">
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Toulouse de Margerie&lt;/strong&gt; wrote a post about how Unity natively maintains frame rates an how to make Unity follow a precise frame rate (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/03/precise-framerates-in-unity/&quot;&gt;Precise frame rates in Unity&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Normally, out of the box, a Unity project will attempt to run your project as fast as possible. Frames will be rendered as quickly as they can while generally being limited by your display device’s refresh rate.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Jean-Christophe Cimetiere&lt;/strong&gt;, Sr. Technical Product Manager for Mobile Plaftorms at Unity, made a forum post  about the first preview of the new Project Tiny that uses C# as the programming language (&lt;a href=&quot;https://forum.unity.com/threads/project-tiny-c-preview-available.688969/&quot;&gt;Project Tiny C# Preview available&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;We’ve been hard at work changing most of the underlying technology powering Project Tiny in response to your feedback, and in order to bring it closer to the Unity ecosystem. This preview is fully integrated with Unity’s Data-Oriented Tech Stack (DOTS) and sets up a foundation for bringing advanced features for both tiny and big use cases.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Claudia L.&lt;/strong&gt; posted about the Unity Asset Store partnership with Kochava to bring the Kochava SDK for free (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/04/bringing-the-power-of-marketing-data-to-indie-devs/&quot;&gt;Bringing the power of marketing data to indie devs&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Jeff Campbell&lt;/strong&gt; wrote an article covering his experience of porting an existing game system to Unity’s DOTS (&lt;a href=&quot;https://www.jeffcampbellmakes.games/blog/2019/5/26/diving-in-headfirst-unitys-job-system-and-jtween&quot;&gt;Porting Existing Systems to Unity’s DOTS: JTween&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Profile early and often as a DOTS implementation develops.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Alexey Zakharov&lt;/strong&gt; wrote a forum post about the UnityEditor.TypeCache API available on Unity 2019.2 or later (&lt;a href=&quot;https://forum.unity.com/threads/unityeditor-typecache-api-for-fast-extraction-of-type-attributes-in-the-editor-tooling.687682&quot;&gt;UnityEditor.TypeCache API for fast extraction of type attributes in the Editor tooling&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;For 2019.2 we optimized and extended the native cache and exposed it as a public UnityEditor.TypeCache API. It can extract information very quickly, allowing iteration over the smaller number of types we are interested in (10–100). That significantly reduces the time required to fetch types by Editor tooling.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Harry Alisavakis&lt;/strong&gt; started a series of tutorials about shaders called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VFX Master Shader&lt;/code&gt; (&lt;a href=&quot;https://halisavakis.com/my-take-on-shaders-vfx-master-shader-part-i/&quot;&gt;My take on shaders: VFX Master Shader (Part I)&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;While I experimented with different VFX concepts, I noticed that I was using a bunch of common shader techniques to create new shaders again and again, and I thought to myself: “Why not have one shader to rule them all?”&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; made a new video tutorial about the Terrain Tools Package preview  in Unity 2019.1 (&lt;a href=&quot;https://www.youtube.com/watch?v=tazRinr6nRg&quot;&gt;NEW TERRAIN TOOLS in Unity! (Tutorial)&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Unity&lt;/strong&gt; published a video tutorial to show how to create a toon outiline effect using the new Scriptable Render pass feature (&lt;a href=&quot;https://www.youtube.com/watch?v=joG_tmXUX4M&quot;&gt;How to Make a Toon Outline Effect in Unity 2019 LWRP! (Tutorial)&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;William Todd Stinson&lt;/strong&gt; wrote a blog post about how to access ARKit 3 functionality with AR foundation 2.2 and Unity 2019.1 (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/06/ar-foundation-support-for-arkit-3&quot;&gt;AR Foundation support for ARKit 3&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Unity has been working closely with Apple throughout the development of ARKit 3, and we are excited to bring these new features to Unity developers.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Kristin Stock&lt;/strong&gt; made a video showing how to create a simple build system with a circular UI (&lt;a href=&quot;https://www.youtube.com/watch?v=tKmsMfoPTC0&quot;&gt;Building System and Circular UI in Unity&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sirawat Pitaksarit&lt;/strong&gt; wrote a article about Unity Timeline, Playables and the undocumented new feature &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Marker&lt;/code&gt; (&lt;a href=&quot;https://gametorrahod.com/timeline-marker-and-everything-leading-up-to-it/&quot;&gt;Timeline marker and everything leading up to it&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;New in Unity 2019.1, you can now create a duration-less object on the timeline, the marker.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Eduardo Oriz and Alitt Khaliq&lt;/strong&gt; made a post about the high-end asset pack &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Buried Memories Vollume 2: Sereckh&lt;/code&gt; (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/07/introducing-serekh-new-asset-pack-buried-memories-volume-2&quot;&gt;Introducing Serekh: New asset pack, Buried Memories Volume 2&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;The Unity Icon Collective strives to democratize high-end asset production. With Buried Memories, starting with Volume 1: Yggdrasil, we hope to inspire creators to extend their own universe but especially to guide aspiring artists and others to observe, analyze and learn from the techniques of industry veterans.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Easing2Curve&colon; An editor window to create animation curve from easing functions</title>
   <link href="//easing-2-curve-an-editor-window-to-create-animation-curve-from-easing-functions/"/>
   <updated>2019-06-07T00:00:00-03:00</updated>
   <id>//easing-2-curve-an-editor-window-to-create-animation-curve-from-easing-functions</id>
   <content type="html">&lt;p&gt;I’ve coded an &lt;a href=&quot;https://docs.unity3d.com/Manual/editor-EditorWindows.html&quot;&gt;EditorWindow&lt;/a&gt; to create an &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/AnimationCurve.html&quot;&gt;AnimationCurve&lt;/a&gt; using easing functions that define how much a value changes over time.&lt;/p&gt;

&lt;p&gt;$# Introduction
There are many classic easing functions, such as: InQuad, OutElastic, InOutSin, and InOutBounce. All of these are functions that have a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;time&lt;/code&gt; input parameter and a return value between 0 and 1.&lt;/p&gt;

&lt;p&gt;For example, the easing function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OutCirc&lt;/code&gt; is coded like:&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Calculate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mathf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Easing2Curve&lt;/code&gt; editor window you can see 31 easing function availables:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Linear&lt;/li&gt;
  &lt;li&gt;InQuad, OutQuad, InOutQuad&lt;/li&gt;
  &lt;li&gt;InCubic, OutCubic, InOutCubic&lt;/li&gt;
  &lt;li&gt;InQuart, OutQuart, InOutQuart&lt;/li&gt;
  &lt;li&gt;InQuint, OutQuint, InOutQuint&lt;/li&gt;
  &lt;li&gt;InElastic, OutElastic, InOutElastic&lt;/li&gt;
  &lt;li&gt;InSin, OutSin, InOutSin&lt;/li&gt;
  &lt;li&gt;InExpo, OutExpo, InOutExpo&lt;/li&gt;
  &lt;li&gt;InCirc, OutCirc, InOutCirc&lt;/li&gt;
  &lt;li&gt;InBack, OutBack, InOutBack&lt;/li&gt;
  &lt;li&gt;InBounce, OutBounce and InOutBounce.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition, you can add new easing functions just implementing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IEasing&lt;/code&gt; interface.&lt;/p&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;p&gt;To setup the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Easing2Curve&lt;/code&gt; just download this &lt;a href=&quot;https://gist.github.com/giacomelli/7324d63679c11529e1710a5470d9ee7f&quot;&gt;gist&lt;/a&gt; and unzip it on an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor&lt;/code&gt; folder inside your Unity project.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/7324d63679c11529e1710a5470d9ee7f.js?file=Easing2CurveEditorWindow.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;h2 id=&quot;using&quot;&gt;Using&lt;/h2&gt;
&lt;p&gt;You can open the window through the context menu on any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AnimationCurve&lt;/code&gt; property on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Inspector&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the video below you can see how to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Easing2Curve&lt;/code&gt;:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/2W-g6-k74nc &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

</content>
 </entry>
 
 <entry>
   <title>Evolution (or from prototype to game)</title>
   <link href="//evolution-or-from-prototype-to-game/"/>
   <updated>2019-06-06T00:00:00-03:00</updated>
   <id>//evolution-or-from-prototype-to-game</id>
   <content type="html">&lt;h2 id=&quot;the-importance-of-game-prototype&quot;&gt;The importance of game prototype&lt;/h2&gt;
&lt;p&gt;Several famous books and game designers cite how the prototyping phase of a new game project is an important time to &lt;strong&gt;lay out the foundations that will guide the whole game structure&lt;/strong&gt; during its development project and, as well, to experiment with concepts and ideas of quick and unassuming way.&lt;/p&gt;

&lt;p&gt;The prototyping phase, although important, often takes a small percentage in the development time of a game project or in some cases is not part of the project itself, but rather a point prior to that, where we are seeking the idea or concept that will give birth to the new project.&lt;/p&gt;

&lt;h2 id=&quot;transposing-the-fog&quot;&gt;Transposing the fog&lt;/h2&gt;
&lt;p&gt;I always find it interesting to &lt;strong&gt;compare when an idea is born, or has its first steps, with its final result&lt;/strong&gt;, because when we are at the beginning of any project or journey, the path may seem hazy and maybe it will become clear only when we manage to transpose the fog which separates the persevering from those who prefer to fear it.&lt;/p&gt;

&lt;p&gt;For this reason I present the screenshots to &lt;strong&gt;compare Ships N ‘Battles in its prototype&lt;/strong&gt; phase, which, incidentally, at that stage did not have a name, only its project name “iBattleships”;) , &lt;strong&gt;with the final result of its HD version for iOS devices&lt;/strong&gt; with armv7 and retina display, that is, after letting the fog of this project back.&lt;/p&gt;

&lt;h2 id=&quot;prototype-x-final-product&quot;&gt;Prototype x final product&lt;/h2&gt;
&lt;p&gt;So we have below the screenshots of the main menu, deploy ships, aim and view the player’s ships, for the first functional prototype version running on Windows and the HD edition version running on an iPad 2:&lt;/p&gt;

&lt;center&gt;
  
  &lt;ul id=&quot;lightSlider&quot;&gt;
    
        &lt;li data-thumb=&quot;/assets/2019/06/06/evolution-or-from-prototype-to-game/01_prototype_menu2.png&quot;&gt;
          &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/01_prototype_menu2-200-19608643f.webp 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/01_prototype_menu2-400-19608643f.webp 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/01_prototype_menu2-640-19608643f.webp 640w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/01_prototype_menu2-200-19608643f.png 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/01_prototype_menu2-400-19608643f.png 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/01_prototype_menu2-640-19608643f.png 640w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;&quot; src=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/01_prototype_menu2-640-19608643f.png&quot; alt=&quot;post image&quot; width=&quot;640&quot; height=&quot;361&quot; /&gt;
&lt;/picture&gt;
        
        &lt;/li&gt;
    
        &lt;li data-thumb=&quot;/assets/2019/06/06/evolution-or-from-prototype-to-game/02_hd_menu2.png&quot;&gt;
          &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/02_hd_menu2-200-a49ddc189.webp 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/02_hd_menu2-400-a49ddc189.webp 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/02_hd_menu2-640-a49ddc189.webp 640w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/02_hd_menu2-200-a49ddc189.png 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/02_hd_menu2-400-a49ddc189.png 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/02_hd_menu2-640-a49ddc189.png 640w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;&quot; src=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/02_hd_menu2-640-a49ddc189.png&quot; alt=&quot;post image&quot; width=&quot;640&quot; height=&quot;480&quot; /&gt;
&lt;/picture&gt;
        
        &lt;/li&gt;
    
        &lt;li data-thumb=&quot;/assets/2019/06/06/evolution-or-from-prototype-to-game/03_prototype_deploy.png&quot;&gt;
          &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/03_prototype_deploy-200-9e00142b6.webp 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/03_prototype_deploy-400-9e00142b6.webp 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/03_prototype_deploy-640-9e00142b6.webp 640w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/03_prototype_deploy-200-9e00142b6.png 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/03_prototype_deploy-400-9e00142b6.png 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/03_prototype_deploy-640-9e00142b6.png 640w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;&quot; src=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/03_prototype_deploy-640-9e00142b6.png&quot; alt=&quot;post image&quot; width=&quot;640&quot; height=&quot;361&quot; /&gt;
&lt;/picture&gt;
        
        &lt;/li&gt;
    
        &lt;li data-thumb=&quot;/assets/2019/06/06/evolution-or-from-prototype-to-game/04_hd_deploy.png&quot;&gt;
          &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/04_hd_deploy-200-ac049100f.webp 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/04_hd_deploy-400-ac049100f.webp 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/04_hd_deploy-640-ac049100f.webp 640w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/04_hd_deploy-200-ac049100f.png 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/04_hd_deploy-400-ac049100f.png 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/04_hd_deploy-640-ac049100f.png 640w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;&quot; src=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/04_hd_deploy-640-ac049100f.png&quot; alt=&quot;post image&quot; width=&quot;640&quot; height=&quot;480&quot; /&gt;
&lt;/picture&gt;
        
        &lt;/li&gt;
    
        &lt;li data-thumb=&quot;/assets/2019/06/06/evolution-or-from-prototype-to-game/05_prototype_aim.png&quot;&gt;
          &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/05_prototype_aim-200-fb66828ba.webp 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/05_prototype_aim-400-fb66828ba.webp 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/05_prototype_aim-640-fb66828ba.webp 640w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/05_prototype_aim-200-fb66828ba.png 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/05_prototype_aim-400-fb66828ba.png 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/05_prototype_aim-640-fb66828ba.png 640w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;&quot; src=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/05_prototype_aim-640-fb66828ba.png&quot; alt=&quot;post image&quot; width=&quot;640&quot; height=&quot;361&quot; /&gt;
&lt;/picture&gt;
        
        &lt;/li&gt;
    
        &lt;li data-thumb=&quot;/assets/2019/06/06/evolution-or-from-prototype-to-game/06_hd_aim.png&quot;&gt;
          &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/06_hd_aim-200-81c8c605b.webp 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/06_hd_aim-400-81c8c605b.webp 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/06_hd_aim-640-81c8c605b.webp 640w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/06_hd_aim-200-81c8c605b.png 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/06_hd_aim-400-81c8c605b.png 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/06_hd_aim-640-81c8c605b.png 640w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;&quot; src=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/06_hd_aim-640-81c8c605b.png&quot; alt=&quot;post image&quot; width=&quot;640&quot; height=&quot;480&quot; /&gt;
&lt;/picture&gt;
        
        &lt;/li&gt;
    
        &lt;li data-thumb=&quot;/assets/2019/06/06/evolution-or-from-prototype-to-game/07_prototype_myShips.png&quot;&gt;
          &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/07_prototype_myShips-200-dbd2f0ce5.webp 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/07_prototype_myShips-400-dbd2f0ce5.webp 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/07_prototype_myShips-640-dbd2f0ce5.webp 640w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/07_prototype_myShips-200-dbd2f0ce5.png 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/07_prototype_myShips-400-dbd2f0ce5.png 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/07_prototype_myShips-640-dbd2f0ce5.png 640w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;&quot; src=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/07_prototype_myShips-640-dbd2f0ce5.png&quot; alt=&quot;post image&quot; width=&quot;640&quot; height=&quot;361&quot; /&gt;
&lt;/picture&gt;
        
        &lt;/li&gt;
    
        &lt;li data-thumb=&quot;/assets/2019/06/06/evolution-or-from-prototype-to-game/08_hd_myShips.png&quot;&gt;
          &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/08_hd_myShips-200-65c1ea7b6.webp 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/08_hd_myShips-400-65c1ea7b6.webp 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/08_hd_myShips-640-65c1ea7b6.webp 640w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/08_hd_myShips-200-65c1ea7b6.png 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/08_hd_myShips-400-65c1ea7b6.png 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/08_hd_myShips-640-65c1ea7b6.png 640w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;&quot; src=&quot;/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/08_hd_myShips-640-65c1ea7b6.png&quot; alt=&quot;post image&quot; width=&quot;640&quot; height=&quot;480&quot; /&gt;
&lt;/picture&gt;
        
        &lt;/li&gt;
    
  &lt;/ul&gt;
  
 &lt;/center&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
var initialized = false;

$(document).ready(function() {
  var inview = new Waypoint.Inview({
    element: document.getElementById('lightSlider'),
    enter: function(direction) {
      initializeGallery();
    }
  });
});

function initializeGallery() {
  if(initialized) return;
  
  initialized = true;

  $('#lightSlider').lightSlider({
    gallery: true,
    pager: true,
    controls: false,
    thumbItem: 8,
    item: 1,
    loop: false,
    slideMargin: 0,
    autoWidth: true,
    adaptiveHeight: true,
    mode: &quot;fade&quot;,
    useCSS: true,
    cssEasing: 'ease',
    easing: 'linear'
  });
}
&lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;There are only two mistakes one can make along the road to truth; not going all the way, and not starting. (Buddha)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;This is an old post that I made years ago on &lt;a href=&quot;http://skahal.github.io&quot;&gt;Skahal&lt;/a&gt;’s blog, as the subject still relevant, I reposted it here.&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Using a Sprite Mask to create a flashlight effect</title>
   <link href="//using-a-sprite-mask-to-create-a-flashlight-effect/"/>
   <updated>2019-06-04T00:00:00-03:00</updated>
   <id>//using-a-sprite-mask-to-create-a-flashlight-effect</id>
   <content type="html">&lt;p&gt;When I was reading about the &lt;a href=&quot;https://docs.unity3d.com/Manual/class-SpriteMask.html&quot;&gt;Sprite Mask&lt;/a&gt; on Unity Manual, I questioned my self &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;How long does it take to create a flashlight effect using the Sprite Mask?&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The answer is: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;less than 2 minutes&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can check this by watching the video tutorial that I made showing how to add the a flashlight effect to the &lt;a href=&quot;https://assetstore.unity.com/packages/essentials/tutorial-projects/2d-roguelike-29825&quot;&gt;Unity 2D Roguelike sample project&lt;/a&gt;:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/EfXLi6AWc_4 &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

</content>
 </entry>
 
 <entry>
   <title>Unity and Game Development links (June 3th 2019)</title>
   <link href="//unity-and-gamedev-links-june-3th-2019/"/>
   <updated>2019-06-03T00:00:00-03:00</updated>
   <id>//unity-and-gamedev-links-june-3th-2019</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Nick Davis&lt;/strong&gt; wrote a post about how Unity recently teamed up with Autodesk and Texel Logic to create a mixed-reality experience to illustrate and understand the complex nature of airflow passing over and around an IndyCar (&lt;a href=&quot;https://blogs.unity3d.com/2019/05/24/simulating-high-speed-indycars-in-ar/&quot;&gt;Simulating high-speed IndyCars in AR&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Sykoo&lt;/strong&gt;, online evangelist for Unity, published a video showing his techniques during the level design process (&lt;a href=&quot;https://www.youtube.com/watch?v=oKzX-wS4_so&quot;&gt;How I made a Village in Unity in 1 Hour!&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Joyce[MinionsArt]&lt;/strong&gt; released another shader tutorial on Twitter (&lt;a href=&quot;https://twitter.com/minionsart/status/1132593681452683264&quot;&gt;Using particle lifetime to create a fire system&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Keen Claassen&lt;/strong&gt; celebrated the enter of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Motion Matching for Unity&lt;/code&gt; on Asset Store (&lt;a href=&quot;https://www.youtube.com/watch?v=hiWvExOyBgQ&quot;&gt;Motion Matching for Unity (MxM) - Trailer&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;can produce highly fluid and responsive animations with the need for state machines or complex logic.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Chandra Foxglove&lt;/strong&gt; introduced the Terrain Tools package (preview) for Unity 2019.1 (&lt;a href=&quot;https://blogs.unity3d.com/2019/05/28/speed-up-your-work-with-the-new-terrain-tools-package&quot;&gt;Speed up your work with the new Terrain Tools Package&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;This package contains over 15 new sculpting tools, as well as a utility toolbox to streamline terrain workflow.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;The Making of The Heretic: Digital Humans and VFX Characters&lt;/strong&gt; is available through a &lt;a href=&quot;https://docs.google.com/presentation/d/1aiBXsNu-D9ZfpBNqcs08w7ToNJ2e7jgyoyfNUXSCWW8/edit#slide=id.g552bb7139f_6_1117&quot;&gt;Google Docs presentation&lt;/a&gt;.
    &lt;blockquote&gt;
      &lt;p&gt;Now the HD Render Pipeline and Post Processing are quite solid, and we were able to put much more effort into building on top of that foundation. Among other things, we put some effort into human faces and vfx-heavy characters.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The evangelist &lt;strong&gt;Keijiro Takahashi&lt;/strong&gt; released a GitHub repository with an example that shows how to connect RealSense depth camera to Unity VFX Graph (&lt;a href=&quot;https://github.com/keijiro/Rsvfx&quot;&gt;Rsvfx&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Martin Best&lt;/strong&gt; posted about the official Unity Editor for Linux (&lt;a href=&quot;&quot;&gt;Announcing the Unity Editor for Linux&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;We expect it to be fully supported by Unity 2019.3.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Anis Benyoub&lt;/strong&gt; wrote about &lt;a href=&quot;https://auzaiffe.files.wordpress.com/2019/05/digital-dragons-leveraging-ray-tracing-hardware-acceleration-in-unity.pdf&quot;&gt;Leveraging Ray Tracing
Hardware Acceleration
In Unity&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Elena Nizhnik&lt;/strong&gt; made a post listing the most outstanding #madewithunity projects from last days (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/01/community-component-soft-body-physics-shaders-that-deform-space-normans-island-and-our-steam-wishlist&quot;&gt;Community Component – Soft body physics, shaders that deform space, Norman’s Island and our Steam wishlist&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; again, now with a video tutorial about the new 2D lights in Unity  2019.2 (&lt;a href=&quot;https://www.youtube.com/watch?v=ZJvCphxCGJU&quot;&gt;NEW 2D LIGHTS IN UNITY 2019.2&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Using an AssetPostprocessor + EditorWindow to keep assets organized on Unity projects</title>
   <link href="//using-an-assetpostprocessor-editorwindow-to-keep-assets-organized-on-unity-projects/"/>
   <updated>2019-05-31T00:00:00-03:00</updated>
   <id>//using-an-assetpostprocessor-editorwindow-to-keep-assets-organized-on-unity-projects</id>
   <content type="html">&lt;p&gt;I created an AssetPostProcessor and an EditorWindow to validate if assets are in the right folder and help the Unity projects to keep organized.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;There are many ways to structure folders in a Unity project, but most common ones are cited by the Unity Learn tutorial: &lt;a href=&quot;https://unity3d.com/pt/learn/tutorials/topics/tips/large-project-organisation&quot;&gt;Large Project Organisation&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;To keep the project easy to navigate, avoid placing files in the root Assets folder. Use subfolders. How you organize those subfolders is generally decided by your projects but the two main ways to do it are:&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;A folder for each type of asset and subfolders in them per objects&lt;/strong&gt;, zones (For example Assets/Materials, Assets/Prefabs, with subfolders Assets/Material/Level1 or Assets/Prefabs/Enemies)&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;A folder per objects or zones&lt;/strong&gt; (Such as Assets/Level1/Enemies/Archer, Assets/Shared/UI, Assets/Forest/Trees) with all assets related to those in the folders (Assets/Forest/Trees/BigTree.fbx, Assets/Forest/Trees/Tree.mat, Assets/Forest/Trees/Tree_Bark.jpg).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With big teams or even with the small ones is easy that some assets will be placed in wrong folders. To help to identify and keep those projects folders organized I coded a couple of editor scripts that I called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Folder organizer&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;Another advantage of keeping assets organized in their proper folders is that you can &lt;a href=&quot;https://docs.unity3d.com/Manual/DefaultPresetsByFolder.html&quot;&gt;apply defaults presets to assets by folder&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;p&gt;To setup the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Folder organizer&lt;/code&gt; just download this &lt;a href=&quot;https://gist.github.com/giacomelli/2d561e29beadab641a4f8b56954f53f7&quot;&gt;gist&lt;/a&gt; and unzip it on an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor&lt;/code&gt; folder inside your Unity project.&lt;/p&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;h2 id=&quot;using&quot;&gt;Using&lt;/h2&gt;
&lt;p&gt;You can open the window through the menu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Window / Folder organizer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Just configure the folders to ignore, if should run the validation every time an asset is imported and defined a regular expression to find the assets and what is the expected folder.&lt;/p&gt;

&lt;p&gt;In the video below you can see in more details how to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Folder organizer&lt;/code&gt; to validate if your assets are in the right folders:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/GU6jWl6MpdM &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

</content>
 </entry>
 
 <entry>
   <title>Coding an EditorWindow to create default animations from sprites</title>
   <link href="//coding-an-editorwindow-to-create-default-animations-from-sprites/"/>
   <updated>2019-05-30T00:00:00-03:00</updated>
   <id>//coding-an-editorwindow-to-create-default-animations-from-sprites</id>
   <content type="html">&lt;p&gt;In this tutorial, we will learn how to coding an &lt;a href=&quot;https://docs.unity3d.com/Manual/editor-EditorWindows.html&quot;&gt;EditorWindow&lt;/a&gt; that creates &lt;a href=&quot;https://docs.unity3d.com/Manual/AnimationClips.html&quot;&gt;Animation Clips&lt;/a&gt; and &lt;a href=&quot;https://docs.unity3d.com/Manual/AnimatorOverrideController.html&quot;&gt;Animator Override Controller&lt;/a&gt; from &lt;a href=&quot;https://docs.unity3d.com/Manual/Sprites.html&quot;&gt;Sprites&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Create animation clips from sprites is quite a simple operation to perform on Unity:&lt;/p&gt;
&lt;center&gt;&lt;video width=&quot;640&quot; autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot;&gt;
          &lt;source src=&quot;/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/create-animation-clip-from-sprite.mp4 &quot; type=&quot;video/mp4&quot; /&gt;
          Your browser does not support the video tag.
       &lt;/video&gt;&lt;/center&gt;

&lt;p&gt;But in many cases, you need to repeat this operation over and over again to create other animations to the same character, like clips for idle, walk up, walk down and walk horizontal animations.&lt;/p&gt;

&lt;p&gt;When you need to this for only one character, there is no problem, but imagine you need to create the same 4 animation clip for dozens (maybe hundreds) of characters. Besides being a boring operation, you probably will make some mistake and creating some wrong clip. In cases like that, could be a good option to create your own EditorWindow to automate those operations.&lt;/p&gt;

&lt;h2 id=&quot;editorwindow&quot;&gt;EditorWindow&lt;/h2&gt;
&lt;p&gt;To start, let’s see what Unity Manual says about &lt;a href=&quot;https://docs.unity3d.com/Manual/editor-EditorWindows.html&quot;&gt;EditorWindow&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You can create any number of custom windows in your app. These behave just like the Inspector, Scene or any other built-in ones. This is a great way to add a user interface to a sub-system for your game.&lt;/p&gt;

  &lt;p&gt;Making a custom Editor Window involves the following simple steps:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Create a script that derives from EditorWindow.&lt;/li&gt;
    &lt;li&gt;Use code to trigger the window to display itself.&lt;/li&gt;
    &lt;li&gt;Implement the GUI code for your tool.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;During this tutorial we will create a class called DefaultAnimationsEditorWindow that derives from EditorWindow, we will add a menu item to Unity Editor to allow call our EditorWindow and we will implement the GUI for the window.&lt;/p&gt;

&lt;p&gt;Furthermore, we will implement the code that allows us to create Animation Clips and Animation Override Controller from sprites.&lt;/p&gt;

&lt;p&gt;The idea behind DefaultAnimationsEditorWindow is that when you have a bunch o characters using the same kind of animations, they used the same structure of sprite sheets, so you can create the animations based on the sprites indexes on sprite sheet texture.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/similar-spritesheets-200-7a432d7c2.webp 200w, /assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/similar-spritesheets-400-7a432d7c2.webp 400w, /assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/similar-spritesheets-678-7a432d7c2.webp 678w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/similar-spritesheets-200-7a432d7c2.png 200w, /assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/similar-spritesheets-400-7a432d7c2.png 400w, /assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/similar-spritesheets-678-7a432d7c2.png 678w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/similar-spritesheets-678-7a432d7c2.png&quot; alt=&quot;post image&quot; width=&quot;678&quot; height=&quot;178&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;similar sprites sheets from Phantasy Star IV (Alys, Chaz and Demi). Sprites ripped by Ultimecia from &lt;a href=&quot;https://www.spriters-resource.com/genesis_32x_scd/ps4&quot;&gt;The Spriters Resource&lt;/a&gt;&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Starting with sprite to walk down and ending with the last sprite of walk horizontal, we have 9 sprites and in all sprite sheets the sprites indexes are the same:&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/alys-walking-spritesheet-134-bbec336e1.webp 134w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/alys-walking-spritesheet-134-bbec336e1.png 134w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/alys-walking-spritesheet-134-bbec336e1.png&quot; alt=&quot;post image&quot; width=&quot;134&quot; height=&quot;31&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;Idle: index 1&lt;/li&gt;
  &lt;li&gt;Walk down: indexes 0, 1 and 2.&lt;/li&gt;
  &lt;li&gt;Walk up: indexes 3, 4 and 5.&lt;/li&gt;
  &lt;li&gt;Walk horizontal: indexes 6, 7 and 9.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;starter-project&quot;&gt;Starter project&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/project-128-4f597ed4f.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/project-128-4f597ed4f.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/project-128-4f597ed4f.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;All the source code and assets for this tutorial are available on this GitHub repository: &lt;a href=&quot;https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites&quot;&gt;https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites&lt;/a&gt;. To start the tutorial you need to fork, clone or download the repository.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Open the folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;default-animations-editor-window-starter&lt;/code&gt; on Unity.&lt;/p&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;This starter project has an initial setup and assets to allow us to focus on the learning about how to code the EditorWindow.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Open the scene &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_Tutorial/Scenes/TutorialScene&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Hit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Play&lt;/code&gt; button. You should see a screen like this:&lt;/p&gt;

&lt;center&gt;&lt;video width=&quot;640&quot; autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot;&gt;
          &lt;source src=&quot;/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/starter-project-play-mode.mp4 &quot; type=&quot;video/mp4&quot; /&gt;
          Your browser does not support the video tag.
       &lt;/video&gt;&lt;/center&gt;

&lt;h2 id=&quot;the-editor-window-code-organization&quot;&gt;The editor window code organization&lt;/h2&gt;

&lt;p&gt;We will organize our DefaultAnimationsEditorWindow in 3 main classes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;DefaultAnimationsEditorWindow&lt;/strong&gt;: where is the menu and GUI for our editor window.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;DefaultAnimationsSettings&lt;/strong&gt;: this is our &lt;a href=&quot;https://docs.unity3d.com/Manual/class-ScriptableObject.html&quot;&gt;ScriptableObject&lt;/a&gt; to save our settings defined on DefaultAnimationsEditorWindow.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;DefaultAnimationsUtility&lt;/strong&gt;: here we will implement the code used by our DefaultAnimationsEditorWindow to perform an operation. Put the operation code in a separated class not bounded by the GUI allow us to use these operations in any other script. This way to work is similar to what Unity itself use in some editor operations, like: &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/AnimationUtility.html&quot;&gt;AnimationUtility&lt;/a&gt;, &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/PrefabUtility.html&quot;&gt;PrefabUtility&lt;/a&gt; and &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Sprites.SpriteUtility.html&quot;&gt;SpriteUtility&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;Besides the above classes, there are some other extension method classes on the folder &lt;a href=&quot;https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites/tree/master/default-animations-editor-window-complete/Assets/_Tutorial/Editor/DefaultAnimations/Extensions&quot;&gt;Extensions&lt;/a&gt; that are self-explanatory and I won’t talk in details, but you can check them and read their code documentation to a better understanding.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;defaultanimationseditorwindow&quot;&gt;DefaultAnimationsEditorWindow&lt;/h2&gt;
&lt;p&gt;In the code bellow, we define the menu for the window through the method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ShowWindow&lt;/code&gt; and the attribute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MenuItem&lt;/code&gt;.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/menu-item-200-3ddf249e2.webp 200w, /assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/menu-item-225-3ddf249e2.webp 225w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/menu-item-200-3ddf249e2.png 200w, /assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/menu-item-225-3ddf249e2.png 225w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/menu-item-225-3ddf249e2.png&quot; alt=&quot;post image&quot; width=&quot;225&quot; height=&quot;201&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;Default Animations menu item&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;At the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OnEnable&lt;/code&gt; we read the settings from our ScriptableObject DefaultAnimationsSettings.&lt;/p&gt;

&lt;p&gt;The next 3 methods just draw the components to the editor window GUI.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/editor-window-empty-200-aa3ab20da.webp 200w, /assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/editor-window-empty-375-aa3ab20da.webp 375w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/editor-window-empty-200-aa3ab20da.png 200w, /assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/editor-window-empty-375-aa3ab20da.png 375w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/editor-window-empty-375-aa3ab20da.png&quot; alt=&quot;post image&quot; width=&quot;375&quot; height=&quot;186&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;editor window&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;Open &lt;a href=&quot;https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites/blob/master/default-animations-editor-window-complete/Assets/_Tutorial/Editor/DefaultAnimations/DefaultAnimationsEditorWindow.cs &quot;&gt;DefaultAnimationsEditorWindow.cs &lt;/a&gt;hosted with ❤ by &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;h2 id=&quot;defaultanimationssettings&quot;&gt;DefaultAnimationsSettings&lt;/h2&gt;
&lt;p&gt;There are few things to talk about this class because it is just an ordinary ScriptableObject with a couple of properties that will be serialized and used by the DefaultAnimationsUtility class, a singleton to make easier to access the settings, two methods to load/create the asset and a subclass to sprite mappings.&lt;/p&gt;

&lt;p&gt;The most important code of this class is the property &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SpriteIndexes&lt;/code&gt; that figure out what are the sprite indexes from the sprite sheet that ClipToOverride is using.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;SpriteIndexes will be used by DefaultAnimationsUtility.CreateAnimationClips to know what sprites should be used to create the new animations based on the DefaultAnimationsSettings.AnimationsMapping.&lt;/p&gt;
&lt;/div&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;Open &lt;a href=&quot;https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites/blob/master/default-animations-editor-window-complete/Assets/_Tutorial/Editor/DefaultAnimations/DefaultAnimationsSettings.cs &quot;&gt;DefaultAnimationsSettings.cs &lt;/a&gt;hosted with ❤ by &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;h2 id=&quot;defaultanimationsutility&quot;&gt;DefaultAnimationsUtility&lt;/h2&gt;
&lt;p&gt;In this class is where the heart of our editor window resides.&lt;/p&gt;

&lt;p&gt;There are 2 important methods here: CreateAnimationClips and CreateAnimatorOverride.&lt;/p&gt;

&lt;h3 id=&quot;createanimationclips&quot;&gt;CreateAnimationClips&lt;/h3&gt;
&lt;p&gt;It iterates through the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AnimationsMappings&lt;/code&gt; defined in the editor window (saved on DefaultAnimationsSettings.AnimationsMapping), for each mapping it will call the method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CreateAnimationClip&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CreateAnimationClip&lt;/code&gt; creates a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AnimationClip&lt;/code&gt; (or load if already exists one with the same name), copying the frame rate and wrap mode from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ClipToOverride&lt;/code&gt; defined in the mapping. After, if wrap mode is a loop, it uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AnimationUtility&lt;/code&gt; to set the loop time to the clip settings (through the extension methods).&lt;/p&gt;

&lt;p&gt;Now is the most tricky part of this class, we need to create an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorCurveBinding&lt;/code&gt; for the sprite and get the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ObjectReferenceKeyframe&lt;/code&gt; from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ClipToOverride&lt;/code&gt; and create new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ObjectReferenceKeyframe&lt;/code&gt; to our new keyframes (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AnimationClipExtensions&lt;/code&gt;).&lt;/p&gt;

&lt;h2 id=&quot;createanimatoroverride&quot;&gt;CreateAnimatorOverride&lt;/h2&gt;
&lt;p&gt;In this method we create &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AnimatorOverrideController&lt;/code&gt; that will override each clip from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DefaultAnimationsSettings.AnimatorController&lt;/code&gt; by the ClipToOverride of each mapping defined on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DefaultAnimationsSettings.AnimationsMapping&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AnimatorOverrideControllerExtensions&lt;/code&gt;).&lt;/p&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;Open &lt;a href=&quot;https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites/blob/master/default-animations-editor-window-complete/Assets/_Tutorial/Editor/DefaultAnimations/DefaultAnimationsUtility.cs &quot;&gt;DefaultAnimationsUtility.cs &lt;/a&gt;hosted with ❤ by &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;p&gt;Copy &lt;a href=&quot;https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites/tree/master/default-animations-editor-window-complete/Assets/_Tutorial/Editor&quot;&gt;this whole Editor folder&lt;/a&gt; to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assets/_Tutorial&lt;/code&gt; folder.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;this folder is available on your local clone of the repository inside the folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;default-animations-editor-window-complete/Assets/_Tutorial&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Delete the DefaultAnimationsSettings scriptable object instance.&lt;/p&gt;

&lt;p&gt;Open the editor window on menu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows / Default Animations&lt;/code&gt; and configure it as showing in the video below:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/5Hk8awWCtSs &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;creating-and-using-the-default-animations&quot;&gt;Creating and using the default animations&lt;/h2&gt;
&lt;p&gt;Drag all the sprite sheets (textures) from folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assets/_Tutorial/Sprites&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Spritesheets&lt;/code&gt; field and click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Create animations&lt;/code&gt; button:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/49KKfR081Po &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;challenge&quot;&gt;Challenge&lt;/h2&gt;
&lt;p&gt;Try to change de editor window to allow more the one set of default animations. One way to this is by creating another ScriptableObject to save the current selected &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DefaultAnimationsSettings&lt;/code&gt; asset.&lt;/p&gt;

&lt;p&gt;If you have any doubt how to implement any part of this challenge, feel free to ask on this post comments or &lt;a href=&quot;about&quot;&gt;send me a message&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites&quot;&gt;tutorial repository&lt;/a&gt; has two main folders:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;default-animations-editor-window-starter&lt;/strong&gt;: the one you used to make this tutorial.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;default-animations-editor-window-complete&lt;/strong&gt;: the whole solution with all scripts and assets implemented. Use this one, in case you get stuck in any item on the challenge.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In this tutorial, we learned how to coding a custom editor window to create a set of default animation clips and animator override controller.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>A Sorting Layer Debugger for Unity</title>
   <link href="//a-sorting-layer-debugger-for-unity/"/>
   <updated>2019-05-28T00:00:00-03:00</updated>
   <id>//a-sorting-layer-debugger-for-unity</id>
   <content type="html">&lt;p&gt;While I was reading about &lt;a href=&quot;https://docs.unity3d.com/Manual/2DSorting.html&quot;&gt;2D Sorting&lt;/a&gt; and &lt;a href=&quot;https://docs.unity3d.com/Manual/class-TagManager.html#SortingLayers&quot;&gt;Sorting Layers&lt;/a&gt; on Unity Manual I came up with the idea of creating a custom editor window to see which sorting layer the sprites on the scene are using.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/e_WaZrGMPdM &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;In the video above you can see the Sorting Layer Debugger been used in the &lt;a href=&quot;https://assetstore.unity.com/packages/essentials/tutorial-projects/2d-platformer-11228&quot;&gt;Unity 2D Platformer&lt;/a&gt; sample project&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;p&gt;Just download the gist bellow to your Unity3D project and add it inside a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor&lt;/code&gt; folder.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/141742c3175476f03ca2437c7b35fd88.js?file=SortingLayerDebugger.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;You can open the debugger window through the menu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Window / Sorting Layer Debugger&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The debugger can be enabled in the edit or the play mode and it will list the Sorting Layers and the number of game objects using each layer. You can hide/show the game objects of each layer by clicking on its check box.&lt;/p&gt;

&lt;p&gt;The name of Sorting Layer been used is showing in the top of each game object in the scene view.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-200-6c947fd93.webp 200w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-400-6c947fd93.webp 400w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-800-6c947fd93.webp 800w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-1084-6c947fd93.webp 1084w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-200-6c947fd93.png 200w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-400-6c947fd93.png 400w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-800-6c947fd93.png 800w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-1084-6c947fd93.png 1084w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-800-6c947fd93.png&quot; alt=&quot;post image&quot; width=&quot;1084&quot; height=&quot;548&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;Scene view with Sorting Layer Debugger enabled&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity and Game Development links (May 24th 2019)</title>
   <link href="//unity-and-gamedev-links-may-24th-2019/"/>
   <updated>2019-05-24T00:00:00-03:00</updated>
   <id>//unity-and-gamedev-links-may-24th-2019</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Kristin Stock&lt;/strong&gt; posted a video about how she is &lt;a href=&quot;https://www.youtube.com/watch?v=zBDrH3lg4YY&quot;&gt;procedurally generating cities using Subdivsion in Unity&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dave Hunt and Yang-Hai Eakes&lt;/strong&gt; made an &lt;a href=&quot;https://blogs.unity3d.com/2019/05/14/introducing-the-animation-rigging-preview-package-for-unity-2019-1/&quot;&gt;introduction for the Animation Rigging preview package for Unity 2019.1&lt;/a&gt;.
    &lt;blockquote&gt;
      &lt;p&gt;Set up procedural motion on animated skeletons at runtime. You can use a set of predefined animation constraints to manually build a control rig hierarchy for a character or develop your own custom constraints in C#.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Alexander Ameye&lt;/strong&gt; launched a &lt;a href=&quot;https://alexanderameye.github.io/&quot;&gt;site with many Unity tutorials&lt;/a&gt;, like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Water 1: Tessellated Plane&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Toon Shading&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Shahriar Shahrabi&lt;/strong&gt; made a post showing how use &lt;a href=&quot;https://medium.com/realities-io/making-the-inception-effect-in-unity-3d-with-few-lines-of-code-fb9667d4786f&quot;&gt;deformation matrices to achieve the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Inception effect&lt;/code&gt;&lt;/a&gt;.
    &lt;blockquote&gt;
      &lt;p&gt;Have you ever wondered how your brain would react if you bend the space around you in VR? Or change the field of view and do a vertigo? Well I did, so I started writing a series of shaders which deformed the space around me, using matrices and ended up with an Inception looking effect.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Steve Cavanagh and Lyndon Homewood&lt;/strong&gt; wrote a post about the &lt;a href=&quot;https://blogs.unity3d.com/2019/05/13/introducing-the-profile-analyzer/&quot;&gt;Unity Profile Analyzer (preview)&lt;/a&gt;.
    &lt;blockquote&gt;
      &lt;p&gt;Have you ever needed to compare the difference in performance between two versions of your project? See the impact of an asset or code change, optimization work, settings change or Unity version upgrade?&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Unity 2019.2 beta&lt;/strong&gt; released an &lt;a href=&quot;https://forum.unity.com/threads/experimental-2d-renderer-in-lwrp.683623&quot;&gt;experimental 2D Renderer in LWRP&lt;/a&gt; with 2D lights, Lit and Unlit Sprite Masternode in Shader Graph, and Pixel Perfect Camera.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Julien Blais&lt;/strong&gt; wrote a post about &lt;a href=&quot;https://blogs.unity3d.com/2019/05/21/how-to-use-timeline-signals&quot;&gt;new feature Signals&lt;/a&gt; added to Timeline in Unity 2019.1.
    &lt;blockquote&gt;
      &lt;p&gt;We’ve built Signals to establish a communication channel between Timeline and outside systems. But what does that mean? Why did we decide on this approach?&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity Avatar Mask and Animation Layers</title>
   <link href="//unity-avatar-mask-and-animation-layers/"/>
   <updated>2019-05-21T00:00:00-03:00</updated>
   <id>//unity-avatar-mask-and-animation-layers</id>
   <content type="html">&lt;p&gt;In this tutorial we will learn how to use &lt;a href=&quot;https://docs.unity3d.com/Manual/AnimationMaskOnImportedClips.html&quot;&gt;Avatar Mask&lt;/a&gt; and &lt;a href=&quot;https://docs.unity3d.com/Manual/AnimationLayers.html&quot;&gt;Animation Layers&lt;/a&gt; to combine multiple animations.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Imagine we imported an animated 3D model from Asset Store, in our sample, we will use the incredible robot from the free package &lt;a href=&quot;https://assetstore.unity.com/packages/3d/characters/humanoids/sci-fi-warrior-pbr-hp-106154&quot;&gt;Sci Fi Warrior PBR HP&lt;/a&gt; by &lt;a href=&quot;https://assetstore.unity.com/publishers/23554&quot;&gt;Dungeon Mason&lt;/a&gt;.
In this package, there are 10 animation clips:&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-clips-200-9e758fd81.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-clips-213-9e758fd81.webp 213w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-clips-200-9e758fd81.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-clips-213-9e758fd81.png 213w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-clips-213-9e758fd81.png&quot; alt=&quot;post image&quot; width=&quot;213&quot; height=&quot;186&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;animation clips available on Sci Fi Warrior PBR HP&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;All those clips are animations for full body. So, when you play them:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Idle_GunMiddle&lt;/strong&gt;&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/Idle_GunMiddle-200-2295a48c7.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/Idle_GunMiddle-400-2295a48c7.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/Idle_GunMiddle-445-2295a48c7.webp 445w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/Idle_GunMiddle-200-2295a48c7.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/Idle_GunMiddle-400-2295a48c7.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/Idle_GunMiddle-445-2295a48c7.png 445w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/Idle_GunMiddle-445-2295a48c7.png&quot; alt=&quot;post image&quot; width=&quot;445&quot; height=&quot;488&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;the robot stands idle with the gun in the middle of his body&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WalkForward_Shoot&lt;/strong&gt;&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/WalkForward_Shoot-200-475cee141.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/WalkForward_Shoot-400-475cee141.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/WalkForward_Shoot-492-475cee141.webp 492w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/WalkForward_Shoot-200-475cee141.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/WalkForward_Shoot-400-475cee141.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/WalkForward_Shoot-492-475cee141.png 492w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/WalkForward_Shoot-492-475cee141.png&quot; alt=&quot;post image&quot; width=&quot;492&quot; height=&quot;583&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;the robot walk forward and shoot&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;externalref&quot;&gt;&lt;p&gt;You can see all the animations available on the Sci Fi Warrior PBR HP package in this video &lt;a href=&quot;https://www.youtube.com/watch?v=fNzBdYhm3Gk&quot;&gt;https://www.youtube.com/watch?v=fNzBdYhm3Gk&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;These are great animations, although if &lt;strong&gt;we want to make the robot stands idle, but instead of keeping the gun in the middle of his body, he aims the gun or shoot?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Or &lt;strong&gt;if we want that robot walk forward but holding the gun in the middle of his body?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Of course, we can ask to the artist to create all those animation combinations, but there is a smarter approach for this case…&lt;/p&gt;

&lt;h2 id=&quot;avatar-masks-and-animation-layers-goes-to-the-rescue&quot;&gt;Avatar Masks and Animation Layers goes to the rescue&lt;/h2&gt;
&lt;p&gt;To start, lets see what Unity Manual says about Avatar Masks and Animation Layers:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.unity3d.com/Manual/AnimationMaskOnImportedClips.html&quot;&gt;Avatar Masks&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Masking allows you to discard some of the animation data within a clip, &lt;strong&gt;allowing the clip to animate only parts of the object or character rather than the entire thing&lt;/strong&gt;. For example, if you had a character with a throwing animation. If you wanted to be able to &lt;strong&gt;use the throwing animation in conjunction with various other body movements such as running, crouching and jumping&lt;/strong&gt;, you could create a mask for the throwing animation limiting it to just the right arm, upper body and head. This portion of the animation can then be played in a layer over the top of the base running or jumping animations.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.unity3d.com/Manual/AnimationLayers.html&quot;&gt;Animation Layers&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Unity uses Animation Layers for managing complex state machines for different body parts. An example of this is if you have a lower-body layer for walking-jumping, and an upper-body layer for throwing objects / shooting.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;By reading those two sections is quite clear that we need to use avatar masks and animation layers together to combine our animations of different body parts. So, in the next sections, I will demonstrate how to combine three animations (Idle_GunMiddle, WalkForward_Shoot, and Shoot_single) to make the robot shoot while stands idle and walk forward with a gun in middle body. After that, I will propose you a challenge for the other animations available.&lt;/p&gt;

&lt;h2 id=&quot;starter-project&quot;&gt;Starter project&lt;/h2&gt;
&lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/project-128-4f597ed4f.webp 128w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/logos/project-128-4f597ed4f.png 128w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;icon&quot; src=&quot;/assets/images/generated/assets/logos/project-128-4f597ed4f.png&quot; alt=&quot;post image&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;All the source code and assets for this tutorial are available on this GitHub repository: &lt;a href=&quot;https://github.com/giacomelli/unity-avatar-mask-and-animation-layers&quot;&gt;https://github.com/giacomelli/unity-avatar-mask-and-animation-layers&lt;/a&gt;. To start this tutorial you need to fork, clone or download the repository.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/giacomelli/unity-avatar-mask-and-animation-layers.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Open the folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;avatar-mask-starter&lt;/code&gt; on Unity.&lt;/p&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;This starter project has an initial setup and assets to allow us to focus in the learning about Avatar Masks and Animations Layers.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Open the scene &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_Tutorial/Scenes/TutorialScene&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;If you see a popup called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TMP importer&lt;/code&gt;, hit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Import TPM Essentials&lt;/code&gt; button to import the TextMesh Pro’s assets.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Hit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Play&lt;/code&gt; button. You should see a screen like this:&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-200-383f1880a.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-400-383f1880a.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-800-383f1880a.webp 800w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-837-383f1880a.webp 837w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-200-383f1880a.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-400-383f1880a.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-800-383f1880a.png 800w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-837-383f1880a.png 837w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-800-383f1880a.png&quot; alt=&quot;post image&quot; width=&quot;837&quot; height=&quot;469&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;Starter project running: just HUD&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;creating-the-animation-controller&quot;&gt;Creating the Animation Controller&lt;/h2&gt;

&lt;p&gt;Create a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Animation Controller&lt;/code&gt; (menu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assets/Create/Animation Controller&lt;/code&gt;) and open it:&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-window-empty-200-eb3e09a46.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-window-empty-400-eb3e09a46.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-window-empty-548-eb3e09a46.webp 548w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-window-empty-200-eb3e09a46.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-window-empty-400-eb3e09a46.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-window-empty-548-eb3e09a46.png 548w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-window-empty-548-eb3e09a46.png&quot; alt=&quot;post image&quot; width=&quot;548&quot; height=&quot;212&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;Animator window showing the animation controller created&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;All animation layers, nodes and transitions for this tutorial will be created inside this animation controller.&lt;/p&gt;

&lt;p&gt;In the hierarchy, select the SciFiWarriorHP and in the Animator component set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Controller&lt;/code&gt; property to our Animation Controller.&lt;/p&gt;

&lt;h2 id=&quot;making-the-robot-walk-forward&quot;&gt;Making the robot walk forward&lt;/h2&gt;
&lt;p&gt;To get something running right now, we will make the robot walk forward when the button &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WALK / FORWARD&lt;/code&gt; became checked.&lt;/p&gt;

&lt;p&gt;In the Animator opening with our Animation Controller drag the animation clip &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Idle_GunMiddle&lt;/code&gt; from folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SciFiWarrior/Animations&lt;/code&gt;. Do the same with the clip &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WalkForward_Shoot&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Create a &lt;a href=&quot;https://docs.unity3d.com/Manual/class-Transition.html&quot;&gt;transition&lt;/a&gt; (right click on the node and  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Make transition&lt;/code&gt;) from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Any state&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WalkForward_Shoot&lt;/code&gt; and create another transition from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WalkForward_Shoot&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Idle_GunMiddle&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now we need to tell to the animation controller when it should activate the two transitions, for this we will create a bool &lt;a href=&quot;https://docs.unity3d.com/Manual/AnimationParameters.html&quot;&gt;animation parameter&lt;/a&gt; called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WalkForward&lt;/code&gt;.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-parameter-200-d9aa1ab44.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-parameter-323-d9aa1ab44.webp 323w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-parameter-200-d9aa1ab44.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-parameter-323-d9aa1ab44.png 323w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-parameter-323-d9aa1ab44.png&quot; alt=&quot;post image&quot; width=&quot;323&quot; height=&quot;84&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;WalkForward parameter created&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;We want to activate the transition from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Any state&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WalkForward_Shoot&lt;/code&gt; when &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WalkForward&lt;/code&gt; is true, so select this transition (click on the arrow connecting the state &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Any State&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WalkForward_Shoot&lt;/code&gt;) and in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conditions&lt;/code&gt; list on inspector add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WalkForward&lt;/code&gt; equals &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt;:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/walk-forward-condition-200-6d24ef63e.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/walk-forward-condition-400-6d24ef63e.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/walk-forward-condition-426-6d24ef63e.webp 426w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/walk-forward-condition-200-6d24ef63e.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/walk-forward-condition-400-6d24ef63e.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/walk-forward-condition-426-6d24ef63e.png 426w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/walk-forward-condition-426-6d24ef63e.png&quot; alt=&quot;post image&quot; width=&quot;426&quot; height=&quot;74&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;WalkForward condition defined&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Click the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reset&lt;/code&gt; to auto fit the exit and transition time:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/reset-transition-200-b2fd78dec.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/reset-transition-400-b2fd78dec.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/reset-transition-424-b2fd78dec.webp 424w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/reset-transition-200-b2fd78dec.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/reset-transition-400-b2fd78dec.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/reset-transition-424-b2fd78dec.png 424w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/reset-transition-424-b2fd78dec.png&quot; alt=&quot;post image&quot; width=&quot;424&quot; height=&quot;80&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;reseting the transition settings&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Repeat the same steps as above for the transition from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WalkForward_Shoot&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Idle_GunMiddle&lt;/code&gt;, but use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; as the value for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WalkForward&lt;/code&gt;.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-base-layer-200-600187dda.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-base-layer-400-600187dda.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-base-layer-566-600187dda.webp 566w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-base-layer-200-600187dda.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-base-layer-400-600187dda.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-base-layer-566-600187dda.png 566w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-base-layer-566-600187dda.png&quot; alt=&quot;post image&quot; width=&quot;566&quot; height=&quot;171&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;animation base layer&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Hit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Play&lt;/code&gt; button to test the animation states. When you click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WALK / FORWARD&lt;/code&gt; the robot starts to walk, when you click it again the robot stops to walk.&lt;/p&gt;

&lt;h3 id=&quot;creating-the-upper-body-avatar-mask&quot;&gt;Creating the upper body avatar mask&lt;/h3&gt;
&lt;p&gt;The animation for walk forward works pretty well, the robot walks forward while it’s aiming the gun. This is the whole movement animated inside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WalkForward_Shoot&lt;/code&gt; clip.&lt;/p&gt;

&lt;p&gt;Now we want that robot walk forward without aiming the gun, instead of this, we want it keeps the gun in the middle as it does when &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Idle_GunMiddle&lt;/code&gt; is active. To get this done, first, we need to create an avatar mask to the upper body.&lt;/p&gt;

&lt;p&gt;Create a new Avatar Mask (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assets/Create/Avatar Mask&lt;/code&gt;) called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UpperBody&lt;/code&gt;. In the inspector, uncheck all lower body parties, as the image below:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upper-body-avatar-mask-200-461836169.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upper-body-avatar-mask-400-461836169.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upper-body-avatar-mask-435-461836169.webp 435w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upper-body-avatar-mask-200-461836169.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upper-body-avatar-mask-400-461836169.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upper-body-avatar-mask-435-461836169.png 435w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upper-body-avatar-mask-435-461836169.png&quot; alt=&quot;post image&quot; width=&quot;435&quot; height=&quot;485&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;only upper body&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;creating-a-upper-body-animation-layer&quot;&gt;Creating a upper body animation layer&lt;/h3&gt;
&lt;p&gt;With the UpperBody Avatar Mask created, we will need to create a new animation layer that will use the mask. Go to the animator window and create a new layer using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+ button&lt;/code&gt;:&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-200-65fcea606.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-400-65fcea606.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-588-65fcea606.webp 588w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-200-65fcea606.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-400-65fcea606.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-588-65fcea606.png 588w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-588-65fcea606.png&quot; alt=&quot;post image&quot; width=&quot;588&quot; height=&quot;186&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;the new layer created with the mask&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Change the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Weight&lt;/code&gt; property to 1 and set the Mask to the UpperBody Avatar Mask. Keep the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Blending&lt;/code&gt; as override.&lt;/p&gt;

&lt;p&gt;Drag the animation clip &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Idle_GunMiddle&lt;/code&gt; from folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SciFiWarrior/Animations&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UpperBody&lt;/code&gt; layer.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-fsm-200-84abc2d22.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-fsm-400-84abc2d22.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-fsm-573-84abc2d22.webp 573w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-fsm-200-84abc2d22.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-fsm-400-84abc2d22.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-fsm-573-84abc2d22.png 573w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-fsm-573-84abc2d22.png&quot; alt=&quot;post image&quot; width=&quot;573&quot; height=&quot;156&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;upper body animation layer&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;testing-the-animations&quot;&gt;Testing the animations&lt;/h4&gt;
&lt;p&gt;Hit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Play&lt;/code&gt; button to test the animation states. When you click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WALK / FORWARD&lt;/code&gt; the robot starts to walk, but now it’s not aiming the gun, instead it keeps the gun in the middle.&lt;/p&gt;

&lt;h4 id=&quot;why-does-this-happen&quot;&gt;Why does this happen?&lt;/h4&gt;
&lt;p&gt;So, this is done by the UpperBody Animation Layer that we added to our animation controller, as it’s mask was defined with our UpperBody Avatar Mask that only consider upper body parts of the humanoid, Unity overrides the base layer animation with the upper body part of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Idle_GunMiddle&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;making-the-robot-shoot&quot;&gt;Making the robot shoot&lt;/h2&gt;
&lt;p&gt;We will make the robot shoot when the button &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOOT / SINGLE&lt;/code&gt; became checked, this will help us to better understand how the Avatar Mask and Animation Layer works to override the animations from the base layer with the animations from UpperBody layer.&lt;/p&gt;

&lt;p&gt;In the Animator Window with our Animation Controller opened, select the UpperBody layer and drag the animation clip &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shoot_single&lt;/code&gt; from folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SciFiWarrior/Animations&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Create a &lt;a href=&quot;https://docs.unity3d.com/Manual/class-Transition.html&quot;&gt;transition&lt;/a&gt; (right click on node and  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Make transition&lt;/code&gt;) from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Any state&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shoot_single&lt;/code&gt; and create another transition from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shoot_single&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Idle_GunMiddle&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now we need to tell to the animation controller when it should activate the two transitions, for this we will create a bool &lt;a href=&quot;https://docs.unity3d.com/Manual/AnimationParameters.html&quot;&gt;animation parameter&lt;/a&gt; called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ShootSingle&lt;/code&gt;.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/shoot-single-parameter-200-e06f77f07.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/shoot-single-parameter-350-e06f77f07.webp 350w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/shoot-single-parameter-200-e06f77f07.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/shoot-single-parameter-350-e06f77f07.png 350w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/shoot-single-parameter-350-e06f77f07.png&quot; alt=&quot;post image&quot; width=&quot;350&quot; height=&quot;107&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;ShootSingle parameter created&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;We want to activate the transition from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Any state&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shoot_single&lt;/code&gt; when &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ShootSingle&lt;/code&gt; is true, so select this transition (click on the arrow connecting the state &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Any State&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shoot_single&lt;/code&gt;) and in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conditions&lt;/code&gt; list on inspector add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ShootSingle&lt;/code&gt; equals  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Click the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reset&lt;/code&gt; to auto fit the exit and transition time.&lt;/p&gt;

&lt;p&gt;Repeat the same steps as above for the transition from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ShootSingle&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Idle_GunMiddle&lt;/code&gt;, but use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; as the value for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ShootSingle&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Hit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Play&lt;/code&gt; button to test the animation states. When you click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOOT / SINGLE&lt;/code&gt; the robot shoot.&lt;/p&gt;

&lt;p&gt;Now you can combine the two buttons &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WALK / FORWARD&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOOT / SINGLE&lt;/code&gt; and see how the animations combine.&lt;/p&gt;

&lt;h2 id=&quot;challenge&quot;&gt;Challenge&lt;/h2&gt;
&lt;p&gt;Do something is better to learn than just reading and following someone instructions because this I will challenge you to try to implement other actions:&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/challenge-200-1ccb62e9c.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/challenge-400-1ccb62e9c.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/challenge-640-1ccb62e9c.webp 640w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/challenge-200-1ccb62e9c.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/challenge-400-1ccb62e9c.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/challenge-640-1ccb62e9c.png 640w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/challenge-640-1ccb62e9c.png&quot; alt=&quot;post image&quot; width=&quot;640&quot; height=&quot;359&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;the remaining actions to the challenge&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt; 	 	 
To implement these actions you need to do almost the same thing we did in this tutorial so far, just using another animation clips, transitions and parameters.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;The challenger items are the legs because you will need to create new Avatar Masks with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Transform&lt;/code&gt; option of the avatar configuration to get the right animation. New Animation Layers will be needed as well.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;If you have any doubt how to implement any part of this challenge, feel free to ask on this post comments or &lt;a href=&quot;about&quot;&gt;send me a message&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;The whole source code and assets for this tutorial are available on: &lt;a href=&quot;https://github.com/giacomelli/unity-avatar-mask-and-animation-layers&quot;&gt;https://github.com/giacomelli/unity-avatar-mask-and-animation-layers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This repository has two main folders:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;avatar-mask-starter&lt;/strong&gt;: the one you used to make this tutorial.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;avatar-mask-complete&lt;/strong&gt;: the whole solution with all actions implemented. Use this one, in case you get stuck in any item on the challenge.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The video below shows the complete solution running:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/sl9EheTbmhE &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In this tutorial, we learn how to use Avatar Masks and Animation Layers to animate a robot with different masks and layers.
These techniques allowing us to use already existent animations and combine them.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt;, &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/authors/eucalyp&quot; title=&quot;Eucalyp&quot;&gt;Eucalyp&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GeneticSharp - Unity3d sample</title>
   <link href="//GeneticSharp-Unity3d-sample/"/>
   <updated>2018-05-31T00:00:00-03:00</updated>
   <id>//GeneticSharp-Unity3d-sample</id>
   <content type="html">&lt;p&gt;I just pushed to GeneticSharp master branch the &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/tree/master/src/GeneticSharp.Runner.UnityApp&quot;&gt;GeneticSharp.Runners.UnityApp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this Unity3d project there are 3 samples:&lt;/p&gt;

&lt;h2 id=&quot;car2d&quot;&gt;Car2D&lt;/h2&gt;
&lt;p&gt;Based on famous BoxCar2D, this sample uses a genetic algorithm to create car designs to overcome road challenges, like gaps, hills, and obstacles.&lt;/p&gt;

&lt;p&gt;A post explaining this sample in detail will be published tomorrow.&lt;/p&gt;

&lt;h2 id=&quot;tsp&quot;&gt;TSP&lt;/h2&gt;
&lt;p&gt;The classic TSP sample, but in this, we can change the cities positions while the genetic algorithm is running and see how it finds the best route.&lt;/p&gt;

&lt;p&gt;This sample inspired this post &lt;a href=&quot;/tsp-with-GeneticSharp-and-Unity3d/&quot;&gt;TSP with GeneticSharp and Unity3D&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;wall-builder&quot;&gt;Wall builder&lt;/h2&gt;
&lt;p&gt;This sample tries to build a higher wall using random initial bricks positions.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/xXqNcgeOU_g &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;experimental-components&quot;&gt;Experimental components&lt;/h2&gt;
&lt;p&gt;In the folder _runner/Commons there are the BitStringChromosome class and some phenotype implementations. At the moment they are experimental, but I will wait for the community feedback to see if they can be promoted to GeneticSharp library code.&lt;/p&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Unity3D ScenePreview inspector</title>
   <link href="//unity3d-scenepreview-inspector/"/>
   <updated>2017-11-26T00:00:00-02:00</updated>
   <id>//unity3d-scenepreview-inspector</id>
   <content type="html">&lt;p&gt;I’m working in a new game prototype and in this process I was creating some experimental levels to test the mechanics, but by the name of scene I was having dificult to remember which mechanic the level was about and I had to open each level to discover that one was looking for, so I thought: it will be cool have an image preview of the scene when we select the file in hierarchy.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I google and didn’t find any project or asset in Asset Store that already did something like this (please, let me know if you know a similar tool) and, well, I prefer code something, than google something, then I coded a little inspector, that I named as ScenePreview:&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;UPDATED: I created a new Scene Preview solution, now using its own window editor: &lt;a href=&quot;/unitytips-scene-preview-window/&quot;&gt;Scene Preview Window&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2017/11/26/unity3d-scenepreview-inspector/ScenePreview.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;p&gt;Just download the gist bellow to your Unity3D project and add it inside a “Editor” folder.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/f74a23107fe862ae7501002ac856f932.js?file=ScenePreview.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; alt=&quot;Gist Importer&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;p&gt;After this, open it and edit the line below:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Change this to a folder in your project. &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Maybe the folder where your scenes are located. Remember to create a subfolder called &quot;Resources&quot; inside of it.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PreviewFolders&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;_scenes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;If you select any scene in the hierarchy you will see a message like this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“There is no image preview for scene ‘’ at ‘’. Please play the scene on editor and image preview will be captured automatically.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, play the scene on editor and the image preview will be taken, when you select the scene file again you see the preview.&lt;/p&gt;

&lt;p&gt;That’s it! I hope this inspector can be useful to you too.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sending a Slackbot message from Unity3d</title>
   <link href="//sending-a-slackbot-message-from-unity3d/"/>
   <updated>2016-09-17T00:00:00-03:00</updated>
   <id>//sending-a-slackbot-message-from-unity3d</id>
   <content type="html">&lt;p&gt;I was looking for a way to send a message to a Slack channel using the Slackbot API.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This is a pretty easy task to perform in C#, because there are some great client libraries implementations to the Slack API, like: &lt;a href=&quot;https://github.com/Inumedia/SlackAPI&quot;&gt;SlackApi&lt;/a&gt;, &lt;a href=&quot;https://github.com/jammerware/margiebot&quot;&gt;MargieBot&lt;/a&gt; and &lt;a href=&quot;https://github.com/noobot/SlackConnector&quot;&gt;SlackConnector&lt;/a&gt;. However, in the Unity3d world the story is a little different, because Unity3d uses an older .NET version and those mentioned client libraries are implemented using newer .NET framework versions that are incompatible with Unity3d.&lt;/p&gt;

&lt;p&gt;I could have tried to compile those client libraries projects using a older .NET version, what I really tried to do, but almost all are using things like Task and async, that are really not supported by Unity3d .NET version right now.&lt;/p&gt;

&lt;p&gt;Then I decided to try a very raw solution using the Unity3d WWWForm and it worked well, very simple, but can be useful to someone. The result is the code bellow:&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-200-c91ea3bd8.webp 200w, /assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-400-c91ea3bd8.webp 400w, /assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-611-c91ea3bd8.webp 611w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-200-c91ea3bd8.png 200w, /assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-400-c91ea3bd8.png 400w, /assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-611-c91ea3bd8.png 611w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-611-c91ea3bd8.png&quot; alt=&quot;post image&quot; width=&quot;611&quot; height=&quot;119&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h2 id=&quot;botcontroller&quot;&gt;BotController&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/1c8e405116e1b48a7d25dec9b36edbea.js&quot;&gt; &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>Nibble</title>
   <link href="//nibble/"/>
   <updated>2014-05-11T00:00:00-03:00</updated>
   <id>//nibble</id>
   <content type="html">&lt;p&gt;Looking in some backups I found one of my first games. I made it about 14 years ago: a Nibble in 461 lines of C.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/ibnpKDo0jDI &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;p&gt;I push the source code and binary files to a GitHub repository: &lt;a href=&quot;https://github.com/giacomelli/Nibble&quot;&gt;https://github.com/giacomelli/Nibble&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
</feed>