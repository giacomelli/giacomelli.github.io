<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>Diego Giacomelli - geneticsharp-in-the-wild</title>
 <link href="//tags/geneticsharp-in-the-wild/index.xml" rel="self"/>
 <link href="/tag/geneticsharp-in-the-wild.html"/>
 <updated>2019-07-10T19:21:08-03:00</updated>
 <id>/tag/geneticsharp-in-the-wild.html</id>
 <author>
   <name>Diego Giacomelli</name>
 </author>
 
 <entry>
   <title>GeneticSharp in the Wild&colon; Frixel</title>
   <link href="//geneticsharp-in-the-wild-frixel/"/>
   <updated>2019-07-04T00:00:00-03:00</updated>
   <id>//geneticsharp-in-the-wild-frixel</id>
   <content type="html">&lt;p&gt;I started a &lt;a href=&quot;/tags/geneticsharp-in-the-wild/&quot;&gt;series of posts&lt;/a&gt; about some outstanding scientific papers and projects using &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp&quot;&gt;GeneticSharp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For this third post the choose one is the &lt;code class=&quot;highlighter-rouge&quot;&gt;Frixel: 2D framing / pixel structural optimization&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Frixel is a plugin for &lt;a href=&quot;https://rhino3d.com&quot;&gt;Rhinoceros 6&lt;/a&gt;, a 3D computer graphics and computer-aided design (CAD) application.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A finite element analysis program thatâ€™s so easy a 5 year old could use it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Provided only a closed curve representing a building massing and location for core, Frixel generates a 2 dimensional grid and runs structural analysis on it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can tweak grid size, gravitation magnitude and lateral wind force to see how your design perfoms under different conditions. Additionally, it can run structural topology optimization to improve its mechanical performance by adding bracing in appropriate places.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;usage&quot;&gt;Usage&lt;/h1&gt;
&lt;p&gt;GeneticSharp was used to design the &lt;a href=&quot;https://github.com/EmilPoulsen/Frixel/blob/7a80a96e2793fd3f4e32bcf01ba6ca13fcc6a06a/Frixel.Optimizer/Optimization/StructuralChromosome.cs&quot;&gt;structural chromosomes&lt;/a&gt; and &lt;a href=&quot;https://github.com/EmilPoulsen/Frixel/blob/7a80a96e2793fd3f4e32bcf01ba6ca13fcc6a06a/Frixel.Optimizer/Optimization/StructuralFitness.cs&quot;&gt;fitness function&lt;/a&gt; to allow framing / pixel structural optimization through the &lt;a href=&quot;https://github.com/EmilPoulsen/Frixel/blob/7a80a96e2793fd3f4e32bcf01ba6ca13fcc6a06a/Frixel.Optimizer/Optimization/FrixelOptimizer.cs&quot;&gt;Frixel optimizer&lt;/a&gt;.&lt;/p&gt;

&lt;center&gt;
        &lt;img class=&quot;lazy&quot; src=&quot;/assets/2019/07/04/geneticsharp-in-the-wild-frixel/geneticsharp-frixel-optimization.gif &quot; /&gt;
      &lt;/center&gt;

&lt;h1 id=&quot;functionality&quot;&gt;Functionality&lt;/h1&gt;
&lt;p&gt;According to the developers, these are the features of Frixel:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A power-up for architect-engineer collaboration.&lt;/li&gt;
  &lt;li&gt;A great way to test and guide options in early stage design.&lt;/li&gt;
  &lt;li&gt;Fast. You can quickly get an understanding of structural behavior.&lt;/li&gt;
  &lt;li&gt;Topology optimization for minimal displacement.&lt;/li&gt;
  &lt;li&gt;Platform agnostic&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;authors&quot;&gt;Authors&lt;/h1&gt;
&lt;p&gt;The project was developed from scratch under 24 intense hours at the beyondAEC Hackathon July 2018, in Boston MA by &lt;a href=&quot;https://github.com/lelandjobson&quot;&gt;Leland Jobson&lt;/a&gt; and &lt;a href=&quot;https://github.com/EmilPoulsen&quot;&gt;Emil Poulsen&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;further-reading&quot;&gt;Further reading&lt;/h1&gt;
&lt;p&gt;You can access the project repository at: &lt;a href=&quot;https://github.com/EmilPoulsen/Frixel&quot;&gt;https://github.com/EmilPoulsen/Frixel&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GeneticSharp in the Wild&colon; Context-Sensitive Code Completion</title>
   <link href="//geneticsharp-in-the-wild-context-sensitive-code-completion/"/>
   <updated>2019-06-21T00:00:00-03:00</updated>
   <id>//geneticsharp-in-the-wild-context-sensitive-code-completion</id>
   <content type="html">&lt;p&gt;I decided to start a &lt;a href=&quot;/tags/geneticsharp-in-the-wild/&quot;&gt;series of posts&lt;/a&gt; about some outstanding scientific papers and projects using &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp&quot;&gt;GeneticSharp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For this second post the choose one is the &lt;code class=&quot;highlighter-rouge&quot;&gt;Context-Sensitive Code
Completion: Improving Predictions with Genetic Algorithms&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;The main motivation of the author about this paper was:
&lt;em&gt;Current methods of training code completion systems can possibly be improved in order
to reduce prediction errors. This requires that the amount of information considered in a
pattern is optimized. The question raised is then: how should the training of predictive
models be focused in order to increase prediction quality?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This thesis will aim to answer the question: to what extent is it possible to improve predictions
of existing state-of-the-art code completion systems with a genetic algorithm?&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;usage&quot;&gt;Usage&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;GeneticSharp is an open-source Genetic Algorithm library for C#, released under the MIT
license (Giacomelli). It has an extensible interface that allows for most, if not all, functionality
to be implemented from scratch via interfaces or leveraged by extending base classes. Classes
and interfaces also use the same terminology that has already been established, which makes
the translation from theory to implementation much more clear.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;results&quot;&gt;Results&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;As a result of the new training scheme, the quality of predictions can be increased without
losing generalizability. Application of the new training scheme could possibly be applied
to any code completion systems that trains a predictive model, making it a candidate for
improving existing systems as well as in future research.&lt;/em&gt;&lt;/p&gt;

&lt;center&gt;
        &lt;img class=&quot;lazy&quot; src=&quot;/assets/2019/06/21/geneticsharp-in-the-wild-context-sensitive-code-completion/gscc-vs-genecscc.png &quot; /&gt;
      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;results comparison between GCC and GeneCSCC (developed using GeneticSharp)&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;author&quot;&gt;Author&lt;/h1&gt;
&lt;p&gt;Marcus Ording wrote the paper for his degree project in Computer Engineering at KTH Royal Institute of Technology from Stockholm, Sweden.&lt;/p&gt;

&lt;h1 id=&quot;further-reading&quot;&gt;Further reading&lt;/h1&gt;
&lt;p&gt;You can access the full paper directly on &lt;a href=&quot;http://www.diva-portal.org/smash/get/diva2:1088591/FULLTEXT01.pdf&quot;&gt;DiVA Portal&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GeneticSharp in the Wild&colon; AeroVision - Aircraft Trajectories Optimization and Visualization</title>
   <link href="//geneticsharp-in-the-wild-aerovision-aircraft-trajectories-optimization-and-visualization/"/>
   <updated>2019-06-05T00:00:00-03:00</updated>
   <id>//geneticsharp-in-the-wild-aerovision-aircraft-trajectories-optimization-and-visualization</id>
   <content type="html">&lt;p&gt;I decided to start a &lt;a href=&quot;/tags/geneticsharp-in-the-wild/&quot;&gt;series of posts&lt;/a&gt; about some outstanding scientific papers and projects using &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp&quot;&gt;GeneticSharp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For this first post the choose one is the &lt;code class=&quot;highlighter-rouge&quot;&gt;AeroVision - Aircraft Trajectories Optimization and Visualization&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;The main motivation of the authors about the AeroVision was:
&lt;em&gt;build program that represents an innovative and efficient way to
minimize and visualize aircraft noise along simulated and real flight routes. There are no existing programs that offer both optimization and visualization of aircraft noise.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;usage&quot;&gt;Usage&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;To optimize aircraft trajectories using a genetic algorithm, AeroVision uses the &lt;a href=&quot;https://github.com/giacomelli/geneticsharp&quot;&gt;GeneticSharp&lt;/a&gt; library, which is a fast, extensible, multi-platform and multithreading C# Genetic Algorithm library that simplifies the development of applications using Genetic Algorithms.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The library supports a number of selection methods, of which the most basic option (elite selection) is recommended. The mutation method used by AeroVision is crossover, which is a commonly used setting. The stop criteria can be a fixed number of generations, which can be specified by the user.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Additionally, the user is free to define the number of chromosomes that are part of one population. The default population size is 70 chromosomes, each representing a possible trajectory in our case.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;results&quot;&gt;Results&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;For trajectory optimization we were able to achieve a &lt;code class=&quot;highlighter-rouge&quot;&gt;performance improvement of 84%&lt;/code&gt; by using a &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/wiki/multithreading&quot;&gt;multi-core and multi-threaded genetic algorithm&lt;/a&gt; based on &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp/wiki/crossovers&quot;&gt;crossover operations&lt;/a&gt;. This led to a major improvement on the workï¬‚ow management and automation&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;authors&quot;&gt;Authors&lt;/h1&gt;
&lt;p&gt;Elvan Kula and Hans Schouten wrote the paper as requirements for their degree of Bachelor of Science in Computer Science. The Dr. Ir. N. Dintzner (TU Delft, supervisor), Dr. ir. S. Hartjes (Client) and Dr. ir. M. Larson (Bachelor Project Coordinator) are the thesis committee.&lt;/p&gt;

&lt;h1 id=&quot;further-reading&quot;&gt;Further reading&lt;/h1&gt;
&lt;p&gt;You can access the full paper directly on &lt;a href=&quot;http://resolver.tudelft.nl/uuid:91c8261d-a5f2-414a-9b83-2e0d6ad5b37f&quot;&gt;TUDelft library repository&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
</feed>