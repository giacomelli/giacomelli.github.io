<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>Diego Giacomelli - unitytips</title>
 <link href="//tags/unitytips/index.xml" rel="self"/>
 <link href="/tag/unitytips.html"/>
 <updated>2020-10-15T11:37:37-03:00</updated>
 <id>/tag/unitytips.html</id>
 <author>
   <name>Diego Giacomelli</name>
 </author>
 
 <entry>
   <title>unitytips&colon; Sprites Collection</title>
   <link href="//unitytips-sprites-collection/"/>
   <updated>2020-10-13T00:00:00-03:00</updated>
   <id>//unitytips-sprites-collection</id>
   <content type="html">&lt;p&gt;Sometimes we have related sprites that can be used in a prefab, like sprites for the environment, props, and scenario. Would be cool if we can easily swap them directly on the prefab without need to find and set the sprite directly in the SpriteRenderer component?&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/TJ-Ou9YMFdA &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;spritescollection-component&quot;&gt;SpritesCollection component&lt;/h2&gt;
&lt;p&gt;I created this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SpritesCollection&lt;/code&gt; component that allows us to define a collection of sprites to a prefab/GameObject and then easily swap between the sprites available.&lt;/p&gt;

&lt;h3 id=&quot;source-code&quot;&gt;Source code&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/d5d7c720eb910d00a5a3e217b5f95fff.js?file=SpritesCollection.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;I strongly recommend that you use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gist Importer&lt;/code&gt; to import this gist to your project, but if want to import it manually, just access &lt;a href=&quot;https://gist.github.com/giacomelli/d5d7c720eb910d00a5a3e217b5f95fff&quot;&gt;the gist&lt;/a&gt; and add all .cs files to any folder on your Unity project, except the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SpritesCollectionEditor.cs&lt;/code&gt;, this one should be added to an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor&lt;/code&gt; folder.&lt;/p&gt;
&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; ShadowCaster2DFromCollider Component</title>
   <link href="//unitytips-shadowcaster2-from-collider-component/"/>
   <updated>2020-09-21T00:00:00-03:00</updated>
   <id>//unitytips-shadowcaster2-from-collider-component</id>
   <content type="html">&lt;p&gt;If you try to use a &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.render-pipelines.universal@7.1/manual/2DShadows.html&quot;&gt;ShadowCaster2D&lt;/a&gt; in a &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.2d.spriteshape@3.0/manual/index.html&quot;&gt;SpriteShape&lt;/a&gt; the shadow produced will have a box form, no matter the form of your SpriteShape.&lt;/p&gt;

&lt;p&gt;This happens because &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ShadowCaster2D&lt;/code&gt; does not update its internal shape according to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SpriteShape's&lt;/code&gt; form.&lt;/p&gt;

&lt;h2 id=&quot;shadowcaster2dfromcollider-component&quot;&gt;ShadowCaster2DFromCollider component&lt;/h2&gt;
&lt;p&gt;I created this script to help to have &lt;strong&gt;SpriteShape with ShadowCaster2D casting right shadows&lt;/strong&gt;.&lt;br /&gt;
To use it you need to add a &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/PolygonCollider2D.html&quot;&gt;PolygonCollider2D&lt;/a&gt; or an &lt;a href=&quot;https://docs.unity3d.com/Manual/class-EdgeCollider2D.html&quot;&gt;EdgeCollider2D&lt;/a&gt; to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SpriteShape's&lt;/code&gt; gameobject and then add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ShadowCaster2DFromCollider&lt;/code&gt; component to the same gameobject.&lt;/p&gt;

&lt;p&gt;Below you can see a video showing a scene with some SpriteShapes before and after applying the ShadowCaster2DFromCollider component.&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/m8nnTek5U0Y &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;source-code&quot;&gt;Source code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/c208e20ecf75a77e0833f4c7671a0052.js&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;This solution was based on this Unity Forum post: https://forum.unity.com/threads/can-2d-shadow-caster-use-current-sprite-silhouette.861256&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Editor Coroutines</title>
   <link href="//unitytips-editor-coroutines/"/>
   <updated>2020-09-15T00:00:00-03:00</updated>
   <id>//unitytips-editor-coroutines</id>
   <content type="html">
&lt;p&gt;Recently, I was doing a small experiment trying to run an &lt;a href=&quot;https://en.wikipedia.org/wiki/CHIP-8&quot;&gt;CHIP-8&lt;/a&gt; emulator inside the Unity Editor inspector window and for that I needed to update from times to time the inspector.&lt;/p&gt;

&lt;p&gt;Initially I tried to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorApplication.update&lt;/code&gt;, but as it is only called when something changes in the inspector, it ended up not serving this purpose.&lt;/p&gt;

&lt;p&gt;It was then that I discovered this official Unity package: &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.editorcoroutines@0.0/manual/index.html&quot;&gt;Editor Coroutines&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Editor Coroutines package allows the user to start the execution of iterator methods within the Editor similar to how we handle Coroutines inside MonoBehaviour scripts during runtime.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;At this time we cannot use any of the yield classes present inside the Unity Scripting API, like WaitForSeconds and WaitForEndOfFrame, except for the CustomYieldInstruction.&lt;/p&gt;

&lt;p&gt;However, there is a specific yielding class for wait seconds on Editor: &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.editorcoroutines@0.0/api/Unity.EditorCoroutines.Editor.EditorWaitForSeconds.html&quot;&gt;EditorWaitForSeconds&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In my case, I used the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yield return null&lt;/code&gt; to skip a frame within the Editor and get the refresh rate that I would like.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/96086201cb5cc512ce7a15a02ebcf29a.js&quot;&gt; &lt;/script&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2020/09/15/unitytips-editor-coroutines/chip-8-inside-unity-editor.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;The result of using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorCoroutineUtility.StartCoroutine&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;More details in the official documentation: &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.editorcoroutines@0.0/api/Unity.EditorCoroutines.Editor.EditorCoroutineUtility.html&quot;&gt;Editor Coroutines&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Focused Inspector</title>
   <link href="//unitytips-focused-inspector/"/>
   <updated>2020-09-08T00:00:00-03:00</updated>
   <id>//unitytips-focused-inspector</id>
   <content type="html">&lt;p&gt;Starting in Unity 2020.1, you can add a dedicated inspector window for a specific GameObject, Component, or Asset. 
It always displays the properties of the item you opened it for, even if you select something else in the editor.&lt;/p&gt;

&lt;p&gt;To activate a Focused Inspector, select an item &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(GameObject, Component, or Asset)&lt;/code&gt; and in the context menu hit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Properties...&lt;/code&gt; menu item.&lt;/p&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2020/09/08/unitytips-focused-inspector/focused-inspector.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;More details in the official documentation: &lt;a href=&quot;https://docs.unity3d.com/2020.1/Documentation/Manual/InspectorFocused.html&quot;&gt;Focused Inspectors&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; SettingsProvider</title>
   <link href="//unitytips-settings-provider/"/>
   <updated>2020-07-21T00:00:00-03:00</updated>
   <id>//unitytips-settings-provider</id>
   <content type="html">&lt;p&gt;You can add a custom section to &lt;a href=&quot;https://docs.unity3d.com/Manual/comp-ManagerGroup.html&quot;&gt;Project Settings&lt;/a&gt; window that allows you to configure some global settings for your project using a &lt;a href=&quot;https://docs.unity3d.com/2018.3/Documentation/ScriptReference/SettingsProvider.html&quot;&gt;SettingsProvider&lt;/a&gt;&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-200-27b940cc8.webp 200w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-400-27b940cc8.webp 400w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-800-27b940cc8.webp 800w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-1572-27b940cc8.webp 1572w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-200-27b940cc8.jpg 200w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-400-27b940cc8.jpg 400w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-800-27b940cc8.jpg 800w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-1572-27b940cc8.jpg 1572w&quot; type=&quot;image/jpeg&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-800-27b940cc8.jpg&quot; alt=&quot;post image&quot; width=&quot;1572&quot; height=&quot;618&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/623de59997fa6f2aaeeb231a2a789933.js?file=FrameworkSettings.cs&quot;&gt; &lt;/script&gt;

&lt;script src=&quot;https://gist.github.com/623de59997fa6f2aaeeb231a2a789933.js?file=FrameworkSettingsRegister.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; HelpBox Attribute (with docs button)</title>
   <link href="//unitytips-helpbox-attribute/"/>
   <updated>2020-07-14T00:00:00-03:00</updated>
   <id>//unitytips-helpbox-attribute</id>
   <content type="html">&lt;p&gt;You can create a &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/PropertyAttribute.html&quot;&gt;PropertyAttribute&lt;/a&gt; to display a help box on inspector showing a few lines of information, like &lt;a href=&quot;https://docs.unity3d.com/2020.1/Documentation/ScriptReference/EditorGUI.HelpBox.html&quot;&gt;EditorGUI.HelpBox&lt;/a&gt;, but with a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docs&lt;/code&gt; button to the documentation page.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-200-8dae754d8.webp 200w, /assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-400-8dae754d8.webp 400w, /assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-467-8dae754d8.webp 467w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-200-8dae754d8.png 200w, /assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-400-8dae754d8.png 400w, /assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-467-8dae754d8.png 467w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-467-8dae754d8.png&quot; alt=&quot;post image&quot; width=&quot;467&quot; height=&quot;413&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/be4850e86a0aacd3de4266830566b139.js?file=HelpBoxAttribute.cs&quot;&gt; &lt;/script&gt;

&lt;script src=&quot;https://gist.github.com/be4850e86a0aacd3de4266830566b139.js?file=HelpBoxDrawer.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/be4850e86a0aacd3de4266830566b139.js?file=SampleComponent.cs&quot;&gt; &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Social Share</title>
   <link href="//unitytips-social-share/"/>
   <updated>2020-07-07T00:00:00-03:00</updated>
   <id>//unitytips-social-share</id>
   <content type="html">&lt;p&gt;Using &lt;a href=&quot;https://github.com/yasirkula&quot;&gt;Süleyman Yasir KULA&lt;/a&gt; &lt;a href=&quot;https://github.com/yasirkula/UnityNativeShare&quot;&gt;Unity Native Share Plugin&lt;/a&gt; you can easily add native share to your Android/iOS games.&lt;/p&gt;

&lt;p&gt;I made the gist below that uses the plugin to add a social share component to any game object.&lt;/p&gt;
&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/07/07/unitytips-social-share/component-200-f6e7f7555.webp 200w, /assets/images/generated/assets/2020/07/07/unitytips-social-share/component-256-f6e7f7555.webp 256w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2020/07/07/unitytips-social-share/component-200-f6e7f7555.jpg 200w, /assets/images/generated/assets/2020/07/07/unitytips-social-share/component-256-f6e7f7555.jpg 256w&quot; type=&quot;image/jpeg&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2020/07/07/unitytips-social-share/component-256-f6e7f7555.jpg&quot; alt=&quot;post image&quot; width=&quot;256&quot; height=&quot;382&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/c03ec79fa0f0def94726f4b6914b4769.js?file=SocialShare.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Dynamic Log</title>
   <link href="//unitytips-dynamic-log/"/>
   <updated>2020-06-30T00:00:00-03:00</updated>
   <id>//unitytips-dynamic-log</id>
   <content type="html">&lt;p&gt;You can create a simple logging component to record logs from any UnityEvent and configure them directly in the editor:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/HHcZeWjV7vY &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/bba329d772f4fb7c8e6c9a1d3047bae2.js?file=DynamicLog.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Using ScriptableObject and EditorApplication.isPlaying to refresh the game view</title>
   <link href="//unitytips-using-scriptableobject-and-editorapplication-isplaying-to-refresh-the-game-view/"/>
   <updated>2020-04-28T00:00:00-03:00</updated>
   <id>//unitytips-using-scriptableobject-and-editorapplication-isplaying-to-refresh-the-game-view</id>
   <content type="html">&lt;p&gt;You can use &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/EditorApplication-isPlaying.html&quot;&gt;EditorApplication.isPlaying&lt;/a&gt; in your custom editor to update the game view when a &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/ScriptableObject.html&quot;&gt;ScriptableObject&lt;/a&gt; is updated and you need to restart the scene or do something more complex to see the result of ScriptableObject changed during the game’s playing in the editor.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/oM5-RJU6g2I &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; TimeSpan Box Drawer</title>
   <link href="//unitytips-timespan-box-drawer/"/>
   <updated>2020-04-21T00:00:00-03:00</updated>
   <id>//unitytips-timespan-box-drawer</id>
   <content type="html">&lt;p&gt;You can create a &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/PropertyDrawer.html&quot;&gt;PropertyDrawer&lt;/a&gt; to display a help box on inspector showing the time information in seconds fields using &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-timespan-format-strings&quot;&gt;TimeSpan format strings&lt;/a&gt;:&lt;/p&gt;
&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2020/04/21/unitytips-timespan-box-drawer/TimeSpanBox.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/bb3b4bf52e560c3d673cd3d50f563cfb.js?file=TimeSpanBoxAttribute.cs&quot;&gt; &lt;/script&gt;

&lt;script src=&quot;https://gist.github.com/bb3b4bf52e560c3d673cd3d50f563cfb.js?file=TimeSpanBoxDrawer.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/bb3b4bf52e560c3d673cd3d50f563cfb.js?file=TimeSpanBoxDrawerUsage.cs&quot;&gt; &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; String interpolation</title>
   <link href="//unitytips-string-interpolation/"/>
   <updated>2019-09-03T00:00:00-03:00</updated>
   <id>//unitytips-string-interpolation</id>
   <content type="html">&lt;p&gt;Since C# 6.0 you can use &lt;a href=&quot;https://docs.microsoft.com/pt-br/dotnet/csharp/language-reference/tokens/interpolated&quot;&gt;String interpolation&lt;/a&gt; to make code more readable:&lt;/p&gt;
&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2019/09/03/unitytips-string-interpolation/string-interpolation.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;The sample lines will result in the same string&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The $ special character identifies a string literal as an interpolated string.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;String interpolation provides a more readable and convenient syntax to create formatted strings than a string composite formatting feature.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Expression body definition</title>
   <link href="//unitytips-expression-body-definition/"/>
   <updated>2019-08-27T00:00:00-03:00</updated>
   <id>//unitytips-expression-body-definition</id>
   <content type="html">&lt;p&gt;When you have a single line method, you can use &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/lambda-operator#expression-body-definition&quot;&gt;expression body definition&lt;/a&gt; do simplify and reduce the lines of code:&lt;/p&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2019/08/27/unitytips-expression-body-definition/expression-body-definition-methods.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;

&lt;blockquote&gt;
  &lt;p&gt;Expression body definitions for methods and read-only properties are supported starting with C# 6. Expression body definitions for constructors, finalizers, property accessors, and indexers are supported starting with C# 7.0.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So you can use the expression body definition for other members, like properties:&lt;/p&gt;
&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2019/08/27/unitytips-expression-body-definition/expression-body-definition-properties.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;

</content>
 </entry>
 
 <entry>
   <title>Unity Toasty Notification</title>
   <link href="//unity-toasty-notification/"/>
   <updated>2019-07-30T00:00:00-03:00</updated>
   <id>//unity-toasty-notification</id>
   <content type="html">&lt;p&gt;Last saturday I created the &lt;a href=&quot;https://github.com/giacomelli/Giacomelli.Unity.ToastyNotification&quot;&gt;ToastyNotification&lt;/a&gt; package, a fun editor log interceptor that play Mortal Kombat’s Toasty easter-egg every time an error is logged.&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/wwhz2wPN_wU &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h1 id=&quot;setup&quot;&gt;Setup&lt;/h1&gt;
&lt;p&gt;Just install the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ToastyNotification.package&lt;/code&gt; from the repository &lt;a href=&quot;https://github.com/giacomelli/Giacomelli.Unity.ToastyNotification/releases&quot;&gt;release page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now every time your game raise an error on Unity’s editor console log, the Toasty Notifcation will warning you 😉!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Scene Preview Window</title>
   <link href="//unitytips-scene-preview-window/"/>
   <updated>2019-07-23T00:00:00-03:00</updated>
   <id>//unitytips-scene-preview-window</id>
   <content type="html">&lt;p&gt;I created this window that extends the Unity 3D editor so you can preview the scenes by selecting them in the project window.&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/eh8nqfDCUVo &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h1 id=&quot;usage&quot;&gt;Usage&lt;/h1&gt;
&lt;p&gt;As can be seen from the video above the extension can be used in two ways after adding the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scene Preview&lt;/code&gt; window to the editor (via the&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; Window / Scene Preview&lt;/code&gt; menu):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Selects &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scene&lt;/code&gt; and clicking the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Capture screenshot&lt;/code&gt; button in both edit mode and play mode.&lt;/li&gt;
  &lt;li&gt;Running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scene&lt;/code&gt; in play mode and if there is still no preview screenshot for the scene, a screenshot will be taken automatically after 10 seconds.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;p&gt;Below you can see only the code of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ScenePreviewEditor.cs&lt;/code&gt;. There are 3 more files for this extension.&lt;/p&gt;

&lt;p&gt;Download the full &lt;a href=&quot;https://gist.github.com/giacomelli/ad9d4dcdb702d2d1edf0663628ca9608&quot;&gt;gist&lt;/a&gt; or use the &lt;a href=&quot;/unitytips-gist-importer&quot;&gt;Gist Importer&lt;/a&gt; to import the complete &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scene Preview Window&lt;/code&gt; for your project.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/ad9d4dcdb702d2d1edf0663628ca9608.js?file=ScenePreviewWindow.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;Remember that you need to save the above .cs files inside any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor&lt;/code&gt; folder&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Hierarchy Window GameObject Icon</title>
   <link href="//unitytips-hierarchy-window-gameobject-icon/"/>
   <updated>2019-07-16T00:00:00-03:00</updated>
   <id>//unitytips-hierarchy-window-gameobject-icon</id>
   <content type="html">&lt;p&gt;You can show the game objects icons in hierarchy window using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorGUIUtility.ObjectContent&lt;/code&gt;&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/fwtQ51ybHpc &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/a73c947508ee0b32eef7c422620ec6b6.js?file=HierarchyWindowGameObjectIcon.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;p&gt;The icons used in the video are &lt;a href=&quot;https://fontawesome.com/icons&quot;&gt;Font Awesome&lt;/a&gt; icons and I used &lt;a href=&quot;http://fa2png.io/&quot;&gt;fa2png.io&lt;/a&gt; to convert them to .png.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;Remember that you need to save the above .cs inside any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor&lt;/code&gt; folder&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Hierarchy Window Layer Info</title>
   <link href="//unitytips-hierarchy-window-layer-info/"/>
   <updated>2019-07-09T00:00:00-03:00</updated>
   <id>//unitytips-hierarchy-window-layer-info</id>
   <content type="html">&lt;p&gt;You can create a visual layer info to any component on your hierarchy window using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorApplication.hierarchyWindowItemOnGUI&lt;/code&gt;:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/JxvOshwNdfE &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/096005d0d0df79b94321f950138220a3.js?file=HierarchyWindowLayerInfo.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips Museum</title>
   <link href="//unitytips-museum/"/>
   <updated>2019-07-02T00:00:00-03:00</updated>
   <id>//unitytips-museum</id>
   <content type="html">&lt;p&gt;I &lt;a href=&quot;https://twitter.com/ogiacomelli/status/1144379461317648384&quot;&gt;recently&lt;/a&gt; started studying &lt;a href=&quot;https://dotnet.microsoft.com/apps/aspnet/web-apps/client&quot;&gt;Blazor&lt;/a&gt; and last weekend I created this simple app that I called: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#unitytips Museum&lt;/code&gt;, a collection of best #unitytips.&lt;/p&gt;

&lt;p&gt;You can access it directly in my site, in this url: &lt;a href=&quot;http://diegogiacomelli.com.br/apps/unitytips-museum&quot;&gt;http://diegogiacomelli.com.br/apps/unitytips-museum&lt;/a&gt;&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/B9eTNZWhojI &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h1 id=&quot;the-unitytips-collection&quot;&gt;The #unitytips collection&lt;/h1&gt;
&lt;p&gt;Every week all #unitytips retweeted by &lt;a href=&quot;https://twitter.com/unity3d&quot;&gt;@unity3d&lt;/a&gt; will be included to the collection.&lt;/p&gt;

&lt;p&gt;If you know a really good #unitytips (at least 50 retweets) that should be added to the collection, please follow one of options above:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Contact me on Twitter &lt;a href=&quot;https://twitter.com/ogiacomelli&quot;&gt;@ogiacomelli&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/giacomelli/unitytips-museum&quot;&gt;Fork it on GitHub&lt;/a&gt;, add the #unitytips to the wwwroot/data/tips.json file and create a pull-request.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;about-blazor&quot;&gt;About Blazor&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;Blazor can run your client-side C# code directly in the browser, using WebAssembly. Because it’s real .NET running on WebAssembly, you can re-use code and libraries from server-side parts of your application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In a future post I will discuss what I learned about Blazor while developing the #unitytips Museum, but I can give a spoiler: I really liked it!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Gist Importer</title>
   <link href="//unitytips-gist-importer/"/>
   <updated>2019-06-25T00:00:00-03:00</updated>
   <id>//unitytips-gist-importer</id>
   <content type="html">&lt;p&gt;Using the Gist below you can easily import other Gists to your Unity project just copying the URL from browser:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/YljjAkebxiE &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/9a248eecf5c1ffc477b59524f63264d3.js&quot;&gt; &lt;/script&gt;

&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;All Gists are imported to folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assets/Gists&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Changing the style of the Hierarchy Window Group Header</title>
   <link href="//unitytips-changing-the-style-of-the-hierarchy-window-group-header/"/>
   <updated>2019-06-20T00:00:00-03:00</updated>
   <id>//unitytips-changing-the-style-of-the-hierarchy-window-group-header</id>
   <content type="html">&lt;p&gt;In my last &lt;a href=&quot;/tags/unitytips/&quot;&gt;#unitytips&lt;/a&gt; I demonstrated how you could create a visual header to any group of components on your hierarchy window using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorApplication.hierarchyWindowItemOnGUI&lt;/code&gt;. Now I’m improving it allowing you to &lt;strong&gt;customize its style&lt;/strong&gt;.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/g2lq0lIJzh8 &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;To change the style, you just need to edit the values of the HierarchyWindowGroupHeaderSettings in the inspector&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/bb6a9932e5f49a072c57a7c17135bf6b.js?file=HierarchyWindowGroupHeader.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;Remember that you need to save the above .cs inside any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor&lt;/code&gt; folder&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;note&quot;&gt;&lt;p&gt;It’s a good practice add the tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorOnly&lt;/code&gt; to your group header game objects&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; Hierarchy Window Group Header</title>
   <link href="//unitytips-hierarchy-window-group-header/"/>
   <updated>2019-06-18T00:00:00-03:00</updated>
   <id>//unitytips-hierarchy-window-group-header</id>
   <content type="html">&lt;p&gt;You can create a visual header to any group of components on your hierarchy window using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorApplication.hierarchyWindowItemOnGUI&lt;/code&gt;:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/YS5H8Y2Ytww &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/35410d682e41a504c7869a464a96c30a.js?file=HierarchyWindowGroupHeader.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;Any GameObject with name that starts with “—” will be considered a group header&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;You can set tag of the headers game objects as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditorOnly&lt;/code&gt; to avoid them on runtime&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>unitytips&colon; MenuItem "CONTEXT/component"</title>
   <link href="//unitytips-menuitem-context-component/"/>
   <updated>2019-06-11T00:00:00-03:00</updated>
   <id>//unitytips-menuitem-context-component</id>
   <content type="html">&lt;p&gt;You can create a context menu for any component using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;CONTEXT/&amp;lt;component&amp;gt;/&amp;lt;menu name&amp;gt;&quot;&lt;/code&gt; on a MenuItem attribute:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/ZCGsunoO-TA &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/3c05b37b9af2ec6cfef0db58a2e5e3a7.js?file=TransformContextMenu.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Using a Sprite Mask to create a flashlight effect</title>
   <link href="//using-a-sprite-mask-to-create-a-flashlight-effect/"/>
   <updated>2019-06-04T00:00:00-03:00</updated>
   <id>//using-a-sprite-mask-to-create-a-flashlight-effect</id>
   <content type="html">&lt;p&gt;When I was reading about the &lt;a href=&quot;https://docs.unity3d.com/Manual/class-SpriteMask.html&quot;&gt;Sprite Mask&lt;/a&gt; on Unity Manual, I questioned my self &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;How long does it take to create a flashlight effect using the Sprite Mask?&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The answer is: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;less than 2 minutes&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can check this by watching the video tutorial that I made showing how to add the a flashlight effect to the &lt;a href=&quot;https://assetstore.unity.com/packages/essentials/tutorial-projects/2d-roguelike-29825&quot;&gt;Unity 2D Roguelike sample project&lt;/a&gt;:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/EfXLi6AWc_4 &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

</content>
 </entry>
 
 <entry>
   <title>A Sorting Layer Debugger for Unity</title>
   <link href="//a-sorting-layer-debugger-for-unity/"/>
   <updated>2019-05-28T00:00:00-03:00</updated>
   <id>//a-sorting-layer-debugger-for-unity</id>
   <content type="html">&lt;p&gt;While I was reading about &lt;a href=&quot;https://docs.unity3d.com/Manual/2DSorting.html&quot;&gt;2D Sorting&lt;/a&gt; and &lt;a href=&quot;https://docs.unity3d.com/Manual/class-TagManager.html#SortingLayers&quot;&gt;Sorting Layers&lt;/a&gt; on Unity Manual I came up with the idea of creating a custom editor window to see which sorting layer the sprites on the scene are using.&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/e_WaZrGMPdM &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;In the video above you can see the Sorting Layer Debugger been used in the &lt;a href=&quot;https://assetstore.unity.com/packages/essentials/tutorial-projects/2d-platformer-11228&quot;&gt;Unity 2D Platformer&lt;/a&gt; sample project&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;p&gt;Just download the gist bellow to your Unity3D project and add it inside a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor&lt;/code&gt; folder.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/141742c3175476f03ca2437c7b35fd88.js?file=SortingLayerDebugger.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;You can open the debugger window through the menu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Window / Sorting Layer Debugger&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The debugger can be enabled in the edit or the play mode and it will list the Sorting Layers and the number of game objects using each layer. You can hide/show the game objects of each layer by clicking on its check box.&lt;/p&gt;

&lt;p&gt;The name of Sorting Layer been used is showing in the top of each game object in the scene view.&lt;/p&gt;

&lt;center&gt;                
        &lt;picture&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-200-6c947fd93.webp 200w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-400-6c947fd93.webp 400w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-800-6c947fd93.webp 800w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-1084-6c947fd93.webp 1084w&quot; type=&quot;image/webp&quot; /&gt;
  &lt;source sizes=&quot;(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px&quot; srcset=&quot;/assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-200-6c947fd93.png 200w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-400-6c947fd93.png 400w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-800-6c947fd93.png 800w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-1084-6c947fd93.png 1084w&quot; type=&quot;image/png&quot; /&gt;
  &lt;img class=&quot;screenshot&quot; src=&quot;/assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-800-6c947fd93.png&quot; alt=&quot;post image&quot; width=&quot;1084&quot; height=&quot;548&quot; /&gt;
&lt;/picture&gt;

      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;Scene view with Sorting Layer Debugger enabled&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Unity3D ScenePreview inspector</title>
   <link href="//unity3d-scenepreview-inspector/"/>
   <updated>2017-11-26T00:00:00-02:00</updated>
   <id>//unity3d-scenepreview-inspector</id>
   <content type="html">&lt;p&gt;I’m working in a new game prototype and in this process I was creating some experimental levels to test the mechanics, but by the name of scene I was having dificult to remember which mechanic the level was about and I had to open each level to discover that one was looking for, so I thought: it will be cool have an image preview of the scene when we select the file in hierarchy.&lt;/p&gt;

&lt;p&gt;I google and didn’t find any project or asset in Asset Store that already did something like this (please, let me know if you know a similar tool) and, well, I prefer code something, than google something, then I coded a little inspector, that I named as ScenePreview:&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;UPDATED: I created a new Scene Preview solution, now using its own window editor: &lt;a href=&quot;/unitytips-scene-preview-window/&quot;&gt;Scene Preview Window&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;center&gt;                
        &lt;img class=&quot;screenshot&quot; src=&quot;/assets/2017/11/26/unity3d-scenepreview-inspector/ScenePreview.gif &quot; alt=&quot;post image&quot; /&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;p&gt;Just download the gist bellow to your Unity3D project and add it inside a “Editor” folder.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/f74a23107fe862ae7501002ac856f932.js?file=ScenePreview.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

&lt;p&gt;After this, open it and edit the line below:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Change this to a folder in your project. &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Maybe the folder where your scenes are located. Remember to create a subfolder called &quot;Resources&quot; inside of it.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PreviewFolders&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;_scenes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;If you select any scene in the hierarchy you will see a message like this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“There is no image preview for scene ‘’ at ‘’. Please play the scene on editor and image preview will be captured automatically.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, play the scene on editor and the image preview will be taken, when you select the scene file again you see the preview.&lt;/p&gt;

&lt;p&gt;That’s it! I hope this inspector can be useful to you too.&lt;/p&gt;
</content>
 </entry>
 
</feed>