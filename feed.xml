<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://diegogiacomelli.com.br/feed.xml" rel="self" type="application/atom+xml" /><link href="http://diegogiacomelli.com.br/" rel="alternate" type="text/html" /><updated>2019-07-10T07:22:47-03:00</updated><id>http://diegogiacomelli.com.br/feed.xml</id><title type="html">Diego Giacomelli</title><subtitle>programmer</subtitle><entry><title type="html">TSP with GeneticSharp and Blazor</title><link href="http://diegogiacomelli.com.br/tsp-with-geneticsharp-and-blazor/" rel="alternate" type="text/html" title="TSP with GeneticSharp and Blazor" /><published>2019-07-10T00:00:00-03:00</published><updated>2019-07-10T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/tsp-with-geneticsharp-and-blazor</id><content type="html" xml:base="http://diegogiacomelli.com.br/tsp-with-geneticsharp-and-blazor/">&lt;p&gt;In this post I will show how to use GeneticSharp and Blazor to solve the TSP (Travelling salesman problem).&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;According to Wikipedia The travelling salesman problem (TSP) asks the following question:&lt;em&gt;&lt;strong&gt;“Given a list of cities and the distances between each pair of cities, what is the shortest possible route that visits each city and returns to the origin city?”&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;TSP is a classic sample to test some optimization techniques, as well it’s fairly used to demonstrate how to implement a genetic algorithm. For these reasons I will use it to show you how to implement a basic genetic algorithm in Blazor using GeneticSharp.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;This post is a like a mirror of the &lt;a href=&quot;/tsp-with-GeneticSharp-and-Unity3d&quot;&gt;TSP with GeneticSharp an Unity3D&lt;/a&gt;. It’s using the same format to teach TSP and GeneticSharp, but instead of Unity3D, this one is teaching about Blazor.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;You can see the final result of this tutorial on &lt;a href=&quot;/apps/geneticsharp-runner-blazorapp&quot;&gt;http://diegogiacomelli/apps/geneticsharp-runner-blazorapp&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;To better understand this tutorial, you need to have some experiences/knowledges in:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Blazor (beginner)&lt;/li&gt;
  &lt;li&gt;Genetic algorithms (beginner).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’ll perform a very basic use of Blazor and everything you need to complete this tutorial will be explained or provided by the code samples, but if want to find out better what’s happening under the hood, take a look on &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/blazor/get-started?view=aspnetcore-3.0&amp;amp;viewFallbackFrom=aspnetcore-2.2&amp;amp;tabs=netcore-cli&quot;&gt;Blazor Get Started page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you need an introduction to genetic algorithms, take a look at this tutorial &lt;a href=&quot;/function-optimization-with-geneticsharp/&quot;&gt;Function optimization with GeneticSharp&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-blazor-project&quot;&gt;Creating the Blazor project&lt;/h2&gt;
&lt;p&gt;Open a terminal and type:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet new &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; Microsoft.AspNetCore.Blazor.Templates::3.0.0-preview6.19307.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;This will install the latest Blazor templates for .NET Core.&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;This tutorial is based on Blazor &lt;code class=&quot;highlighter-rouge&quot;&gt;preview6&lt;/code&gt;. If you are doing this tutorial using a newer Blazor version and have encountered some problem, leave a comment at the end of the post or contact me on &lt;a href=&quot;https://twitter.com/ogiacomelli&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Now we’ll create a scaffold Blazor app using the &lt;code class=&quot;highlighter-rouge&quot;&gt;blazor&lt;/code&gt; template:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet new blazor &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; TspWithGeneticSharp
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;TspWithGeneticSharp
dotnet watch run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wait for the message &lt;code class=&quot;highlighter-rouge&quot;&gt;Application started. Press Ctrl+C to shut down.&lt;/code&gt; show up in terminal, then open the url &lt;a href=&quot;http://localhost:5000&quot;&gt;http://localhost:5000&lt;/a&gt; on your browser, you should see something like this:&lt;/p&gt;
&lt;center&gt;
        &lt;img class=&quot;lazy&quot; src=&quot;/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app.png &quot; /&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;installing-geneticsharp&quot;&gt;Installing GeneticSharp&lt;/h2&gt;
&lt;p&gt;Open a new terminal in the same folder and type:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet add package GeneticSharp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;This will install the latest &lt;a href=&quot;https://www.nuget.org/packages/GeneticSharp/&quot;&gt;GeneticSharp NuGet package&lt;/a&gt; in your newly created Blazor app.&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;opening-the-project&quot;&gt;Opening the project&lt;/h2&gt;
&lt;p&gt;I recommend to you use &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; to open the project. There is some cool VS Code extensions to work with Blazor.&lt;/p&gt;

&lt;p&gt;In the same terminal where you added the GeneticSharp package, type:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;This will open the Blazor project with VS Code.&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In the root folder of your Blazor project create a new subfolder called &lt;code class=&quot;highlighter-rouge&quot;&gt;Tsp&lt;/code&gt;. We’ll add all our C# classes inside this folder.&lt;/p&gt;

&lt;h2 id=&quot;defining-the-tsp-chromosome&quot;&gt;Defining the TSP chromosome&lt;/h2&gt;
&lt;center&gt;
      &lt;img class=&quot;lazy&quot; src=&quot;/assets/logos/route.png &quot; style=&quot;max-height:200px&quot; /&gt;
      &lt;/center&gt;

&lt;p&gt;The chromosome represents a solution of the problem we are trying to solve. In our case the TSP chromosome should represent &lt;em&gt;&lt;strong&gt;“the shortest possible route that visits each city and returns to the origin city”&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;To represent the cities route each gene of our chromosome will represent an index of a city in the route.&lt;/p&gt;

&lt;p&gt;Create a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;TspChromosome.cs&lt;/code&gt;:&lt;/p&gt;
&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/9addc5182943ba25eb82201e30c76418.js?file=TspChromosome.cs&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;representing-a-city&quot;&gt;Representing a city&lt;/h2&gt;
&lt;p&gt;The next step is define our genetic algorithm fitness function, but first we need to create a simple class to represent a city on a 2D space.&lt;/p&gt;

&lt;p&gt;Create a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;TspCity.cs&lt;/code&gt;:&lt;/p&gt;
&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/9addc5182943ba25eb82201e30c76418.js?file=TspCity.cs&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;the-fitness-function&quot;&gt;The fitness function&lt;/h2&gt;
&lt;p&gt;Now we need to evaluate the &lt;code class=&quot;highlighter-rouge&quot;&gt;TspChromosome&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Our fitness function will evaluate the chromosome fitness based on the total distance to reach all cities in the route represented by the chromosome. The shorter the distance, the better the chromosome.&lt;/p&gt;

&lt;p&gt;Create a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;TspFitness.cs&lt;/code&gt;: &lt;noscript&gt;&amp;lt;pre&amp;gt;400: Invalid request
&amp;lt;/pre&amp;gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/9addc5182943ba25eb82201e30c76418.js?file=TspFitness.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;configuring-the-genetic-algorithm&quot;&gt;Configuring the Genetic Algorithm&lt;/h2&gt;
&lt;p&gt;In this step we need to configure our genetic algorithm using the &lt;code class=&quot;highlighter-rouge&quot;&gt;TspChromosome&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;TspFitness&lt;/code&gt; and some classic GA operators already built in GeneticSharp.&lt;/p&gt;

&lt;p&gt;Create a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;TspGA.cs&lt;/code&gt;: &lt;noscript&gt;&amp;lt;pre&amp;gt;400: Invalid request
&amp;lt;/pre&amp;gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/9addc5182943ba25eb82201e30c76418.js?file=TspGA.cs&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;h3 id=&quot;why-use-timer&quot;&gt;Why use Timer?&lt;/h3&gt;
&lt;p&gt;GeneticSharp can be used as single threading or multithreading to evaluate chromosomes with the fitness function, but WebAssembly (and Blazor) can use just the UI thread, in this scenario when we call &lt;code class=&quot;highlighter-rouge&quot;&gt;GeneticAlgorithm.Start&lt;/code&gt; method it freezes the UI until the GA finish.&lt;/p&gt;

&lt;p&gt;To avoid this behavior, the solution is: run each generation of the GA inside a step in a &lt;code class=&quot;highlighter-rouge&quot;&gt;System.Threading.Timer&lt;/code&gt; as you can see in the &lt;code class=&quot;highlighter-rouge&quot;&gt;TspGA.Run&lt;/code&gt; method.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;APIs that aren’t applicable inside of a web browser (for example, accessing the file system, opening a socket, and &lt;strong&gt;threading&lt;/strong&gt;) throw a PlatformNotSupportedException.
(&lt;a href=&quot;https://docs.microsoft.com/pt-br/aspnet/core/blazor/?view=aspnetcore-3.0&quot;&gt;https://docs.microsoft.com/pt-br/aspnet/core/blazor/?view=aspnetcore-3.0&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;

&lt;h2 id=&quot;creating-the-razor-page&quot;&gt;Creating the Razor page&lt;/h2&gt;
&lt;p&gt;Inside the folder &lt;code class=&quot;highlighter-rouge&quot;&gt;Pages&lt;/code&gt; create a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;Tsp.razor&lt;/code&gt;: &lt;noscript&gt;&amp;lt;pre&amp;gt;400: Invalid request
&amp;lt;/pre&amp;gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=Tsp.v1.razor&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;As we need to interop with JavaScript to manipulate DOM, we will use some helper JS functions. Add the file &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas-helper.js&lt;/code&gt; inside the folder &lt;code class=&quot;highlighter-rouge&quot;&gt;wwwroot/js&lt;/code&gt;:  &lt;noscript&gt;&amp;lt;pre&amp;gt;400: Invalid request
&amp;lt;/pre&amp;gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/9addc5182943ba25eb82201e30c76418.js?file=canvas-helper.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Open the file &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; and add the tag below inside the tag &lt;code class=&quot;highlighter-rouge&quot;&gt;head&lt;/code&gt;:  &lt;noscript&gt;&amp;lt;pre&amp;gt;400: Invalid request
&amp;lt;/pre&amp;gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=index.canvas-helper.html&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;&lt;h3 id=&quot;why-use-ijsruntime-do-access-dom&quot;&gt;Why use IJSRuntime do access DOM?&lt;/h3&gt;
&lt;p&gt;It’s awesome we can now use C# in the browser with Blazor. But unfortunately we can’t do everything with it, yet. Currently, WebAssembly isn’t able to directly access the DOM API, which means that Blazor isn’t able to either.
(&lt;a href=&quot;https://chrissainty.com/blazor-bites-javascript-interop&quot;&gt;https://chrissainty.com/blazor-bites-javascript-interop/&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;webassembly-roadmap&quot;&gt;WebAssembly roadmap&lt;/h3&gt;
&lt;p&gt;DOM integration is in the WebAssembly roadmap: &lt;a href=&quot;https://webassembly.org/docs/future-features&quot;&gt;https://webassembly.org/docs/future-features/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Check your terminal window where the command &lt;code class=&quot;highlighter-rouge&quot;&gt;dotnet watch run&lt;/code&gt; is running, if there is no error in that window you can access the url &lt;a href=&quot;http://localhost:5000/tsp&quot;&gt;http://localhost:5000/tsp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hit the &lt;code class=&quot;highlighter-rouge&quot;&gt;Run&lt;/code&gt; button and take a look on the console window, you will see the distance to reach all cities getting smaller as the generations ran.&lt;/p&gt;

&lt;center&gt;
        &lt;img class=&quot;lazy&quot; src=&quot;/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/console-window.png &quot; /&gt;
      &lt;/center&gt;

&lt;div class=&quot;note&quot;&gt;&lt;p&gt;This is not a tutorial about Blazor good pratices, so everything here is done in the simplest possible way to introduce how to use GenticSharp with Blazor.  I do not talk about things you should use when working with Blazor, such as separate logic from UI and use Blazor components.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;drawing-the-cities&quot;&gt;Drawing the cities&lt;/h2&gt;
&lt;p&gt;Now our GA is running inside the browser, but it need to display the cities route better.
We need to create a visual representation to the cities.&lt;/p&gt;

&lt;p&gt;In the &lt;code class=&quot;highlighter-rouge&quot;&gt;Tsp.razor&lt;/code&gt; add the method &lt;code class=&quot;highlighter-rouge&quot;&gt;DrawCitiesAsync&lt;/code&gt;:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=DrawCitiesAsync.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;Then call it from &lt;code class=&quot;highlighter-rouge&quot;&gt;OnAfterRenderAsync&lt;/code&gt; method, after the &lt;code class=&quot;highlighter-rouge&quot;&gt;clearCanvas&lt;/code&gt; call:&lt;/p&gt;
&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=DrawCitiesAsyncCall.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;Reload the url &lt;a href=&quot;http://localhost:5000/tsp&quot;&gt;http://localhost:5000/tsp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now you should see something like this:&lt;/p&gt;
&lt;center&gt;
        &lt;img class=&quot;lazy&quot; src=&quot;/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/draw-cities.gif &quot; /&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;drawing-the-route&quot;&gt;Drawing the route&lt;/h2&gt;
&lt;p&gt;In the previous step we drawn the cities and we have the visual of the problem: the cities.&lt;/p&gt;

&lt;p&gt;Now we need to draw the solution: the route represented by the best chromosome of each generation.&lt;/p&gt;

&lt;p&gt;Add the following method to the &lt;code class=&quot;highlighter-rouge&quot;&gt;Tsp.razor&lt;/code&gt;:&lt;/p&gt;
&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=DrawRouteAsync.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;Then call it from &lt;code class=&quot;highlighter-rouge&quot;&gt;OnAfterRenderAsync&lt;/code&gt; method, after the &lt;code class=&quot;highlighter-rouge&quot;&gt;DrawCitiesAsync&lt;/code&gt; call:&lt;/p&gt;
&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=DrawRouteAsyncCall.cs&quot;&gt; &lt;/script&gt;

&lt;p&gt;Reload the url &lt;a href=&quot;http://localhost:5000/tsp&quot;&gt;http://localhost:5000/tsp&lt;/a&gt; again, and hit the &lt;code class=&quot;highlighter-rouge&quot;&gt;Run&lt;/code&gt; button, now you should see the route been optimizing as the generations are ran:&lt;/p&gt;
&lt;center&gt;
        &lt;img class=&quot;lazy&quot; src=&quot;/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/draw-route.gif &quot; /&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;With only 4 C# classes, 1 JS file and 1 Blazor page we built a pretty nice sample of genetic algorithms using Blazor with GeneticSharp. Now you can improve it with your own ideas or use some of mine ;):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Maybe let user change the genetic algorithm operators (crossover, mutation, selection, etc)?&lt;/li&gt;
  &lt;li&gt;Move the DrawCitiesAsync and DrawRouteAsync to &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/blazor/components?view=aspnetcore-3.0&quot;&gt;Blazor components&lt;/a&gt; responsible to only draw them?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The full source code used in this post can be download or fork from this Gist: &lt;a href=&quot;https://gist.github.com/giacomelli/9addc5182943ba25eb82201e30c76418&quot;&gt;https://gist.github.com/giacomelli/9addc5182943ba25eb82201e30c76418&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Icons made by &lt;a href=&quot;http://www.freepik.com&quot;&gt;Freepik&lt;/a&gt; and &lt;a href=&quot;http://www.flaticon.com/authors/vignesh-oviyan&quot;&gt;Vignesh Oviyan&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons BY 3.0&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="geneticsharp" /><category term="blazor" /><category term="webassembly" /><category term="tsp" /><category term="dotnet" /><summary type="html">In this post I will show how to use GeneticSharp and Blazor to solve the TSP (Travelling salesman problem). Introduction</summary></entry><entry><title type="html">unitytips&amp;amp;colon; Hierarchy Window Layer Info</title><link href="http://diegogiacomelli.com.br/unitytips-hierarchy-window-layer-info/" rel="alternate" type="text/html" title="unitytips&amp;colon; Hierarchy Window Layer Info" /><published>2019-07-09T00:00:00-03:00</published><updated>2019-07-09T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-hierarchy-window-layer-info</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-hierarchy-window-layer-info/">&lt;p&gt;You can create a visual layer info to any component on your hierarchy window using &lt;code class=&quot;highlighter-rouge&quot;&gt;EditorApplication.hierarchyWindowItemOnGUI&lt;/code&gt;:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/JxvOshwNdfE &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/096005d0d0df79b94321f950138220a3.js?file=HierarchyWindowLayerInfo.cs&quot;&gt; &lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css&quot; /&gt;
&lt;div class=&quot;gist&quot; style=&quot;margin-top:-17px&quot;&gt;
        &lt;div class=&quot;gist-file&quot;&gt;
          &lt;div class=&quot;gist-meta&quot;&gt;
            &lt;a href=&quot;/unitytips-gist-importer/&quot;&gt;You can easily import this gist directly into your Unity 3D project using the &lt;b&gt;Gist Importer&lt;/b&gt;&lt;img style=&quot;float:right;width:48px;&quot; src=&quot;/assets/logos/Unity3d.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;</content><author><name></name></author><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><category term="hierarchy-window" /><summary type="html">You can create a visual layer info to any component on your hierarchy window using EditorApplication.hierarchyWindowItemOnGUI:</summary></entry><entry><title type="html">Unity and Game Development links (July 8th 2019)</title><link href="http://diegogiacomelli.com.br/unity-and-gamedev-links-july-8th-2019/" rel="alternate" type="text/html" title="Unity and Game Development links (July 8th 2019)" /><published>2019-07-08T00:00:00-03:00</published><updated>2019-07-08T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-and-gamedev-links-july-8th-2019</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-and-gamedev-links-july-8th-2019/">&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; released a YouTube video about the new Unity Terrain Tools package (&lt;a href=&quot;https://www.youtube.com/watch?v=aExdxF4OKBo&quot;&gt;Build Beautiful Terrains with Unity 2019! – New Terrain Tools Package&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Stacey Haffner&lt;/strong&gt; made a blog post about the new experience for Collaborate that they are designing, like new UI and Git command-line support (&lt;a href=&quot;https://blogs.unity3d.com/2019/07/01/collaborate-developer-diary-1-exploring-the-new-design&quot;&gt;Collaborate Developer Diary #1: Exploring the New Design&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Based on a set of guiding principles focused on delivering value to teams with diverse skill sets, we are designing a brand new experience for Collaborate.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Matthew Crosby&lt;/strong&gt; released the Animal-AI Olympics, a AI competition with $32,000 in prizes. (&lt;a href=&quot;https://www.mdcrosby.com/blog/animalailaunch.html&quot;&gt;Animal-AI Olympics now released into the wild!&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;The Animal-AI Olympics is an AI competition with tests inspired by animal cognition. Participants are given a small environment with just seven different classes of objects that can be placed inside. In each test, the agent needs to retrieve the food in the environment, but to do so there are obstacles to overcome, ramps to climb, boxes to push, and areas that must be avoided.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Unity&lt;/strong&gt; published the IAP Playbook: 12 strategies to help you monetize your game (&lt;a href=&quot;https://create.unity3d.com/iap-playbook&quot;&gt;The IAP playbook&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;In-app purchases are an important part of your monetization strategy, but implementing them correctly can be challenging. Understanding how to create, surface, and optimize them without disrupting the game experience takes hard work.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; published a YouTube video about how to make NPCs for your games (&lt;a href=&quot;https://www.youtube.com/watch?v=FRFjggLMXFU&quot;&gt;How to Make AWESOME NPCs for Your Game!&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Brackeys&lt;/strong&gt; made a video about how to add physics to ragdolls in Unity (&lt;a href=&quot;https://www.youtube.com/watch?v=DInV-jHm9rk&quot;&gt;RAGDOLL PHYSICS in Unity!&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pierre Bosset&lt;/strong&gt; interviewed &lt;strong&gt;Mirko Vescio&lt;/strong&gt; about how to use Substance and Unity combined for realistic architectural visualization  (&lt;a href=&quot;https://www.substance3d.com/blog/creating-realistic-archviz-experiences-oneiros-using-unity&quot;&gt;Creating Realistic Archviz Experiences by Oneiros using Unity&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;It is important not to forget that one advantage of using Unity in architectural visualization is that you can get different types of output from the same scene. For example, it is possible to make a video in cinematic mode, as well as in virtual reality mode.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Alexandre Mutel&lt;/strong&gt; released the the first preview version of &lt;code class=&quot;highlighter-rouge&quot;&gt;UnityNuGet&lt;/code&gt; providing a service to install NuGet packages into an Unity project via the Unity Package Manager (&lt;a href=&quot;https://github.com/xoofx/UnityNuGet&quot;&gt;UnityNuGet&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; made another video, this time about realistic lighting in Unity (&lt;a href=&quot;https://www.youtube.com/watch?v=zmF29YGEMUU&quot;&gt;REALISTIC LIGHTING in Unity! (Tutorial)&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="unity3d" /><category term="gamedev" /><summary type="html"></summary></entry><entry><title type="html">GeneticSharp in the Wild&amp;amp;colon; Frixel</title><link href="http://diegogiacomelli.com.br/geneticsharp-in-the-wild-frixel/" rel="alternate" type="text/html" title="GeneticSharp in the Wild&amp;colon; Frixel" /><published>2019-07-04T00:00:00-03:00</published><updated>2019-07-04T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/geneticsharp-in-the-wild-frixel</id><content type="html" xml:base="http://diegogiacomelli.com.br/geneticsharp-in-the-wild-frixel/">&lt;p&gt;I started a &lt;a href=&quot;/tags/geneticsharp-in-the-wild/&quot;&gt;series of posts&lt;/a&gt; about some outstanding scientific papers and projects using &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp&quot;&gt;GeneticSharp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For this third post the choose one is the &lt;code class=&quot;highlighter-rouge&quot;&gt;Frixel: 2D framing / pixel structural optimization&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Frixel is a plugin for &lt;a href=&quot;https://rhino3d.com&quot;&gt;Rhinoceros 6&lt;/a&gt;, a 3D computer graphics and computer-aided design (CAD) application.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A finite element analysis program that’s so easy a 5 year old could use it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Provided only a closed curve representing a building massing and location for core, Frixel generates a 2 dimensional grid and runs structural analysis on it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can tweak grid size, gravitation magnitude and lateral wind force to see how your design perfoms under different conditions. Additionally, it can run structural topology optimization to improve its mechanical performance by adding bracing in appropriate places.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;usage&quot;&gt;Usage&lt;/h1&gt;
&lt;p&gt;GeneticSharp was used to design the &lt;a href=&quot;https://github.com/EmilPoulsen/Frixel/blob/7a80a96e2793fd3f4e32bcf01ba6ca13fcc6a06a/Frixel.Optimizer/Optimization/StructuralChromosome.cs&quot;&gt;structural chromosomes&lt;/a&gt; and &lt;a href=&quot;https://github.com/EmilPoulsen/Frixel/blob/7a80a96e2793fd3f4e32bcf01ba6ca13fcc6a06a/Frixel.Optimizer/Optimization/StructuralFitness.cs&quot;&gt;fitness function&lt;/a&gt; to allow framing / pixel structural optimization through the &lt;a href=&quot;https://github.com/EmilPoulsen/Frixel/blob/7a80a96e2793fd3f4e32bcf01ba6ca13fcc6a06a/Frixel.Optimizer/Optimization/FrixelOptimizer.cs&quot;&gt;Frixel optimizer&lt;/a&gt;.&lt;/p&gt;

&lt;center&gt;
        &lt;img class=&quot;lazy&quot; src=&quot;/assets/2019/07/04/geneticsharp-in-the-wild-frixel/geneticsharp-frixel-optimization.gif &quot; /&gt;
      &lt;/center&gt;

&lt;h1 id=&quot;functionality&quot;&gt;Functionality&lt;/h1&gt;
&lt;p&gt;According to the developers, these are the features of Frixel:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A power-up for architect-engineer collaboration.&lt;/li&gt;
  &lt;li&gt;A great way to test and guide options in early stage design.&lt;/li&gt;
  &lt;li&gt;Fast. You can quickly get an understanding of structural behavior.&lt;/li&gt;
  &lt;li&gt;Topology optimization for minimal displacement.&lt;/li&gt;
  &lt;li&gt;Platform agnostic&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;authors&quot;&gt;Authors&lt;/h1&gt;
&lt;p&gt;The project was developed from scratch under 24 intense hours at the beyondAEC Hackathon July 2018, in Boston MA by &lt;a href=&quot;https://github.com/lelandjobson&quot;&gt;Leland Jobson&lt;/a&gt; and &lt;a href=&quot;https://github.com/EmilPoulsen&quot;&gt;Emil Poulsen&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;further-reading&quot;&gt;Further reading&lt;/h1&gt;
&lt;p&gt;You can access the project repository at: &lt;a href=&quot;https://github.com/EmilPoulsen/Frixel&quot;&gt;https://github.com/EmilPoulsen/Frixel&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="geneticsharp" /><category term="geneticsharp-in-the-wild" /><summary type="html">I started a series of posts about some outstanding scientific papers and projects using GeneticSharp.</summary></entry><entry><title type="html">unitytips Museum</title><link href="http://diegogiacomelli.com.br/unitytips-museum/" rel="alternate" type="text/html" title="unitytips Museum" /><published>2019-07-02T00:00:00-03:00</published><updated>2019-07-02T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-museum</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-museum/">&lt;p&gt;I &lt;a href=&quot;https://twitter.com/ogiacomelli/status/1144379461317648384&quot;&gt;recently&lt;/a&gt; started studying &lt;a href=&quot;https://dotnet.microsoft.com/apps/aspnet/web-apps/client&quot;&gt;Blazor&lt;/a&gt; and last weekend I created this simple app that I called: &lt;code class=&quot;highlighter-rouge&quot;&gt;#unitytips Museum&lt;/code&gt;, a collection of best #unitytips.&lt;/p&gt;

&lt;p&gt;You can access it directly in my site, in this url: &lt;a href=&quot;http://diegogiacomelli.com.br/apps/unitytips-museum&quot;&gt;http://diegogiacomelli.com.br/apps/unitytips-museum&lt;/a&gt;&lt;/p&gt;

&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/B9eTNZWhojI &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h1 id=&quot;the-unitytips-collection&quot;&gt;The #unitytips collection&lt;/h1&gt;
&lt;p&gt;Every week all #unitytips retweeted by &lt;a href=&quot;https://twitter.com/unity3d&quot;&gt;@unity3d&lt;/a&gt; will be included to the collection.&lt;/p&gt;

&lt;p&gt;If you know a really good #unitytips (at least 50 retweets) that should be added to the collection, please follow one of options above:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Contact me on Twitter &lt;a href=&quot;https://twitter.com/ogiacomelli&quot;&gt;@ogiacomelli&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/giacomelli/unitytips-museum&quot;&gt;Fork it on GitHub&lt;/a&gt;, add the #unitytips to the wwwroot/data/tips.json file and create a pull-request.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;about-blazor&quot;&gt;About Blazor&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;Blazor can run your client-side C# code directly in the browser, using WebAssembly. Because it’s real .NET running on WebAssembly, you can re-use code and libraries from server-side parts of your application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In a future post I will discuss what I learned about Blazor while developing the #unitytips Museum, but I can give a spoiler: I really liked it!&lt;/p&gt;</content><author><name></name></author><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><category term="blazor" /><summary type="html">I recently started studying Blazor and last weekend I created this simple app that I called: #unitytips Museum, a collection of best #unitytips.</summary></entry><entry><title type="html">Unity and Game Development links (July 1st 2019)</title><link href="http://diegogiacomelli.com.br/unity-and-gamedev-links-july-1st-2019/" rel="alternate" type="text/html" title="Unity and Game Development links (July 1st 2019)" /><published>2019-07-01T00:00:00-03:00</published><updated>2019-07-01T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-and-gamedev-links-july-1st-2019</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-and-gamedev-links-july-1st-2019/">&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Unity&lt;/strong&gt; released a YouTube tutorial about how to create a portal effect in Lightweight Render Pipeline with Shader Graph (&lt;a href=&quot;https://www.youtube.com/watch?v=TkzASwVgnj8&quot;&gt;Making Portals with Shader Graph in Unity! (Tutorial)&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Dilmer Valecillos&lt;/strong&gt; posted a video on augmented reality while implementing a dragging feature with ray-casting (&lt;a href=&quot;https://www.youtube.com/watch?v=nBftG-gXUE8&quot;&gt;AR Foundation with Unity3d and Adding Dragging Functionality with AR Raycast and Physics Raycast&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Felipe Lira&lt;/strong&gt; created a GitHub repository with a bare bones Scriptable Render Pipeline. (&lt;a href=&quot;https://github.com/phi-lira/HelloSRP&quot;&gt;HelloSRP&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Bare Bones Scriptable Render Pipeline. Use it as a base to create your own.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sebastian Lague&lt;/strong&gt; made some updates to his path creation tool (&lt;a href=&quot;https://github.com/SebLague/Path-Creator&quot;&gt;Bézier Path Creator&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;An intuitive and lightweight editor for quickly creating smooth paths in the editor.
You can easily make objects move along these paths, or use them as a guide for spawning objects and generating meshes.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Unity&lt;/strong&gt;, started its annual survey asking for community feedback (&lt;a href=&quot;https://on.unity.com/2xdSRmX&quot;&gt;survey&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; published a YouTube video showing what he learned after making more than 100 game levels (&lt;a href=&quot;https://www.youtube.com/watch?v=WPimiBP8d6o&quot;&gt;What I Learned after Making 100+ GAME LEVELS! (Unity Level Design)&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Nichole Wong&lt;/strong&gt; wrote about the new &lt;code class=&quot;highlighter-rouge&quot;&gt;Unity Learn Premium&lt;/code&gt; (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/27/introducing-unity-learn-premium/&quot;&gt;Introducing Unity Learn Premium: Get direct guidance from experts&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;We’ve heard your requests for more advanced and in-depth content, and resources for specific industries like automotive, architecture, or media and entertainment. And we’ve also heard that you want access to experts who can give you immediate guidance and feedback on specific challenges or questions&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Eduardo Oriz and Alitt Khaliq&lt;/strong&gt; made a post showing the behind the scenes and dive further into the creative process behind Buried Memories Volume 2: Serekh (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/28/the-creative-process-behind-serekh/&quot;&gt;The creative process behind Serekh&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Developing a strong game, large or small, depends on having a dedicated team of skilled and specialized people who share a vision and care deeply about what they are making. The development of Serekh was a combined effort by Edvige Faini, the Concept Artist, and the Unity Icon Collective. Some of the most significant challenges on this project were conceptual rather than technical.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; again, with a video on tips, tricks, and list of features in Unity for making 2D games (&lt;a href=&quot;https://www.youtube.com/watch?v=-MuWAydTjY0&quot;&gt;How to make 2D Games with Unity 2019!&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="unity3d" /><category term="gamedev" /><summary type="html"></summary></entry><entry><title type="html">Starting an Unity3D project with GeneticSharp using dotnet new</title><link href="http://diegogiacomelli.com.br/starting-an-unity3d-project-with-geneticsharp-using-dotnet-new/" rel="alternate" type="text/html" title="Starting an Unity3D project with GeneticSharp using dotnet new" /><published>2019-06-27T00:00:00-03:00</published><updated>2019-06-27T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/starting-an-unity3d-project-with-geneticsharp-using-dotnet-new</id><content type="html" xml:base="http://diegogiacomelli.com.br/starting-an-unity3d-project-with-geneticsharp-using-dotnet-new/">&lt;p&gt;In this post I will show how to use &lt;code class=&quot;highlighter-rouge&quot;&gt;dotnet new&lt;/code&gt; command to start an Unity3D project with GeneticSharp.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Sometime ago I created a NuGet package called &lt;a href=&quot;/dotnet-new-templates-for-GeneticSharp&quot;&gt;GeneticSharp.Templates&lt;/a&gt;, this package allows developers to install &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp&quot;&gt;GeneticSharp&lt;/a&gt; templates using the dotnet new command.&lt;/p&gt;

&lt;p&gt;Among the availables templates in &lt;code class=&quot;highlighter-rouge&quot;&gt;GeneticSharp.Templates&lt;/code&gt;, there is one specific to create an Unity3D project with GeneticSharp. Besides this, the project has a sample of Travelling Salesman Problem (TSP) using GeneticSharp and can be used as a scaffold to starting use genetic algorithms in your games.&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;Create an Unity3D project using dotnet new is fast and simple, depending of your machine performance, you’ll have the sample running in less than a minute.&lt;/p&gt;

&lt;p&gt;Open a terminal/prompt and type:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet new &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; GeneticSharp.Templates
dotnet new GeneticSharpTspUnity3d &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; GeneticSharpSample
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;The argument &lt;code class=&quot;highlighter-rouge&quot;&gt;-o&lt;/code&gt; is the the output folder of the Unity3D project&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now you can open the &lt;code class=&quot;highlighter-rouge&quot;&gt;GeneticSharpSample&lt;/code&gt; in Unity3D editor.
Open the &lt;code class=&quot;highlighter-rouge&quot;&gt;MainScene&lt;/code&gt; scene and hit the play button, you should see something like this:&lt;/p&gt;
&lt;center&gt;
        &lt;img class=&quot;lazy&quot; src=&quot;/assets/2019/06/27/starting-an-unity3d-project-with-geneticsharp-using-dotnet-new/geneticsharp-ts-template.gif &quot; /&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Thats it, now you can use this sample to understand how to use GeneticSharp in your game.&lt;/p&gt;

&lt;p&gt;If you want more details about the code and the sample itself, please, take a look on this tutorial &lt;a href=&quot;/tsp-with-GeneticSharp-and-Unity3d/&quot;&gt;TSP with GeneticSharp and Unity3D&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you need an introduction to genetic algorithms, this tutorial could help you &lt;a href=&quot;/function-optimization-with-geneticsharp/&quot;&gt;Function optimization with GeneticSharp&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let’s evolve!&lt;/p&gt;</content><author><name></name></author><category term="geneticsharp" /><category term="unity3d" /><category term="dotnet" /><summary type="html">In this post I will show how to use dotnet new command to start an Unity3D project with GeneticSharp. Introduction Sometime ago I created a NuGet package called GeneticSharp.Templates, this package allows developers to install GeneticSharp templates using the dotnet new command.</summary></entry><entry><title type="html">unitytips&amp;amp;colon; Gist Importer</title><link href="http://diegogiacomelli.com.br/unitytips-gist-importer/" rel="alternate" type="text/html" title="unitytips&amp;colon; Gist Importer" /><published>2019-06-25T00:00:00-03:00</published><updated>2019-06-25T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-gist-importer</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-gist-importer/">&lt;p&gt;Using the Gist below you can easily import other Gists to your Unity project just copying the URL from browser:&lt;/p&gt;
&lt;center&gt;
        &lt;iframe src=&quot;https://www.youtube.com/embed/YljjAkebxiE &quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
      &lt;/center&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/9a248eecf5c1ffc477b59524f63264d3.js&quot;&gt; &lt;/script&gt;

&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;All Gists are imported to folder &lt;code class=&quot;highlighter-rouge&quot;&gt;Assets/Gists&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><summary type="html">Using the Gist below you can easily import other Gists to your Unity project just copying the URL from browser:</summary></entry><entry><title type="html">Unity and Game Development links (June 24th 2019)</title><link href="http://diegogiacomelli.com.br/unity-and-gamedev-links-june-24th-2019/" rel="alternate" type="text/html" title="Unity and Game Development links (June 24th 2019)" /><published>2019-06-24T00:00:00-03:00</published><updated>2019-06-24T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-and-gamedev-links-june-24th-2019</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-and-gamedev-links-june-24th-2019/">&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; made a video about the Buried Memories Volume 2: Serekh (&lt;a href=&quot;https://www.youtube.com/watch?v=5CTAVFOrbsM&quot;&gt;Buried Memories: Serekh – New HDRP Asset Pack for Unity! (Overview)&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Jean-Christophe Cimetiere&lt;/strong&gt; wrote a post about how to use Unity as a library inside other apps (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/17/add-features-powered-by-unity-to-native-mobile-apps&quot;&gt;Add features powered by Unity to native mobile apps&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Unity 2019.3 will add support for using Unity as a library controlled by native Android/Java and iOS/Objective C apps so you can easily insert AR and other Unity features.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Egor Bogatov&lt;/strong&gt; created a GitHub repository with a sample Xamarin app using Unity as a library (&lt;a href=&quot;https://github.com/EgorBo/XamarinWithUnityApp&quot;&gt;XamarinWithUnityApp&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;You can now easily add a Unity scene (e.g. ARCore scene) to any native or Xamarin app via .aar file.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Jacob Shriar&lt;/strong&gt; posted about a survey that Unity made with 1000 creatives within advertising and marketing about AR (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/18/creative-professionals-are-struggling-to-implement-augmented-reality&quot;&gt;Creative professionals are struggling to implement augmented reality&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;In anticipation for Cannes this year, we surveyed 1000 creatives within advertising and marketing to gauge a better understanding on their comfort level, technical competency, and enthusiasm towards AR, including what it means for the future of storytelling. And what we found was very telling&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Harry Alisavakis&lt;/strong&gt;, released another tutorial in his series &lt;code class=&quot;highlighter-rouge&quot;&gt;VFX Master Shader&lt;/code&gt; (&lt;a href=&quot;https://halisavakis.com/my-take-on-shaders-vfx-master-shader-part-ii/&quot;&gt;My take on shaders: VFX Master Shader (Part II)&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Nick Davis&lt;/strong&gt; wrote about how automotive companies are leveraging real-time 3D to reduce costs and accelerate development (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/19/how-real-time-3d-is-changing-every-industry&quot;&gt;How real-time 3D is changing every industry&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Real-time 3D is changing everything, in much deeper ways than most people realize. Forged in gaming, this technology continues to transform the way games are created, operated and monetized. Its impact now also extends to industries of all kinds, from film to automotive.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Seth Barton&lt;/strong&gt; made a post about how HDRP is taking next-gen graphics to a new level (&lt;a href=&quot;https://www.mcvuk.com/in-the-pipeline-unitys-hdrp-brings-next-gen-graphics-to-the-worlds-most-used-game-engine/&quot;&gt;In the pipeline: Unity’s HDRP brings next-gen graphics to the world’s most-used game engine&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;What do System Shock 3, Oddworld: Soulstorm and Harold Halibut have in common? Well, all of these incredible-looking upcoming titles are built on Unity, and more specifically will utilise Unity’s upcoming High Definition Render Pipeline or HDRP for short.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Caitlin W and Macy Mills&lt;/strong&gt; wrote a post about the new Unity’s &lt;code class=&quot;highlighter-rouge&quot;&gt;Verified Solutions Partners&lt;/code&gt; (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/20/unitys-new-partnerships-bring-verified-solutions-to-developers-across-industries&quot;&gt;Unity’s new partnerships bring verified solutions to developers across industries&lt;/a&gt;).
    &lt;blockquote&gt;
      &lt;p&gt;Verified Solutions Partners represent a collection of 3rd-party SDKs, plugins, editor applications, cloud services, and more that enable the success of your project while ensuring deeper technical alignment with partners’ products and services to ensure 0% developer downtime. Partners accepted into the program go through a verification process to ensure their SDK or software is optimized for the latest version of Unity.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Elena Nizhnik&lt;/strong&gt; released a new &lt;code class=&quot;highlighter-rouge&quot;&gt;Community Component&lt;/code&gt; post, highlighting some games, posts, videos and tools (&lt;a href=&quot;https://blogs.unity3d.com/2019/06/22/community-component-audio-design-pixel-games-custom-tools-and-best-of-made-with-unity-on-youtube&quot;&gt;Community Component – audio design, pixel games, custom tools and Best of Made with Unity on YouTube&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Sykoo&lt;/strong&gt; again, now with a timelapse level design video (&lt;a href=&quot;https://www.youtube.com/watch?v=f3vNNUC1tnE&quot;&gt;LEVEL DESIGN IN UNITY! - Village &amp;amp; Castle Scene (Timelapse)&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Brackeys&lt;/strong&gt; made a video about the new Terrain System in Unity (&lt;a href=&quot;https://www.youtube.com/watch?v=MWQv2Bagwgk&quot;&gt;How to make Terrain in Unity!&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="unity3d" /><category term="gamedev" /><summary type="html"></summary></entry><entry><title type="html">GeneticSharp in the Wild&amp;amp;colon; Context-Sensitive Code Completion</title><link href="http://diegogiacomelli.com.br/geneticsharp-in-the-wild-context-sensitive-code-completion/" rel="alternate" type="text/html" title="GeneticSharp in the Wild&amp;colon; Context-Sensitive Code Completion" /><published>2019-06-21T00:00:00-03:00</published><updated>2019-06-21T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/geneticsharp-in-the-wild-context-sensitive-code-completion</id><content type="html" xml:base="http://diegogiacomelli.com.br/geneticsharp-in-the-wild-context-sensitive-code-completion/">&lt;p&gt;I decided to start a &lt;a href=&quot;/tags/geneticsharp-in-the-wild/&quot;&gt;series of posts&lt;/a&gt; about some outstanding scientific papers and projects using &lt;a href=&quot;https://github.com/giacomelli/GeneticSharp&quot;&gt;GeneticSharp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For this second post the choose one is the &lt;code class=&quot;highlighter-rouge&quot;&gt;Context-Sensitive Code
Completion: Improving Predictions with Genetic Algorithms&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;The main motivation of the author about this paper was:
&lt;em&gt;Current methods of training code completion systems can possibly be improved in order
to reduce prediction errors. This requires that the amount of information considered in a
pattern is optimized. The question raised is then: how should the training of predictive
models be focused in order to increase prediction quality?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This thesis will aim to answer the question: to what extent is it possible to improve predictions
of existing state-of-the-art code completion systems with a genetic algorithm?&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;usage&quot;&gt;Usage&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;GeneticSharp is an open-source Genetic Algorithm library for C#, released under the MIT
license (Giacomelli). It has an extensible interface that allows for most, if not all, functionality
to be implemented from scratch via interfaces or leveraged by extending base classes. Classes
and interfaces also use the same terminology that has already been established, which makes
the translation from theory to implementation much more clear.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;results&quot;&gt;Results&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;As a result of the new training scheme, the quality of predictions can be increased without
losing generalizability. Application of the new training scheme could possibly be applied
to any code completion systems that trains a predictive model, making it a candidate for
improving existing systems as well as in future research.&lt;/em&gt;&lt;/p&gt;

&lt;center&gt;
        &lt;img class=&quot;lazy&quot; src=&quot;/assets/2019/06/21/geneticsharp-in-the-wild-context-sensitive-code-completion/gscc-vs-genecscc.png &quot; /&gt;
      &lt;/center&gt;
&lt;center&gt;&lt;span style=&quot;font-style:italic; font-size:small&quot;&gt;&lt;p&gt;results comparison between GCC and GeneCSCC (developed using GeneticSharp)&lt;/p&gt;
&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;author&quot;&gt;Author&lt;/h1&gt;
&lt;p&gt;Marcus Ording wrote the paper for his degree project in Computer Engineering at KTH Royal Institute of Technology from Stockholm, Sweden.&lt;/p&gt;

&lt;h1 id=&quot;further-reading&quot;&gt;Further reading&lt;/h1&gt;
&lt;p&gt;You can access the full paper directly on &lt;a href=&quot;http://www.diva-portal.org/smash/get/diva2:1088591/FULLTEXT01.pdf&quot;&gt;DiVA Portal&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="geneticsharp" /><category term="geneticsharp-in-the-wild" /><summary type="html">I decided to start a series of posts about some outstanding scientific papers and projects using GeneticSharp.</summary></entry></feed>