<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://diegogiacomelli.com.br/feed.xml" rel="self" type="application/atom+xml" /><link href="http://diegogiacomelli.com.br/" rel="alternate" type="text/html" /><updated>2023-10-11T16:00:19-03:00</updated><id>http://diegogiacomelli.com.br/feed.xml</id><title type="html">Giacomelli</title><subtitle>C# programmer and Unity 3D gamedev</subtitle><entry><title type="html">Scientific papers using GeneticSharp (october 2022)</title><link href="http://diegogiacomelli.com.br/scientific-papers-using-geneticharp-october-2022/" rel="alternate" type="text/html" title="Scientific papers using GeneticSharp (october 2022)" /><published>2022-11-17T00:00:00-03:00</published><updated>2022-11-17T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/scientific-papers-using-geneticharp-october-2022</id><content type="html" xml:base="http://diegogiacomelli.com.br/scientific-papers-using-geneticharp-october-2022/"><![CDATA[<p>In October 2022 I discovered (TBH, Google Scholar notified me) that three new scientific papers using <a href="https://github.com/giacomelli/GeneticSharp">GeneticSharp</a> have been developed.</p>

<p>Below you can appreciate them:</p>

<h1 id="framework-for-graphical-user-interface-testing">Framework for graphical user interface testing</h1>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_2-200-f445d42b2.webp 200w, /assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_2-400-f445d42b2.webp 400w, /assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_2-602-f445d42b2.webp 602w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_2-200-f445d42b2.png 200w, /assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_2-400-f445d42b2.png 400w, /assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_2-602-f445d42b2.png 602w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_2-602-f445d42b2.png" alt="post image" width="602" height="374" />
</picture>

      </center>
<p><br /> 
<em>Abstract: This thesis is describing the development of a framework for graphic user interface testing with usage of Soft Computing algorithms. Development is divided into four phases. The first phase is acquaintance with existing GUI testing frameworks and their analysis. The second phase is about choosing appropriate technologies for development, appropriate algorithms and implementation design. Then there is the framework implementation phase itself and last phase with the testing, result evaluation and improvements proposal.</em> (<a href="https://theses.cz/id/fn6jrd/24813.pdf">paper</a>)</p>

<h1 id="automated-linear-design-integrated-microwave-amplifier-with-distributed-gain">Automated linear design integrated microwave amplifier with distributed gain</h1>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_1-200-f195a4bfe.webp 200w, /assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_1-400-f195a4bfe.webp 400w, /assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_1-473-f195a4bfe.webp 473w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_1-200-f195a4bfe.png 200w, /assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_1-400-f195a4bfe.png 400w, /assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_1-473-f195a4bfe.png 473w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_1-473-f195a4bfe.png" alt="post image" width="473" height="415" />
</picture>

      </center>
<p><br /> 
<em>Abstract: Increasing the efficiency and reducing the cost of developing microwave integrated circuits (ICs) determines the trend in the development of software modules for automated synthesis of circuit and topological solutions. The article presents the results of the development of a methodology and algorithm that allow for automated synthesis of circuit solutions for integrated microwave amplifiers with distributed amplification (MW URA) based on
set of requirements for its linear characteristics. A feature of the proposed technique is the use of models of active and passive elements for the selected manufacturing technology of microwave ICs. it allows directly in the process of synthesis to obtain circuit solutions of microwave URU suitable for implementation
in a given technological process. The work of the presented CAD technique integrated microwave URU is demonstrated on the example of the development of a pre-amplification cascade for buffer amplifier for the frequency range from 20 to 30 GHz based on 0.25 μm GaAs pHEMT of the technological process of the domestic foundry.</em> (<a href="https://scholar.archive.org/work/qp6k4sgorbanjer34zqfbjl7nq/access/wayback/https://vre.instel.ru/jour/article/download/1371/1102">paper</a>)</p>

<h1 id="optimization-of-customer-assignment-problem">Optimization of customer assignment problem</h1>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_3-200-25849a92c.webp 200w, /assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_3-400-25849a92c.webp 400w, /assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_3-430-25849a92c.webp 430w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_3-200-25849a92c.png 200w, /assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_3-400-25849a92c.png 400w, /assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_3-430-25849a92c.png 430w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/11/17/scientific-papers-using-geneticharp-october-2022/paper_3-430-25849a92c.png" alt="post image" width="430" height="386" />
</picture>

      </center>
<p><br /> <em>Abstract: One of the biggest problems of call center employees is fair customer distribution. Every
employee wants to deal equally with customers with similar characteristics and to distribute premiums equally. Because of the large number of parameter and input data for this problem, the search space is large. Therefore, the problem is a complex, in other words NP – hard problem. Genetic Algorithm, which is an heuristical search method, is preferred in order to provide an effective solution to such problems where the solution space is very large. Within
the scope of the study, an application was developed with the help of GeneticSharp library in C# programming language, which can assign fair customers to call center employees by using the Genetic Algorithm method, and the most appropriate solution was sought. It has been determined that the genetic algorithm can provide an effective solution to the assignment problems.</em> (<a href="https://motto.tc/gorseller/files/kitaplar/icada2021.pdf">paper</a>)</p>]]></content><author><name></name></author><category term="news" /><category term="geneticsharp" /><category term="papers" /><summary type="html"><![CDATA[In October 2022 I discovered (TBH, Google Scholar notified me) that three new scientific papers using GeneticSharp have been developed.]]></summary></entry><entry><title type="html">6 modern C# features for cleaner Unity code</title><link href="http://diegogiacomelli.com.br/6-modern-csharp-features-for-cleaner-unity-code/" rel="alternate" type="text/html" title="6 modern C# features for cleaner Unity code" /><published>2022-11-15T00:00:00-03:00</published><updated>2022-11-15T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/6-modern-csharp-features-for-cleaner-unity-code</id><content type="html" xml:base="http://diegogiacomelli.com.br/6-modern-csharp-features-for-cleaner-unity-code/"><![CDATA[<p>Since C# 7.0, many code improvements that help us write less code have been added to the language.</p>

<p>This tutorial will focus on six new features that can help us write more concise and readable code and how we can use these features on our C# for Unity.</p>

<div class="note"><p>I originally wrote this post as a guest writer for <a href="https://blog.logrocket.com/6-modern-c-sharp-features-cleaner-unity-code/">LogRocket’s blog</a></p>
</div>

<h2 id="tutorial-sections">Tutorial sections</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/requirements-128-8b68e8c6b.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/requirements-128-8b68e8c6b.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/requirements-128-8b68e8c6b.png" alt="post image" width="128" height="128" />
</picture>

<ul>
  <li>Prerequisites</li>
  <li>Setting up our Unity project</li>
  <li>Tutorial structure</li>
  <li>C# features support in Unity</li>
  <li>Switch expression</li>
  <li>Property pattern</li>
  <li>Type pattern</li>
  <li>Constant pattern</li>
  <li>Relational pattern</li>
  <li>Logical pattern</li>
  <li>Conclusion</li>
</ul>

<h2 id="prerequisites">Prerequisites</h2>
<p>The following prerequisites are required to follow along with this tutorial:</p>

<ul>
  <li>Basic knowledge of Unity</li>
  <li>Previous experience writing C# scripts in Unity</li>
</ul>

<h2 id="setting-up-our-unity-project">Setting up our Unity project</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/config-128-c46695ddc.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/config-128-c46695ddc.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/config-128-c46695ddc.png" alt="post image" width="128" height="128" />
</picture>

<p>First, we need to create our Unity project. For this tutorial, we’ll use the version 2021.3.4f1, which, at the moment I’m writing, is the newest LTS Unity version.</p>

<p>On the project templates list, choose 2D(core), give it a name, and click the Create project button.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-200-1cab31008.webp 200w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-400-1cab31008.webp 400w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-800-1cab31008.webp 800w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-1224-1cab31008.webp 1224w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-200-1cab31008.png 200w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-400-1cab31008.png 400w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-800-1cab31008.png 800w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-1224-1cab31008.png 1224w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/project-template-800-1cab31008.png" alt="post image" width="1224" height="712" />
</picture>

      </center>
<p><br /></p>

<p><br />
With the project started, create two folders called <code class="language-plaintext highlighter-rouge">Scripts</code> inside the <code class="language-plaintext highlighter-rouge">Assets</code> folder. We’ll use them to keep our project organized during the tutorial.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/folders-200-d4f7ca06e.webp 200w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/folders-400-d4f7ca06e.webp 400w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/folders-528-d4f7ca06e.webp 528w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/folders-200-d4f7ca06e.png 200w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/folders-400-d4f7ca06e.png 400w, /assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/folders-528-d4f7ca06e.png 528w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/11/15/6-modern-csharp-features-for-cleaner-unity-code/folders-528-d4f7ca06e.png" alt="post image" width="528" height="192" />
</picture>

      </center>
<p><br /></p>

<h2 id="tutorial-structure">Tutorial structure</h2>
<p>For each sample of how to use the new C# feature, we will first look at how it was done before and then how we could write less and more readable code with the new feature.</p>

<p>The classes below are just stubs that are used on all samples throughout the tutorial. You can add them to a script inside the `Scripts folder:
<script src="https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=base.cs"> </script></p>

<h2 id="c-features-support-in-unity">C# features support in Unity</h2>
<p>In C# versions 8 and 9, a lot of new features were added to the language. You can read the full features list for each version in the links below:</p>
<ul>
  <li><a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8">What’s new in C# 8.0</a></li>
  <li><a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-9">What’s new in C# 9.0</a></li>
</ul>

<h3 id="c-8-and-9-features-in-unity-whats-missing">C# 8 and 9 features in Unity: What’s missing?</h3>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/problem-128-a3f91d933.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/problem-128-a3f91d933.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/problem-128-a3f91d933.png" alt="post image" width="128" height="128" />
</picture>

<p>Unity support for C# 8 has started on version <a href="https://docs.unity3d.com/2020.2/Documentation/Manual/CSharpCompiler.html">2020.2</a> and C# 9 has started on version <a href="https://docs.unity3d.com/2021.2/Documentation/Manual/CSharpCompiler.html">2021.2</a>.</p>

<ul>
  <li>Be aware that not every C# 8 and 9 feature is supported by Unity, like:</li>
  <li>default interface methods</li>
  <li>indices and ranges</li>
  <li>asynchronous streams</li>
  <li>asynchronous disposable</li>
  <li>suppress emitting locals init flag</li>
  <li>covariant return types</li>
  <li>module initializers</li>
  <li>extensible calling conventions for unmanaged function pointers</li>
  <li>init only setters</li>
</ul>

<p>Most of these unsupported features are used in very specific scenarios, like <a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-9.0/function-pointers">extensible calling conventions for unmanaged function pointers</a>, and some aren’t, like <a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#indices-and-ranges">indices and ranges</a>.</p>

<p>Because of this, features like indices and ranges and init only setters will likely be supported in future versions of Unity. However, the chance of an unsupported feature for a very specific scenario gaining Unity support in the future is smaller than a feature like <a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#indices-and-ranges">indices and ranges</a></p>

<p>Maybe you can find some workarounds to use these unsupported features in Unity, but I discourage you from doing this because Unity is a cross-platform game engine. A workaround in a new feature could lead you to problems quite hard to understand, debug, and resolve.</p>

<p>Fortunately, Unity supports some of the more common patterns and expressions from C# 8 and 9. Let’s review some of the most helpful ones below and see how they can enable us to write cleaner code.</p>

<h2 id="switch-expression">Switch expression</h2>
<p>The switch expression can dramatically simplify and reduce the LOC (Lines Of Code) to make a <code class="language-plaintext highlighter-rouge">switch</code>, because we can avoid a bunch of boilerplate code, like the case and return statements.</p>

<blockquote>
  <p><a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#switch-expressions">Doc tip</a>: the switch expression provides for switch-like semantics in an expression context. It provides a concise syntax when the switch arms produce a value.</p>

  <p>Often, a switch statement produces a value in each of its case blocks. Switch expressions enable you to use more concise expression syntax. There are fewer repetitive case and break keywords and fewer curly braces.</p>
</blockquote>

<h3 id="before">Before</h3>
<script src="https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=switch-expression-before.cs"> </script>

<h3 id="after">After</h3>
<script src="https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=switch-expression-after.cs"> </script>

<h2 id="property-pattern">Property pattern</h2>
<p>The property pattern enables you to match on properties of the object examined in a <code class="language-plaintext highlighter-rouge">switch</code> expression.</p>

<p>As you can see in the sample below, using a property pattern, we can transform a series of <code class="language-plaintext highlighter-rouge">if</code> statements into a simple list of properties that the object on the <code class="language-plaintext highlighter-rouge">switch</code> statement should match.</p>

<p>The <code class="language-plaintext highlighter-rouge">_ =&gt;</code> has the same meaning as the <code class="language-plaintext highlighter-rouge">default</code> on a classic <code class="language-plaintext highlighter-rouge">switch</code>.</p>

<blockquote>
  <p><a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#property-patterns">Doc tip</a>: a property pattern matches an expression when an expression result is non-null and every nested pattern matches the corresponding property or field of the expression result.</p>
</blockquote>

<h3 id="before-1">Before</h3>
<script src="https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=property-pattern-before.cs"> </script>

<h3 id="after-1">After</h3>
<script src="https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=property-pattern-after.cs"> </script>

<h2 id="type-pattern">Type pattern</h2>
<p>We can use type patterns to check if the runtime type of an expression is compatible with a given type.</p>

<p>The type pattern is almost the same logic as a property pattern but is now used in a context of an object type. We can transform a series of <code class="language-plaintext highlighter-rouge">if</code> statements that check an object type into a list of types that the object on the <code class="language-plaintext highlighter-rouge">switch</code> statement should match.</p>

<h3 id="before-2">Before</h3>
<script src="https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=type-pattern-before.cs"> </script>

<h3 id="after-2">After</h3>
<script src="https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=type-pattern-after.cs"> </script>

<p>Using the type pattern, we go from 16 lines of code to only 8 that have the same result and are quite clear to read and understand.</p>

<h2 id="constant-pattern">Constant pattern</h2>
<p>A constant pattern can be used to test if an expression result equals a specified constant.</p>

<p>Probably the simplest pattern match, it just matches a constant value (for instance, a string) and then returns the result.</p>

<h3 id="before-3">Before</h3>
<script src="https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=constant-pattern-before.cs"> </script>

<h3 id="after-3">After</h3>
<script src="https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=constant-pattern-after.cs"> </script>

<p>A constant pattern can be used with any constant expression, like <code class="language-plaintext highlighter-rouge">int, float, char, string, bool, and enum</code>.</p>

<h2 id="relational-pattern">Relational pattern</h2>
<p>A relational pattern will compare an expression result with a constant.</p>

<p>This one could seem the most complex pattern match, but at its core it’s not that complicated. What we can do with a Relational Pattern is directly use logical operators as <code class="language-plaintext highlighter-rouge">&lt;, &gt;, &lt;=, or &gt;=</code> to evaluate the object and then provide a result for the <code class="language-plaintext highlighter-rouge">switch</code>.</p>

<blockquote>
  <p><a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/patterns#relational-patterns">Doc tip</a>: the right-hand part of a relational pattern must be a constant expression.</p>
</blockquote>

<h3 id="before-4">Before</h3>
<script src="https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=relational-pattern-before.cs"> </script>

<h3 id="after-4">After</h3>
<script src="https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=relational-pattern-after.cs"> </script>

<p>Any of the relational operators <code class="language-plaintext highlighter-rouge">&lt;, &gt;, &lt;=, or &gt;=</code> can be used on a relational pattern.</p>

<h2 id="logical-pattern">Logical pattern</h2>
<p>We can use the <code class="language-plaintext highlighter-rouge">not</code>, <code class="language-plaintext highlighter-rouge">and</code>, and <code class="language-plaintext highlighter-rouge">or</code> pattern combinators to create logical expressions.</p>

<p>This is like an extension of the relational pattern where you can combine the logical operators not, and, and or to create a more complex and elaborate pattern match.</p>

<blockquote>
  <p><a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/patterns#logical-patterns">Doc tip</a>: you use the not, and, and or pattern combinators to create the following logical patterns:</p>
  <ul>
    <li>Negation not pattern that matches an expression when the negated pattern doesn’t match the expression</li>
    <li>Conjunctive and pattern that matches an expression when both patterns match the expression</li>
    <li>Disjunctive or pattern that matches an expression when either pattern matches the expression</li>
  </ul>
</blockquote>

<h3 id="before-5">Before</h3>
<script src="https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=logical-pattern-before.cs"> </script>

<h3 id="after-5">After</h3>
<script src="https://gist.github.com/7c30665bc635b4950a9b949e4de7516d.js?file=logical-pattern-after.cs"> </script>

<h2 id="conclusion">Conclusion</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/challenge-128-2cdd65c40.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/challenge-128-2cdd65c40.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/challenge-128-2cdd65c40.png" alt="post image" width="128" height="128" />
</picture>

<p>In this tutorial, we’ve learned how to use the switch expression, property pattern, type pattern, constant pattern, relational pattern, and logical pattern to write less and more modern C# code on Unity.</p>

<p>Hopefully, you can use some of these in your next project to spare yourself time while writing cleaner code.</p>

<p><br /><br /><br />Icons made by <a href="http://www.freepik.com">Freepik</a>, <a href="http://www.flaticon.com/authors/vignesh-oviyan">Vignesh Oviyan</a> and <a href="https://www.flaticon.com/authors/eucalyp" title="Eucalyp">Eucalyp</a> from <a href="http://www.flaticon.com">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons BY 3.0</a></p>]]></content><author><name></name></author><category term="Tutorial" /><category term="unity3d" /><category term="gamedev" /><category term="logrocket" /><summary type="html"><![CDATA[Since C# 7.0, many code improvements that help us write less code have been added to the language.]]></summary></entry><entry><title type="html">Scientific papers using GeneticSharp (september 2022)</title><link href="http://diegogiacomelli.com.br/scientific-papers-using-geneticharp-september-2022/" rel="alternate" type="text/html" title="Scientific papers using GeneticSharp (september 2022)" /><published>2022-10-17T00:00:00-03:00</published><updated>2022-10-17T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/scientific-papers-using-geneticharp-september-2022</id><content type="html" xml:base="http://diegogiacomelli.com.br/scientific-papers-using-geneticharp-september-2022/"><![CDATA[<p>In September 2022 I discovered (TBH, Google Scholar notified me) that five new scientific papers using  <a href="https://github.com/giacomelli/GeneticSharp">GeneticSharp</a> have been developed.</p>

<p>Below you can appreciate them:</p>

<h1 id="an-application-oriented-cyber-physical-production-optimisation-system-architecture-for-the-steel-industry">An Application-Oriented Cyber-Physical Production Optimisation System Architecture for the Steel Industry</h1>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_1-200-30e2b376f.webp 200w, /assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_1-400-30e2b376f.webp 400w, /assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_1-407-30e2b376f.webp 407w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_1-200-30e2b376f.png 200w, /assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_1-400-30e2b376f.png 400w, /assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_1-407-30e2b376f.png 407w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_1-407-30e2b376f.png" alt="post image" width="407" height="295" />
</picture>

      </center>
<p><br /> 
<em>Abstract: The new generation of steelworks shaped by Industry 4.0 are digitized, networked, flexible and adaptable. Production processes use distributed information and communication structures, are more autonomous and capable to react to dynamic evolutions of the environment. Cyber-physical systems are a fundamental component of Industry 4.0 and enable new generation of smart processes. This paper presents a modular architecture approach for the design of cyber-physical steel production processes. The approach is tested within a production facility for long products such as rails or tubes taking into account the main peculiarities of the sector. The use of an industrial-agent-based solution for enabling intelligent capabilities and interactions among cyber-physical modules is investigated and adopted. Experimental results highlight the industrial applicability of the adopted implementation scheme combining agent-based technology with the proper connection between models, communication and optimisation methods.</em> (<a href="https://www.sciencedirect.com/science/article/pii/S2405896322001719">paper</a>)</p>

<h1 id="optimisation-of-part-orientation-and-design-of-support-structures-in-laser-powder-bed-fusion">Optimisation of part orientation and design of support structures in laser powder bed fusion</h1>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_2-200-cc6fc8d81.webp 200w, /assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_2-329-cc6fc8d81.webp 329w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_2-200-cc6fc8d81.png 200w, /assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_2-329-cc6fc8d81.png 329w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_2-329-cc6fc8d81.png" alt="post image" width="329" height="104" />
</picture>

      </center>
<p><br /> 
<em>Abstract: Part orientation and support structures are crucial to the quality of metal parts by laser powder bed fusion. Computer-aided solutions for part orientation can be used to support users during the process preparation. In this study, an original computer-aided approach to prepare parts for laser powder bed fusion was formulated and implemented. The proposed method consists of multi-objective optimisation of part orientation and a novel strategy for the simultaneous design of support structures. The automated part orientation optimisation considers both global and local objectives defined by the user. For this purpose, penalty functions measuring the building time, support volume, part distortion, surface roughness and supports contact points are adopted. Unlike in existing methods, the user has the opportunity to define the importance of these aspects in different regions of the part. Such functions are then optimised through a genetic algorithm. The proposed approach was applied to a real product imposing three different sets of objectives. The tested case studies were solved in less than 10 min, providing solutions that satisfied the imposed aims and constraints. Specifically, the results demonstrated that the orientation optimisation can reduce the building time by 68.1% or the material consumption by 66.8%, depending on user requirements. It was also shown how the proposed method can be used to minimise the surface and dimensional error of manufactured parts. The proposed approach allows to manually define the specific design requirements and translate them in terms of manufacturing decisions. This contributes to establishing a fruitful interaction between the user and the developed software during the process design.</em> (<a href="https://link.springer.com/article/10.1007/s12008-022-00856-7">paper</a>)</p>

<h1 id="an-approach-for-the-global-search-for-top-quality-six-bar-dwell-linkages">An approach for the global search for top-quality six-bar dwell linkages</h1>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_3-200-7b2469ff3.webp 200w, /assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_3-400-7b2469ff3.webp 400w, /assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_3-660-7b2469ff3.webp 660w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_3-200-7b2469ff3.png 200w, /assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_3-400-7b2469ff3.png 400w, /assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_3-660-7b2469ff3.png 660w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_3-660-7b2469ff3.png" alt="post image" width="660" height="462" />
</picture>

      </center>
<p><br /> 
<em>Abstract: A complete approach for the search of top-quality six-bar linkages based on four-bar linkages generating coupler curves with circular regions has been developed. The approach includes a robust algorithm to search for high-accuracy circular regions in coupler curves and a fitness function able to evaluate the quality of the resulting linkage. The approach is used to explore the design space in order to search for optimal dwell linkages and to identify the types of linkages that provide the best dwells according to the established criteria. Then, the global optimum is searched by means of an evolutionary algorithm. The results demonstrate the efficiency and versatility of the approach, that can be customized for specific applications, and the existence of a high number of six-bar linkages with long output dwells. A highly probable global optimum is identified.</em> (<a href="https://www.sciencedirect.com/science/article/pii/S0094114X22002282">paper</a>)</p>

<h1 id="genetic-wfc-extending-wave-function-collapse-with-genetic-search">Genetic-WFC: Extending Wave Function Collapse With Genetic Search</h1>
<p><em>Abstract: This paper presents Genetic-WFC, a procedural level generation algorithm that mixes genetic optimization with Wave Function Collapse, a local adjacency constraints propagation algorithm. We use a synthetic player to evaluate the novelty, safety and complexity of the generated levels. Novelty is maximized when the synthetic player goes on tiles not visited for a long time, safety is related to how far it can see, and complexity evaluates the variability of the surrounding tiles. WFC extracts constraints from example levels, and allows us to perform the genetic search on levels with few local asset placement errors, while using as little level design rules as possible. We show that we are able to rely on WFC while optimizing the results, first by influencing WFC asset selection and then by re-encoding the chosen modules back to our genotype, in order to optimize crossover. We compare the fitness curves and best maps of our method with other approaches. We then visually explore the kind of levels we are able to generate by sampling different values of safety and complexity, giving a glimpse of the variability that our approach is able to reach.</em> (<a href="https://ieeexplore.ieee.org/document/9836972">paper</a>)</p>

<h1 id="human-robot-collaborative-workflow-for-remote-decommissioning-and-demolition">Human-Robot Collaborative Workflow for Remote Decommissioning and Demolition</h1>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_5-200-1386af9b9.webp 200w, /assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_5-366-1386af9b9.webp 366w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_5-200-1386af9b9.png 200w, /assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_5-366-1386af9b9.png 366w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/10/17/scientific-papers-using-geneticharp-september-2022/paper_5-366-1386af9b9.png" alt="post image" width="366" height="284" />
</picture>

      </center>
<p><br /> 
<em>Abstract: The demand for new deconstruction and demolition approaches is escalating as structures built in 20th century development booms approach their end of life. Rehabilitation and careful deconstruction approaches are increasingly economically and environmentally motivating. For example, in Ontario, Canada multi-decade efforts to decommission nuclear power plants are challenging teams of engineers, researchers, venders, and laborers. In these hazardous scenarios, classical heavy demolition approaches are not an option, and the asset owners find that the costly development of novel workflows and technologies to plan and undergo these deconstruction operations is the only option. These trends present construction researchers with an opportunity to develop technologies and processes to achieve
deconstruction project goals with improved efficiency, certainty, and safety. This paper presents a modular framework for remote human-robot collaboration for waste management in decommissioning and demolition. The proposed framework includes robotic platform reality data capture, scan processing (e.g., segmentation, surface estimation, and recognition), gamified waste packing in virtual reality (VR), and packing plan execution. A comprehensive review of state-of-the-art technologies of each module is explored from the standpoint of applicability to deconstruction and demolition. Then, an autonomous robotic platform for reality data capture is presented. A reconfigurable semi-automated VR platform for waste packing optimization is presented as an example of this process workflow in the context of remote deconstruction and demolition. Finally, the ideas of robotic packing plan execution are discussed as future work.</em> (<a href="https://conferences.lib.unb.ca/index.php/tcrc/article/view/616">paper</a>)</p>]]></content><author><name></name></author><category term="news" /><category term="geneticsharp" /><category term="papers" /><summary type="html"><![CDATA[In September 2022 I discovered (TBH, Google Scholar notified me) that five new scientific papers using GeneticSharp have been developed.]]></summary></entry><entry><title type="html">GeneticSharp v3.0.0 - .NET 6</title><link href="http://diegogiacomelli.com.br/geneticsharp-version-3-net6/" rel="alternate" type="text/html" title="GeneticSharp v3.0.0 - .NET 6" /><published>2022-09-06T00:00:00-03:00</published><updated>2022-09-06T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/geneticsharp-version-3-net6</id><content type="html" xml:base="http://diegogiacomelli.com.br/geneticsharp-version-3-net6/"><![CDATA[<p>I’ve just released the <a href="https://github.com/giacomelli/GeneticSharp/releases/tag/3.0.0">GeneticSharp version 3.0.0</a>.</p>

<h1 id="net-6">.NET 6</h1>
<p>With version 3.0.0, GeneticSharp now supports .NET 6.</p>

<h1 id="performance-improvements">Performance improvements</h1>
<p>The performance of many operations has been improved just for use .NET 6:</p>
<h3 id="chromosomes">Chromosomes</h3>
<p><img src="https://user-images.githubusercontent.com/177389/188523382-2d21529d-a6ee-4823-843a-1964795124eb.png" alt="image" /></p>

<h3 id="crossovers">Crossovers</h3>
<p><img src="https://user-images.githubusercontent.com/177389/188523420-c7d93a6b-658c-46fd-a4f6-e8da2bd533fe.png" alt="image" /></p>

<h3 id="task-executors">Task executors</h3>
<p><img src="https://user-images.githubusercontent.com/177389/188523543-b233bb3b-7b97-4ffc-9871-e3120d634607.png" alt="image" /></p>

<h3 id="mutations">Mutations</h3>
<p><img src="https://user-images.githubusercontent.com/177389/188523591-943ca265-2880-4a0c-ac25-0b4e93f38bd8.png" alt="image" /></p>

<h3 id="randomizations">Randomizations</h3>
<p><img src="https://user-images.githubusercontent.com/177389/188523654-593c9b6f-d50c-4cd1-b2bd-588307a10efa.png" alt="image" /></p>

<h3 id="reinsertions">Reinsertions</h3>
<p><img src="https://user-images.githubusercontent.com/177389/188523733-b7b955d5-502d-4ed3-ba2a-28bb161bbea5.png" alt="image" /></p>

<h3 id="selections">Selections</h3>
<p><img src="https://user-images.githubusercontent.com/177389/188523701-c920686d-a1fa-42f6-8d21-73ae3deb55c1.png" alt="image" /></p>

<h3 id="terminations">Terminations</h3>
<p><img src="https://user-images.githubusercontent.com/177389/188523717-a2c648c4-cfc8-4b2e-9074-7b18eb92ef32.png" alt="image" /></p>

<p>More about performance: <a href="https://github.com/giacomelli/GeneticSharp/wiki/Performance">https://github.com/giacomelli/GeneticSharp/wiki/Performance</a>.</p>

<h1 id="streamlining-namespaces">Streamlining namespaces</h1>
<p>To avoid the necessity to write many <code class="language-plaintext highlighter-rouge">using</code> statements to write a basic genetic algorithm with GeneticSharp:</p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">GeneticSharp.Domain</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">GeneticSharp.Domain.Crossovers</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">GeneticSharp.Domain.Mutations</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">GeneticSharp.Domain.Populations</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">GeneticSharp.Domain.Selections</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">GeneticSharp.Domain.Terminations</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">GeneticSharp.Infrastructure.Framework.Threading</span><span class="p">;</span>
</code></pre></div></div>

<p>The namespaces needed to use GeneticSharp have been simplified to just two:</p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">GeneticSharp</span><span class="p">;</span>
</code></pre></div></div>

<p>and this one if you want to use the extensions:</p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">GeneticSharp.Extensions</span><span class="p">;</span>
</code></pre></div></div>

<h1 id="installing">Installing</h1>

<h3 id="net-6-1">.NET 6</h3>
<p>Only GeneticSharp:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>install-package GeneticSharp
</code></pre></div></div>
<p>GeneticSharp and extensions (TSP, AutoConfig, Bitmap equality, Equality equation, Equation solver, Function builder, etc):</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>install-package GeneticSharp.Extensions
</code></pre></div></div>
<h3 id="unity3d">Unity3D</h3>
<blockquote>
  <p>For Unity you should used the version 2.6.0, because Unity, at moment I’m writing, only support .NET Standard 2.1: <a href="https://docs.unity3d.com/Manual/dotnetProfileSupport.html">https://docs.unity3d.com/Manual/dotnetProfileSupport.html</a>.</p>
</blockquote>

<p>You should use the <a href="https://github.com/xoofx/UnityNuGet">UnityNuGet</a> to install GeneticSharp directly from NuGet.</p>

<p>Or you can use the latest GeneticSharp.unitypackage available in the <code class="language-plaintext highlighter-rouge">Assets</code> section of this release.</p>

<h3 id="net-standard-20-and-net-framework-462">.NET Standard 2.0 and .NET Framework 4.6.2</h3>
<p>To install previous version that support .NET Standard 2.0 and .NET Framework 4.6.2:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>install-package GeneticSharp <span class="nt">-Version</span> 2.6.0
</code></pre></div></div>

<h3 id="mono-and-net-framework-35">Mono and .NET Framework 3.5</h3>
<p>To install previous version that support .NET Framework 3.5:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>install-package GeneticSharp <span class="nt">-Version</span> 1.2.0
</code></pre></div></div>

<p>More about installing/setup: <a href="https://github.com/giacomelli/GeneticSharp/wiki/Setup">https://github.com/giacomelli/GeneticSharp/wiki/Setup</a>.</p>]]></content><author><name></name></author><category term="News" /><category term="geneticsharp" /><category term="dotnet" /><category term="release" /><summary type="html"><![CDATA[I’ve just released the GeneticSharp version 3.0.0.]]></summary></entry><entry><title type="html">GeneticSharp in the Wild&amp;amp;colon; Procedural Music Generation</title><link href="http://diegogiacomelli.com.br/geneticsharp-in-the-wild-procedural-music-generation/" rel="alternate" type="text/html" title="GeneticSharp in the Wild&amp;amp;colon; Procedural Music Generation" /><published>2022-08-16T00:00:00-03:00</published><updated>2022-08-16T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/geneticsharp-in-the-wild-procedural-music-generation</id><content type="html" xml:base="http://diegogiacomelli.com.br/geneticsharp-in-the-wild-procedural-music-generation/"><![CDATA[<p>I started a <a href="/tags/geneticsharp-in-the-wild/">series of posts</a> about some outstanding scientific papers and projects using <a href="https://github.com/giacomelli/GeneticSharp">GeneticSharp</a>.</p>

<p>For this fifth post the choose one is the <code class="language-plaintext highlighter-rouge">State of the Art in Procedural Music Generation using Genetic Algorithms and Rule Based GA Implementation with Attractor Waves</code>.</p>

<h2 id="introduction">Introduction</h2>
<p><em>The act of composing a piece of music in regarded as a creative process which encompasses objective and subjective rules. Objective rules can be pointed as the minimum necessary ones so that a given composition is considered structurally valid –
music theory. Subjective rules depend on the composer ability to make a creation that is pleasant to the majority of the human listeners – or at least an intended specific audience.</em></p>

<h2 id="usage">Usage</h2>
<p><em>Given that the creation process uses the human composer’s experience and sensibility – which in some form is an unknown rule set – it is assumed by some authors that, by analyzing the characteristics of the produced pieces of music spanning from
several composers, underlying rules can be inferred.</em></p>

<p><em>Genetic algorithms will make the evolution of data encoded in a structure analogous to the chromosome. Traditionally, this piece of information is represented as a binary base, but it is not restricted to 2 symbols, as long as the needed processes for  the evolution can be applied.</em></p>

<p><em>For the fitness function, we will use music theory as done in many previous papers, penalizing notes that are outside the chosen scale and giving bonus to those that match.</em></p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/08/16/geneticsharp-in-the-wild-procedural-music-generation/genetic-algorithm-music-creator-200-e4697bf8b.webp 200w, /assets/images/generated/assets/2022/08/16/geneticsharp-in-the-wild-procedural-music-generation/genetic-algorithm-music-creator-400-e4697bf8b.webp 400w, /assets/images/generated/assets/2022/08/16/geneticsharp-in-the-wild-procedural-music-generation/genetic-algorithm-music-creator-580-e4697bf8b.webp 580w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/08/16/geneticsharp-in-the-wild-procedural-music-generation/genetic-algorithm-music-creator-200-e4697bf8b.png 200w, /assets/images/generated/assets/2022/08/16/geneticsharp-in-the-wild-procedural-music-generation/genetic-algorithm-music-creator-400-e4697bf8b.png 400w, /assets/images/generated/assets/2022/08/16/geneticsharp-in-the-wild-procedural-music-generation/genetic-algorithm-music-creator-580-e4697bf8b.png 580w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/08/16/geneticsharp-in-the-wild-procedural-music-generation/genetic-algorithm-music-creator-580-e4697bf8b.png" alt="post image" width="580" height="740" />
</picture>

      </center>
<p><br /></p>

<h2 id="results">Results</h2>
<p><em>To understand in a first approach, what rating values were most fitting, a first tryout was made by translating the start of some classical pieces into the chromosome output structure. This ideal output was then rated by the fitness algorithm. By obtaining each individual rating component for each tested sample, it was possible to predefine a start set of values to be used. The exception was the attractor wave, which was set subjectively.
Using two attraction waves, it is possible to visualize intended effect. In proximity  with the wave, the notes fall into its attraction basin. When two waves are near, the  effect either oscillates between the two or compromises during their proximity.
Overall, many of the generated compositions have a subjective pleasant tone to  them.</em></p>

<h2 id="sample-generated-music">Sample generated music</h2>
<p>You can listen a sample music generated by the genetic algorithm:</p>
<audio controls="">
        <source src="/assets/2022/08/16/geneticsharp-in-the-wild-procedural-music-generation/genetic-algorithm-music-generated.mp3 " type="audio/mp3" />
      </audio>

<h2 id="author">Author</h2>
<p>Rui Luz and Rafael Silva wrote the paper for Instituto Politécnico do Cávado e do Ave, Barcelos, Braga, Portugal.</p>

<h2 id="further-reading">Further reading</h2>
<p>You can access the full paper directly on <a href="https://github.com/tinocolight/MusicGeneratiorWithIAGenetic">project’s Github repository</a>.</p>]]></content><author><name></name></author><category term="Article" /><category term="geneticsharp" /><category term="geneticsharp-in-the-wild" /><category term="audio" /><summary type="html"><![CDATA[I started a series of posts about some outstanding scientific papers and projects using GeneticSharp.]]></summary></entry><entry><title type="html">Free eBooks by Unity</title><link href="http://diegogiacomelli.com.br/free-ebooks-by-unity/" rel="alternate" type="text/html" title="Free eBooks by Unity" /><published>2022-08-09T00:00:00-03:00</published><updated>2022-08-09T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/free-ebooks-by-unity</id><content type="html" xml:base="http://diegogiacomelli.com.br/free-ebooks-by-unity/"><![CDATA[<p>Throughout all these years using Unity I’ve collected a lot of eBooks that Unity’s team has created. These ebooks are an incredible source of knowledge, but for some reason, I haven’t found any place on the Unity site or blog where all these eBooks are listed.</p>

<p>Thereupon, I created this post to list those eBooks. If you know any other of them created by Unity’s team let me know in the comments and I’ll update the post.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">Last updated on 08/06/2023</code></li>
  <li><code class="language-plaintext highlighter-rouge">Currently listing 57 eBooks</code></li>
</ul>

<h3 id="2d">2D</h3>
<ul>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDY3Njc3JnY9MSZpc3N1ZU5hbWU9c2t1bC10aGUtaGVyby1zbGF5ZXItY2FzZS1zdHVkeSZjbWQ9ZCZzaWc9NGVkZWYzYWE4N2FhNTJiMTAyYWRhYmM5M2Y0ODBjNGE%253D">SouthPAW masters the rogue-lite genre with powerful 2D tools</a></li>
</ul>

<h3 id="art">Art</h3>
<ul>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDYwMzg1JnY9MSZpc3N1ZU5hbWU9MkQgZ2FtZSBhcnQsIGFuaW1hdGlvbiwgYW5kIGxpZ2h0aW5nIGZvciBhcnRpc3RzIGVCb29rJmNtZD1kJnNpZz05NTM2NDg4NjI3YjNhNTkyMGU1YTBjMjFjNjg0YmRhMg%253D%253D">2D game art, animation, and lighting for artists</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDY3OTc3JnY9MSZpc3N1ZU5hbWU9dGhlLWRlZmluaXRpdmUtZ3VpZGUtdG8tbGlnaHRpbmctaW4tdGhlLWhpZ2gtZGVmaW5pdGlvbi1yZW5kZXItcGlwZWxpbmUtdW5pdHktMjAyMS1sdHMtZWRpdGlvbiZjbWQ9ZCZzaWc9MGM5YTE4M2IyZmE3ZDYzMjcxMTljZDQ4YTQyYjYxZjM%253D">The definitive guide to lighting in the High Definition Render Pipeline (HDRP)</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDgxODQ0JnY9MSZpc3N1ZU5hbWU9dW5pdHktZm9yLXRlY2huaWNhbC1hcnRpc3RzLWtleS10b29sc2V0cy1hbmQtd29ya2Zsb3dzJmNtZD1kJnNpZz1jODAyYmUxZGY2MjdmYTg5YzVkZGVmMjVlOTQzOGVjMw%253D%253D">Unity for technical artists - Key toolsets and workflows</a></li>
</ul>

<h3 id="arvr">AR/VR</h3>
<ul>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDIxMDAwJnY9MSZpc3N1ZU5hbWU9Zm91ci1iaWctY29uc3RydWN0aW9uLXByb2JsZW1zLXNvbHZlZC1ieS1hci1hbmQtdnImY21kPWQmc2lnPWUwNWViMmY1MmNjNTQ3NGQ3YjM1YjQwZTc1OWJiMTIx">Four big construction problems solved by AR and VR</a> 🆕</li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDc3NjMwJnY9MSZpc3N1ZU5hbWU9MjAyMi10aGUtZW5lcmd5LXRyYW5zaXRpb24tZWJvb2smY21kPWQmc2lnPTNlNGIwMTc1YzNjYmZkMzgwZjk0Mjc1M2QwNGU0YTNk">The energy transition: How real-time 3D technology can support a low-carbon economy</a> 🆕</li>
</ul>

<h3 id="case-study">Case study</h3>
<ul>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDc0Njg2JnY9MSZpc3N1ZU5hbWU9dW5pdHktY29va2llamFtLWNhc2VzdHVkeS12MyZjbWQ9ZCZzaWc9ZmJkZWJkNzQ2OTU5Njg4ZWNjZjFmNjg3ZWEyYjgwY2I%253D">Cookie Jam: Unlocking the recipe for a successful migration</a></li>
  <li><a href="https://images.response.unity3d.com/Web/Unity/%7B16c8de91-64fe-46c7-899a-5a45ace2ba60%7D_Gameloft_-_Bringing_new_ideas_to_reality_faster.pdf">Gameloft - Bringing new ideas to reality faster</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xMzg1NTc2JnY9NCZpc3N1ZU5hbWU9dWdzLW5pZnR5LWdhbWVzLWNhc2Utc3R1ZHktMSZjbWQ9ZCZzaWc9YmIyN2Q5OTUwZDAxNTFiNmZiZDhkMWI0OWNhMzZlMzM%253D">How Nifty Games keeps live operations lean and flexible</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDQ5MzQ1JnY9MSZpc3N1ZU5hbWU9dW5pY28tc3R1ZGlvLWNhc2Utc3R1ZHkmY21kPWQmc2lnPTA4NmVmNDFkNTE2YzY3ZWE5NzZjN2FjNDNlZTU1MDgy">Find out how Unico boosted their KPIs and improved player engagement</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDk1MTkyJnY9MSZpc3N1ZU5hbWU9MjAyMy11bml0eS1pbW1vcnRhbGl0eS1jYXNlLXN0dWR5JmNtZD1kJnNpZz1jNTlhMTBmYzRhYTZjZTc0N2M0MGQ5NjBiYTU1YmYyYQ%253D%253D">How Unity’s flexibility helps power IMMORTALITY’s unique gameplay and storytelling</a> 🆕</li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDQ5MDU0JnY9MSZpc3N1ZU5hbWU9SG93IFVuaXR5IGhlbHBlZCBNaW1pbWnigJlzIERlc3BlcmFkb3MgSUlJIHJpdmFsIG1lZ2Etc3R1ZGlvIHJlbGVhc2VzJmNtZD1kJnNpZz1iYjBlMDEyYmIyYjVhMjQ1MjVkMGYzMDFhNmE2YjNmZg%253D%253D">How Mimimi made Desperados III a huge success with a small team</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDY3ODE0JnY9MSZpc3N1ZU5hbWU9bG9zdC1pbi1yYW5kb20tY2FzZS1zdHVkeSZjbWQ9ZCZzaWc9MjEwM2Q3N2Y5NTVhYTFiOTIyN2IxMTBlNGQ1ZTYyYjE%253D">How Thunderful Games rolled a AAA hit with “dice opera” fantasy Lost in Random</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDM2ODE0JnY9MSZpc3N1ZU5hbWU9dGVhbS0xNy1jYXNlLXN0dWR5JmNtZD1kJnNpZz1iYjY1NTlmMzQ5MjFiMzFiY2UzNDM0NjVlYmUzN2JjZg%253D%253D">How Team17 uses Unity Integrated Success to ship their games on time</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDI0Njg3JnY9MSZpc3N1ZU5hbWU9aG93LXVuaXR5LWludGVncmF0ZWQtc3VjY2Vzcy1lbXBvd2Vycy1jb2F0c2luay10by1kZWxpdmVyLWJldHRlci1nYW1lcy1mYXN0ZXImY21kPWQmc2lnPWIwNjY1YzczYzhmNjRhMjgyNWU5ZGM0Zjg3MTJkNzFh">How Unity Integrated Success empowers Coatsink to deliver better games, faster</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDM2ODE3JnY9MSZpc3N1ZU5hbWU9a25vY2tvdXQtY2l0eS1jYXNlLXN0dWR5JmNtZD1kJnNpZz02MDlkNzcxODU1OTdjZTVmZDg4NzgyNjM5MWIzNTAwMA%253D%253D">How Velan Studios dodged backend busywork when launching Knockout City</a></li>
  <li><a href="https://images.response.unity3d.com/Web/Unity/%7B67c2b39e-0d60-4c68-bb6f-7db7196f7781%7D_Unity-LostInRandom-CaseStudy-v4.pdf">Lost in Random by Zoink Studios</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDQ5OTUxJnY9MSZpc3N1ZU5hbWU9TW9ub21pIFBhcms6IEJyaW5naW5nIHRoZSBmdW4gb2YgU2xpbWUgUmFuY2hlciB0byBOaW50ZW5kbyBTd2l0Y2gmY21kPWQmc2lnPWVlYTQzMjEwM2JiOTc1NGUxZTU2OGQxYzUwMTgzNzFl">Monomi Park: Bringing the fun of Slime Rancher to Nintendo Switch</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDY3ODEzJnY9MSZpc3N1ZU5hbWU9ZmFudGFzaWFuLWNhc2Utc3R1ZHkmY21kPWQmc2lnPWFlNTkwNGUzZWE3OWYxZjA4MmNjYTA2NDkxYWFiNTI4">Scaling Fantasian’s handcrafted dioramas for Apple Arcade with Unity</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDczMTY0JnY9MSZpc3N1ZU5hbWU9c2FibGUtY2FzZS1zdHVkeSZjbWQ9ZCZzaWc9NzMxMWFjYmIyZjcwZjhiZjNmMzU1MzY2OGNhMTdjYjI%253D">Shedworks crafts Sable with a modular design approach</a></li>
</ul>

<h3 id="devops">DevOps</h3>
<ul>
  <li><a href="https://images.response.unity3d.com/Web/Unity/%7Ba58bfd8b-fc4d-4a60-a340-328a4a994c90%7D_2022-01-DG-Essential-Dev-Ops-Practices-e-book.pdf">Four essential DevOps practices to make all your games stand out</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDY3ODE1JnY9MSZpc3N1ZU5hbWU9cGxhc3RpYy1rby1vcC1jYXNlLXN0dWR5JmNtZD1kJnNpZz0wZjk2MWExN2JhMTdhNGFiYjY1YTEzZGMxZGJkZDIwMg%253D%253D">How KO_OP uses Plastic SCM to accelerate production and reduce chaos</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDc1MTc2JnY9MSZpc3N1ZU5hbWU9aG93LXN5Y29mb3JnZS1mdWVscy1yYXBpZC1pZGVhdGlvbi1hbmQtaXRlcmF0aW9uLXdpdGgtdW5pdHktZGV2b3BzLXRvb2xzJmNtZD1kJnNpZz01YzcwNjcwOWE0NmM5OTNjZmY1ZGQwYTljNjg0OGI5Mw%253D%253D">How Sycoforge fuels rapid ideation and iteration with Unity DevOps tools</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDI2NDIxJnY9MSZpc3N1ZU5hbWU9dGhlLWZhbGNvbmVlci1jYXNlLXN0dWR5JmNtZD1kJnNpZz1kMWRlZTAyZDRhMDBkODI0YWU1YmJkYWM2Y2Y5ZmE0NA%253D%253D">The Falconeer Case Study</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDUzNTMwJnY9MSZpc3N1ZU5hbWU9VmVyc2lvbiBjb250cm9sIGFuZCBwcm9qZWN0IG9yZ2FuaXphdGlvbiBiZXN0IHByYWN0aWNlIGd1aWRlJmNtZD1kJnNpZz00NzZiN2VjYzNlOGY3ZTNhNThhYzdjYzFiNTg4NTBiMA%253D%253D">Version control and project organization best practices for game developers</a></li>
</ul>

<h3 id="education">Education</h3>
<ul>
  <li><a href="https://images.response.unity3d.com/Web/Unity/%7B118ba1e1-7999-4731-aecb-222c8f648ba1%7D_Unity-CurricularFramework-052820_FINAL.pdf">Curricular Framework</a></li>
</ul>

<h3 id="game-design">Game design</h3>
<ul>
  <li><a href="https://cdn.unity3d.com/media/TheGameDesignerPlaybook_EBook.pdf">The Unity Game Designer Playbook</a></li>
</ul>

<h3 id="misc">Misc</h3>
<ul>
  <li><a href="https://images.response.unity3d.com/Web/Unity/%7B1f2fcf3b-d60d-44e1-b646-818d32bfa030%7D_Unity-Mac-Development-Ebook-v4.2.pdf">Myths vs reality: What you need to know about developing for the Mac</a></li>
  <li><a href="https://images.response.unity3d.com/Web/Unity/%7B47e54d3b-d51f-4e09-b3c1-1ab84453779e%7D_Unity-HiddenProductivityCosts-Ebook.pdf">The hidden productivity costs disrupting your release timelines</a></li>
  <li><a href="https://images.response.unity3d.com/Web/Unity/%7B954cce4a-4166-45e7-b270-df28300bc67f%7D_UNITY-The_True_Costs_of_Creating__Launching_and_Operating_a_Game.pdf">The true costs of creating, Launching, and Operating a Game</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDMwNzIwJnY9MSZpc3N1ZU5hbWU9dW5pdHktZ2FtZS1kZXYtZmllbGQtZ3VpZGUmY21kPWQmc2lnPTJmNGI2NGQzMzEyNDU4ODA1ODA0MWFiOTAwOTU3M2Qz">Unity Game Dev Field Guide</a></li>
</ul>

<h3 id="multiplatform">Multiplatform</h3>
<ul>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDc2NDkxJnY9MSZpc3N1ZU5hbWU9dW5pdHktNW11bHRpcGxhdGZvcm1lYm9vay1maW5hbDgxMSZjbWQ9ZCZzaWc9M2FmMGFkYTRhZThiNDg2Yjg1MmY3ZWMxOWM1YzljZDI%253D">Five foundations for successful multiplatform games</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDI0Njg0JnY9MSZpc3N1ZU5hbWU9Y3JlYXRpbmctdGhlLXVuZGVyc2VhLXdvcmxkLW9mLXN1Ym5hdXRpY2EmY21kPWQmc2lnPTVlNmYyZDRlOTI3NWQwNDc0OWViOGNjZDcyYWViMTBh">Five platforms, 6M+ copies: Creating the undersea world of Subnautica</a></li>
  <li><a href="https://images.response.unity3d.com/Web/Unity/%7Bc0e25058-e259-4146-a977-1fc57d3b6278%7D_OriWillofTheWispsCaseStudy_Multiplatform.pdf">How Ori and the Will of the Wisps achieved exceptional performance on multiple platforms</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDI2NDE4JnY9MSZpc3N1ZU5hbWU9dGhlLWZhbGNvbmVlci1jYXNlLXN0dWR5JmNtZD1kJnNpZz01MTM3MzgyZTBlYTFkYTkwNWE0YWM5NmEzMzA2NThkYg%253D%253D">How The Falconeer took flight on six platforms</a></li>
</ul>

<h3 id="multiplayer">Multiplayer</h3>
<ul>
  <li><a href="https://images.response.unity3d.com/Web/Unity/%7B0602c119-6b5c-4011-9583-86120cb73bb0%7D_Latency_in_your_multiplayer_game_ebook.pdf">How to deal with latency in your multiplayer game</a></li>
</ul>

<h3 id="mobile">Mobile</h3>
<ul>
  <li><a href="https://cdn.unity3d.com/media/2022-bestpracticesmobile-ebook.pdf">Best practices from successful mobile indies</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDgyMTMxJnY9MSZpc3N1ZU5hbWU9MjAyMi1maXZlc3RyYXRlZ2llc21vYmlsZWdhbWV3aW5uZXItZWJvb2stdjQtMSZjbWQ9ZCZzaWc9OGJiOTM0ZjM5ZmQ0ZTYwOTJlYzQ5Y2I4OTU2M2YwZWM%253D">Five strategies to ensure your next mobile game is a success</a> 🆕</li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDcxOTMzJnY9MSZpc3N1ZU5hbWU9Y3J5aW5nLXN1bnMtY2FzZS1zdHVkeSZjbWQ9ZCZzaWc9NTI2NTFjYzQxNDAwMDk5NTA3MmI4YmY5MDZmYWFhY2E%253D">How Alt Shift brought their story-rich spacefaring experience to mobile</a></li>
  <li><a href="https://images.response.unity3d.com/Web/Unity/%7B53677c96-8761-4852-9699-67fb3702e97c%7D_Unity-MobileTrends2022-Ebook.pdf">Mobile Game Trends - What you need to know for 2022</a></li>
</ul>

<h3 id="monetization">Monetization</h3>
<ul>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDQ2OTQ1JnY9MSZpc3N1ZU5hbWU9YWQtY29udHJvbHMtcHV0cy11a2VuLWdhbWVzLWluLXRoZS1kcml2ZXJzLXNlYXQmY21kPWQmc2lnPWU5OWZmZWRkYTFlZTg5YjM5MDExN2FkNTc3YTIyZDYx">How Ad Controls puts Uken in the drivers seat</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDc0MDYwJnY9MSZpc3N1ZU5hbWU9dWdzLW1lZGlhdGlvbi1kb2RyZWFtcy1jYXNlc3R1ZHktZmluYWwmY21kPWQmc2lnPTU1MGRiN2NmYzY4MTcxOGU2ODg3ODBjOGE2NGQ3NzE0">How Dodreams achieves the perfect blend of monetization and a winning player experience</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDE5ODAzJnY9MyZpc3N1ZU5hbWU9YmlnLWZpc2gtZ2FtZXMtY2FzZS1zdHVkeSZjbWQ9ZCZzaWc9ZGVlYjY5MzNhOGVhNzQ4MWU0NmYwYTg4Nzc2MjE4YWQ%253D">How Pixel United leveraged Ad Controls to save time and preserve revenue</a></li>
  <li><a href="https://images.response.unity3d.com/Web/Unity/%7B75240e36-672c-474b-a72e-b2415403bad4%7D_Unity_IAP_Playbook-v4.pdf">The IAP Playbook</a></li>
</ul>

<h3 id="performance">Performance</h3>
<ul>
  <li><a href="https://images.response.unity3d.com/Web/Unity/%7B5dc4de9b-9e59-4860-b933-eb6daae82ecd%7D_Unity_Games_Optimization_Best_Practices-v5.pdf">9 ways to optimize your game development: Unity expert tips to help you ship</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDI0NjkzJnY9MSZpc3N1ZU5hbWU9b3B0aW1pemUteW91ci1jb25zb2xlLWFuZC1wYy1nYW1lLXBlcmZvcm1hbmNlJmNtZD1kJnNpZz1hYjFkYjE2OTRhZWZhNzI4OTFkM2FiZjIyNTIyNTkyMQ%253D%253D">Optimize your game performance for consoles and PC</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xMzg4ODYxJnY9MSZpc3N1ZU5hbWU9dW5pdHktZS1ib29rLW9wdGltaXplLXlvdXItbW9iaWxlLWdhbWUtcGVyZm9ybWFuY2UmY21kPWQmc2lnPWU3NWYzMDQxZjdkNTk4ZDc4NjVhMjZiZTVmM2E1ODQ4">Optimize your mobile game performance</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDY3MDM1JnY9MyZpc3N1ZU5hbWU9dWx0aW1hdGUtZ3VpZGUtdG8tcHJvZmlsaW5nLXVuaXR5LWdhbWVzJmNtZD1kJnNpZz1kZGY3OThlNTBlYjA3YzljODU1MDA2NWFlNjlhM2NmNw%253D%253D">Ultimate guide to profiling Unity games</a></li>
</ul>

<h3 id="porting">Porting</h3>
<ul>
  <li><a href="https://images.response.unity3d.com/Web/Unity/%7B2472c6b0-ed28-46c3-bd7a-12eed8ce3805%7D_Five-mistakes-to-avoid-when-porting-your-game-to-switch.pdf">Five mistakes to avoid when porting your game to Nintendo Switch</a></li>
</ul>

<h3 id="programming">Programming</h3>
<ul>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDc4MTU1JnY9MSZpc3N1ZU5hbWU9Y3JlYXRlLWEtYy1zdHlsZS1ndWlkZS13cml0ZS1jbGVhbmVyLWNvZGUtdGhhdC1zY2FsZXMmY21kPWQmc2lnPTU5NjljY2NjZmUwYWM3YjUzNTlmNjAyMGVmOGY5MmQ3">Create C# Style Guide: Write cleaner code that scales</a></li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDk3MDQ2JnY9MiZpc3N1ZU5hbWU9Y3JlYXRlLW1vZHVsYXItZ2FtZS1hcmNoaXRlY3R1cmUtaW4tdW5pdHktd2l0aC1zY3JpcHRhYmxlb2JqZWN0cyZjbWQ9ZCZzaWc9MmUwMTAzMjA1ZjczZWRiYmQzNmUxODViOTZkYTQ0MTk%253D">Create modular game architecture in Unity with ScriptableObjects</a> 🆕</li>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDgxMzIzJnY9MSZpc3N1ZU5hbWU9bGV2ZWwtdXAteW91ci1jb2RlLXdpdGgtZ2FtZS1wcm9ncmFtbWluZy1wYXR0ZXJucyZjbWQ9ZCZzaWc9YjU2NzExOGI3MWZiMWZjN2ZkMzdhMDE2NDkwMDE4Nzk%253D">Level up your code with game programming patterns</a></li>
</ul>

<h3 id="testing">Testing</h3>
<ul>
  <li><a href="https://images.response.unity3d.com/Web/Unity/%7B4233ae60-18e9-498e-bf6d-226e47a75932%7D_Unity_Bugs_Automation_EBook.pdf">Bugs &amp; automation: The next generation of QA</a></li>
</ul>

<h3 id="ui">UI</h3>
<ul>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDg4Mjk0JnY9MSZpc3N1ZU5hbWU9dXNlci1pbnRlcmZhY2UtZGVzaWduLWFuZC1pbXBsZW1lbnRhdGlvbi1pbi11bml0eSZjbWQ9ZCZzaWc9NjBkOTNkNmVlNzdmMTIwYWM5Y2YxNDhkMDhjNjUzMWE%253D">User interface design and implementation in Unity</a></li>
</ul>

<h3 id="universal-render-pipeline-urp">Universal Render Pipeline (URP)</h3>
<ul>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDc2NTcwJnY9MSZpc3N1ZU5hbWU9aW50cm9kdWN0aW9uLXRvLXRoZS11bml2ZXJzYWwtcmVuZGVyLXBpcGVsaW5lLWZvci1hZHZhbmNlZC11bml0eS1jcmVhdG9ycy0yMDIxLWx0cy1lZGl0aW9uJmNtZD1kJnNpZz1kMjZkZmQ1Njg1NWUyZjZhMDc5OGJmY2M0OTllZWQ3YQ%253D%253D">Introduction to the Universal Render Pipeline for advanced Unity creators</a></li>
</ul>

<h3 id="vfx">VFX</h3>
<ul>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDg1OTkyJnY9MiZpc3N1ZU5hbWU9dGhlLWRlZmluaXRpdmUtZ3VpZGUtdG8tY3JlYXRpbmctYWR2YW5jZWQtdmlzdWFsLWVmZmVjdHMtaW4tdW5pdHkmY21kPWQmc2lnPTcxYTU3NGI5ZDZhZmI5MmU0MzIxOThjNDRjZWM2MmMy">The definitive guide to creating advanced visual effects in Unity</a></li>
</ul>

<h3 id="workflow">Workflow</h3>
<ul>
  <li><a href="https://content.cdntwrk.com/files/aT0xNDA1MzY3JnY9MSZpc3N1ZU5hbWU9dG9wLXRpcHMtZm9yLWltcHJvdmluZy15b3VyLXdvcmtmbG93cy1hbmQtcHJvZHVjdGl2aXR5LXdpdGgtdW5pdHktMjAyMC1sdHMmY21kPWQmc2lnPTdlMzQxNTEyOTY2ZWVhZTg3YmYyZjc5OTI4ZTRjNzE0">Top tips for improving your workflows and productivity with Unity 2020 LTS</a></li>
</ul>]]></content><author><name></name></author><category term="Article" /><category term="unity3d" /><category term="gamedev" /><category term="ebook" /><summary type="html"><![CDATA[Throughout all these years using Unity I’ve collected a lot of eBooks that Unity’s team has created. These ebooks are an incredible source of knowledge, but for some reason, I haven’t found any place on the Unity site or blog where all these eBooks are listed.]]></summary></entry><entry><title type="html">The Fundamentals of Unity 2D colliders</title><link href="http://diegogiacomelli.com.br/the-fundamentals-of-unity-2d-colliders/" rel="alternate" type="text/html" title="The Fundamentals of Unity 2D colliders" /><published>2022-07-22T00:00:00-03:00</published><updated>2022-07-22T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/the-fundamentals-of-unity-2d-colliders</id><content type="html" xml:base="http://diegogiacomelli.com.br/the-fundamentals-of-unity-2d-colliders/"><![CDATA[<p>In the first years of Unity, there wasn’t solid support for 2D game development inside the engine — for years, the right way to refer to it was “Unity 3D”. Though it was possible to develop 2D games with Unity, without official engine support, it wasn’t a smooth process like it is nowadays.</p>

<p>Around 2013, Unity started to support 2D game development with built-in components, like a 2D physics engine, Collider2D, Rigidbody2D, Vector2, Sprite, Tilemap, etc.</p>

<p>In this post, we’ll cover the common properties and behaviors of 2D colliders, which messages are sent to their GameObjects, how we can use them in our scripts, and how each collider setup interacts with others.</p>

<div class="note"><p>I originally wrote this post as a guest writer for <a href="https://blog.logrocket.com/fundamentals-unity-2d-colliders/">LogRocket’s blog</a></p>
</div>

<h2 id="tutorial-sections">Tutorial sections</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/manifest-128-579a71043.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/manifest-128-579a71043.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/manifest-128-579a71043.png" alt="post image" width="128" height="128" />
</picture>

<ul>
  <li>Setting up our Unity project</li>
  <li>What are colliders?</li>
  <li>Common properties and behaviors of colliders</li>
  <li>Adding a 2D collider to a GameObject</li>
  <li>What is a Rigidbody2D component?</li>
  <li>Using PhysicsMaterial2D to add effects</li>
  <li>Collision callbacks</li>
  <li>Using collision callbacks on scripts
    <ul>
      <li>Without a trigger</li>
      <li>With a trigger</li>
    </ul>
  </li>
  <li>Collider interactions
    <ul>
      <li>How do these setups affect collider interactions?</li>
    </ul>
  </li>
  <li>Physics2D settings</li>
  <li>Source code and samples</li>
</ul>

<h2 id="prerequisites">Prerequisites</h2>
<p>The following prerequisites are required to follow along with this tutorial:</p>

<ul>
  <li>Basic knowledge of Unity</li>
  <li>Previous experience writing C# scripts in Unity</li>
</ul>

<h2 id="setting-up-our-unity-project">Setting up our Unity project</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/config-128-c46695ddc.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/config-128-c46695ddc.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/config-128-c46695ddc.png" alt="post image" width="128" height="128" />
</picture>

<p>First, we need to create our Unity project. For this tutorial, we’ll use the version 2021.3.4f1, which, at the moment I’m writing, is the newest LTS Unity version.</p>

<p>On the project templates list, choose 2D(core), give it a name, and click the Create project button. We’ll call ours <code class="language-plaintext highlighter-rouge">SampleScene</code>.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/project-template-200-1cab31008.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/project-template-400-1cab31008.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/project-template-800-1cab31008.webp 800w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/project-template-1224-1cab31008.webp 1224w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/project-template-200-1cab31008.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/project-template-400-1cab31008.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/project-template-800-1cab31008.png 800w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/project-template-1224-1cab31008.png 1224w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/project-template-800-1cab31008.png" alt="post image" width="1224" height="712" />
</picture>

      </center>
<p><br /></p>

<p><br />
With the project started, create two folders called <code class="language-plaintext highlighter-rouge">Scripts</code> and <code class="language-plaintext highlighter-rouge">Physic Materials</code> inside the <code class="language-plaintext highlighter-rouge">Assets</code> folder. We’ll use them to keep our project organized during the tutorial.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/folders-200-d4f7ca06e.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/folders-400-d4f7ca06e.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/folders-528-d4f7ca06e.webp 528w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/folders-200-d4f7ca06e.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/folders-400-d4f7ca06e.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/folders-528-d4f7ca06e.png 528w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/folders-528-d4f7ca06e.png" alt="post image" width="528" height="192" />
</picture>

      </center>
<p><br /></p>

<h2 id="what-are-colliders">What are colliders?</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/problem-128-a3f91d933.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/problem-128-a3f91d933.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/problem-128-a3f91d933.png" alt="post image" width="128" height="128" />
</picture>

<p>Before we start using our Unity project, we need to take a little dive into the basic concepts of colliders.</p>

<p>Colliders are the way that Unity (and most of the available game engines, if not all) manages collisions between GameObjects. For the sake of this tutorial, we are only using the 2D colliders, but a lot of the rules mentioned below are applicable to 3D colliders, too.</p>

<p>In Unity, a 2D collider is a component that allows us to define a shape, where we want to receive notifications in our GameObject’s script whenever another GameObject (with another collider) collides with the first collider.</p>

<blockquote>
  <p><a href="https://docs.unity3d.com/Manual/Collider2D.html">Unity doc tip</a>: A collider is invisible, and does not need to be the exact same shape as the GameObject’s mesh. A rough approximation of the mesh is often more efficient and indistinguishable in gameplay.</p>
</blockquote>

<p>Right now, Unity has eight built-in kinds of 2D colliders:</p>

<ul>
  <li>BoxCollider2D</li>
  <li>CapsuleCollider2D</li>
  <li>CircleCollider2D</li>
  <li>CompositeCollider2D</li>
  <li>CustomCollider2D</li>
  <li>EdgeCollider2D</li>
  <li>PolygonCollider2D</li>
  <li>TilemapCollider2D</li>
</ul>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/colliders-types-200-c2a46322b.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/colliders-types-250-c2a46322b.webp 250w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/colliders-types-200-c2a46322b.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/colliders-types-250-c2a46322b.png 250w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/colliders-types-250-c2a46322b.png" alt="post image" width="250" height="355" />
</picture>

      </center>
<p><br /></p>

<h2 id="common-properties-and-behaviors-of-colliders">Common properties and behaviors of colliders</h2>
<p>Every 2D collider in Unity inherits from a common class called Collider2D. As a result, they share common properties. Below is a list of the most notable and widely-used ones:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/common-properties-200-5deeeeb3e.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/common-properties-400-5deeeeb3e.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/common-properties-448-5deeeeb3e.webp 448w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/common-properties-200-5deeeeb3e.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/common-properties-400-5deeeeb3e.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/common-properties-448-5deeeeb3e.png 448w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/common-properties-448-5deeeeb3e.png" alt="post image" width="448" height="120" />
</picture>

      </center>
<p><br /></p>

<ul>
  <li>Shape (Edit collider) — Each kind of 2D collider has a different shape, but most of them allow us to change some properties of their shapes, like the scale and distance of vertices</li>
  <li>Material — Defines the <code class="language-plaintext highlighter-rouge">PhysicsMaterial2D</code> that can be used by the collider to define things like friction and bounciness</li>
  <li>isTrigger — If it’s checked, the collider will behave as a trigger. When a collider is not marked as a trigger, the physics engine will generate a collision; when the collider hits another collider, it produces the expected behaviors based on the colliders’ setups, like moving them to opposite directions or stopping them. However, when a collider is marked as a trigger, the physics engine will simply detect when it enters the space of another and no collision will be created</li>
  <li>Used by Effector — Determines whether the collider will be used by an <code class="language-plaintext highlighter-rouge">Effector2D</code> attached to the GameObject.</li>
</ul>

<blockquote>
  <p><a href="https://docs.unity3d.com/Manual/Effectors2D.html">Unity doc tip</a>: Effector2D components are used to direct the forces when colliders come into contact with each other</p>
</blockquote>

<ul>
  <li>Offset — As the collider will be attached to a GameObject, we can use this property to define an offset position relative to the GameObject</li>
</ul>

<h2 id="adding-a-2d-collider-to-a-gameobject">Adding a 2D collider to a GameObject</h2>
<p>In our Unity project, add a <code class="language-plaintext highlighter-rouge">Sprite (Square)</code> to the opened scene (<code class="language-plaintext highlighter-rouge">SampleScene</code>):</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/create-square-200-d7e90927c.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/create-square-400-d7e90927c.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/create-square-800-d7e90927c.webp 800w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/create-square-819-d7e90927c.webp 819w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/create-square-200-d7e90927c.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/create-square-400-d7e90927c.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/create-square-800-d7e90927c.png 800w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/create-square-819-d7e90927c.png 819w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/create-square-800-d7e90927c.png" alt="post image" width="819" height="713" />
</picture>

      </center>
<p><br /></p>

<p>Select the <code class="language-plaintext highlighter-rouge">Sprite (Square)</code> GameObject and add a component called <code class="language-plaintext highlighter-rouge">BoxCollider2D</code>:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/square-200-5afeb90e2.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/square-400-5afeb90e2.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/square-455-5afeb90e2.webp 455w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/square-200-5afeb90e2.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/square-400-5afeb90e2.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/square-455-5afeb90e2.png 455w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/square-455-5afeb90e2.png" alt="post image" width="455" height="708" />
</picture>

      </center>
<p><br /></p>

<p>Now repeat the process, but add a <code class="language-plaintext highlighter-rouge">Sprite (Circle)</code> to the scene and add a <code class="language-plaintext highlighter-rouge">CircleCollider2D</code> component to it.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/circle-200-f11e563fd.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/circle-400-f11e563fd.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/circle-461-f11e563fd.webp 461w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/circle-200-f11e563fd.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/circle-400-f11e563fd.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/circle-461-f11e563fd.png 461w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/circle-461-f11e563fd.png" alt="post image" width="461" height="643" />
</picture>

      </center>
<p><br /></p>

<p>Move the <code class="language-plaintext highlighter-rouge">Circle GameObject</code> a little on top of the <code class="language-plaintext highlighter-rouge">Square GameObject</code>:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/move-circle-200-2e37f4265.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/move-circle-400-2e37f4265.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/move-circle-708-2e37f4265.webp 708w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/move-circle-200-2e37f4265.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/move-circle-400-2e37f4265.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/move-circle-708-2e37f4265.png 708w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/move-circle-708-2e37f4265.png" alt="post image" width="708" height="556" />
</picture>

      </center>
<p><br /></p>

<p>If we hit the Play button now, nothing will happen, even if we move the GameObjects inside the editor. No collision will happen.</p>
<center>                
        <img class="screenshot" src="/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/moving-circle.gif " alt="post image" />
      </center>
<p><br /></p>

<p>Why does nothing happen? Well, we need to talk about the <code class="language-plaintext highlighter-rouge">Rigidbody2D</code> component.</p>

<h2 id="what-is-a-rigidbody2d-component">What is a Rigidbody2D component?</h2>
<p>A Rigidbody2D is a component used to tell Unity that it should put the GameObject under the control of the physics engine. In other words, GameObjects without a rigidbody do not exist for the physics engine.</p>

<p>If we just add a 2D collider to our GameObject, nothing will happen because the physics engine is not aware of it. If we want the physics engine to control our GameObject, we need to add a <code class="language-plaintext highlighter-rouge">Rigidbody2D</code> component to it.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/rigidbody2d-200-0007b5a10.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/rigidbody2d-400-0007b5a10.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/rigidbody2d-454-0007b5a10.webp 454w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/rigidbody2d-200-0007b5a10.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/rigidbody2d-400-0007b5a10.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/rigidbody2d-454-0007b5a10.png 454w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/rigidbody2d-454-0007b5a10.png" alt="post image" width="454" height="312" />
</picture>

      </center>
<p><br /></p>

<p>This means that now our GameObject is affected by gravity via the <code class="language-plaintext highlighter-rouge">Gravity Scale</code> property, and can be controlled from scripts using forces.</p>

<p>We Just need to add a <code class="language-plaintext highlighter-rouge">Rigidbody2D</code> to each of the GameObjects that we’ve already created and hit the Play button:</p>
<center>                
        <img class="screenshot" src="/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/ball-gravity.gif " alt="post image" />
      </center>
<p><br /></p>

<p>With the <code class="language-plaintext highlighter-rouge">Rigidbody2D</code> components added to our GameObjects, the physics engine is aware of them and has started making the gravity act.</p>

<h2 id="using-physicsmaterial2d-to-add-effects">Using PhysicsMaterial2D to add effects</h2>
<p>In our sample, the two GameObjects are just falling, but what if we would like to have the <code class="language-plaintext highlighter-rouge">Square GameObject</code> stay in its position and the <code class="language-plaintext highlighter-rouge">Circle GameObject</code> hit it, before bouncing like a ball?</p>

<p>An easy way to achieve this is using <code class="language-plaintext highlighter-rouge">PhysicsMaterial2D</code>.</p>

<p>Let’s add that ball effect to our sample scene. First, on the Square GameObject, change the property <code class="language-plaintext highlighter-rouge">Body Type</code> of its <code class="language-plaintext highlighter-rouge">Rigidbody2D</code> to <code class="language-plaintext highlighter-rouge">Static</code>:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/rigidbody2d-static-200-afa8cf714.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/rigidbody2d-static-381-afa8cf714.webp 381w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/rigidbody2d-static-200-afa8cf714.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/rigidbody2d-static-381-afa8cf714.png 381w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/rigidbody2d-static-381-afa8cf714.png" alt="post image" width="381" height="93" />
</picture>

      </center>
<p><br /></p>

<p>Create a new <code class="language-plaintext highlighter-rouge">PhysicsMaterial2D</code>, name it <code class="language-plaintext highlighter-rouge">Ball physics material</code>, and place it inside our <code class="language-plaintext highlighter-rouge">Physics Materials</code> folder:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/create-physics-material-200-2fdd777ce.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/create-physics-material-400-2fdd777ce.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/create-physics-material-746-2fdd777ce.webp 746w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/create-physics-material-200-2fdd777ce.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/create-physics-material-400-2fdd777ce.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/create-physics-material-746-2fdd777ce.png 746w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/create-physics-material-746-2fdd777ce.png" alt="post image" width="746" height="450" />
</picture>

      </center>
<p><br /></p>

<p>Change its <code class="language-plaintext highlighter-rouge">Bounciness</code> property to 1:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/ball-physics-200-1d09b8bdc.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/ball-physics-381-1d09b8bdc.webp 381w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/ball-physics-200-1d09b8bdc.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/ball-physics-381-1d09b8bdc.png 381w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/ball-physics-381-1d09b8bdc.png" alt="post image" width="381" height="121" />
</picture>

      </center>
<p><br /></p>

<p>On the <code class="language-plaintext highlighter-rouge">Circle GameObject's Rigidbody2D</code>, change the <code class="language-plaintext highlighter-rouge">Material</code> property to use the <code class="language-plaintext highlighter-rouge">Ball physics material</code> that we’ve just created:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/set-physics-material-200-5d0ca6424.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/set-physics-material-382-5d0ca6424.webp 382w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/set-physics-material-200-5d0ca6424.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/set-physics-material-382-5d0ca6424.png 382w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/set-physics-material-382-5d0ca6424.png" alt="post image" width="382" height="69" />
</picture>

      </center>
<p><br /></p>

<p>Hit the <code class="language-plaintext highlighter-rouge">Play</code> button again. Now we should see this happen:</p>
<center>                
        <img class="screenshot" src="/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/ball-boucing.gif " alt="post image" />
      </center>
<p><br /></p>

<h2 id="collision-callbacks">Collision callbacks</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/programmer-128-6cef95d36.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/programmer-128-6cef95d36.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/programmer-128-6cef95d36.png" alt="post image" width="128" height="128" />
</picture>

<p>When one collider interacts with another collider, Unity sends some messages (e.g., call a method on any <code class="language-plaintext highlighter-rouge">MonoBehavior</code> attached to the <code class="language-plaintext highlighter-rouge">GameObject</code>). In the case of a 2D collider, there are six available messages:</p>

<h3 id="when-istrigger-is-not-checked">When IsTrigger is not checked:</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">OnCollisionEnter2D</code>: called in the first frame when the collision starts</li>
  <li><code class="language-plaintext highlighter-rouge">OnCollisionStay2D</code>: called in each frame while the collision is happening</li>
  <li><code class="language-plaintext highlighter-rouge">OnCollsionExit2D</code>: called in the first frame when the collision ends</li>
</ul>

<h3 id="when-istrigger-is-checked">When IsTrigger is checked:</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">OnTriggerEnter2D</code>: called in the first frame when the collision starts</li>
  <li><code class="language-plaintext highlighter-rouge">OnTriggerStay2D</code>: called in each frame while the collision is happening</li>
  <li><code class="language-plaintext highlighter-rouge">OnTriggerExit2D</code>: called in the first frame when the collision ends</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">OnCollisionStay2D</code> and <code class="language-plaintext highlighter-rouge">OnTriggerStay2D</code> are called each frame until they reach Time To Sleep (if the GameObject is not moving anymore).</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/time-to-sleep-200-10aa7dae6.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/time-to-sleep-355-10aa7dae6.webp 355w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/time-to-sleep-200-10aa7dae6.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/time-to-sleep-355-10aa7dae6.png 355w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/time-to-sleep-355-10aa7dae6.png" alt="post image" width="355" height="111" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>We can change this setting on Project Settings / Physics 2D</p>
</span></center>
<p><br /></p>

<h2 id="using-collision-callbacks-on-scripts">Using collision callbacks on scripts</h2>
<p>It’s time to write some code. Let’s create a script to log every time that our <code class="language-plaintext highlighter-rouge">Circle GameObject</code> hits the <code class="language-plaintext highlighter-rouge">Square GameObject</code> (<code class="language-plaintext highlighter-rouge">OnCollisionEnter2D</code>) to the console window. We’ll record how many frames they stay in contact (<code class="language-plaintext highlighter-rouge">OnCollisionStay2D</code>), and when they stop hitting each other (<code class="language-plaintext highlighter-rouge">OnCollsionExit2D</code>). We’ll also show what happens with and without a trigger</p>

<h3 id="without-a-trigger">Without a trigger</h3>
<p>Inside our <code class="language-plaintext highlighter-rouge">Scripts</code> folder, create a script called <code class="language-plaintext highlighter-rouge">CollisionLogger</code> and add it to the <code class="language-plaintext highlighter-rouge">Circle GameObject</code>:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/collision-logger-200-b2b349465.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/collision-logger-400-b2b349465.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/collision-logger-442-b2b349465.webp 442w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/collision-logger-200-b2b349465.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/collision-logger-400-b2b349465.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/collision-logger-442-b2b349465.png 442w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/collision-logger-442-b2b349465.png" alt="post image" width="442" height="348" />
</picture>

      </center>
<p><br /></p>

<p>Open the <code class="language-plaintext highlighter-rouge">CollisionLogger</code> script on editor and type these methods:
<script src="https://gist.github.com/94b530c223d99f34d4fd6a0ab0702f51.js?file=CollisionLogger.cs"> </script></p>

<p>Hit the <code class="language-plaintext highlighter-rouge">Play</code> button, and we should see something like this in the Console window:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-1-200-bf27113d6.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-1-400-bf27113d6.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-1-488-bf27113d6.webp 488w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-1-200-bf27113d6.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-1-400-bf27113d6.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-1-488-bf27113d6.png 488w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-1-488-bf27113d6.png" alt="post image" width="488" height="197" />
</picture>

      </center>
<p><br /></p>

<p>As we can see, <code class="language-plaintext highlighter-rouge">OnCollisionEnter2D</code> is called when the <code class="language-plaintext highlighter-rouge">Circle GameObject</code> hits the <code class="language-plaintext highlighter-rouge">Square GameObject</code>. <code class="language-plaintext highlighter-rouge">OnCollsionExit2D</code> is called when they aren’t hitting each other anymore, and <code class="language-plaintext highlighter-rouge">OnCollisionStay2D</code> has not been called because the two GameObjects are not keeping contact. To see <code class="language-plaintext highlighter-rouge">OnCollisionStay2D</code> being sent, just remove the <code class="language-plaintext highlighter-rouge">Ball physics material</code> from the <code class="language-plaintext highlighter-rouge">Circle GameObject's Rigidbody2D</code>:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/remove-physical-material-200-d43e21e16.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/remove-physical-material-400-d43e21e16.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/remove-physical-material-451-d43e21e16.webp 451w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/remove-physical-material-200-d43e21e16.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/remove-physical-material-400-d43e21e16.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/remove-physical-material-451-d43e21e16.png 451w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/remove-physical-material-451-d43e21e16.png" alt="post image" width="451" height="80" />
</picture>

      </center>
<p><br /></p>

<p>Hit the <code class="language-plaintext highlighter-rouge">Play</code> button again and the output in our Console window should be:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-2-200-45253a06e.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-2-400-45253a06e.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-2-483-45253a06e.webp 483w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-2-200-45253a06e.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-2-400-45253a06e.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-2-483-45253a06e.png 483w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-2-483-45253a06e.png" alt="post image" width="483" height="198" />
</picture>

      </center>
<p><br /></p>

<p>Now we have one <code class="language-plaintext highlighter-rouge">OnCollisionEnter2D</code> and a lot of <code class="language-plaintext highlighter-rouge">OnCollisionStay2D</code> that will be called until the two GameObjects keep the contact or until Time To Sleep is reached.</p>

<p>Now, re-enable the <code class="language-plaintext highlighter-rouge">Ball physics material</code> on the <code class="language-plaintext highlighter-rouge">Circle GameObject's Rigidbody2D</code> and add the <code class="language-plaintext highlighter-rouge">CollisionLogger</code> to the <code class="language-plaintext highlighter-rouge">Square GameObject</code> too.</p>

<p>Hit <code class="language-plaintext highlighter-rouge">Play</code>, and the Console window should look like this:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-3-200-4d533a29a.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-3-400-4d533a29a.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-3-478-4d533a29a.webp 478w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-3-200-4d533a29a.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-3-400-4d533a29a.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-3-478-4d533a29a.png 478w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-3-478-4d533a29a.png" alt="post image" width="478" height="196" />
</picture>

      </center>
<p><br /></p>

<p>As expected, the messages are called in all GameObjects involved in the collision.</p>

<h3 id="with-a-trigger">With a trigger</h3>
<p>What about the <code class="language-plaintext highlighter-rouge">OnTrigger</code> method? Right now, none of our colliders are marked as a trigger (<code class="language-plaintext highlighter-rouge">IsTrigger</code>), which is why only <code class="language-plaintext highlighter-rouge">OnCollision</code> has been called.</p>

<p>Triggers are useful when we need to detect that a given GameObject has reached a point or another GameObject. Let’s say we want to be notified on <code class="language-plaintext highlighter-rouge">Square GameObject</code> every time that the <code class="language-plaintext highlighter-rouge">Circle GameObject</code> passes through it. We can add a collider with <code class="language-plaintext highlighter-rouge">IsTrigger</code> checked on it and we will receive the notification when the physics engine calls the <code class="language-plaintext highlighter-rouge">OnTriggerEnter2D</code> method.</p>

<p>To see a trigger in action, mark the <code class="language-plaintext highlighter-rouge">Square GameObject's collider</code> as a trigger:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/istrigger-200-8ff18a7fc.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/istrigger-400-8ff18a7fc.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/istrigger-451-8ff18a7fc.webp 451w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/istrigger-200-8ff18a7fc.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/istrigger-400-8ff18a7fc.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/istrigger-451-8ff18a7fc.png 451w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/istrigger-451-8ff18a7fc.png" alt="post image" width="451" height="98" />
</picture>

      </center>
<p><br /></p>

<p>Play the scene, and we’ll see that <code class="language-plaintext highlighter-rouge">Circle GameObject</code> is passing through the <code class="language-plaintext highlighter-rouge">Square GameObject</code>:</p>
<center>                
        <img class="screenshot" src="/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/passing-through.gif " alt="post image" />
      </center>
<p><br /></p>

<p>This happens because the <code class="language-plaintext highlighter-rouge">Square GameObject</code> is a trigger now. The physics engine won’t generate the expected behavior when two objects collide, but will instead send the <code class="language-plaintext highlighter-rouge">OnTrigger</code> methods to the involved GameObjects.</p>

<p>If we look at the Console window, you’ll notice that it is empty because no <code class="language-plaintext highlighter-rouge">OnCollision</code> methods are called. To log the <code class="language-plaintext highlighter-rouge">OnTrigger</code> methods, open our <code class="language-plaintext highlighter-rouge">CollisionLogger</code> script and add these new methods:
<script src="https://gist.github.com/94b530c223d99f34d4fd6a0ab0702f51.js?file=trigger-methods.cs"> </script></p>

<p>Run the scene and we can see this log in the Console window:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-4-200-a7970a28a.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-4-400-a7970a28a.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-4-475-a7970a28a.webp 475w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-4-200-a7970a28a.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-4-400-a7970a28a.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-4-475-a7970a28a.png 475w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-4-475-a7970a28a.png" alt="post image" width="475" height="196" />
</picture>

      </center>
<p><br /></p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-5-200-764f811c6.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-5-400-764f811c6.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-5-474-764f811c6.webp 474w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-5-200-764f811c6.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-5-400-764f811c6.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-5-474-764f811c6.png 474w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/console-window-5-474-764f811c6.png" alt="post image" width="474" height="77" />
</picture>

      </center>
<p><br /></p>

<p>Now only <code class="language-plaintext highlighter-rouge">OnTrigger</code> methods are called because there is a trigger involved in the collision.</p>

<p>An important thing to note is that all <code class="language-plaintext highlighter-rouge">OnCollision</code> and <code class="language-plaintext highlighter-rouge">OnTrigger</code> methods receive the parameter <code class="language-plaintext highlighter-rouge">Collision2D/Collider2D</code>. This parameter can hold information about the collision itself, such as:</p>

<ul>
  <li>Which other GameObject collides with the current GameObject</li>
  <li>Which contact points are involved in the collision</li>
  <li>The relative linear velocity of the two colliding objects</li>
</ul>

<p>If we don’t need to use this information in our script, we can declare the <code class="language-plaintext highlighter-rouge">OnCollision/OnTrigger</code> methods without the logging parameter.</p>

<h2 id="collider-interactions">Collider interactions</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/component-128-1eb69a9dc.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/component-128-1eb69a9dc.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/component-128-1eb69a9dc.png" alt="post image" width="128" height="128" />
</picture>

<p>You probably noticed in the last section that there is parity between the <code class="language-plaintext highlighter-rouge">OnCollision</code> and <code class="language-plaintext highlighter-rouge">OnTrigger</code> methods the physics engine calls on the GameObjects involved in the collision. Knowing when each kind of interaction raises each kind of message/method in the involved GameObjects can be a little tricky; despite this apparent similarity, there are some rules for interaction possibilities between different collider setups.</p>

<p>There are six different setups a collider can have that will differently affect how it interacts with other colliders. These setups can be done by a combination of the properties <code class="language-plaintext highlighter-rouge">IsTrigger</code> of the <code class="language-plaintext highlighter-rouge">Collider2D</code> and the property <code class="language-plaintext highlighter-rouge">Body Type</code> of the <code class="language-plaintext highlighter-rouge">Rigidbody2D</code> attached to the same GameObject. Below is a list of similar setups:</p>

<ul>
  <li>Static Collider
    <ul>
      <li>IsTrigger: false</li>
      <li>Body Type: Static</li>
    </ul>
  </li>
  <li>Rigidbody Collider
    <ul>
      <li>IsTrigger: false</li>
      <li>Body Type: Dynamic</li>
    </ul>
  </li>
  <li>Kinematic Rigidbody Collider
    <ul>
      <li>IsTrigger: false</li>
      <li>Body Type: Kinematic</li>
    </ul>
  </li>
  <li>Static Trigger Collider
    <ul>
      <li>IsTrigger: true</li>
      <li>Body Type: Static</li>
    </ul>
  </li>
  <li>Rigidbody Trigger Collider
    <ul>
      <li>IsTrigger: true</li>
      <li>Body Type: Dynamic</li>
    </ul>
  </li>
  <li>Kinematic Rigidbody Trigger Collider
    <ul>
      <li>IsTrigger: true</li>
      <li>Body Type: Kinematic</li>
    </ul>
  </li>
</ul>

<h3 id="how-do-these-setups-affect-collider-interactions">How do these setups affect collider interactions?</h3>
<p>The answer to this question is in the table below, which I took from the <a href="https://docs.unity3d.com/Manual/CollidersOverview.html">Unity documentation site</a>. It shows us where the collisions happen and when the collision callbacks (the <code class="language-plaintext highlighter-rouge">OnCollision</code> and <code class="language-plaintext highlighter-rouge">OnTrigger</code> methods) are called.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/collider-interactions-table-200-0aaec8d8b.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/collider-interactions-table-400-0aaec8d8b.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/collider-interactions-table-800-0aaec8d8b.webp 800w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/collider-interactions-table-1517-0aaec8d8b.webp 1517w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/collider-interactions-table-200-0aaec8d8b.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/collider-interactions-table-400-0aaec8d8b.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/collider-interactions-table-800-0aaec8d8b.png 800w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/collider-interactions-table-1517-0aaec8d8b.png 1517w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/collider-interactions-table-800-0aaec8d8b.png" alt="post image" width="1517" height="558" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>Source: <a href="https://docs.unity3d.com/Manual/CollidersOverview.html">Unity docs</a></p>
</span></center>
<p><br /></p>

<p>Looking at the table, we can figure out things like:</p>

<ul>
  <li>A Static collider only interacts with a Rigidbody collider</li>
  <li>A Rigidbody collider can interact with a Static collider, Rigidbody Collider, and Kinematic Rigidbody Collider
These tables can be very useful during game development, when we get stuck with some sort of collider interaction that we expected to happen but it doesn’t.</li>
</ul>

<p>To help us to better understand the colliders’ interactions, now and when we face the kind of problem mentioned above, I created a sample where we can move the GameObjects through each of the six possible interaction setups, see how they interact with each other, and what callbacks messages are sent.</p>

<blockquote>
  <p>Try it and move each collider setup to better understand what messages are sent for each interaction</p>
</blockquote>

<iframe src="/apps/collider-interactions/index.html" style="width: 100%;min-height: 700px;"></iframe>
<center><span style="font-style:italic; font-size:small"><p><a href="https://diegogiacomelli.com.br/apps/collider-interactions">https://diegogiacomelli.com.br/apps/collider-interactions</a></p>
</span></center>
<p><br /></p>

<h2 id="physics2d-settings">Physics2D settings</h2>
<p>For the last part of this tutorial, I would like to mention the Physics2D settings.</p>

<p>These settings are not within the scope of this tutorial — talking about some of them could fill another whole tutorial — but I think it’s important to know that they exist, what their default values are, and that we can adjust them to the needs of our project.</p>

<p>You can access these settings via Project Settings &gt; Physics 2D.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/physics2d-settings-200-d4eb4d789.webp 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/physics2d-settings-400-d4eb4d789.webp 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/physics2d-settings-756-d4eb4d789.webp 756w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/physics2d-settings-200-d4eb4d789.png 200w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/physics2d-settings-400-d4eb4d789.png 400w, /assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/physics2d-settings-756-d4eb4d789.png 756w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/07/22/the-fundamentals-of-unity-2d-colliders/physics2d-settings-756-d4eb4d789.png" alt="post image" width="756" height="938" />
</picture>

      </center>
<p><br /></p>

<p>Settings like <code class="language-plaintext highlighter-rouge">Gravity</code> are pretty straightforward, but things like <code class="language-plaintext highlighter-rouge">Velocity Iterations</code> and <code class="language-plaintext highlighter-rouge">Position Iterations</code> can be a little obscure and can affect game behaviors a lot.</p>

<p>Most of these settings are changed when we need to achieve some kind of non-conventional physics behavior or performance improvement, but you should be aware that you’ll need to retest gameplay after each change you make to these settings to ensure that you haven’t broken anything.</p>

<p>The bottom line is: make sure to only change these settings after studying and understanding their impact.</p>

<h2 id="source-code-and-samples">Source code and samples</h2>
<ul>
  <li><a href="https://github.com/giacomelli/the-fundamentals-of-unity-2d-collider-tutorial">Tutorial source code</a></li>
  <li><a href="https://diegogiacomelli.com.br/apps/collider-interactions">Online Collision Interactions sample</a></li>
</ul>

<h2 id="conclusion">Conclusion</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png" alt="post image" width="128" height="128" />
</picture>

<p>In this tutorial, we’ve explained the fundamentals of Unity 2D Colliders: what they are, what their common properties and behaviors are, how to add a <code class="language-plaintext highlighter-rouge">BoxCollider2D</code> and <code class="language-plaintext highlighter-rouge">CircleCollider2D</code> to a GameObject, what a <code class="language-plaintext highlighter-rouge">Rigidbody2D</code> is and how to use <code class="language-plaintext highlighter-rouge">PhysicsMaterial2D</code>, what the collision callbacks are and how to use them on our scripts, and, finally, the kinds of collider setups and how they interact.</p>

<p><br /><br /><br />Icons made by <a href="http://www.freepik.com">Freepik</a>, <a href="http://www.flaticon.com/authors/vignesh-oviyan">Vignesh Oviyan</a> and <a href="https://www.flaticon.com/authors/eucalyp" title="Eucalyp">Eucalyp</a> from <a href="http://www.flaticon.com">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons BY 3.0</a></p>

<p>The sprites used on the WebGL sample are from <a href="http://kenney.nl">Kenney</a>.</p>]]></content><author><name></name></author><category term="Tutorial" /><category term="unity3d" /><category term="gamedev" /><category term="logrocket" /><summary type="html"><![CDATA[In the first years of Unity, there wasn’t solid support for 2D game development inside the engine — for years, the right way to refer to it was “Unity 3D”. Though it was possible to develop 2D games with Unity, without official engine support, it wasn’t a smooth process like it is nowadays.]]></summary></entry><entry><title type="html">NO MORE ROOM IN HELL released</title><link href="http://diegogiacomelli.com.br/no-more-room-in-hell-released/" rel="alternate" type="text/html" title="NO MORE ROOM IN HELL released" /><published>2022-06-14T00:00:00-03:00</published><updated>2022-06-14T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/no-more-room-in-hell-released</id><content type="html" xml:base="http://diegogiacomelli.com.br/no-more-room-in-hell-released/"><![CDATA[<p>On June 14th I released my newest solo game called “NO MORE ROOM IN HELL”.</p>

<p>You can download it for Windows, MacOS, Linux or play directly on browser from its itch.io page: <a href="https://giacomelli.itch.io/no-more-room-in-hell">https://giacomelli.itch.io/no-more-room-in-hell</a>.</p>

<center>
        <iframe class="itchio-iframe" frameborder="0" src="https://itch.io/embed/1573240 ">         
        </iframe>
       </center>

<h2 id="what-is-it">What is it?</h2>
<p>A 2D top-down survival shooter game where you will be a rookie soldier in a secret government lab when a zombie apocalypse starts out of blue and now you need to find your way to the docks for a chance to be with your wife and son again.</p>

<center><video width="640" autoplay="" muted="" loop="">
          <source src="/assets/2022/06/14/no-more-room-in-hell-released/digging-your-way-out.mp4 " type="video/mp4" />
          Your browser does not support the video tag.
       </video></center>

<h2 id="game-development">Game development</h2>
<p>I started this side project game development in early 2021, but stopped and restarted again now and then while doing other things.
The whole programming and Unity game development was made only by me.</p>

<p>I took a lot of features I wanted in this type of game and implemented them, like inventory management, lots of weapons, missions, and a backstory that you can try to discover as you play the game.</p>

<p>There are 7 weapons available: gun, double gun, shotgun, grenade launcher, mine launcher, ice caster and mine. Well, you can also drive a car and kill a lot of zombies while driving, so maybe there are 8 weapons available.</p>

<p>Another cool thing I developed for the game is that a lot of the environment can be blown up and destroyed, I used <a href="https://www.youtube.com/watch?v=oKX5uiaXG0s&amp;list= PLxgDXMPVF8JrqhM6v01wtUwPpMBDqdZn_">my destructible sprite library</a> for that.</p>

<p>I organized the game as a series, so the first 4 levels available are like the 4 episodes of season 1.</p>

<h2 id="credits">Credits</h2>

<h4 id="sprites">Sprites</h4>
<p>Almost all sprites used in the game are from <a href="https://kenney.nl/">Kenney</a>.</p>

<h4 id="soundtrack">Soundtrack</h4>
<p>The incredible soundtracks used in the game were created by Daniel HDR, a comic book artist, working on projects for DC Comics (Green Lantern Corps, Superman, Nightwing, Legion of Super-Heroes), Marvel Comics (Avengers, X-Men Forever, Falcon and Winter Soldier) and Dynamite Entertainment (The Shadow, Red Sonja, Kiss) Winner of the Dragon Awards as 2020’s “BEST GRAPHIC NOVEL” with Battlestar Galactica: Counterstrike.</p>

<p>Daniel HDR also has a sound side project called <a href="https://open.spotify.com/artist/4i6kwo29VbAMwFIlkMOwSL">D3FCON1</a>. I had discovered D3FCON1 during the game’s development and thought that some of their music matched the mood of the game perfectly.</p>

<p>Daniel was very kind to give me permission to use the music in the game, as well as providing an art to be used as the cover of the game (as you can see at the top of this post)</p>

<h4 id="sound-fx">Sound FX</h4>
<p>The sound fx are from <a href="https://www.gamemasteraudio.com">Peter Wayne</a> and his amazing sound effects packages on Unity Asset Store, called <a href="https://assetstore.unity.com/publishers/16891">Pro Sound Collection</a></p>

<center>
        <iframe class="itchio-iframe" frameborder="0" src="https://itch.io/embed/1573240 ">         
        </iframe>
       </center>
<center>
        <iframe src="https://www.youtube.com/embed/QKbeli5Jn0I " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>]]></content><author><name></name></author><category term="News" /><category term="nmrh" /><category term="unity3d" /><category term="gamedev" /><category term="games" /><category term="itchio" /><category term="mac" /><category term="win" /><summary type="html"><![CDATA[On June 14th I released my newest solo game called “NO MORE ROOM IN HELL”.]]></summary></entry><entry><title type="html">HTML5 audio tag, large files and ASP .NET</title><link href="http://diegogiacomelli.com.br/html5-audio-tag-large-files-and-asp-dotnet/" rel="alternate" type="text/html" title="HTML5 audio tag, large files and ASP .NET" /><published>2022-04-19T00:00:00-03:00</published><updated>2022-04-19T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/html5-audio-tag-large-files-and-asp-dotnet</id><content type="html" xml:base="http://diegogiacomelli.com.br/html5-audio-tag-large-files-and-asp-dotnet/"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>If you have tried to change the current playback position (currentTime) of large audio files using the HTML5 audio tag, even using the preload attribute, you probably struggled with the fact that the audios would never play at that position but would start playing again from the beginning of the audio.</p>

<p>This happens because most browsers, Chrome included, request that the headers <code class="language-plaintext highlighter-rouge">accept-ranges</code> and <code class="language-plaintext highlighter-rouge">content-range</code> should be in the audio file response.</p>

<h2 id="asp-net-solution">ASP .NET solution</h2>
<p>If you are using ASP .NET, the easiest way to include those headers in the response is to use the third parameter of the <code class="language-plaintext highlighter-rouge">Controller's File</code> method:</p>

<script src="https://gist.github.com/2e0a4ba574e8864d9e30fd6e641f628d.js?file=audio.cs"> </script>

<p>Then, the result response will have the needed headers that make browsers happy and allow you to change the audio’s playback position.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/04/19/html5-audio-tag-large-files-and-asp-dotnet/response-headers-200-c5c52e492.webp 200w, /assets/images/generated/assets/2022/04/19/html5-audio-tag-large-files-and-asp-dotnet/response-headers-299-c5c52e492.webp 299w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/04/19/html5-audio-tag-large-files-and-asp-dotnet/response-headers-200-c5c52e492.png 200w, /assets/images/generated/assets/2022/04/19/html5-audio-tag-large-files-and-asp-dotnet/response-headers-299-c5c52e492.png 299w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/04/19/html5-audio-tag-large-files-and-asp-dotnet/response-headers-299-c5c52e492.png" alt="post image" width="299" height="111" />
</picture>

      </center>
<p><br /></p>]]></content><author><name></name></author><category term="Lab" /><category term="dotnet" /><category term="audio" /><category term="html" /><category term="aspdotnet" /><category term="csharp" /><summary type="html"><![CDATA[Introduction If you have tried to change the current playback position (currentTime) of large audio files using the HTML5 audio tag, even using the preload attribute, you probably struggled with the fact that the audios would never play at that position but would start playing again from the beginning of the audio.]]></summary></entry><entry><title type="html">Trijam 154 entry&amp;amp;colon; Who Kills Who?</title><link href="http://diegogiacomelli.com.br/trijam-154-entry-who-kills-who/" rel="alternate" type="text/html" title="Trijam 154 entry&amp;amp;colon; Who Kills Who?" /><published>2022-02-01T00:00:00-03:00</published><updated>2022-02-01T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/trijam-154-entry-who-kills-who</id><content type="html" xml:base="http://diegogiacomelli.com.br/trijam-154-entry-who-kills-who/"><![CDATA[<p>Last weekend I participated in <strong><a href="https://itch.io/jam/trijam-154">Trijam #154</a></strong>.</p>

<blockquote>
  <p>Trijam is a weekly game jam where your goal is to make something playable (and fun!) in just 3 hours.</p>
</blockquote>

<center>
        <iframe class="itchio-iframe" frameborder="0" src="https://itch.io/embed/1376314 ">         
        </iframe>
       </center>

<h2 id="the-theme">The theme</h2>
<p>The theme for this game jam was <strong>“There is a twist…!”</strong>.</p>

<p>When you have just 3 hours to make a game, even a simple one, you will need to thinking about the idea and plan a lot before start.
Besides, the theme “There is a twist…!” was a challenge one, at least to me. I took some time to realize a idea to develop.</p>

<p>The final result is <strong>an Atari 2600 kind of game</strong>: <strong>Who Kills Who?</strong></p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/02/01/trijam-154-entry-who-kills-who/who-kills-who-200-c5a45b8a1.webp 200w, /assets/images/generated/assets/2022/02/01/trijam-154-entry-who-kills-who/who-kills-who-320-c5a45b8a1.webp 320w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2022/02/01/trijam-154-entry-who-kills-who/who-kills-who-200-c5a45b8a1.png 200w, /assets/images/generated/assets/2022/02/01/trijam-154-entry-who-kills-who/who-kills-who-320-c5a45b8a1.png 320w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2022/02/01/trijam-154-entry-who-kills-who/who-kills-who-320-c5a45b8a1.png" alt="post image" width="320" height="254" />
</picture>

      </center>
<p><br /></p>
<ul>
  <li>There are 3 different elements in the screen: Red, Green and Blue.</li>
  <li>In the start Red kills Green, Green kills Blue and Blue kills Red.</li>
  <li>The player can make a twist (here came the theme) and change Who Kills Who, making Blue kills Green, Green Kills Red and Red kills Blue.</li>
</ul>

<h2 id="how-to-play">How to play</h2>
<p>The game can be played directly on the browser here: <a href="https://giacomelli.itch.io/who-kills-who">https://giacomelli.itch.io/who-kills-who</a>.</p>

<ul>
  <li><strong>ENTER</strong>: to make a twist in Who Kills Who.</li>
  <li><strong>SPACE</strong>: in the end screen to try again.</li>
</ul>

<center>
        <iframe src="https://www.youtube.com/embed/dpIJgO2fWDc " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="how-to-vote">How to vote</h2>
<p>If you liked the game, <strong>you can cast a vote</strong> for the game jam here: <a href="https://itch.io/jam/trijam-154/rate/1376314">https://itch.io/jam/trijam-154/rate/1376314</a>.</p>]]></content><author><name></name></author><category term="Article" /><category term="game-jam" /><category term="games" /><category term="made-with-unity" /><summary type="html"><![CDATA[Last weekend I participated in Trijam #154.]]></summary></entry><entry><title type="html">Puzzimals on itch.io</title><link href="http://diegogiacomelli.com.br/puzzimals-on-itch-io/" rel="alternate" type="text/html" title="Puzzimals on itch.io" /><published>2022-01-20T00:00:00-03:00</published><updated>2022-01-20T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/puzzimals-on-itch-io</id><content type="html" xml:base="http://diegogiacomelli.com.br/puzzimals-on-itch-io/"><![CDATA[<p>Now you can play my game <a href="/games/puzzimals">Puzzimals</a> directly in the browser through itch.io: <a href="https://giacomelli.itch.io/puzzimals">https://giacomelli.itch.io/puzzimals</a></p>

<center>
        <iframe class="itchio-iframe" frameborder="0" src="https://itch.io/embed/1361011 ">         
        </iframe>
       </center>

<center>
        <iframe src="https://www.youtube.com/embed/AKhcDVZgUAA " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="what-is-puzzimals">What is Puzzimals?</h2>

<p>Don’t let the cute look or super fun animations fool you, Puzzimals is a cube-matching game challenging you to match identical tiles in 100 levels of thought-provoking puzzles in a world map.</p>

<p>Packed with features and creative puzzles you can combine cubes of ice, wild cards, bombs and so much more!</p>

<p>Each level unlocks and increases in difficulty and offers an almost infinite number of combos.</p>

<p>Fans of casual puzzle games will enjoy the crisp, colorful graphics featuring cute animals and the compelling music offers great relaxation.</p>]]></content><author><name></name></author><category term="News" /><category term="puzzimals" /><category term="unity3d" /><category term="gamedev" /><category term="games" /><category term="itchio" /><category term="webgl" /><summary type="html"><![CDATA[Now you can play my game Puzzimals directly in the browser through itch.io: https://giacomelli.itch.io/puzzimals]]></summary></entry><entry><title type="html">SqlAsFile</title><link href="http://diegogiacomelli.com.br/sqlasfile/" rel="alternate" type="text/html" title="SqlAsFile" /><published>2021-05-31T00:00:00-03:00</published><updated>2021-05-31T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/sqlasfile</id><content type="html" xml:base="http://diegogiacomelli.com.br/sqlasfile/"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>If you already worked on a project where the data access solution has used SQL commands, instead of some ORM solution, you probably saw some SQL commands inserted directly inside the C# code. I worked on projects with that approach too, but I saw a great <strong>problem with that: We were treating a complete language (SQL) as just a string inside our C# code. No IntelliSense, code completion, syntax validation, format, etc.</strong>
If</p>

<p>Some time ago, with that problem in mind, I created a small library to help us to use SQL commands in our project at that time. As we were using <a href="https://github.com/DapperLib/Dapper">Dapper</a> as our facilitator to access the SQL Server database, we needed to write SQL commands as our daily base activities.</p>

<p><em>That library, called SqlAsFile, helped us to write SQL commands in separated .sql files and use them inside the C# as typed string property of a static class (using T4 generator). This allowed us to write SQL with the whole help of IDE and with no chance to reference an invalid SQL file path.</em></p>

<h2 id="setup">Setup</h2>
<ul>
  <li>Install the SqlAsFile on your Data project (where your .sql files will be created) using the Nuget package or using the source code from GitHub: <a href="https://github.com/giacomelli/sqlasfile">https://github.com/giacomelli/sqlasfile</a>.
<script src="https://gist.github.com/4dda230a09941b6300468a71ee3812ab.js?file=install-package.sh"> </script></li>
  <li>Copy the <a href="https://github.com/giacomelli/SqlAsFile/blob/master/src/Sample.Data/SqlInfoGenerator.tt">SqlInfoGenerator.tt</a> to your Data project.</li>
  <li>Change the namespace of line bellow to the namespace of your Data project.
<script src="https://gist.github.com/4dda230a09941b6300468a71ee3812ab.js?file=change-template.cs"> </script></li>
  <li>Add your .sql files inside any folder or subfolder of your Data project.</li>
  <li>The Build Action property of the .sql files should be changed to Embedded Resource.</li>
  <li>Run the <code class="language-plaintext highlighter-rouge">SqlInfoGenerator.tt</code> every time you add or remove .sql file from the project. You don’t need to that when you just change the content of already existing .sql file. (right click, Run Custom Tool)</li>
</ul>

<h2 id="usage">Usage</h2>
<p>Now you can access the content of your .sql files in a strongly typed way directly from your C# code:</p>

<script src="https://gist.github.com/4dda230a09941b6300468a71ee3812ab.js?file=usage.cs"> </script>

<center>                
        <img class="screenshot" src="/assets/2021/05/31/sqlasfile/SqlAsFile-sample.gif " alt="post image" />
      </center>
<p><br /></p>

<h2 id="tags">Tags</h2>
<p>You can use some tags to tell to SqlAsFile’s parser how to treat a portion of the file:</p>

<h3 id="test-args">test-args</h3>
<p>Anything inside of these tags will be strip off of the SQL that you can access on C#.</p>

<p>This tag is useful when you want to test the .sql directly against the DB without need to define the arguments every time.
<script src="https://gist.github.com/4dda230a09941b6300468a71ee3812ab.js?file=test-args.sql"> </script></p>

<h3 id="cte">cte</h3>
<p>Use this tag if you want to read the CTE of your file in the Cte property on C#.</p>

<script src="https://gist.github.com/4dda230a09941b6300468a71ee3812ab.js?file=cte.sql"> </script>

<script>
        $(document).ready(function() {
          $('.gist-meta').remove();
        });
      </script>]]></content><author><name></name></author><category term="News" /><category term="dotnet" /><category term="database" /><category term="sql" /><category term="code-generator" /><category term="ado" /><category term="dapper" /><summary type="html"><![CDATA[Introduction If you already worked on a project where the data access solution has used SQL commands, instead of some ORM solution, you probably saw some SQL commands inserted directly inside the C# code. I worked on projects with that approach too, but I saw a great problem with that: We were treating a complete language (SQL) as just a string inside our C# code. No IntelliSense, code completion, syntax validation, format, etc. If]]></summary></entry><entry><title type="html">Unity 2020.2&amp;amp;colon; What’s new</title><link href="http://diegogiacomelli.com.br/unity-2020-2-whats/" rel="alternate" type="text/html" title="Unity 2020.2&amp;amp;colon; What’s new" /><published>2020-12-16T00:00:00-03:00</published><updated>2020-12-16T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-2020-2-whats</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-2020-2-whats/"><![CDATA[<h2 id="unity-20202">Unity 2020.2</h2>
<p>The Unity 2020.2 was official release on <a href="https://blogs.unity3d.com/2020/12/15/unity-2020-2-tech-stream-is-now-available-for-download/">December 15, 2020</a> with a lot of fixes, API changes, changes, improvements and features.
You can find the new features directly on the Unity manual accessing this search: <a href="https://docs.unity3d.com/2020.2/Documentation/Manual/30_search.html?q=newin20202">newin20202</a>.
To read all items, access the complete <a href="https://unity3d.com/unity/whats-new/2020.2.0">release notes</a>.</p>

<h2 id="stats">Stats</h2>
<ul>
  <li>Fixes: <code class="language-plaintext highlighter-rouge">828</code></li>
  <li>API Changes: <code class="language-plaintext highlighter-rouge">128</code></li>
  <li>Changes: <code class="language-plaintext highlighter-rouge">86</code></li>
  <li>Improvements: <code class="language-plaintext highlighter-rouge">261</code></li>
  <li>Features: <code class="language-plaintext highlighter-rouge">66</code></li>
</ul>

<center>
        <iframe src="https://www.youtube.com/embed/4r2thboZ_xY " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="my-feature-highlights">My feature highlights</h2>
<p>Below are the features that most caught my attention and that I believe can positively impact my development workflow.</p>

<h3 id="reorder-arrays-and-lists-in-the-inspector">Reorder Arrays and Lists in the Inspector</h3>
<blockquote>
  <p>Arrays and Lists are now reorderable in the Inspector, and you can use the attribute [NonReorderable] to disable this function if you prefer</p>
</blockquote>
<center>
        <iframe src="https://www.youtube.com/embed/wYc1uevu73Q " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h3 id="root-namespace-in-asmdef-inspector">Root namespace in asmdef inspector</h3>
<blockquote>
  <p>Root Namespace is now available as a new field in the asmdef inspector.
The Root Namespace will be used to add the namespace when creating scripts in Unity and in Visual Studio and Rider.</p>
</blockquote>
<center>
        <iframe src="https://www.youtube.com/embed/XTsy45o1OnE " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h3 id="c-80-support">C# 8.0 support</h3>
<blockquote>
  <p>Supports all the newest C# 8 features and enhancements, except for default interface methods.</p>
</blockquote>

<center>                
        <img class="screenshot" src="/assets/2020/12/16/unity-2020-2-whats/unitytips-tuple-patterns.gif " alt="post image" />
      </center>
<p><br />
You can learn more about C# 8 features in <a href="/tags/csharp-8-new-features">this posts</a>.</p>

<h3 id="roslyn-analyzers-support">Roslyn analyzers support</h3>
<blockquote>
  <p>The compilation pipeline now supports Roslyn analyzers. This enables you to run C# code analyzers asynchronously in the background inside the Unity Editor without interrupting your iteration workflow. You can also run them synchronously from the command line.</p>
</blockquote>

<blockquote>
  <p>Roslyn analyzers and ruleset files in Unity projects are powerful tools to help inspect your code for style, quality, and other issues. You can use existing analyzer libraries to inspect your code and write your own analyzers to promote the best practices or conventions within your organization.</p>
</blockquote>

<center>
        <iframe src="https://www.youtube.com/embed/hbHyArijG3M " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h3 id="quick-search-20">Quick Search 2.0</h3>
<blockquote>
  <p>Unity Quick Search is a handy package that enables you to search for anything in Unity. Quick Search 2.0 is now available and comes with more search tokens and the ability to provide contextual completion when typing queries. Scene searching is no longer limited to just the open Scene, but instead, it’s now possible to search through all the Scenes and Prefabs of your project at once.</p>
</blockquote>

<center>
        <iframe src="https://www.youtube.com/embed/5xGLXxsm7QM " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h3 id="roslyn-reference-assemblies">Roslyn Reference Assemblies</h3>
<blockquote>
  <p>Enables the Roslyn Reference Assemblies option by default when compiling C# scripts in the Editor, avoiding unnecessary recompiling of asmdef references. If you make changes that don’t involve code – for example, to materials, shaders or prefabs – the IL2CPP conversion from .NET assemblies to C++ will now be skipped entirely when building a player.</p>
</blockquote>

<h2 id="conclusion">Conclusion</h2>
<p>These were the features that brought my attention to Unity 2020.2.<br />
What were the features that caught your attention?</p>]]></content><author><name></name></author><category term="News" /><category term="unity3d" /><category term="gamedev" /><category term="unity-whatsnew" /><summary type="html"><![CDATA[Unity 2020.2 The Unity 2020.2 was official release on December 15, 2020 with a lot of fixes, API changes, changes, improvements and features. You can find the new features directly on the Unity manual accessing this search: newin20202. To read all items, access the complete release notes.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Editor internal menus</title><link href="http://diegogiacomelli.com.br/unitytips-editor-internal-menus/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Editor internal menus" /><published>2020-12-08T00:00:00-03:00</published><updated>2020-12-08T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-editor-internal-menus</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-editor-internal-menus/"><![CDATA[<p>Unity Editor has a kind of an easter-egg where you can enable internal menus, like <code class="language-plaintext highlighter-rouge">Project / Save As Template</code>, <code class="language-plaintext highlighter-rouge">Screenshots</code>, etc.</p>

<center>                
        <img class="screenshot" src="/assets/2020/12/08/unitytips-editor-internal-menus/unity-editor-internal-menu.gif " alt="post image" />
      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>Unity Editor internal menus</p>
</span></center>
<p><br /></p>

<h1 id="enabling-internal-menus">Enabling internal menus</h1>
<p>To enable those menus, go to <code class="language-plaintext highlighter-rouge">Help / About Unity</code>, then type <code class="language-plaintext highlighter-rouge">internal</code>, after that, you will see some new menus available on Unity Editor:</p>

<ul>
  <li>Project / Save As Template</li>
  <li>Packages / Reset Package Database</li>
  <li>Window / Internal
    <ul>
      <li>Undo</li>
      <li>Screenshot
        <ul>
          <li>Set Window Size</li>
          <li>Set Window Size Small</li>
          <li>Snap View</li>
          <li>Snap View Toolbar</li>
          <li>Snap View Extended Right</li>
          <li>Snap Component</li>
          <li>Snap Game View Component</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h1 id="disabling-internal-menus">Disabling internal menus</h1>
<p>To disable the menus, go to <code class="language-plaintext highlighter-rouge">Help / About Unity</code>, then type <code class="language-plaintext highlighter-rouge">internal</code> again.</p>]]></content><author><name></name></author><category term="Article" /><category term="unity3d" /><category term="unitytips" /><summary type="html"><![CDATA[Unity Editor has a kind of an easter-egg where you can enable internal menus, like Project / Save As Template, Screenshots, etc.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Indices</title><link href="http://diegogiacomelli.com.br/unitytips-indices/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Indices" /><published>2020-12-08T00:00:00-03:00</published><updated>2020-12-08T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-indices</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-indices/"><![CDATA[<p>Unity started to supporting C# 8.0 with version <a href="https://unity3d.com/beta/2020.2b">2020.2 beta</a> and now we can start to use some <a href="/tags/csharp-8-new-features">new features</a> like the <a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#indices-and-ranges">Indices</a>.</p>

<h2 id="introduction">Introduction</h2>
<p>Indices provide a succinct syntax for accessing single elements in array/collection.</p>

<p>Consider the array below: 
 <script src="https://gist.github.com/ce61f91a53e1f1524905d93c5cac3301.js?file=Indices.cs"> </script></p>
<ul>
  <li>The 0 index is the same as sequence[0].</li>
  <li>The ^0 index is the same as sequence[sequence.Length].</li>
</ul>

<blockquote>
  <p>Note that sequence[^0] does throw an exception, just as sequence[sequence.Length] does. For any number n, the index ^n is the same as sequence.Length - n.</p>
</blockquote>]]></content><author><name></name></author><category term="Article" /><category term="unity3d" /><category term="unitytips" /><category term="csharp" /><category term="csharp-8-new-features" /><summary type="html"><![CDATA[Unity started to supporting C# 8.0 with version 2020.2 beta and now we can start to use some new features like the Indices.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Tuple Patterns</title><link href="http://diegogiacomelli.com.br/unitytips-tuple-patterns/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Tuple Patterns" /><published>2020-12-01T00:00:00-03:00</published><updated>2020-12-01T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-tuple-patterns</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-tuple-patterns/"><![CDATA[<p>Unity started to supporting C# 8.0 with version <a href="https://unity3d.com/beta/2020.2b">2020.2 beta</a> and now we can start to use some <a href="/tags/csharp-8-new-features">new features</a> like the <a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#tuple-patterns">Tuple Patterns</a>.</p>

<center>                
        <img class="screenshot" src="/assets/2020/12/01/unitytips-tuple-patterns/unitytips-tuple-patterns.gif " alt="post image" />
      </center>
<p><br /></p>

<h2 id="introduction">Introduction</h2>
<p>Some algorithms depend on multiple inputs. Tuple patterns allow you to switch based on multiple values expressed as a <a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/value-tuples">tuple</a>.</p>

<blockquote>
  <p>The tuples provides concise syntax to group multiple data elements in a lightweight data structure.</p>
</blockquote>

<h2 id="sample">Sample</h2>
<p>In this sample MonoBehaviour, we will get the message to indicate the winner of the game rock, paper, scissors.
<script src="https://gist.github.com/1e0053b26f5a8ff307fe35a6fa83cfc5.js?file=TuplePatterns.cs"> </script></p>]]></content><author><name></name></author><category term="Article" /><category term="unity3d" /><category term="unitytips" /><category term="csharp" /><category term="csharp-8-new-features" /><summary type="html"><![CDATA[Unity started to supporting C# 8.0 with version 2020.2 beta and now we can start to use some new features like the Tuple Patterns.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Property Patterns</title><link href="http://diegogiacomelli.com.br/unitytips-property-patterns/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Property Patterns" /><published>2020-11-24T00:00:00-03:00</published><updated>2020-11-24T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-property-patterns</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-property-patterns/"><![CDATA[<p>Unity started to supporting C# 8.0 with version <a href="https://unity3d.com/beta/2020.2b">2020.2 beta</a> and now we can start to use some <a href="/tags/csharp-8-new-features">new features</a> like the <a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#property-patterns">Property Pattern</a>.</p>

<center>                
        <img class="screenshot" src="/assets/2020/11/24/unitytips-property-patterns/unitytips-property-patterns.gif " alt="post image" />
      </center>
<p><br /></p>

<h2 id="introduction">Introduction</h2>
<p><code class="language-plaintext highlighter-rouge">Property Patterns</code> enables you to match on properties of the object examined in a <a href="/unitytips-switch-expressions">Switch Expressions</a>.</p>

<blockquote>
  <p>The switch expression provides for switch-like semantics in an expression context. It provides a concise syntax when the switch arms produce a value.</p>
</blockquote>

<h2 id="sample">Sample</h2>
<p>In this sample, we will calculate the damage that an NPC can cause taking into account if it is an enemy, and if it is armed.
<script src="https://gist.github.com/44acd57a97fdef861787037b96167a74.js?file=property-pattern.cs"> </script></p>]]></content><author><name></name></author><category term="Article" /><category term="unity3d" /><category term="unitytips" /><category term="csharp" /><category term="csharp-8-new-features" /><summary type="html"><![CDATA[Unity started to supporting C# 8.0 with version 2020.2 beta and now we can start to use some new features like the Property Pattern.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Switch Expressions</title><link href="http://diegogiacomelli.com.br/unitytips-switch-expressions/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Switch Expressions" /><published>2020-11-17T00:00:00-03:00</published><updated>2020-11-17T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-switch-expressions</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-switch-expressions/"><![CDATA[<p>Unity started to supporting C# 8.0 with version <a href="https://unity3d.com/beta/2020.2b">2020.2 beta</a> and now we can start to use some <a href="/tags/csharp-8-new-features">new features</a> like the <a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/switch-expression">Switch Expression</a>.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/11/17/unitytips-switch-expressions/unitytips-switch-expressions-200-2b7005bc2.webp 200w, /assets/images/generated/assets/2020/11/17/unitytips-switch-expressions/unitytips-switch-expressions-400-2b7005bc2.webp 400w, /assets/images/generated/assets/2020/11/17/unitytips-switch-expressions/unitytips-switch-expressions-800-2b7005bc2.webp 800w, /assets/images/generated/assets/2020/11/17/unitytips-switch-expressions/unitytips-switch-expressions-1205-2b7005bc2.webp 1205w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/11/17/unitytips-switch-expressions/unitytips-switch-expressions-200-2b7005bc2.png 200w, /assets/images/generated/assets/2020/11/17/unitytips-switch-expressions/unitytips-switch-expressions-400-2b7005bc2.png 400w, /assets/images/generated/assets/2020/11/17/unitytips-switch-expressions/unitytips-switch-expressions-800-2b7005bc2.png 800w, /assets/images/generated/assets/2020/11/17/unitytips-switch-expressions/unitytips-switch-expressions-1205-2b7005bc2.png 1205w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/11/17/unitytips-switch-expressions/unitytips-switch-expressions-800-2b7005bc2.png" alt="post image" width="1205" height="302" />
</picture>

      </center>
<p><br /></p>

<h2 id="introduction">Introduction</h2>
<p><code class="language-plaintext highlighter-rouge">Switch Expressions</code> can dramatically simplify and reduce the <a href="https://en.wikipedia.org/wiki/Source_lines_of_code">LOC (Lines Of Code)</a> to make a <code class="language-plaintext highlighter-rouge">switch</code>.</p>

<blockquote>
  <p>The switch expression provides for switch-like semantics in an expression context. It provides a concise syntax when the switch arms produce a value.</p>
</blockquote>

<blockquote>
  <p>Often, a switch statement produces a value in each of its case blocks. Switch expressions enable you to use more concise expression syntax. There are fewer repetitive case and break keywords, and fewer curly braces.</p>
</blockquote>

<h2 id="sample">Sample</h2>
<h3 id="classic-switch">Classic switch</h3>
<p>In the code below we have a classic <code class="language-plaintext highlighter-rouge">switch</code> statement:
<script src="https://gist.github.com/da466c32c17301008cafc8a1bb65f13c.js?file=classic.cs"> </script></p>

<h3 id="switch-expression">Switch expression</h3>
<p>And we can <code class="language-plaintext highlighter-rouge">reduce 7 lines of code</code> of this simple switch statement using a <code class="language-plaintext highlighter-rouge">switch expression</code>:
<script src="https://gist.github.com/da466c32c17301008cafc8a1bb65f13c.js?file=switch-expression.cs"> </script></p>

<h2 id="visual-studio-tip">Visual Studio tip</h2>
<p>If you are using Visual Studio, there is a  <code class="language-plaintext highlighter-rouge">Quick action</code> (CTRL + .) to convert from a classic <code class="language-plaintext highlighter-rouge">switch</code> to a <code class="language-plaintext highlighter-rouge">switch expression</code>:</p>
<center>                
        <img class="screenshot" src="/assets/2020/11/17/unitytips-switch-expressions/unitytips-switch-expressions.gif " alt="post image" />
      </center>
<p><br /></p>]]></content><author><name></name></author><category term="Article" /><category term="unity3d" /><category term="unitytips" /><category term="csharp" /><category term="csharp-8-new-features" /><summary type="html"><![CDATA[Unity started to supporting C# 8.0 with version 2020.2 beta and now we can start to use some new features like the Switch Expression.]]></summary></entry><entry><title type="html">ARC-8&amp;amp;colon; devlog &amp;amp;num;4 - CHIP-8 inside Unity Inspector</title><link href="http://diegogiacomelli.com.br/arc-8-devlog-4/" rel="alternate" type="text/html" title="ARC-8&amp;amp;colon; devlog &amp;amp;num;4 - CHIP-8 inside Unity Inspector" /><published>2020-11-11T00:00:00-03:00</published><updated>2020-11-11T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/arc-8-devlog-4</id><content type="html" xml:base="http://diegogiacomelli.com.br/arc-8-devlog-4/"><![CDATA[<p>Some years ago I coded a CHIP-8 emulator in C# just for fun, that emulator was hibernating in a private repository that I never released. Some days ago I started to working on it again with the idea to release it running on Blazor and as a Unity asset where any game developer could drag its prefabs as easter eggs directly to their games.</p>

<p>In this post, I will talk about how I put a <strong>CHIP-8 emulator to run inside the Unity Editor Inspector Window</strong>.</p>

<center>                
        <img class="screenshot" src="/assets/2020/11/11/arc-8-devlog-4/arc-8-running-chip-8-emulator-inside-unity-inspector.gif " alt="post image" />
      </center>
<p><br /></p>

<p>To help to understand everything in this post I recommend you read the previous <a href="/tags/arc8-devlog">ARC-8 devlog posts</a>, in special the <a href="/arc-8-devlog-3">last one</a>.</p>

<div class="note"><p>The source code is not yet published on GitHub, I will notify in this series of posts about ARC-8 devlog and on my <a href="https://twitter.com/ogiacomelli">Twitter</a> too when this happens.</p>
</div>

<h2 id="introduction">Introduction</h2>
<p>I wanted to run the graphics of the emulator inside the Unity Editor Inspector Window. Maybe, you can ask “why?”, well there is an inside joke among Unity developers where we try to play not expected things inside the inspector window, as you can see in the links below:</p>

<ul>
  <li><a href="https://twitter.com/DJ_Link/status/1134489432130818048">https://twitter.com/DJ_Link/status/1134489432130818048</a></li>
  <li><a href="https://twitter.com/alexanderameye/status/1006916653777596416">https://twitter.com/alexanderameye/status/1006916653777596416</a></li>
  <li><a href="https://twitter.com/DevdogUnity/status/1007563448174219265">https://twitter.com/DevdogUnity/status/1007563448174219265</a></li>
</ul>

<h2 id="chip8loadereditorcs">Chip8LoaderEditor.cs</h2>
<p>This is a simplified version of the <a href="https://docs.unity3d.com/ScriptReference/Editor.html">Editor</a> script for <a href="/arc-8-devlog-3">Chip8Loader</a>.
<script src="https://gist.github.com/746f415fa4571dccd52008c4dc0c2b31.js?file=Chip8LoaderEditor.cs"> </script></p>

<h4 id="startemulator-and-stopemulator-methods">StartEmulator and StopEmulator methods</h4>
<p>In the method <code class="language-plaintext highlighter-rouge">StartEmulator</code> we start the emulation inside the Inspector Window.
After starting the emulator by calling the <code class="language-plaintext highlighter-rouge">Run</code> method of <code class="language-plaintext highlighter-rouge">Chip8Loader</code> passing our local <code class="language-plaintext highlighter-rouge">EditorChip8Input</code> to override the emulator input to always use the keyboard.
We use the <code class="language-plaintext highlighter-rouge">EditorCoroutineUtility.StartCoroutine</code> method from the <a href="https://docs.unity3d.com/Packages/com.unity.editorcoroutines@0.0/manual/index.html">Editor Coroutines package</a> to start two coroutines for update and render emulator inside the editor.</p>

<p>The <code class="language-plaintext highlighter-rouge">StopEmulator</code> stops the emulation inside the Inspector Window using the <code class="language-plaintext highlighter-rouge">EditorCoroutineUtility.StopCoroutine</code>.</p>

<h4 id="updateemulator-and-renderemulator-methods">UpdateEmulator and RenderEmulator methods</h4>
<p>In the method <code class="language-plaintext highlighter-rouge">UpdateEmulator</code> we call <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.LateUpdate.html">LateUpdate</a> from <code class="language-plaintext highlighter-rouge">Chip8Loader</code> to run a emulation cycle.</p>

<p>The <code class="language-plaintext highlighter-rouge">RenderEmulator</code> calls the <a href="https://docs.unity3d.com/ScriptReference/Editor.Repaint.html">Repaint</a> from Editor to redraw the inspector using the <a href="https://docs.unity3d.com/ScriptReference/Editor.OnInspectorGUI.html">OnInspectorGUI</a>.</p>

<h4 id="oninspectorgui-method">OnInspectorGUI method</h4>
<p>When the emulation is not running this method just draws the <code class="language-plaintext highlighter-rouge">Chip8Loader</code> inspector using the <a href="https://docs.unity3d.com/ScriptReference/Editor.DrawDefaultInspector.html">DrawDefaultInspector</a>.</p>

<p>When we click on the button <code class="language-plaintext highlighter-rouge">Test emulator</code> on the inspector, the emulation is activated and the emulation will be rendered on the inspector.</p>

<p>When we use the <code class="language-plaintext highlighter-rouge">GUI.BeginClip</code> everything that we draw using the <a href="https://docs.unity3d.com/ScriptReference/GL.html">GL (Low-level graphics library)</a> will be rendered inside the area passed as an argument to BeginClip. This is why we call <code class="language-plaintext highlighter-rouge">Graphic.Render</code> between the BeginClip and EndClip.</p>

<p>In the last step, we read the input using <code class="language-plaintext highlighter-rouge">input.ReadKeys</code>.</p>

<center>
        <iframe src="https://www.youtube.com/embed/YMz62z3xlAo " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="next-step">Next step</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png" alt="post image" width="128" height="128" />
</picture>

<p>In the next <a href="/tags/arc8-devlog">ARC-8 devlog</a> post I will probably talk about the release of the ARC-8 as an open-source project.</p>

<p>If you have any doubts about what I talk about above or any tip about the CHIP-8 emulator (or Unity) and you like to share it, please let me know in the comments section below.</p>

<h2 id="further-reading">Further reading</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/programmer-128-6cef95d36.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/programmer-128-6cef95d36.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/programmer-128-6cef95d36.png" alt="post image" width="128" height="128" />
</picture>

<ul>
  <li><a href="https://learn.unity.com/tutorial/editor-scripting">Editor Scripting</a></li>
  <li><a href="https://docs.unity3d.com/Manual/editor-CustomEditors.html">Custom Editors</a></li>
  <li><a href="https://docs.unity3d.com/ScriptReference/Editor.html">Editor</a></li>
  <li><a href="https://docs.unity3d.com/Packages/com.unity.editorcoroutines@0.0/manual/index.html">Editor Coroutines package</a></li>
  <li><a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.LateUpdate.html">LateUpdate</a></li>
  <li><a href="https://docs.unity3d.com/ScriptReference/Editor.Repaint.html">Repaint</a></li>
  <li><a href="https://docs.unity3d.com/ScriptReference/Editor.OnInspectorGUI.html">OnInspectorGUI</a></li>
  <li><a href="https://docs.unity3d.com/ScriptReference/Editor.DrawDefaultInspector.html">DrawDefaultInspector</a></li>
</ul>

<p><br /><br /><br />Icons made by <a href="http://www.freepik.com">Freepik</a>, <a href="http://www.flaticon.com/authors/vignesh-oviyan">Vignesh Oviyan</a> and <a href="https://www.flaticon.com/authors/eucalyp" title="Eucalyp">Eucalyp</a> from <a href="http://www.flaticon.com">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons BY 3.0</a></p>]]></content><author><name></name></author><category term="Labs" /><category term="devlog" /><category term="dotnet" /><category term="blazor" /><category term="unity3d" /><category term="gamedev" /><category term="emulator" /><category term="arc8" /><category term="arc8-devlog" /><summary type="html"><![CDATA[Some years ago I coded a CHIP-8 emulator in C# just for fun, that emulator was hibernating in a private repository that I never released. Some days ago I started to working on it again with the idea to release it running on Blazor and as a Unity asset where any game developer could drag its prefabs as easter eggs directly to their games.]]></summary></entry><entry><title type="html">Gamedev Utility Belt&amp;amp;colon; Graphy</title><link href="http://diegogiacomelli.com.br/gamedev-utility-belt-graphy/" rel="alternate" type="text/html" title="Gamedev Utility Belt&amp;amp;colon; Graphy" /><published>2020-11-05T00:00:00-03:00</published><updated>2020-11-05T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/gamedev-utility-belt-graphy</id><content type="html" xml:base="http://diegogiacomelli.com.br/gamedev-utility-belt-graphy/"><![CDATA[<p>I decided to start a <a href="/tags/gamedev-utility-belt/">series of posts</a> about some game development resources that are part of my gamedev utility belt and that helps me on my game projects.</p>

<p>For this second post, the chosen one is the <strong><a href="https://github.com/Tayx94/graphy">Graphy</a></strong> by <a href="https://twitter.com/martinTayx">Martín Pane</a> that I used in a lot of my Unity projects.</p>

<h2 id="introduction">Introduction</h2>
<p>Graphy is:</p>
<blockquote>
  <p>a feature packed FPS Counter, stats monitor and debugger</p>
</blockquote>

<p>My main use for it was to monitor the FPS of my mobile games, but Graphy has many other features:</p>

<blockquote>
  <p>With this tool you will be able to visualize and catch when your game has some unexpected hiccup or stutter, and act accordingly!</p>

  <p>The debugger allows you to set one or more conditions, that if met will have the consequences you desire, such as taking a screenshot, pausing the editor, printing a message to the console and more! Even call a method from your own code if you want!</p>
</blockquote>

<h2 id="installation">Installation</h2>
<p>You can follow the instructions on the plugin GitHub repository: <a href="https://github.com/Tayx94/graphy#installation">https://github.com/Tayx94/graphy</a> to install it:</p>

<ul>
  <li>Using the OpenUPM</li>
  <li>Via Package Manager</li>
</ul>

<h2 id="usage">Usage</h2>
<p>Just drag the <code class="language-plaintext highlighter-rouge">[Graphy]</code> prefab from folder <code class="language-plaintext highlighter-rouge">Assets/Taxy/Graphy - Ultimate Stats Monitor</code> to your scene and Play the scene to see it in action.</p>
<center>                
        <img class="screenshot" src="/assets/2020/11/05/gamedev-utility-belt-graphy/graphy-puzzimals-sample.gif " alt="post image" />
      </center>
<p><br /></p>]]></content><author><name></name></author><category term="Article" /><category term="unity3d" /><category term="open-source" /><category term="gamedev" /><category term="performance" /><category term="gamedev-utility-belt" /><summary type="html"><![CDATA[I decided to start a series of posts about some game development resources that are part of my gamedev utility belt and that helps me on my game projects.]]></summary></entry><entry><title type="html">ARC-8&amp;amp;colon; devlog &amp;amp;num;3 - Unity</title><link href="http://diegogiacomelli.com.br/arc-8-devlog-3/" rel="alternate" type="text/html" title="ARC-8&amp;amp;colon; devlog &amp;amp;num;3 - Unity" /><published>2020-11-04T00:00:00-03:00</published><updated>2020-11-04T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/arc-8-devlog-3</id><content type="html" xml:base="http://diegogiacomelli.com.br/arc-8-devlog-3/"><![CDATA[<p>Some years ago I coded a CHIP-8 emulator in C# just for fun, that emulator was hibernating in a private repository that I never released. Some days ago I started to working on it again with the idea to release it running on Blazor and as a Unity asset where any game developer could drag its prefabs as easter eggs directly to their games.</p>

<p>In this post, I will talk about <strong>how I implemented the graphics, sound, input, and log systems for Unity 3D</strong>.</p>

<p>You can read the other <a href="/tags/arc8-devlog">ARC-8’s devlog posts</a>.</p>

<div class="note"><p>The source code is not yet published on GitHub, I will notify in this series of posts about ARC-8 devlog and on my <a href="https://twitter.com/ogiacomelli">Twitter</a> too when this happens.</p>
</div>

<h2 id="introduction">Introduction</h2>
<p>If you were out of the planet in the last decade, maybe you don’t know what is <a href="https://unity.com">Unity</a>: Unity is a cross-platform game engine developed in C++, but the games made on it are developed using .NET and C#.</p>

<blockquote>
  <p>Unity is a cross-platform game engine developed by Unity Technologies, first announced and released in June 2005 at Apple Inc.’s Worldwide Developers Conference as a Mac OS X-exclusive game engine. As of 2018, the engine had been extended to support more than 25 platforms. The engine can be used to create three-dimensional, two-dimensional, virtual reality, and augmented reality games, as well as simulations and other experiences. The engine has been adopted by industries outside video gaming, such as film, automotive, architecture, engineering and construction.</p>
</blockquote>

<p>In older versions, Unity only supported a subset of .NET Framework (4.x), but nowadays it’s supporting .NET Standard 2.0.
This is why we can use our <code class="language-plaintext highlighter-rouge">ARC-8 Core</code>, mentioned in the <a href="/arc-8-devlog-1">first devlog</a>, because it is a <code class="language-plaintext highlighter-rouge">.NET Standard class library</code> and can run directly on Unity.</p>

<center>
        <iframe src="https://www.youtube.com/embed/jSR-pu0WqHY " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>
<center><span style="font-style:italic; font-size:small"><p>The 3D models of the arcade cabinet and arcade room were created by my talented friend <a href="https://twitter.com/giusepe/status/1324050160779956227">Giusepe Casagrande</a>.</p>
</span></center>
<p><br /></p>

<h2 id="systems-interfaces-implementations">Systems interfaces implementations</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/component-128-1eb69a9dc.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/component-128-1eb69a9dc.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/component-128-1eb69a9dc.png" alt="post image" width="128" height="128" />
</picture>

<p>The system interfaces <code class="language-plaintext highlighter-rouge">IGraphic</code>, <code class="language-plaintext highlighter-rouge">ISound</code>, <code class="language-plaintext highlighter-rouge">IInput</code>, and <code class="language-plaintext highlighter-rouge">ILog</code> will be implemented as <a href="https://docs.unity3d.com/Manual/class-MonoBehaviour.html">MonoBehaviour</a>.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/arc-8-unity-components-186-6eee669de.webp 186w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/arc-8-unity-components-186-6eee669de.jpg 186w" type="image/jpeg" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/arc-8-unity-components-186-6eee669de.jpg" alt="post image" width="186" height="320" />
</picture>

      </center>
<p><br /></p>

<blockquote>
  <p>The MonoBehaviour class is the base class from which every Unity script derives, by default. TPovides the framework which allows you to attach your script to a GameObject in the editor, as well as providing hooks into useful Events such as Start and Update.</p>
</blockquote>

<h2 id="chip8graphiccs-monobehaviour-igraphic">Chip8Graphic.cs MonoBehaviour (IGraphic)</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.png" alt="post image" width="128" height="128" />
</picture>

<p>This is the <code class="language-plaintext highlighter-rouge">IGraphic</code> implementation.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-200-12d224ad6.webp 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-400-12d224ad6.webp 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-518-12d224ad6.webp 518w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-200-12d224ad6.png 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-400-12d224ad6.png 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-518-12d224ad6.png 518w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-graphic-518-12d224ad6.png" alt="post image" width="518" height="130" />
</picture>

      </center>
<p><br />
<script src="https://gist.github.com/560a0d0eda7762fc73ad0aa84f3d3ebb.js?file=Chip8Graphic.cs"> </script></p>

<h4 id="intialize-method">Intialize method</h4>
<p>In the method <code class="language-plaintext highlighter-rouge">Initialize</code> we verify if will render to the main camera or to a specific target camera, then we set some camera configuration, create the material we will use to render the CHIP-8 graphic, get the screen size, then we initialize our <a href="https://gameprogrammingpatterns.com/double-buffer.html">Double Buffer</a> array.</p>

<p>In most cases, we don’t use the main camera, but instead, use a target camera that uses a <a href="https://docs.unity3d.com/Manual/class-RenderTexture.html">RenderTexture</a>, and then we can use that texture on any surface on our game, like a TV screen or an arcade cabinet.</p>

<blockquote>
  <p>Render Textures are special types of Textures that are created and updated at run time. To use them, you first create a new Render Texture and designate one of your Cameras to render into it. Then you can use the Render Texture in a Material just like a regular Texture.</p>
</blockquote>

<h4 id="draw-method">Draw method</h4>
<p>This is one of the two methods that needed to be implemented of <code class="language-plaintext highlighter-rouge">IGraphic</code> interface. We received the array (64x32) of bytes representing the current state of CHIP-8 graphics and just update our local array variable <code class="language-plaintext highlighter-rouge">_gfx</code>.</p>

<h4 id="onrenderobject">OnRenderObject</h4>
<p>The method <a href="https://docs.unity3d.com/2017.3/Documentation/ScriptReference/Camera.OnRenderObject.html">OnRenderObject</a> is called after the camera has rendered the scene.</p>

<blockquote>
  <p>OnRenderObject can be used to render your own objects using Graphics.DrawMeshNow or other functions. This function is similar to OnPostRender, except OnRenderObject is called on any object that has a script with the function; no matter if it’s attached to a Camera or not.</p>
</blockquote>

<h4 id="render-method">Render method</h4>
<p>The method <code class="language-plaintext highlighter-rouge">Render</code> will be called by the <code class="language-plaintext highlighter-rouge">OnRenderObject</code> method.</p>

<p>This method is used to draw the state of CHIP-8 graphics (<code class="language-plaintext highlighter-rouge">_gfx</code> array) to the current camera using the <a href="https://docs.unity3d.com/ScriptReference/GL.html">GL (Low-level graphics library)</a>.</p>

<blockquote>
  <p>Use GL class to manipulate active transformation matrices, issue rendering commands similar to OpenGL’s immediate mode and do other low-level graphics tasks. GL immediate drawing functions use whatever is the “current material” set up right now (see Material.SetPass). The material controls how the rendering is done (blending, textures, etc.)</p>
</blockquote>

<p>We use a second array called <code class="language-plaintext highlighter-rouge">_buffer</code> to implement a <a href="https://gameprogrammingpatterns.com/double-buffer.html">Double Buffer</a> and reduce the <code class="language-plaintext highlighter-rouge">screen flickering</code>.</p>
<div class="note"><p>A byte with value 1 should be drawn (foreground color) and a byte with value 0 should not be drawn (background color).</p>
</div>

<h4 id="invalidate-method">Invalidate method</h4>
<p>This is the second of the two methods needed to be implemented of <code class="language-plaintext highlighter-rouge">IGraphic</code> interface, but as we implemented a Double Buffer, this method does not need to perform any operation.</p>

<h4 id="setrendertexture-method">SetRenderTexture method</h4>
<p>It just set the <code class="language-plaintext highlighter-rouge">RenderTexture</code> of the current target camera.</p>

<h2 id="chip8soundcs-monobehaviour-isound">Chip8Sound.cs MonoBehaviour (ISound)</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/sound-128-972082c3e.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/sound-128-972082c3e.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/sound-128-972082c3e.png" alt="post image" width="128" height="128" />
</picture>

<p>This is the <code class="language-plaintext highlighter-rouge">ISound</code> implementation.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-200-7b130dbfe.webp 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-400-7b130dbfe.webp 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-529-7b130dbfe.webp 529w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-200-7b130dbfe.png 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-400-7b130dbfe.png 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-529-7b130dbfe.png 529w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-sound-529-7b130dbfe.png" alt="post image" width="529" height="70" />
</picture>

      </center>
<p><br />
<script src="https://gist.github.com/560a0d0eda7762fc73ad0aa84f3d3ebb.js?file=Chip8Sound.cs"> </script></p>

<h4 id="awake-method">Awake method</h4>
<p>We just try to locate our <a href="https://docs.unity3d.com/2019.3/Documentation/Manual/class-AudioSource.html">AudioSource</a> component that will be used to play the sound.</p>

<h4 id="play-method">Play method</h4>
<p>This is the only method we need to implement of <code class="language-plaintext highlighter-rouge">ISound</code> interface and it just calls the AudioSource’s <a href="https://docs.unity3d.com/ScriptReference/AudioSource.PlayOneShot.html">PlayOneShot</a> using the <a href="https://docs.unity3d.com/2019.3/Documentation/Manual/class-AudioClip.html">AudioClip</a> defined on <code class="language-plaintext highlighter-rouge">_beep</code> field.</p>

<h2 id="keyboardchip8inputcs-monobehaviour-iinput">KeyboardChip8Input.cs MonoBehaviour (IInput)</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/joystick-128-82c7ade06.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/joystick-128-82c7ade06.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/joystick-128-82c7ade06.png" alt="post image" width="128" height="128" />
</picture>

<p>This is the <code class="language-plaintext highlighter-rouge">IInput</code> implementation for the keyboard.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-200-5789d9288.webp 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-400-5789d9288.webp 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-527-5789d9288.webp 527w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-200-5789d9288.png 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-400-5789d9288.png 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-527-5789d9288.png 527w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/keyboard-chip-8-input-527-5789d9288.png" alt="post image" width="527" height="53" />
</picture>

      </center>
<p><br />
<script src="https://gist.github.com/560a0d0eda7762fc73ad0aa84f3d3ebb.js?file=KeyboardChip8Input.cs"> </script></p>

<h4 id="key-mapping">Key mapping</h4>
<p>First, we create the dictionary <code class="language-plaintext highlighter-rouge">_map</code> to map the real keyboard keys to CHIP-8 keypad keys.</p>

<h4 id="updatekeys-method">UpdateKeys method</h4>
<p>The only method we need to implement for <code class="language-plaintext highlighter-rouge">IInput</code> interface. 
In this method, we set to <code class="language-plaintext highlighter-rouge">1</code> the CHIP-8’s keypad keys that were pressed by the player using the <a href="https://docs.unity3d.com/ScriptReference/Input.GetKey.html">Input.GetKey</a> method.</p>

<h2 id="chip8logcs-monobehaviour-ilog">Chip8Log.cs MonoBehaviour (ILog)</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/logging-128-de6e1a017.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/logging-128-de6e1a017.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/logging-128-de6e1a017.png" alt="post image" width="128" height="128" />
</picture>

<p>This is the <code class="language-plaintext highlighter-rouge">ILog</code> implementation.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-200-9c411a016.webp 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-400-9c411a016.webp 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-521-9c411a016.webp 521w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-200-9c411a016.png 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-400-9c411a016.png 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-521-9c411a016.png 521w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-log-521-9c411a016.png" alt="post image" width="521" height="62" />
</picture>

      </center>
<p><br />
<script src="https://gist.github.com/560a0d0eda7762fc73ad0aa84f3d3ebb.js?file=Chip8Log.cs"> </script></p>

<h4 id="debug-and-error-methods">Debug and Error methods</h4>
<p>The two methods implemented for <code class="language-plaintext highlighter-rouge">ILog</code> interface use methods available on Unity <a href="https://docs.unity3d.com/ScriptReference/Debug.html">Debug</a> class to send log messages to the <a href="https://docs.unity3d.com/Manual/Console.html">console window</a>.</p>

<h2 id="chip8loadercs">Chip8Loader.cs</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/package-128-f3193c47c.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/package-128-f3193c47c.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/package-128-f3193c47c.png" alt="post image" width="128" height="128" />
</picture>

<p>This is a simplified version of the component responsible to load all systems (IGraphic, ISound, IInput, and ILog), initialize the <code class="language-plaintext highlighter-rouge">Chip8</code> class emulator, and load the ROM.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-200-a9c0f3f99.webp 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-400-a9c0f3f99.webp 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-529-a9c0f3f99.webp 529w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-200-a9c0f3f99.png 200w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-400-a9c0f3f99.png 400w, /assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-529-a9c0f3f99.png 529w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/11/04/arc-8-devlog-3/chip-8-loader-529-a9c0f3f99.png" alt="post image" width="529" height="191" />
</picture>

      </center>
<p><br />
<script src="https://gist.github.com/560a0d0eda7762fc73ad0aa84f3d3ebb.js?file=Chip8Loader.cs"> </script></p>

<h4 id="start-method">Start method</h4>
<p>Verifies if all the systems needed to run the emulator were configured in the editor, then <a href="https://docs.unity3d.com/ScriptReference/Application-targetFrameRate.html">sets the desired FPS</a> and starts to run the emulator.</p>

<h4 id="run-and-restart-methods">Run and Restart methods</h4>
<p>These two methods have some overloads, but in the end, they will create a new instance of the <code class="language-plaintext highlighter-rouge">Arc8.Chip8</code> class using the systems defined and will load the ROM.</p>

<h4 id="lateupdate-method">LateUpdate method</h4>
<p>We use the <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.LateUpdate.html">LateUpdate</a> method from <code class="language-plaintext highlighter-rouge">MonoBehaviour</code> to run the emulator <code class="language-plaintext highlighter-rouge">EmulateCycle</code> method.</p>

<blockquote>
  <p>LateUpdate is called every frame after all Update functions have been called.</p>
</blockquote>

<h2 id="next-step">Next step</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png" alt="post image" width="128" height="128" />
</picture>

<p>In the next <a href="/tags/arc8-devlog">ARC-8 devlog</a> I will talk about how I put a <a href="https://www.reddit.com/r/Unity3D/comments/ip507l/space_invaders_inside_the_unity_inspector_window/">CHIP-8 emulator to run inside the Unity editor inspector window</a>.</p>
<center>                
        <img class="screenshot" src="/assets/2020/11/04/arc-8-devlog-3/arc-8-running-chip-8-emulator-inside-unity-inspector.gif " alt="post image" />
      </center>
<p><br /></p>

<p>If you have any doubts about what I talk about above or any tip about the CHIP-8 emulator (or Unity) and you like to share it, please let me know in the comments section below.</p>

<h2 id="further-reading">Further reading</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/programmer-128-6cef95d36.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/programmer-128-6cef95d36.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/programmer-128-6cef95d36.png" alt="post image" width="128" height="128" />
</picture>

<ul>
  <li><a href="https://unity.com/learn/get-started">Get started with Unity</a></li>
  <li><a href="https://docs.unity3d.com/Manual/index.html">Unity User Manual</a></li>
  <li><a href="https://docs.unity3d.com/Manual/class-MonoBehaviour.html">MonoBehaviour</a></li>
  <li><a href="https://gameprogrammingpatterns.com/double-buffer.html">Double Buffer</a></li>
  <li><a href="https://docs.unity3d.com/Manual/class-RenderTexture.html">RenderTexture</a></li>
  <li><a href="https://docs.unity3d.com/2017.3/Documentation/ScriptReference/Camera.OnRenderObject.html">OnRenderObject</a></li>
  <li><a href="https://docs.unity3d.com/ScriptReference/GL.html">GL (Low-level graphics library)</a>.</li>
  <li><a href="https://docs.unity3d.com/2019.3/Documentation/Manual/class-AudioSource.html">AudioSource</a></li>
  <li><a href="https://docs.unity3d.com/2019.3/Documentation/Manual/class-AudioClip.html">AudioClip</a></li>
  <li><a href="https://docs.unity3d.com/Manual/class-InputManager.html">Input Manager</a></li>
  <li><a href="https://docs.unity3d.com/ScriptReference/Debug.html">Debug</a></li>
  <li><a href="https://docs.unity3d.com/Manual/Console.html">Console Window</a></li>
  <li><a href="https://docs.unity3d.com/ScriptReference/Application-targetFrameRate.html">TargetFrameRate</a></li>
</ul>

<p><br /><br /><br />Icons made by <a href="http://www.freepik.com">Freepik</a>, <a href="http://www.flaticon.com/authors/vignesh-oviyan">Vignesh Oviyan</a> and <a href="https://www.flaticon.com/authors/eucalyp" title="Eucalyp">Eucalyp</a> from <a href="http://www.flaticon.com">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons BY 3.0</a></p>]]></content><author><name></name></author><category term="Labs" /><category term="devlog" /><category term="dotnet" /><category term="blazor" /><category term="unity3d" /><category term="gamedev" /><category term="emulator" /><category term="arc8" /><category term="arc8-devlog" /><summary type="html"><![CDATA[Some years ago I coded a CHIP-8 emulator in C# just for fun, that emulator was hibernating in a private repository that I never released. Some days ago I started to working on it again with the idea to release it running on Blazor and as a Unity asset where any game developer could drag its prefabs as easter eggs directly to their games.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Scene Selection Toolbar</title><link href="http://diegogiacomelli.com.br/unitytips-scene-selection-toolbar/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Scene Selection Toolbar" /><published>2020-11-03T00:00:00-03:00</published><updated>2020-11-03T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-scene-selection-toolbar</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-scene-selection-toolbar/"><![CDATA[<p>Using <a href="https://github.com/marijnz/unity-toolbar-extender">Unity Toolbar Extender</a> by <a href="https://github.com/marijnz">Marijn Zwemmer’s</a> and <a href="https://github.com/OndrejPetrzilka">Ondrej Petrzilka’s</a> you can easily add buttons side by side of play/pause/step buttons on the Unity editor toolbar.</p>

<h2 id="scene-selection-toolbar">Scene Selection Toolbar</h2>
<p>I created a gist, called <code class="language-plaintext highlighter-rouge">Scene Selection Toolbar</code>, that uses the <a href="https://github.com/marijnz/unity-toolbar-extender">Unity Toolbar Extender</a> and allows us to have a dropdown with the most used scenes right on the side of the <code class="language-plaintext highlighter-rouge">Play</code> button.</p>
<center>
        <iframe src="https://www.youtube.com/embed/9NfVyDsj1rQ " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h3 id="usage">Usage</h3>
<ul>
  <li>Import the <code class="language-plaintext highlighter-rouge">Unity Toolbar Extender</code> as described in the <a href="https://github.com/marijnz/unity-toolbar-extender#importing">Import section</a> on GitHub.</li>
  <li>Then, just add it the gist below to any <code class="language-plaintext highlighter-rouge">Editor</code> folder of your project or use the <a href="/unitytips-gist-importer">Gist Importer</a>.</li>
</ul>

<script src="https://gist.github.com/4122c117c927d5c370dd562e619129e6.js?file=SceneSelectionToolbar.cs"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>

<h4 id="adding-removing-and-opening-scenes">Adding, removing, and opening scenes</h4>
<ul>
  <li><strong>Add the current scene to the list</strong>: with any scene opened, you can click on the <code class="language-plaintext highlighter-rouge">+</code> button to add it to the scenes dropdown.</li>
  <li><strong>Remove the current scene from the list</strong>: just click the <code class="language-plaintext highlighter-rouge">-</code> button to remove the current scene from the list.</li>
  <li><strong>Open a scene from the list</strong>: select any scene in the dropdown to open that scene on the editor.</li>
</ul>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><summary type="html"><![CDATA[Using Unity Toolbar Extender by Marijn Zwemmer’s and Ondrej Petrzilka’s you can easily add buttons side by side of play/pause/step buttons on the Unity editor toolbar.]]></summary></entry><entry><title type="html">ARC-8&amp;amp;colon; devlog &amp;amp;num;2 - Blazor</title><link href="http://diegogiacomelli.com.br/arc-8-devlog-2/" rel="alternate" type="text/html" title="ARC-8&amp;amp;colon; devlog &amp;amp;num;2 - Blazor" /><published>2020-10-29T00:00:00-03:00</published><updated>2020-10-29T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/arc-8-devlog-2</id><content type="html" xml:base="http://diegogiacomelli.com.br/arc-8-devlog-2/"><![CDATA[<p>Some years ago I coded a CHIP-8 emulator in C# just for fun, that emulator was hibernating in a private repository that I never released. Some days ago I started to working on it again with the idea to release it running on Blazor and as a Unity asset where any game developer could drag its prefabs as easter eggs directly to their games.</p>

<p>In this post, I will talk about <strong>how I implemented the graphics, sound, input, and log systems for Blazor</strong>.</p>

<p>You can read the other <a href="/tags/arc8-devlog">ARC-8’s devlog posts</a>.</p>

<div class="note"><p>The source code is not yet published on GitHub, I will notify in this series of posts about ARC-8 devlog and on my <a href="https://twitter.com/ogiacomelli">Twitter</a> too when this happens.</p>
</div>

<h2 id="introduction">Introduction</h2>
<p><a href="https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor">Blazor</a> is a feature of ASP.NET that extends the .NET developer platform with tools and libraries for building web apps.</p>
<blockquote>
  <p>Blazor can run your client-side C# code directly in the browser, using WebAssembly. Because it’s real .NET running on WebAssembly, you can re-use code and libraries from server-side parts of your application.</p>
</blockquote>

<p>This is why we can use our <code class="language-plaintext highlighter-rouge">ARC-8 Core</code>, mentioned in the previous <a href="/arc-8-devlog-1">devlog</a>, because it is a <code class="language-plaintext highlighter-rouge">.NET Standard class library</code> and can run directly on Blazor web assembly.</p>

<div class="note"><p>For some components, like menu, inputs, and buttons I use the <a href="https://blazorise.com/">Blazorise library</a>.</p>
</div>

<h2 id="online-demo">Online demo</h2>
<p>You can test and play the CHIP-8’s games directly on your browser with our online demo: <a href="/apps/arc-8">ARC-8 Blazor Online Demo</a>.</p>
<center>
        <iframe src="https://www.youtube.com/embed/9eHBdCTipZs " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="systems-interfaces-implementations">Systems interfaces implementations</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/component-128-1eb69a9dc.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/component-128-1eb69a9dc.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/component-128-1eb69a9dc.png" alt="post image" width="128" height="128" />
</picture>

<p>The system interfaces <code class="language-plaintext highlighter-rouge">IGraphic</code>, <code class="language-plaintext highlighter-rouge">ISound</code>, <code class="language-plaintext highlighter-rouge">IInput</code>, and <code class="language-plaintext highlighter-rouge">ILog</code> will be implemented as <a href="https://docs.microsoft.com/en-us/aspnet/core/blazor/components/?view=aspnetcore-3.1#:~:text=Blazor%20apps%20are%20built%20using,Components%20are%20flexible%20and%20lightweight.">Blazor components</a>.</p>

<blockquote>
  <p>A component is a self-contained chunk of user interface (UI), such as a page, dialog, or form. A component includes HTML markup and the processing logic required to inject data or respond to UI events. Components are flexible and lightweight. They can be nested, reused, and shared among projects.</p>
</blockquote>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/29/arc-8-devlog-2/arc-8-blazor-components-200-4b7f14cbd.webp 200w, /assets/images/generated/assets/2020/10/29/arc-8-devlog-2/arc-8-blazor-components-320-4b7f14cbd.webp 320w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/29/arc-8-devlog-2/arc-8-blazor-components-200-4b7f14cbd.jpg 200w, /assets/images/generated/assets/2020/10/29/arc-8-devlog-2/arc-8-blazor-components-320-4b7f14cbd.jpg 320w" type="image/jpeg" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/10/29/arc-8-devlog-2/arc-8-blazor-components-320-4b7f14cbd.jpg" alt="post image" width="320" height="246" />
</picture>

      </center>
<p><br /></p>

<h2 id="chip8graphicrazor-component-igraphic">Chip8Graphic.razor component (IGraphic)</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/graphic-128-fe24f0e1d.png" alt="post image" width="128" height="128" />
</picture>

<p>This a simplified version of <code class="language-plaintext highlighter-rouge">IGraphic</code> implementation (without of color selector that you can see in the demo).</p>

<h3 id="c-side">C# side</h3>
<script src="https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=Chip8Graphic.razor"> </script>

<h3 id="js-side">JS side</h3>
<script src="https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=chip8-helper-graphic.js"> </script>

<h4 id="onafterrenderasync-method">OnAfterRenderAsync method</h4>
<p>In the method <code class="language-plaintext highlighter-rouge">OnAfterRenderAsync</code> we verify if it’s the component’s first render, then we call a JS method that will initialize a JS helper for <code class="language-plaintext highlighter-rouge">Chip8Graphic.razor</code> that will return the size of the canvas to C# code, then we use this information to scale our 64 x 32 CHIP-8’s display.</p>

<blockquote>
  <p>OnAfterRenderAsync and OnAfterRender are called after a component has finished rendering. Element and component references are populated at this point. Use this stage to perform additional initialization steps using the rendered content, such as activating third-party JavaScript libraries that operate on the rendered DOM elements.</p>
</blockquote>

<h4 id="draw-method">Draw method</h4>
<p>This is one of the two methods needed to be implemented of <code class="language-plaintext highlighter-rouge">IGraphic</code> interface. We received the array (64x32) of bytes representing the current state of CHIP-8 graphics and just update our local array variable <code class="language-plaintext highlighter-rouge">_gfx</code>.</p>

<h4 id="renderasync-method">RenderAsync method</h4>
<p>The method <code class="language-plaintext highlighter-rouge">RenderAsync</code> will be called by the <code class="language-plaintext highlighter-rouge">Chip8Loader</code> component during the <a href="https://gameprogrammingpatterns.com/game-loop.html">Game Loop</a>.</p>

<p>This method is used to draw the state of CHIP-8 graphics (_gfx array) to the HTML page. 
We use a second array called <code class="language-plaintext highlighter-rouge">_buffer</code> to implement a <a href="https://gameprogrammingpatterns.com/double-buffer.html">Double Buffer</a> and reduce the <code class="language-plaintext highlighter-rouge">screen flickering</code>.</p>
<div class="note"><p>A byte with value 1 should be drawn (foreground color) and a byte with value 0 should not be drawn (background color).</p>
</div>

<h4 id="invalidate-method">Invalidate method</h4>
<p>This is the second of the two methods needed to be implemented of <code class="language-plaintext highlighter-rouge">IGraphic</code> interface, but as we implemented a Double Buffer, this method does not need to perform any operation.</p>

<h4 id="resize-method">Resize method</h4>
<p>Called by the JS side every time that the user resizes the browser window.</p>

<h4 id="clearcanvasasync-method">ClearCanvasAsync method</h4>
<p>We use this one to invalidate our <code class="language-plaintext highlighter-rouge">_buffer</code> and reset the canvas to the background color.</p>

<h2 id="chip8soundrazor-component-isound">Chip8Sound.razor component (ISound)</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/sound-128-972082c3e.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/sound-128-972082c3e.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/sound-128-972082c3e.png" alt="post image" width="128" height="128" />
</picture>

<p>This a simplified version of <code class="language-plaintext highlighter-rouge">ISound</code> implementation.</p>

<h3 id="c-side-1">C# side</h3>
<script src="https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=Chip8Sound.razor"> </script>

<h3 id="js-side-1">JS side</h3>
<script src="https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=chip8-helper-sound.js"> </script>

<h4 id="oninitialized-method">OnInitialized method</h4>
<p>We just use the information from <code class="language-plaintext highlighter-rouge">NavigationManager</code> to set the audio file we want to play.</p>

<h4 id="play-method">Play method</h4>
<p>This is the only method we need to implement of <code class="language-plaintext highlighter-rouge">ISound</code> interface and it just calls a JS method that will get the <code class="language-plaintext highlighter-rouge">audio</code> tag on the component, set the <code class="language-plaintext highlighter-rouge">AudioSource</code>, then load, and play it.</p>

<h2 id="chip8inputrazor-component-iinput">Chip8Input.razor component (IInput)</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/joystick-128-82c7ade06.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/joystick-128-82c7ade06.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/joystick-128-82c7ade06.png" alt="post image" width="128" height="128" />
</picture>

<p>This is the <code class="language-plaintext highlighter-rouge">IInput</code> implementation.</p>

<h3 id="c-side-2">C# side</h3>
<script src="https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=Chip8Input.razor"> </script>

<h3 id="js-side-2">JS side</h3>
<script src="https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=chip8-helper-input.js"> </script>

<h4 id="key-mapping">Key mapping</h4>
<p>First we create the dictionary <code class="language-plaintext highlighter-rouge">_map</code> to map the real keyboard keys to CHIP-8 keypad keys.
The second dictionary we create is <code class="language-plaintext highlighter-rouge">_keyDown</code>. It will be used to map what keys the player is pressing.</p>

<h4 id="onafterrenderasync-method-1">OnAfterRenderAsync method</h4>
<p>We call the JS method <code class="language-plaintext highlighter-rouge">chip8Input.init</code> that will add two event listeners, one for <code class="language-plaintext highlighter-rouge">keydown</code> and the other for <code class="language-plaintext highlighter-rouge">keyup</code> that will call the C# methods <code class="language-plaintext highlighter-rouge">HandleKeyDown</code> and <code class="language-plaintext highlighter-rouge">HandleKeyUp</code>.</p>

<h4 id="updatekeys-method">UpdateKeys method</h4>
<p>The only method we need to implement for <code class="language-plaintext highlighter-rouge">IInput</code> interface. 
In this method, we set to <code class="language-plaintext highlighter-rouge">1</code> the CHIP-8’s keypad keys that were pressed by the player.</p>

<h4 id="handlekeydown-and-handlekeyup-methods">HandleKeyDown and HandleKeyUp methods</h4>
<p>This method is responsible to set the <code class="language-plaintext highlighter-rouge">_keyDown</code> dictionary by the keyboard keys that the player pressed.</p>

<h2 id="chip8lograzor-component-ilog">Chip8Log.razor component (ILog)</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/logging-128-de6e1a017.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/logging-128-de6e1a017.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/logging-128-de6e1a017.png" alt="post image" width="128" height="128" />
</picture>

<p>This is a simplified version of the <code class="language-plaintext highlighter-rouge">ILog</code> implementation.</p>

<h3 id="c-side-3">C# side</h3>
<script src="https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=Chip8Log.razor"> </script>

<h4 id="debug-and-error-methods">Debug and Error methods</h4>
<p>The two methods implemented for <code class="language-plaintext highlighter-rouge">ILog</code> interface use the <code class="language-plaintext highlighter-rouge">Microsoft.Extensions.Logging.ILogger&lt;T&gt;</code> to send log messages to the browser console.</p>

<h2 id="chip8loaderrazor">Chip8Loader.razor</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/package-128-f3193c47c.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/package-128-f3193c47c.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/package-128-f3193c47c.png" alt="post image" width="128" height="128" />
</picture>

<p>This is a simplified version of the component responsible to load all systems (IGraphic, ISound, IInput, and ILog), initialize the <code class="language-plaintext highlighter-rouge">Chip8</code> class emulator,  load the ROM and perform the game loop.</p>

<h3 id="c-side-4">C# side</h3>
<script src="https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=Chip8Loader.razor"> </script>

<h3 id="js-side-3">JS side</h3>
<script src="https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=chip8-helper-loader.js"> </script>

<h4 id="onafterrenderasync-method-2">OnAfterRenderAsync method</h4>
<p>Initializes the emulator with the systems, then calls the JS <code class="language-plaintext highlighter-rouge">chip8Loader.init</code> function that will use the browser <a href="https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame">window.requestAnimationFrame</a> to call the C# method <code class="language-plaintext highlighter-rouge">RunCycle</code>.</p>

<blockquote>
  <p>The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser calls a specified function to update an animation before the next repaint.</p>
</blockquote>

<h4 id="runcycle-method">RunCycle method</h4>
<p>This method is called by the JS  (<code class="language-plaintext highlighter-rouge">window.requestAnimationFrame</code>).
We implement a <a href="https://gameprogrammingpatterns.com/game-loop.html">Game Loop</a> and in the end, call the <code class="language-plaintext highlighter-rouge">Chip8Graphic.RenderAsync</code>.</p>

<h2 id="next-step">Next step</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png" alt="post image" width="128" height="128" />
</picture>

<p>In the next <a href="/tags/arc8-devlog">ARC-8 devlog</a> I will talk about the ARC-8’s implementation on Unity3D.</p>

<p>If you have any doubts about what I talk about above or any tip about the CHIP-8 emulator (or Blazor) and you like to share it, please let me know in the comments section below.</p>

<h2 id="further-reading">Further reading</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/programmer-128-6cef95d36.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/programmer-128-6cef95d36.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/programmer-128-6cef95d36.png" alt="post image" width="128" height="128" />
</picture>

<ul>
  <li><a href="https://dotnet.microsoft.com/learn/aspnet/blazor-tutorial/intro">Blazor Tutorial - Build your first Blazor app</a></li>
  <li><a href="https://blazorise.com/docs/start/">Blazorise quick-start</a></li>
  <li><a href="https://docs.microsoft.com/en-us/aspnet/core/blazor/components/?view=aspnetcore-3.1#:~:text=Blazor%20apps%20are%20built%20using,Components%20are%20flexible%20and%20lightweight.">Create and use ASP.NET Core Razor components</a></li>
  <li><a href="https://docs.microsoft.com/en-us/aspnet/core/blazor/components/lifecycle?view=aspnetcore-3.1">ASP.NET Core Blazor lifecycle</a></li>
  <li><a href="https://docs.microsoft.com/en-us/aspnet/core/blazor/call-javascript-from-dotnet?view=aspnetcore-3.1">Call JavaScript functions from .NET methods in ASP.NET Core Blazor</a></li>
  <li><a href="https://docs.microsoft.com/en-us/aspnet/core/blazor/fundamentals/logging?view=aspnetcore-3.1">ASP.NET Core Blazor logging</a></li>
  <li><a href="https://gameprogrammingpatterns.com/double-buffer.html">Double Buffer</a></li>
  <li><a href="https://gameprogrammingpatterns.com/game-loop.html">Game Loop</a></li>
  <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame">RequestAnimationFrame</a></li>
</ul>

<p><br /><br /><br />Icons made by <a href="http://www.freepik.com">Freepik</a>, <a href="http://www.flaticon.com/authors/vignesh-oviyan">Vignesh Oviyan</a> and <a href="https://www.flaticon.com/authors/eucalyp" title="Eucalyp">Eucalyp</a> from <a href="http://www.flaticon.com">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons BY 3.0</a></p>]]></content><author><name></name></author><category term="Labs" /><category term="devlog" /><category term="dotnet" /><category term="blazor" /><category term="unity3d" /><category term="gamedev" /><category term="emulator" /><category term="arc8" /><category term="arc8-devlog" /><summary type="html"><![CDATA[Some years ago I coded a CHIP-8 emulator in C# just for fun, that emulator was hibernating in a private repository that I never released. Some days ago I started to working on it again with the idea to release it running on Blazor and as a Unity asset where any game developer could drag its prefabs as easter eggs directly to their games.]]></summary></entry><entry><title type="html">ARC-8&amp;amp;colon; devlog &amp;amp;num;1 - Core and code design</title><link href="http://diegogiacomelli.com.br/arc-8-devlog-1/" rel="alternate" type="text/html" title="ARC-8&amp;amp;colon; devlog &amp;amp;num;1 - Core and code design" /><published>2020-10-28T00:00:00-03:00</published><updated>2020-10-28T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/arc-8-devlog-1</id><content type="html" xml:base="http://diegogiacomelli.com.br/arc-8-devlog-1/"><![CDATA[<p>Some years ago I coded a CHIP-8 emulator in C# just for fun, that emulator was hibernating in a private repository that I never released. Some days ago I started to working on it again with the idea to release it running on Blazor and as a Unity asset where any game developer could drag its prefabs as easter eggs directly to their games.</p>

<p>In this post, I will talk about <strong>my premises for the ARC-8’s code design that guided me during its development</strong>.</p>

<p>You can read the other <a href="/tags/arc8-devlog">ARC-8’s devlog posts</a>.</p>

<div class="note"><p>The source code is not yet published on GitHub, I will notify in this series of posts about ARC-8 devlog and on my <a href="https://twitter.com/ogiacomelli">Twitter</a> too when this happens.</p>
</div>

<h2 id="introduction">Introduction</h2>
<p>I always wanted to develop a video game emulator. Anybody that tried or even google about it quickly realizes that it is not an easy or simple task.
If you search a little further you will see developers talking about CHIP-8 as the best thing to emulate as your first emulator project. Why? Well, the CHIP-8 is quite a simple virtual machine that has only 35 opcodes, simple graphic, sound, and input systems too.</p>

<h2 id="chip-8">CHIP-8</h2>
<p>According to Wikipedia:</p>
<blockquote>
  <p>CHIP-8 is an interpreted programming language, developed by Joseph Weisbecker. It was initially used on the COSMAC VIP and Telmac 1800 8-bit microcomputers in the mid-1970s. CHIP-8 programs are run on a CHIP-8 virtual machine. It was made to allow video games to be more easily programmed for these computers.</p>
</blockquote>

<p>According to <a href="http://mattmik.com/files/chip8/mastering/chip8.html">Mastering CHIP-8 by Matthew Mikolay</a> (one of the best technical information source about CHIP-8):</p>
<blockquote>
  <p>CHIP-8 is an interpreted minimalist programming language that was designed by Joseph Weisbecker in the 1970s for use on the RCA COSMAC VIP computer. Due to its hexadecimal format, it was best suited to machines with a scarcity of memory, as minimal text processing had to be performed by the interpreter before a program could be executed. This property inevitably led to its implementation on a variety of hobbyist computers aside from the VIP, such as the COSMAC ELF, Telmac 1800, and ETI 660.</p>
</blockquote>

<h2 id="arc-8">ARC-8</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-200-42589059c.webp 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-400-42589059c.webp 400w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-600-42589059c.webp 600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-200-42589059c.png 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-400-42589059c.png 400w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-600-42589059c.png 600w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-600-42589059c.png" alt="post image" width="600" height="200" />
</picture>

      </center>
<p><br />
I won’t get into details about how to implement each of CHIP-8’s 35 opcodes, because there are plenty of tutorials and resources talking about this on the internet (look in the section ‘Further reading’ in the of this post). My focus here is to explain my code design decisions to allow built a CHIP-8 emulator core in .NET Standard that will allow us to develop a graphic, sound, and input systems for Blazor and Unity3D (and any other platform where C# / .NET is supported).</p>

<blockquote>
  <p>Why the name ARC-8? well, the choice of the name was quite chaotic as any of the name ideas brainstorm that I have had with my friend <a href="http://twitter.com/giusepe">Giusepe Casagrande</a>. The name’s meaning and the way of speaking are <code class="language-plaintext highlighter-rouge">Arcade</code> because we want to remember that old day when we are kids playing some classic games in an arcade or fliperama as we call it in Brazil.</p>
</blockquote>

<h2 id="premises">Premises</h2>
<p>First of all, before started do develop the code, I needed to sit down and defined some premises of the ARC-8’s code design, they are:</p>

<ul>
  <li><strong>Premise 1 - Cross-platform</strong>: the ARC-8 core solution should be cross-platform.</li>
  <li><strong>Premise 2 - Testable</strong>: code must be testable.</li>
  <li><strong>Premise 3 - 100% code coverage</strong>: Unit test code coverage for the core should be 100%.</li>
  <li><strong>Premise 4 - Benchmark</strong>: benchmark the code to verify and compare solutions performance.</li>
</ul>

<h2 id="premise-1---cross-platform">Premise 1 - Cross-platform</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/cross-platform-128-90fb5f56b.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/cross-platform-128-90fb5f56b.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/cross-platform-128-90fb5f56b.png" alt="post image" width="128" height="128" />
</picture>

<p>To make the ARC-8 core solution cross-platform, the first decision is to implement it as <code class="language-plaintext highlighter-rouge">.NET Standard class library</code>. The second one is to define the graphic, sound, input, and logging systems of the emulator as interfaces that will only be implemented on specific platforms, like Blazor and Unity3d.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-systems-interfaces-200-39c2d19ce.webp 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-systems-interfaces-280-39c2d19ce.webp 280w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-systems-interfaces-200-39c2d19ce.jpg 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-systems-interfaces-280-39c2d19ce.jpg 280w" type="image/jpeg" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-systems-interfaces-280-39c2d19ce.jpg" alt="post image" width="280" height="562" />
</picture>

      </center>
<p><br /></p>

<h3 id="systems-interfaces">Systems interfaces</h3>
<script src="https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=system-interfaces.cs"> </script>

<h2 id="premise-2---testable">Premise 2 - Testable</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/test-128-7afecab50.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/test-128-7afecab50.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/test-128-7afecab50.png" alt="post image" width="128" height="128" />
</picture>

<p>The main part of a CHIP-8 emulation development is on the opcodes.</p>

<p>The common solution for many emulators is to put all opcodes inside a giant <code class="language-plaintext highlighter-rouge">switch</code> statement (some use nested switch to group some opcodes).</p>

<p>There is no problem in this kind of solution, but besides the code readability that can easily suffer from too many cases in the switch statement, there is a problem with the idea of unit testing, because we cannot test each opcode isolated.</p>

<p>Sure, you can still unit testing an emulator with opcodes in a <code class="language-plaintext highlighter-rouge">switch</code> statement, but I decided to define an interface that an opcode needs to implement to be used on the emulator.</p>

<h3 id="iopcode-interface">IOpcode interface</h3>
<script src="https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=IOpcode.cs"> </script>

<h3 id="an-iopcodes-implementation">An IOpcode’s implementation</h3>
<script src="https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=AnnnOpcode.cs"> </script>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-opcodes-200-17d4a8cba.webp 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-opcodes-296-17d4a8cba.webp 296w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-opcodes-200-17d4a8cba.jpg 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-opcodes-296-17d4a8cba.jpg 296w" type="image/jpeg" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-opcodes-296-17d4a8cba.jpg" alt="post image" width="296" height="552" />
</picture>

      </center>
<p><br /></p>

<h2 id="premise-3---100-code-coverage">Premise 3 - 100% code coverage</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/score-128-702a2b758.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/score-128-702a2b758.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/score-128-702a2b758.png" alt="post image" width="128" height="128" />
</picture>

<p>With the decision of implement each opcode in a separate classes and the decision of use interfaces for each system, we can easly unit test them and achieve the 100% code coverage:
<script src="https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=AnnnOpcodeTest.cs"> </script></p>

<p>To validate the code coverage I used the <a href="https://github.com/coverlet-coverage/coverlet">coverlet.msbuild</a> and <a href="https://github.com/danielpalme/ReportGenerator">ReportGenerator</a> Nuget packages combined with Cake’s recipe to generate a code coverage report:
<script src="https://gist.github.com/0edd94eed39b8f03c9b46f0562983d10.js?file=unit-test.cake"> </script></p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-200-43462216e.webp 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-400-43462216e.webp 400w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-800-43462216e.webp 800w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-1600-43462216e.webp 1600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-200-43462216e.jpg 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-400-43462216e.jpg 400w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-800-43462216e.jpg 800w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-1600-43462216e.jpg 1600w" type="image/jpeg" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-code-coverage-800-43462216e.jpg" alt="post image" width="1600" height="527" />
</picture>

      </center>
<p><br /></p>

<h2 id="premise-4---benchmark">Premise 4 - Benchmark</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/podium-128-f9f44969b.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/podium-128-f9f44969b.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/podium-128-f9f44969b.png" alt="post image" width="128" height="128" />
</picture>

<p>I like to benchmark the code to compare some solutions in a fast and precise way. To create a benchmark in the .NET system the <a href="https://benchmarkdotnet.org/">BenchmarkDotNet</a> is the right choice. BenchmarkDotNet is quite easy to use and you can set up a project with it in less than 5 minutes.</p>

<p>When I used it on ARC-8 implementation I discover that I could improve the performance in 18x just removing a Linq code and using a cached solution to locate the opcodes.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-200-c0dab76d0.webp 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-400-c0dab76d0.webp 400w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-800-c0dab76d0.webp 800w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-1331-c0dab76d0.webp 1331w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-200-c0dab76d0.jpg 200w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-400-c0dab76d0.jpg 400w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-800-c0dab76d0.jpg 800w, /assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-1331-c0dab76d0.jpg 1331w" type="image/jpeg" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/10/28/arc-8-devlog-1/arc-8-core-benchmark-800-c0dab76d0.jpg" alt="post image" width="1331" height="239" />
</picture>

      </center>
<p><br /></p>

<h2 id="next-step">Next step</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png" alt="post image" width="128" height="128" />
</picture>

<p>In the next <a href="/tags/arc8-devlog">ARC-8 devlog</a> I will talk about the ARC-8’s implementation on Blazor.</p>

<p>If you have any doubts about what I talk about above or any tip about the CHIP-8 emulator and you like to share it, please let me know in the comments section below.</p>

<h2 id="further-reading">Further reading</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/programmer-128-6cef95d36.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/programmer-128-6cef95d36.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/programmer-128-6cef95d36.png" alt="post image" width="128" height="128" />
</picture>

<ul>
  <li><a href="http://mattmik.com/files/chip8/mastering/chip8.html">Mastering CHIP-8 by Matthew Mikolay</a></li>
  <li><a href="https://github.com/JohnEarnest/Octo">Octo: a high-level assembler for the CHIP-8</a></li>
  <li><a href="https://github.com/mwales/chip8">CHIP-8 Emulation and Disassembler</a></li>
  <li><a href="https://github.com/corax89/chip8-test-rom">CHIP-8 test rom</a></li>
  <li><a href="https://johnearnest.github.io/chip8Archive/">CHIP-8 Archive</a></li>
  <li><a href="https://github.com/dmatlack/chip8/tree/master/roms/games">CHIP-8 roms</a></li>
  <li><a href="https://github.com/coverlet-coverage/coverlet#Quick-Start">Coverlet quick-start</a></li>
  <li><a href="https://benchmarkdotnet.org/articles/guides/getting-started.html">BenchmarkDotNet getting started</a></li>
  <li><a href="https://cakebuild.net/docs/getting-started">Cake getting started</a></li>
</ul>

<p><br /><br /><br />Icons made by <a href="http://www.freepik.com">Freepik</a>, <a href="http://www.flaticon.com/authors/vignesh-oviyan">Vignesh Oviyan</a> and <a href="https://www.flaticon.com/authors/eucalyp" title="Eucalyp">Eucalyp</a> from <a href="http://www.flaticon.com">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons BY 3.0</a></p>]]></content><author><name></name></author><category term="Labs" /><category term="devlog" /><category term="dotnet" /><category term="blazor" /><category term="unity" /><category term="chip8" /><category term="emulator" /><category term="arc8" /><category term="arc8-devlog" /><summary type="html"><![CDATA[Some years ago I coded a CHIP-8 emulator in C# just for fun, that emulator was hibernating in a private repository that I never released. Some days ago I started to working on it again with the idea to release it running on Blazor and as a Unity asset where any game developer could drag its prefabs as easter eggs directly to their games.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Overview of .NET in Unity</title><link href="http://diegogiacomelli.com.br/unitytips-overview-of-donet-in-unity/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Overview of .NET in Unity" /><published>2020-10-27T00:00:00-03:00</published><updated>2020-10-27T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-overview-of-donet-in-unity</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-overview-of-donet-in-unity/"><![CDATA[<p>Unity Official documentation has an amazing page called <a href="https://docs.unity3d.com/Manual/overview-of-dot-net-in-unity.html">Overview of .NET in Unity</a> that highlight 8 points about the usage o .NET in Unity.</p>

<p>I think it’s important to any pro programmer in Unity quite understand those points, because of this I list them below, in a brief way. <strong>You can (and should) read the full documentation to understand all the 8 points listed in more depth</strong>.</p>

<h2 id="overview-of-net-in-unity">Overview of .NET in Unity</h2>
<p>Read the full documentation: <a href="https://docs.unity3d.com/Manual/overview-of-dot-net-in-unity.html">https://docs.unity3d.com/Manual/overview-of-dot-net-in-unity.html</a>.</p>

<h3 id="infographic">Infographic</h3>
<ul>
  <li>Download <a href="/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic.png">overview-of-donet-in-unity-infographic.png<a></a></a></li>
  <li>Download <a href="/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic.pdf">overview-of-donet-in-unity-infographic.pdf<a></a></a></li>
</ul>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-200-76d1c217b.webp 200w, /assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-400-76d1c217b.webp 400w, /assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-800-76d1c217b.webp 800w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-200-76d1c217b.png 200w, /assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-400-76d1c217b.png 400w, /assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-800-76d1c217b.png 800w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/10/27/unitytips-overview-of-donet-in-unity/overview-of-donet-in-unity-infographic-800-76d1c217b.png" alt="post image" width="800" height="2000" />
</picture>

      </center>
<p><br /></p>

<h3 id="scripting-backends">Scripting backends</h3>
<ul>
  <li>Mono uses just-in-time (JIT) compilation and compiles code on demand at runtime.</li>
  <li>IL2CPP uses ahead-of-time (AOT) compilation and compiles your entire application before it is run.</li>
</ul>

<h3 id="managed-code-stripping">Managed code stripping</h3>
<ul>
  <li>When you build your application, Unity scans the compiled assemblies (.DLLs) to detect and remove unused code.</li>
  <li>This process reduces the final binary size of your build, but increases build time.</li>
</ul>

<h3 id="garbage-collection-gc">Garbage collection (GC)</h3>
<ul>
  <li>Garbage collector only runs for a limited period of time and does not necessarily collect all objects in one pass. This spreads the time it takes to collect objects over a number of frames and reduces the amount of stuttering and CPU spikes.</li>
</ul>

<h3 id="net-system-libraries">.NET system libraries</h3>
<ul>
  <li>Unity tries its best to support as much of the .NET ecosystem as possible, there are some exceptions to parts of the .NET system libraries that Unity explicitly does not support.</li>
  <li>You should use the .NET Standard 2.0 API Compatibility Level for all new projects.</li>
</ul>

<h3 id="third-party-net-libraries">Third-party .NET libraries</h3>
<ul>
  <li>You should only use third-party .NET libraries that have been extensively tested on a wide range of Unity configurations and platforms.</li>
  <li>You should profile the usage of your .NET system libraries on all target platforms.</li>
</ul>

<h3 id="c-reflection-overhead">C# reflection overhead</h3>
<ul>
  <li>GC continuously scans the cached C# reflection objects, which causes unnecessary overhead.</li>
  <li>To minimize the overhead, avoid methods such as Assembly.GetTypes and Type.GetMethods().</li>
</ul>

<h3 id="unityengineobject-special-behavior">UnityEngine.Object special behavior</h3>
<ul>
  <li>UnityEngine.Object is a special type of C# object in Unity, because it is linked to a native C++ counterpart object.</li>
  <li>MonoBehaviour/ScriptableObject override the equality (==) and inequality (!=) operators.</li>
</ul>

<h3 id="avoid-using-async-and-await">Avoid using async and await</h3>
<ul>
  <li>The Unity API is not thread safe and therefore, you should not use async and await tasks.</li>
  <li>Async tasks often allocate objects when invoked, which might cause performance issues if you overuse them.</li>
</ul>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><category term="dotnet" /><category term="infographic" /><summary type="html"><![CDATA[Unity Official documentation has an amazing page called Overview of .NET in Unity that highlight 8 points about the usage o .NET in Unity.]]></summary></entry><entry><title type="html">Gamedev Utility Belt&amp;amp;colon; Unity Native Share Plugin</title><link href="http://diegogiacomelli.com.br/gamedev-utility-belt-unity-native-share-plugin/" rel="alternate" type="text/html" title="Gamedev Utility Belt&amp;amp;colon; Unity Native Share Plugin" /><published>2020-10-23T00:00:00-03:00</published><updated>2020-10-23T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/gamedev-utility-belt-unity-native-share-plugin</id><content type="html" xml:base="http://diegogiacomelli.com.br/gamedev-utility-belt-unity-native-share-plugin/"><![CDATA[<p>I decided to start a <a href="/tags/gamedev-utility-belt/">series of posts</a> about some game development resources that are part of my gamedev utility belt and that helps me on my game projects.</p>

<p>For this first post, the chosen one is the <strong><a href="https://github.com/yasirkula/UnityNativeShare">Unity Native Share Plugin</a></strong> by <a href="https://twitter.com/yasirkula">Süleyman Yasir KULA</a> that I used on my latest mobile game <a href="http://diegogiacomelli.com.br/games/puzzimals">Puzzimals</a>.</p>

<h2 id="introduction">Introduction</h2>
<p>Unity Native Share Plugin is:</p>
<blockquote>
  <p>A Unity plugin to natively share files (images, videos, documents, etc.) and/or plain text on Android &amp; iOS.</p>
</blockquote>

<p>When you use this plugin on the Android and iOS project you will be able to invoke the native share of the target operating system.
For example, here is the result when I used it on Android:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/23/gamedev-utility-belt-unity-native-share-plugin/unity-native-share-plugin-puzzimals-sample-200-f02b99f71.webp 200w, /assets/images/generated/assets/2020/10/23/gamedev-utility-belt-unity-native-share-plugin/unity-native-share-plugin-puzzimals-sample-360-f02b99f71.webp 360w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/23/gamedev-utility-belt-unity-native-share-plugin/unity-native-share-plugin-puzzimals-sample-200-f02b99f71.jpg 200w, /assets/images/generated/assets/2020/10/23/gamedev-utility-belt-unity-native-share-plugin/unity-native-share-plugin-puzzimals-sample-360-f02b99f71.jpg 360w" type="image/jpeg" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/10/23/gamedev-utility-belt-unity-native-share-plugin/unity-native-share-plugin-puzzimals-sample-360-f02b99f71.jpg" alt="post image" width="360" height="640" />
</picture>

      </center>
<p><br /></p>

<h2 id="installation">Installation</h2>
<p>You can follow the instructions on the plugin GitHub repository: <a href="https://github.com/yasirkula/UnityNativeShare#installation">https://github.com/yasirkula/UnityNativeShare</a> to install it:</p>

<ul>
  <li>Using .unitypackage</li>
  <li>Cloning the repository</li>
  <li>Via Asset Store</li>
  <li>Via Package Manager</li>
  <li>Using the OpenUPM</li>
</ul>

<h2 id="usage">Usage</h2>
<p>The plugin is quite simple to be used, there is an <a href="https://github.com/yasirkula/UnityNativeShare#example-code">example code on its repository</a> that show how you can use it with few lines of code.</p>

<p>Some time ago I made the gist below that uses the <code class="language-plaintext highlighter-rouge">Unity Native Share Plugin</code> to add a social share component to any game object:
<script src="https://gist.github.com/c03ec79fa0f0def94726f4b6914b4769.js?file=SocialShare.cs"> </script></p>
<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>]]></content><author><name></name></author><category term="Article" /><category term="puzzimals" /><category term="unity3d" /><category term="open-source" /><category term="gamedev" /><category term="mobile" /><category term="android" /><category term="gamedev-utility-belt" /><summary type="html"><![CDATA[I decided to start a series of posts about some game development resources that are part of my gamedev utility belt and that helps me on my game projects.]]></summary></entry><entry><title type="html">Unity Game Growth Program&amp;amp;colon; Tips &amp;amp; Tricks</title><link href="http://diegogiacomelli.com.br/unity-game-growth-program-tips-and-tricks/" rel="alternate" type="text/html" title="Unity Game Growth Program&amp;amp;colon; Tips &amp;amp; Tricks" /><published>2020-10-20T00:00:00-03:00</published><updated>2020-10-20T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-game-growth-program-tips-and-tricks</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-game-growth-program-tips-and-tricks/"><![CDATA[<p>In this post, I will list some tips and tricks that I learned while applying my game <a href="https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.puzzimals">Puzzimals</a> to the <a href="https://unity.com/solutions/mobile/game-growth-program">Unity Game Growth Program</a>.</p>

<h2 id="introduction">Introduction</h2>
<p>Unity has recently <a href="https://blogs.unity3d.com/2020/10/13/introducing-the-game-growth-program/">launch the Unity Game Growth Program</a> an accelerator program for free-to-play indie iOS/Android games made with Unity.</p>

<blockquote>
  <p>Game Growth is a new game accelerator for mobile indie developers. We partner with indie game devs so they can quickly and effectively scale their games while remaining 100% independent. Becoming a partner gives you access to user acquisition funding alongside industry-leading tools and experts in game operations. The best part? You keep full ownership of your studio and intellectual property.</p>
</blockquote>

<blockquote>
  <p>If you meet the criteria and we accept you into the program, Unity will fund user acquisition for your game and provide the technology and Unity experts to help manage player engagement and monetization. We take care of the process that helps grow your game while you concentrate on development.</p>
</blockquote>

<blockquote>
  <p>Game Growth is a revenue-sharing program – Unity and the developer team split the revenue from advertising and in-app purchases 50/50 after the user acquisition spend has been recouped. Put simply, Unity covers the cost of bringing in new players while we both share in the reward.</p>
</blockquote>

<p>You can read more about the program here:</p>
<ul>
  <li><a href="https://blogs.unity3d.com/2020/10/13/introducing-the-game-growth-program/">Introducing the Game Growth program</a></li>
  <li><a href="https://unity.com/solutions/mobile/game-growth-program">Game Growth Program</a></li>
</ul>

<h2 id="steps">Steps</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/route-128-704e92446.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/route-128-704e92446.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/route-128-704e92446.png" alt="post image" width="128" height="128" />
</picture>

<p>According to documentation, the Unity Game Growth Program works through 4 steps:</p>

<h3 id="submit-game--integrate-package">Submit Game &amp; Integrate Package</h3>
<blockquote>
  <p>Getting started is easy. All you need is a published free-to-play mobile game made with Unity. Begin your application by submitting your project, advertising assets, and installing the Game Growth package.</p>
</blockquote>

<h3 id="evaluation">Evaluation</h3>
<blockquote>
  <p>This stage determines if your game is a good candidate for the program. We take a look at your core game performance, project details and overall program fit. If everything looks good, Unity covers the cost of a full user acquisition test.</p>
</blockquote>

<h3 id="optimize-game-operations">Optimize Game Operations</h3>
<blockquote>
  <p>If you become a partner, we work with you to design features, integrate business services, and optimize player engagement and monetization. You will also have access to a dedicated game ops team that works with you every step of the way.</p>
</blockquote>

<h3 id="accelerate-your-game">Accelerate your Game</h3>
<blockquote>
  <p>Game Growth gives you access to the user acquisition funding and resources to take your game to the next level - with a 50/50 revenue sharing model. We acquire the right players then effectively manage those lifecycles and provide guidance for monetization.</p>
</blockquote>

<h2 id="requirements">Requirements</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/requirements-128-8b68e8c6b.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/requirements-128-8b68e8c6b.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/requirements-128-8b68e8c6b.png" alt="post image" width="128" height="128" />
</picture>

<p>There are 7 requirements that your game must meet to apply to the program:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">Made with Unity</code>: game must be made with Unity 2018.4 or later.</li>
  <li><code class="language-plaintext highlighter-rouge">Mobile Free-to Play</code>: game must be free-to-play on iOS or Android.</li>
  <li><code class="language-plaintext highlighter-rouge">Published Games</code>: game must be currently live and published on the Google Play or Apple App Store.</li>
  <li><code class="language-plaintext highlighter-rouge">Connected to Unity Dashboard</code>: game must be connected to the Unity Dashboard and have a valid project ID.</li>
  <li><code class="language-plaintext highlighter-rouge">Age Restrictions</code>: not accepting games aimed at audiences under 13 years of age.</li>
  <li><code class="language-plaintext highlighter-rouge">Advertising Assets</code>: submit images and videos for use in Unity ads.</li>
  <li><code class="language-plaintext highlighter-rouge">Language</code>: game must support English.</li>
</ul>

<div class="note"><p>More details at: <a href="https://dashboard.unity3d.com/">Unity Dashboard / Game Growth</a>.</p>
</div>

<h2 id="getting-started">Getting started</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/start-128-ea031347f.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/start-128-ea031347f.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/start-128-ea031347f.png" alt="post image" width="128" height="128" />
</picture>

<p>Is not the intent of this post cover everything about how to get through the Unity Game Growth Program, I guess this quite well documented on <a href="https://unity.com/solutions/mobile/game-growth-program">Unity Game Growth Program page</a>.</p>

<p>The idea of this post is focused on the first of the four-step: <code class="language-plaintext highlighter-rouge">Submit Game &amp; Integrate Package</code>.</p>

<h3 id="read-the-docs">Read the docs</h3>
<p>Please, if you did not read the official documentation yet, go to <a href="https://unity.com/solutions/mobile/game-growth-program">Game Growth Program page</a>, click in the <code class="language-plaintext highlighter-rouge">Apply</code> button and follow the instructions</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-200-ee7227d70.webp 200w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-400-ee7227d70.webp 400w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-800-ee7227d70.webp 800w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-805-ee7227d70.webp 805w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-200-ee7227d70.png 200w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-400-ee7227d70.png 400w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-800-ee7227d70.png 800w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-805-ee7227d70.png 805w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-apply-800-ee7227d70.png" alt="post image" width="805" height="170" />
</picture>

      </center>
<p><br /></p>

<p>After you finish the <code class="language-plaintext highlighter-rouge">6 - Confirm</code> come back here. You’ll better understand this post and tips &amp; tricks after that.</p>

<h2 id="submit-game--integrate-package-1">Submit Game &amp; Integrate Package</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/package-128-f3193c47c.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/package-128-f3193c47c.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/package-128-f3193c47c.png" alt="post image" width="128" height="128" />
</picture>

<p>The <code class="language-plaintext highlighter-rouge">Submit Game &amp; Integrate Package</code> step is divided into 3 sub-steps:</p>
<ul>
  <li>Download and Install Package</li>
  <li>Run &amp; Validate Integration</li>
  <li>Publish &amp; Validate Integration</li>
</ul>

<h2 id="download-and-install-package">Download and Install Package</h2>
<blockquote>
  <p>Download the Game Growth package and integrate it into your project. Once installed, refer to the package documentation for next steps.</p>
</blockquote>

<p>You need to download the package through the <code class="language-plaintext highlighter-rouge">Download Package</code>, then in Unity, open the <code class="language-plaintext highlighter-rouge">Package Manager</code> window install it from the <code class="language-plaintext highlighter-rouge">tarball</code> option.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-package-manager-tarball-200-35c02476c.webp 200w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-package-manager-tarball-200-35c02476c.png 200w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-package-manager-tarball-200-35c02476c.png" alt="post image" width="200" height="102" />
</picture>

      </center>
<p><br /></p>

<div class="note"><p>if you are using Unity version previous 2019.4, you need to use the option <code class="language-plaintext highlighter-rouge">Add package from disk</code></p>
</div>

<h3 id="tip--trick">Tip &amp; Trick</h3>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/tip-128-d93c80d98.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/tip-128-d93c80d98.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/tip-128-d93c80d98.png" alt="post image" width="128" height="128" />
</picture>

<p>After installing the package, if your using <code class="language-plaintext highlighter-rouge">UnityEngine.Purchasing</code> in your project and you use <a href="https://docs.unity3d.com/Manual/ScriptCompilationAssemblyDefinitionFiles.html">Assembly Definitions</a> too you can see a lot of errors in the console about it, like <code class="language-plaintext highlighter-rouge">error CS0246: The type or namespace name 'IStoreController' could not be found (are you missing a using directive or an assembly reference?)</code></p>

<p>To fix it, just reference again the <code class="language-plaintext highlighter-rouge">UnityEngine.Purchasing</code> on the <code class="language-plaintext highlighter-rouge">Assembly Definition references</code>:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-assembly-definition-references-200-dcdbf7a02.webp 200w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-assembly-definition-references-369-dcdbf7a02.webp 369w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-assembly-definition-references-200-dcdbf7a02.png 200w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-assembly-definition-references-369-dcdbf7a02.png 369w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-assembly-definition-references-369-dcdbf7a02.png" alt="post image" width="369" height="76" />
</picture>

      </center>
<p><br /></p>

<h3 id="easy-on-boarding">Easy On-Boarding</h3>
<p>Now, open the menu <code class="language-plaintext highlighter-rouge">Game Growth / Easy onboarding</code> and follow the steps.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-eash-on-boarding-200-57c9a0919.webp 200w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-eash-on-boarding-400-57c9a0919.webp 400w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-eash-on-boarding-770-57c9a0919.webp 770w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-eash-on-boarding-200-57c9a0919.png 200w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-eash-on-boarding-400-57c9a0919.png 400w, /assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-eash-on-boarding-770-57c9a0919.png 770w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/10/20/unity-game-growth-program-tips-and-tricks/unity-game-growth-eash-on-boarding-770-57c9a0919.png" alt="post image" width="770" height="530" />
</picture>

      </center>
<p><br /></p>

<h2 id="run--validate-integration">Run &amp; Validate Integration</h2>
<blockquote>
  <p>After the package has been installed and configured for sandbox, run your game on the devices . To confirm integration, make sure you remove the game from your device, reinstall, and then launch the game.</p>
</blockquote>

<p>Build, install, and run the game on your target device (iOS / Android).
Then go to Unity Dashboard and try to confirm the <code class="language-plaintext highlighter-rouge">Run &amp; Validate integration</code>, this can take minutes or even hours to allow you to confirm successfully.</p>

<h3 id="tip--trick-1">Tip &amp; Trick</h3>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/tip-128-d93c80d98.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/tip-128-d93c80d98.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/tip-128-d93c80d98.png" alt="post image" width="128" height="128" />
</picture>

<p>Running the shell <code class="language-plaintext highlighter-rouge">./adb logcat -s Unity PackageManager dalvikvm DEBUG</code> while running the game on an Android device I saw errors like this on the game log:</p>

<p><code class="language-plaintext highlighter-rouge">UriFormatException: Invalid URI: The hostname could not be parsed
at DeltaDNA.Network+&lt;SendRequest&gt;
[DDSDK] [WARNING] Event upload failed - try again later</code></p>

<p>I found out that the <code class="language-plaintext highlighter-rouge">collect_url</code> and <code class="language-plaintext highlighter-rouge">engagement_url</code> in the <code class="language-plaintext highlighter-rouge">/Assets/DeltaDNA/Resources/ddna_configuration.xml</code> file were empty and this was an error cause.</p>

<p>To fix it, I had to go to the <code class="language-plaintext highlighter-rouge">Game Growth / Configuration</code> menu, then click on the <code class="language-plaintext highlighter-rouge">Configure SDKs</code> button, so <code class="language-plaintext highlighter-rouge">collect_url</code> and <code class="language-plaintext highlighter-rouge">engagement_url</code> were correctly configured in the file.</p>

<h2 id="publish--validate-integration">Publish &amp; Validate Integration</h2>
<blockquote>
  <p>The final step is to publish your project on the Apple App Store and Google Play Store. Don’t forget to switch the package environment dropdown from Sandbox to Store in GGLauncher prefab. Run your game on the devices.</p>
</blockquote>

<p>Build and publish the game to the store (App Store or Google Play), download/update the game and run it on your device.
Then go to Unity Dashboard again and try to confirm the <code class="language-plaintext highlighter-rouge">Publish &amp; Validate integration</code>, this can take minutes or even hours to allow you to confirm successfully.</p>

<h2 id="conclusion">Conclusion</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png" alt="post image" width="128" height="128" />
</picture>

<p>I hope that these tips and tricks that I learned while applying my game <a href="https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.puzzimals">Puzzimals</a> to the <a href="https://unity.com/solutions/mobile/game-growth-program">Unity Game Growth Program</a> can be useful to you too.</p>

<p>If you have any other tips &amp; tricks you use on the Unity Game Growth Program process and you like to share it, please let me know in the comments section below.</p>]]></content><author><name></name></author><category term="Tutorial" /><category term="puzzimals" /><category term="unity3d" /><category term="gamedev" /><category term="android" /><category term="self-publishing" /><category term="unity-game-growth-program" /><summary type="html"><![CDATA[In this post, I will list some tips and tricks that I learned while applying my game Puzzimals to the Unity Game Growth Program.]]></summary></entry><entry><title type="html">OWASP ZAP Path Traversal and ASP .NET&amp;amp;colon; Notes</title><link href="http://diegogiacomelli.com.br/owasp-zap-path-traversal-and-asp-dotnet-notes/" rel="alternate" type="text/html" title="OWASP ZAP Path Traversal and ASP .NET&amp;amp;colon; Notes" /><published>2020-10-15T00:00:00-03:00</published><updated>2020-10-15T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/owasp-zap-path-traversal-and-asp-dotnet-notes</id><content type="html" xml:base="http://diegogiacomelli.com.br/owasp-zap-path-traversal-and-asp-dotnet-notes/"><![CDATA[<p>In this post, I wrote some notes of my experience trying to understand the alerts about the <a href="https://owasp.org/www-community/attacks/Path_Traversal">Path Traversal</a> attack while running <a href="https://www.zaproxy.org/">OWASP ZAP</a> against an ASP .NET project.</p>

<h2 id="owasp-zap">OWASP ZAP</h2>
<p>OWASP ZAP (short for Zed Attack Proxy) is an open-source web application security scanner. It is intended to be used by both those new to application security as well as professional penetration testers.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-200-bda195394.webp 200w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-400-bda195394.webp 400w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-800-bda195394.webp 800w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-1032-bda195394.webp 1032w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-200-bda195394.png 200w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-400-bda195394.png 400w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-800-bda195394.png 800w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-1032-bda195394.png 1032w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-main-screen-800-bda195394.png" alt="post image" width="1032" height="641" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>More at <a href="https://owasp.org/www-project-zap/">https://owasp.org/www-project-zap/</a></p>
</span></center>
<p><br /></p>

<h2 id="path-traversal">Path Traversal</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-path-traversal-alert-200-f835e0ab6.webp 200w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-path-traversal-alert-400-f835e0ab6.webp 400w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-path-traversal-alert-495-f835e0ab6.webp 495w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-path-traversal-alert-200-f835e0ab6.png 200w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-path-traversal-alert-400-f835e0ab6.png 400w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-path-traversal-alert-495-f835e0ab6.png 495w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-path-traversal-alert-495-f835e0ab6.png" alt="post image" width="495" height="167" />
</picture>

      </center>
<p><br /></p>

<p>As the <a href="https://owasp.org/www-community/attacks/Path_Traversal">Path Traversal alert documentation</a> explains:</p>
<blockquote>
  <p>A path traversal attack (also known as directory traversal) aims to access files and directories that are stored outside the web root folder. By manipulating variables that reference files with “dot-dot-slash (../)” sequences and its variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system including application source code or configuration and critical system files.</p>
</blockquote>

<p>The most common way to use this kind of attack in ASP .NET applications is trying to download some configuration files, like the <code class="language-plaintext highlighter-rouge">web.config</code> file, from the server file system. By default, the IIS handlers will not allow download this kind of file.</p>

<h2 id="validating-user-input">Validating user input</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/programmer-128-6cef95d36.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/programmer-128-6cef95d36.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/programmer-128-6cef95d36.png" alt="post image" width="128" height="128" />
</picture>

<p>It is good practice (mandatory in fact) to validate user input, especially on routes/actions where there is some kind of access to the file system.</p>

<p>OWASP ZAP docs say:</p>
<blockquote>
  <p>Validate the user’s input by only accepting known good – do not sanitize the data</p>
</blockquote>

<h3 id="modelstateisvalid">ModelState.IsValid</h3>
<p>An easy way to perform a basic user input validation is to use the ModelState.IsValid, this property will always be false if any data sent by the client has an invalid or unexpected value. This is a good way to only accepted the expected type for model properties.</p>

<blockquote>
  <p>Model state represents errors that come from two subsystems: model binding and model validation. Errors that originate from model binding are generally data conversion errors. For example, an “x” is entered in an integer field. Model validation occurs after model binding and reports errors where data doesn’t conform to business rules. For example, a 0 is entered in a field that expects a rating between 1 and 5.</p>
</blockquote>

<p>A way that you can extend and either improve the validation is using the <a href="https://docs.microsoft.com/en-us/aspnet/core/mvc/models/validation?view=aspnetcore-3.1#validation-attributes">Validation attributes</a>, like CreditCard, Compare, EmailAddress, Phone, Range, RegularExpression, Required, StringLength, Url, and Remote,</p>

<h3 id="validatemodelattribute">ValidateModelAttribute</h3>
<p>You can even use a custom <code class="language-plaintext highlighter-rouge">ActionFilterAttribute</code> to validate all your action models like the MS official documentation suggest: <a href="https://docs.microsoft.com/en-us/aspnet/web-api/overview/formats-and-model-binding/model-validation-in-aspnet-web-api#handling-validation-errors">Model Validation in ASP.NET Web API</a>.</p>

<script src="https://gist.github.com/8ebd55525bc250095e95db2eb5712aca.js?file=ValidateModelAttribute.cs"> </script>

<p>And use it on WebApiConfig:
<script src="https://gist.github.com/8ebd55525bc250095e95db2eb5712aca.js?file=WebApiConfig.cs"> </script></p>

<p>Does not matter if you will use Validation attributes or another validation way, the important thing here is <code class="language-plaintext highlighter-rouge">you should always validate the user input before use it</code>.</p>

<h2 id="check-all-file-system-handling-actions">Check all file system handling actions</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/telescope-128-e0357d1e6.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/telescope-128-e0357d1e6.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/telescope-128-e0357d1e6.png" alt="post image" width="128" height="128" />
</picture>

<p>If you have any action on your API that lets the user define a file system path, be sure to validate if it not passing strings like <code class="language-plaintext highlighter-rouge">../</code> or <code class="language-plaintext highlighter-rouge">..\</code>. If you not validate inputs like this, you can allow an attacker to navigate on your app file system, even the host machine file system.</p>

<p>OWASP ZAP docs say:</p>
<blockquote>
  <p>Ensure the user cannot supply all parts of the path – surround it with your path code</p>
</blockquote>

<h2 id="false-positives">False Positives</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/problem-128-a3f91d933.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/problem-128-a3f91d933.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/problem-128-a3f91d933.png" alt="post image" width="128" height="128" />
</picture>

<p>OWASP ZAP can report some false positives, especially for routes that have an argument with the same name of the action: <code class="language-plaintext highlighter-rouge">https://localhost:8080/api/tests/test1?kind=test1</code></p>

<p>This happens because OWASP ZAP tries to use action name in all arguments in an attempt to see if can access a different resource or file.</p>

<p>In my case, all reports like this were false positives.</p>

<p>You can change the risk alert to <code class="language-plaintext highlighter-rouge">False Positive</code> for each URL in the context alert filters:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-200-d561dca0a.webp 200w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-400-d561dca0a.webp 400w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-800-d561dca0a.webp 800w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-1029-d561dca0a.webp 1029w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-200-d561dca0a.png 200w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-400-d561dca0a.png 400w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-800-d561dca0a.png 800w, /assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-1029-d561dca0a.png 1029w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/10/15/owasp-zap-path-traversal-and-asp-dotnet-notes/owasp-zap-alert-false-positive-800-d561dca0a.png" alt="post image" width="1029" height="640" />
</picture>

      </center>
<p><br /></p>

<div class="note"><p>Remember: only mark an alert as false positive after had to validate that URL action code and you are certain that is a false positive</p>
</div>

<h2 id="conclusion">Conclusion</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png" alt="post image" width="128" height="128" />
</picture>

<p>In most cases ASP .NET Web APIs/Apps are not exposed to a Path Traversal attack, but a poor user input validation in file system handling action can easily expose the whole API/APP.</p>

<p>These are the basic rules of OWASP ZAP documents:</p>

<h3 id="how-to-identify-if-you-are-vulnerable">How to identify if you are vulnerable</h3>
<ul>
  <li>Be sure you understand how the underlying operating system will process filenames handed off to it.</li>
  <li>Don’t store sensitive configuration files inside the web root</li>
  <li>For Windows IIS servers, the web root should not be on the system disk, to prevent recursive traversal back to system directories.</li>
</ul>

<h3 id="how-to-protect-yourself">How to protect yourself</h3>
<ul>
  <li>Prefer working without user input when using file system calls</li>
  <li>Use indexes rather than actual portions of file names when templating or using language files (ie value 5 from the user submission = Czechoslovakian, rather than expecting the user to return “Czechoslovakian”)</li>
  <li>Ensure the user cannot supply all parts of the path – surround it with your path code</li>
  <li>Validate the user’s input by only accepting known good – do not sanitize the data</li>
  <li>Use chrooted jails and code access policies to restrict where the files can be obtained or saved to</li>
  <li>If forced to use user input for file operations, normalize the input before using in file io API’s, such as normalize().</li>
</ul>

<p><br /><br /><br />Icons made by <a href="http://www.freepik.com">Freepik</a>, <a href="http://www.flaticon.com/authors/vignesh-oviyan">Vignesh Oviyan</a> and <a href="https://www.flaticon.com/authors/eucalyp" title="Eucalyp">Eucalyp</a> from <a href="http://www.flaticon.com">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons BY 3.0</a></p>]]></content><author><name></name></author><category term="Tutorial" /><category term="aspdotnet" /><category term="dotnet" /><category term="security" /><category term="owasp" /><summary type="html"><![CDATA[In this post, I wrote some notes of my experience trying to understand the alerts about the Path Traversal attack while running OWASP ZAP against an ASP .NET project.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Sprites Collection</title><link href="http://diegogiacomelli.com.br/unitytips-sprites-collection/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Sprites Collection" /><published>2020-10-13T00:00:00-03:00</published><updated>2020-10-13T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-sprites-collection</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-sprites-collection/"><![CDATA[<p>Sometimes we have related sprites that can be used in a prefab, like sprites for the environment, props, and scenario. Would be cool if we can easily swap them directly on the prefab without need to find and set the sprite directly in the SpriteRenderer component?</p>

<center>
        <iframe src="https://www.youtube.com/embed/TJ-Ou9YMFdA " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="spritescollection-component">SpritesCollection component</h2>
<p>I created this <code class="language-plaintext highlighter-rouge">SpritesCollection</code> component that allows us to define a collection of sprites to a prefab/GameObject and then easily swap between the sprites available.</p>

<h3 id="source-code">Source code</h3>
<script src="https://gist.github.com/d5d7c720eb910d00a5a3e217b5f95fff.js?file=SpritesCollection.cs"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>

<div class="note"><p>I strongly recommend that you use the <code class="language-plaintext highlighter-rouge">Gist Importer</code> to import this gist to your project, but if want to import it manually, just access <a href="https://gist.github.com/giacomelli/d5d7c720eb910d00a5a3e217b5f95fff">the gist</a> and add all .cs files to any folder on your Unity project, except the <code class="language-plaintext highlighter-rouge">SpritesCollectionEditor.cs</code>, this one should be added to an <code class="language-plaintext highlighter-rouge">Editor</code> folder.</p>
</div>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><summary type="html"><![CDATA[Sometimes we have related sprites that can be used in a prefab, like sprites for the environment, props, and scenario. Would be cool if we can easily swap them directly on the prefab without need to find and set the sprite directly in the SpriteRenderer component?]]></summary></entry><entry><title type="html">Triangle Classifier Made With Unity</title><link href="http://diegogiacomelli.com.br/triangle-classifier-made-with-unity/" rel="alternate" type="text/html" title="Triangle Classifier Made With Unity" /><published>2020-09-24T00:00:00-03:00</published><updated>2020-09-24T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/triangle-classifier-made-with-unity</id><content type="html" xml:base="http://diegogiacomelli.com.br/triangle-classifier-made-with-unity/"><![CDATA[<p>These days were studying polygons and thought that would be cool build a triangle classifier to help people learn and teach about types of triangle.</p>

<h2 id="types-of-triangle">Types of triangle</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/project-128-4f597ed4f.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/project-128-4f597ed4f.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/project-128-4f597ed4f.png" alt="post image" width="128" height="128" />
</picture>

<p>Triangles can be classified <a href="https://en.wikipedia.org/wiki/Triangle#Types_of_triangle">by lengths of sides and by internal angles</a>.</p>

<h3 id="by-lengths-of-sides">By lengths of sides</h3>
<ul>
  <li><a href="https://en.wikipedia.org/wiki/Equilateral_triangle">Equilateral</a>: all three sides have the same length.</li>
  <li><a href="https://en.wikipedia.org/wiki/Isosceles_triangle">Isosceles</a>: has two sides of equal length.</li>
  <li>Scalene: has all its sides of different lengths.</li>
</ul>

<h3 id="by-internal-angles">By internal angles</h3>
<ul>
  <li><a href="https://en.wikipedia.org/wiki/Right_triangle">Right</a>: has one of its interior angles measuring 90°.</li>
  <li><a href="https://en.wikipedia.org/wiki/Oblique_triangle">Oblique</a>: do not have an angle measuring 90°.</li>
  <li><a href="https://en.wikipedia.org/wiki/Acute_triangle">Acute</a>: with all interior angles measuring less than 90°.</li>
  <li><a href="https://en.wikipedia.org/wiki/Obtuse_triangle">Obtuse</a>: with one interior angle measuring more than 90°.</li>
</ul>

<h2 id="triangle-classifier">Triangle Classifier</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/podium-128-f9f44969b.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/podium-128-f9f44969b.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/podium-128-f9f44969b.png" alt="post image" width="128" height="128" />
</picture>

<p>Below you can use the Triangle Classifier that I made with Unity.</p>

<h3 id="instructions">Instructions</h3>
<ul>
  <li>You can move any of the 3 vertices (A, B, C)</li>
  <li>The vertices positions can be changed too from the inputs on the top of the screen.</li>
  <li>Each time that any vertices are updated you can see the types of the triangle be updated in the top message.</li>
</ul>

<iframe src="/apps/triangle-classifier/index.html" style="width: 100%;min-height: 700px;"></iframe>

<p><br /><br /><br />Icons made by <a href="http://www.freepik.com">Freepik</a>, <a href="http://www.flaticon.com/authors/vignesh-oviyan">Vignesh Oviyan</a> and <a href="https://www.flaticon.com/authors/eucalyp" title="Eucalyp">Eucalyp</a> from <a href="http://www.flaticon.com">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons BY 3.0</a></p>

<p>The font and the vertice sprite used are from <a href="http://kenney.nl">Kenney</a>.</p>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="gamedev" /><category term="math" /><category term="webgl" /><summary type="html"><![CDATA[These days were studying polygons and thought that would be cool build a triangle classifier to help people learn and teach about types of triangle.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; ShadowCaster2DFromCollider Component</title><link href="http://diegogiacomelli.com.br/unitytips-shadowcaster2-from-collider-component/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; ShadowCaster2DFromCollider Component" /><published>2020-09-21T00:00:00-03:00</published><updated>2020-09-21T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-shadowcaster2-from-collider-component</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-shadowcaster2-from-collider-component/"><![CDATA[<p>If you try to use a <a href="https://docs.unity3d.com/Packages/com.unity.render-pipelines.universal@7.1/manual/2DShadows.html">ShadowCaster2D</a> in a <a href="https://docs.unity3d.com/Packages/com.unity.2d.spriteshape@3.0/manual/index.html">SpriteShape</a> the shadow produced will have a box form, no matter the form of your SpriteShape.</p>

<p>This happens because <code class="language-plaintext highlighter-rouge">ShadowCaster2D</code> does not update its internal shape according to the <code class="language-plaintext highlighter-rouge">SpriteShape's</code> form.</p>

<h2 id="shadowcaster2dfromcollider-component">ShadowCaster2DFromCollider component</h2>
<p>I created this script to help to have <strong>SpriteShape with ShadowCaster2D casting right shadows</strong>.<br />
To use it you need to add a <a href="https://docs.unity3d.com/ScriptReference/PolygonCollider2D.html">PolygonCollider2D</a> or an <a href="https://docs.unity3d.com/Manual/class-EdgeCollider2D.html">EdgeCollider2D</a> to your <code class="language-plaintext highlighter-rouge">SpriteShape's</code> gameobject and then add the <code class="language-plaintext highlighter-rouge">ShadowCaster2DFromCollider</code> component to the same gameobject.</p>

<p>Below you can see a video showing a scene with some SpriteShapes before and after applying the ShadowCaster2DFromCollider component.</p>
<center>
        <iframe src="https://www.youtube.com/embed/m8nnTek5U0Y " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="source-code">Source code</h2>
<script src="https://gist.github.com/c208e20ecf75a77e0833f4c7671a0052.js"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>

<div class="note"><p>This solution was based on this Unity Forum post: https://forum.unity.com/threads/can-2d-shadow-caster-use-current-sprite-silhouette.861256</p>
</div>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><summary type="html"><![CDATA[If you try to use a ShadowCaster2D in a SpriteShape the shadow produced will have a box form, no matter the form of your SpriteShape.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Editor Coroutines</title><link href="http://diegogiacomelli.com.br/unitytips-editor-coroutines/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Editor Coroutines" /><published>2020-09-15T00:00:00-03:00</published><updated>2020-09-15T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-editor-coroutines</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-editor-coroutines/"><![CDATA[<p>Recently, I was doing a small experiment trying to run an <a href="https://en.wikipedia.org/wiki/CHIP-8">CHIP-8</a> emulator inside the Unity Editor inspector window and for that I needed to update from times to time the inspector.</p>

<p>Initially I tried to use <code class="language-plaintext highlighter-rouge">EditorApplication.update</code>, but as it is only called when something changes in the inspector, it ended up not serving this purpose.</p>

<p>It was then that I discovered this official Unity package: <a href="https://docs.unity3d.com/Packages/com.unity.editorcoroutines@0.0/manual/index.html">Editor Coroutines</a></p>

<blockquote>
  <p>The Editor Coroutines package allows the user to start the execution of iterator methods within the Editor similar to how we handle Coroutines inside MonoBehaviour scripts during runtime.</p>
</blockquote>

<h2 id="usage">Usage</h2>
<p>At this time we cannot use any of the yield classes present inside the Unity Scripting API, like WaitForSeconds and WaitForEndOfFrame, except for the CustomYieldInstruction.</p>

<p>However, there is a specific yielding class for wait seconds on Editor: <a href="https://docs.unity3d.com/Packages/com.unity.editorcoroutines@0.0/api/Unity.EditorCoroutines.Editor.EditorWaitForSeconds.html">EditorWaitForSeconds</a></p>

<p>In my case, I used the <code class="language-plaintext highlighter-rouge">yield return null</code> to skip a frame within the Editor and get the refresh rate that I would like.</p>

<script src="https://gist.github.com/96086201cb5cc512ce7a15a02ebcf29a.js"> </script>

<center>                
        <img class="screenshot" src="/assets/2020/09/15/unitytips-editor-coroutines/chip-8-inside-unity-editor.gif " alt="post image" />
      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>The result of using the <code class="language-plaintext highlighter-rouge">EditorCoroutineUtility.StartCoroutine</code></p>
</span></center>
<p><br /></p>

<p><br /></p>
<div class="note"><p>More details in the official documentation: <a href="https://docs.unity3d.com/Packages/com.unity.editorcoroutines@0.0/api/Unity.EditorCoroutines.Editor.EditorCoroutineUtility.html">Editor Coroutines</a></p>
</div>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><summary type="html"><![CDATA[Recently, I was doing a small experiment trying to run an CHIP-8 emulator inside the Unity Editor inspector window and for that I needed to update from times to time the inspector.]]></summary></entry><entry><title type="html">Using Gulp for Chrome Extension development workflow</title><link href="http://diegogiacomelli.com.br/using-gulp-for-chrome-extension-dev-workflow/" rel="alternate" type="text/html" title="Using Gulp for Chrome Extension development workflow" /><published>2020-09-11T00:00:00-03:00</published><updated>2020-09-11T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/using-gulp-for-chrome-extension-dev-workflow</id><content type="html" xml:base="http://diegogiacomelli.com.br/using-gulp-for-chrome-extension-dev-workflow/"><![CDATA[<p>In this tutorial, we will learn how to create a development workflow for a Chrome extension, with different configurations and manifest.json for each environment, like DEV, TEST, and PROD.</p>

<h2 id="introduction">Introduction</h2>
<p>A few months ago we built a Chrome Extension to a customer to allow users to capture Netflix captions and sent them to the customer web site to study them later.</p>

<p>While we were developing it we needed to change some configurations on the extension to use different URLs of our API depending on what environment the Chrome Extension was using, like DEV (local), TEST, and Production.</p>

<h2 id="chrome-extension">Chrome Extension</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/chrome-extension-200-209699985.webp 200w, /assets/images/generated/assets/logos/chrome-extension-400-209699985.webp 400w, /assets/images/generated/assets/logos/chrome-extension-496-209699985.webp 496w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/chrome-extension-200-209699985.png 200w, /assets/images/generated/assets/logos/chrome-extension-400-209699985.png 400w, /assets/images/generated/assets/logos/chrome-extension-496-209699985.png 496w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/chrome-extension-496-209699985.png" alt="post image" width="496" height="150" />
</picture>

<p>For this tutorial, I’ll use a Chrome Extension basic sample called <code class="language-plaintext highlighter-rouge">Hello Extensions</code>.<br /> 
You can download it from this page <a href="https://developer.chrome.com/extensions/samples">https://developer.chrome.com/extensions/samples</a> or directly from <a href="https://developer.chrome.com/extensions/examples/tutorials/hello_extensions.zip">here</a>.
<br /><br /><br /><br /></p>
<div class="note"><p>Is not the intent of this tutorial explains how to create a Chrome Extension from scratch, for this you can use the official documentation: <a href="https://developer.chrome.com/extensions/getstarted">Getting Started Tutorial</a></p>
</div>

<h2 id="gulp">Gulp</h2>
<p><img class="icon" src="/assets/logos/gulp.svg " alt="post image" />
At that time we did not find any builtin or other solution to make this workflow easier and streamlined, so we decided to create our own solution using <code class="language-plaintext highlighter-rouge">Gulp</code>. This whole solution will be explaining below.
<br /><br /><br /><br /><br /></p>
<blockquote>
  <p>gulp is an open-source JavaScript toolkit created by Eric Schoffstall used as a streaming build system in front-end web development.</p>
</blockquote>

<p>We decided to use <code class="language-plaintext highlighter-rouge">gulp</code>, because a Chrome Extensions is a bunch of .js, .html and .json files. Perfect to use gulp.</p>

<h2 id="the-problem">The problem</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/problem-128-a3f91d933.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/problem-128-a3f91d933.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/problem-128-a3f91d933.png" alt="post image" width="128" height="128" />
</picture>

<p>If we just try to open our download <code class="language-plaintext highlighter-rouge">Hello Extension</code> .zip file or the opened folder directly on the Chrome extensions page, it will work and you see the extension’s icon in the toolbar.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/basic-sample-chrome-extension-113-f70b16101.webp 113w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/basic-sample-chrome-extension-113-f70b16101.png 113w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/basic-sample-chrome-extension-113-f70b16101.png" alt="post image" width="113" height="145" />
</picture>

      </center>
<p><br /></p>

<p>This is not a problem if you have only one environment or if you don’t need different configurations for different environments, but as I’ve already explained, we needed different configs for different environments.</p>

<p>To the purpose of this tutorial we will work with 3 environments: DEV, TEST, and PROD and will use our configuration file just to change our plugin <code class="language-plaintext highlighter-rouge">hello.html</code> text:</p>

<ul>
  <li>DEV: Hello, World! (DEV)</li>
  <li>TEST: Hello, World! (TEST)</li>
  <li>PROD: Hello, World!</li>
</ul>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-200-3afbb65ab.webp 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-336-3afbb65ab.webp 336w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-200-3afbb65ab.png 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-336-3afbb65ab.png 336w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-336-3afbb65ab.png" alt="post image" width="336" height="167" />
</picture>

      </center>
<p><br /></p>

<h2 id="files-structure">Files structure</h2>
<p>Move the <code class="language-plaintext highlighter-rouge">Hello Extensions</code> files to a subfolder called <code class="language-plaintext highlighter-rouge">src</code>.
At the end of this tutorial, our files structure will look like this:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/files-structure-200-484bbc2a8.webp 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/files-structure-202-484bbc2a8.webp 202w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/files-structure-200-484bbc2a8.png 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/files-structure-202-484bbc2a8.png 202w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/files-structure-202-484bbc2a8.png" alt="post image" width="202" height="142" />
</picture>

      </center>
<p><br /></p>

<div class="note"><p>If have any doubt about the files structure during this tutorial, you can download the full solution in section <code class="language-plaintext highlighter-rouge">Download</code> at the end of the tutorial</p>
</div>

<h2 id="installing-gulp">Installing gulp</h2>
<p>To allow us to build our workflow, first, we need to install gulp.</p>

<p>Follow the instructions described in <a href="https://gulpjs.com/docs/en/getting-started/quick-start/">Quick Start</a>.</p>
<div class="note"><p>In the section <code class="language-plaintext highlighter-rouge">Create a project directory and navigate into it</code> you just need to open the root folder of our file structure described in the previous section</p>
</div>
<div class="note"><p>In the section <code class="language-plaintext highlighter-rouge">Create a package.json file in your project directory</code> you can use the default values for all the questions of the <code class="language-plaintext highlighter-rouge">npm init</code></p>
</div>
<div class="note"><p>You don’t need to perform the section <code class="language-plaintext highlighter-rouge">Create a gulpfile</code>, because we will perform it in the next section.</p>
</div>

<h2 id="the-gulpfilejs-file">The gulpfile.js file</h2>
<p>Create a file called <code class="language-plaintext highlighter-rouge">gulpfile.js</code> in the root folder.</p>

<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=gulpfile.js"> </script>

<p>This is the full <code class="language-plaintext highlighter-rouge">gulpfile.js</code> file that will allow our development workflow for different environments.<br /></p>

<h2 id="the-gulpfilejs-sections">The gulpfile.js sections</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/project-128-4f597ed4f.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/project-128-4f597ed4f.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/project-128-4f597ed4f.png" alt="post image" width="128" height="128" />
</picture>

<p>Now I will explain each section of it.
<br /><br /><br /><br /><br /><br /></p>

<h3 id="requires-section">Requires section</h3>
<p>This section define the NPM packages need for our <code class="language-plaintext highlighter-rouge">gulpfile.js</code>.
<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=requires.section.js"> </script></p>

<p>The first one is <a href="https://www.npmjs.com/package/gulp">gulp</a>, then we need the package <a href="">del</a> that will allow us to clean our <code class="language-plaintext highlighter-rouge">dist</code> folder, 
after <a href="https://www.npmjs.com/package/gulp-merge-json">gulp-merge-json</a> to allow us to merge our environment config files. The last one is <a href="https://www.npmjs.com/package/fs">fs</a> to allow read and write files.</p>

<h3 id="consts-section">Consts section</h3>
<p>This is quite simple, we are just reading the command-line argument called <code class="language-plaintext highlighter-rouge">config</code>. If it is not present, the default value is <code class="language-plaintext highlighter-rouge">DEV</code>. 
<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=consts.section.js"> </script></p>

<h3 id="exports-section">Exports section</h3>
<p>Now we jump to the last line of the file to explain the <code class="language-plaintext highlighter-rouge">exports.default</code>. 
Here we are basically defining the order of each function that will be called when we run our <code class="language-plaintext highlighter-rouge">gulpfile.js</code> file:
<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=exports.section.js"> </script></p>

<h3 id="clean-section">Clean section</h3>
<p>Cleans our <code class="language-plaintext highlighter-rouge">dist</code> folder.
<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=clean.section.js"> </script></p>

<h3 id="copyallfiles-section">CopyAllFiles section</h3>
<p>Copies all files from <code class="language-plaintext highlighter-rouge">src</code> folder to the <code class="language-plaintext highlighter-rouge">dist</code> folder
<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=copyAllFiles.section.js"> </script></p>

<h3 id="transformconfig-section">TransformConfig section</h3>
<p>Transforms our config.json files, merging the source one with the <code class="language-plaintext highlighter-rouge">environment</code> one.
<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=transformConfig.section.js"> </script></p>

<h3 id="writeconfigjsfile-section">WriteConfigJsFile section</h3>
<p>Writes our transformed <code class="language-plaintext highlighter-rouge">config.json</code> file to the <code class="language-plaintext highlighter-rouge">scripts</code> folder to allow our Chrome Extension’s .js files access the config values.
<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=writeConfigJsFile.section.js"> </script></p>

<h3 id="transformmanifest-section">TransformManifest section</h3>
<p>Transforms our <code class="language-plaintext highlighter-rouge">manifest.json</code> file too.
<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=transformManifest.section.js"> </script></p>

<h3 id="watch-section">Watch section</h3>
<p>Watches for any change in the <code class="language-plaintext highlighter-rouge">src</code> folder and automatically repeat the previous steps.
<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=watch.section.js"> </script></p>

<h2 id="packagesjson-file">packages.json file</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/package-128-f3193c47c.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/package-128-f3193c47c.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/package-128-f3193c47c.png" alt="post image" width="128" height="128" />
</picture>

<p>Change the content of <code class="language-plaintext highlighter-rouge">packages.json</code> file to the content below to update the dependencies.
<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=packages.json"> </script></p>

<p>Then run the command <code class="language-plaintext highlighter-rouge">npm install</code> in the root folder, after that run the command <code class="language-plaintext highlighter-rouge">npm install gulp</code>.</p>

<h2 id="running-the-gulp-for-the-first-time">Running the gulp for the first time</h2>
<p>Now, if you just run the command <code class="language-plaintext highlighter-rouge">gulp</code> in the root folder, you should see an output like this:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-failed-config-200-d0dfc6cee.webp 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-failed-config-369-d0dfc6cee.webp 369w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-failed-config-200-d0dfc6cee.png 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-failed-config-369-d0dfc6cee.png 369w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-failed-config-369-d0dfc6cee.png" alt="post image" width="369" height="148" />
</picture>

      </center>
<p><br /></p>

<h2 id="creating-the-configjson-files">Creating the <code class="language-plaintext highlighter-rouge">config.json</code> files</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/config-128-c46695ddc.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/config-128-c46695ddc.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/config-128-c46695ddc.png" alt="post image" width="128" height="128" />
</picture>

<p>We need to create our <code class="language-plaintext highlighter-rouge">config.json</code> files.
They are 3 files:</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">config.json</code>: the baseline file, our common configuration should be defined here and will be used for the DEV environment.</li>
  <li><code class="language-plaintext highlighter-rouge">config.TEST.json</code>: the file that the define specific configuration values for the TEST environment</li>
  <li><code class="language-plaintext highlighter-rouge">config.PROD.json</code>: the file that the define specific configuration values for the PROD environment
<br /><br /></li>
</ul>
<div class="note"><p>If you’re familiar with <a href="https://docs.microsoft.com/en-us/aspnet/web-forms/overview/deployment/visual-studio-web-deployment/web-config-transformations">Web.config File Transformations</a> or <code class="language-plaintext highlighter-rouge">appsettings.json</code> files transformation, the philosophy used here is the same: the baseline file (config.json) contains all the common configuration values, and the specific environment files, like config.TEST.json and config.PROD.json, need to define only the values that are different for that environment</p>
</div>

<p>Create the 3 files inside the subfolder <code class="language-plaintext highlighter-rouge">src</code>.
Here is the content of each one:</p>

<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=config.json"> </script>

<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=config.TEST.json"> </script>

<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=config.PROD.json"> </script>

<h2 id="running-the-gulp-for-the-second-time">Running the gulp for the second time</h2>
<p>Run the command <code class="language-plaintext highlighter-rouge">gulp</code> in the root folder, you should see an output like this:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-ok-no-manifest-200-b124fa8a9.webp 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-ok-no-manifest-379-b124fa8a9.webp 379w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-ok-no-manifest-200-b124fa8a9.png 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-ok-no-manifest-379-b124fa8a9.png 379w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/gulp-ok-no-manifest-379-b124fa8a9.png" alt="post image" width="379" height="255" />
</picture>

      </center>
<p><br /></p>

<p>There is a new subfolder <code class="language-plaintext highlighter-rouge">dist</code> created. Load it on Chrome Extensions page:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/chrome-extension-page-200-0991800ea.webp 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/chrome-extension-page-400-0991800ea.webp 400w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/chrome-extension-page-423-0991800ea.webp 423w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/chrome-extension-page-200-0991800ea.png 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/chrome-extension-page-400-0991800ea.png 400w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/chrome-extension-page-423-0991800ea.png 423w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/chrome-extension-page-423-0991800ea.png" alt="post image" width="423" height="230" />
</picture>

      </center>
<p><br /></p>

<p>The plugin should work ok.</p>

<div class="note"><p>Remember to remove the plugin previously loaded on Chrome and add it again from the <code class="language-plaintext highlighter-rouge">dist</code> folder.</p>
</div>

<h2 id="creating-the-hellojs">Creating the <code class="language-plaintext highlighter-rouge">hello.js</code></h2>
<p>Create a new file called <code class="language-plaintext highlighter-rouge">hello.js</code> inside the subfolder <code class="language-plaintext highlighter-rouge">scripts</code>.
We will use this file to change the <code class="language-plaintext highlighter-rouge">H1</code> tag inside the <code class="language-plaintext highlighter-rouge">hello.html</code>
<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=hello.js"> </script></p>

<h2 id="loading-scripts-on-hellohtml">Loading scripts on <code class="language-plaintext highlighter-rouge">hello.html</code></h2>
<p>Change the content of <code class="language-plaintext highlighter-rouge">hello.html</code> file to the content bellow:
<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=hello.html"> </script></p>

<p>This will load the .js and add an <code class="language-plaintext highlighter-rouge">id</code> attribute to our  <code class="language-plaintext highlighter-rouge">H1</code> tag.</p>

<h2 id="reading-the-configuration-inside-the-scripts">Reading the configuration inside the scripts</h2>
<p>The first thing we need to do is change our <code class="language-plaintext highlighter-rouge">manifest.json</code> file to allow the content of <code class="language-plaintext highlighter-rouge">scripts/config.js</code> and <code class="language-plaintext highlighter-rouge">scripts/hello.js</code> been read by the extension .js.
Open the <code class="language-plaintext highlighter-rouge">manifest.json</code> and change it to the content below:
<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=manifest.json"> </script></p>

<p>The line <code class="language-plaintext highlighter-rouge">"/scripts/config.js"</code> is what we need to access the configuration values.</p>

<h2 id="creating-the-manifestjson-files">Creating the <code class="language-plaintext highlighter-rouge">manifest.json</code> files</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/manifest-128-579a71043.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/manifest-128-579a71043.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/manifest-128-579a71043.png" alt="post image" width="128" height="128" />
</picture>

<p>We need to create our <code class="language-plaintext highlighter-rouge">manifest.json</code> files, in the same way, we created our <code class="language-plaintext highlighter-rouge">config.json</code> files.
<br /><br /><br /><br /><br />
They are 3 files:</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">manifest.json</code>: the baseline file, our common manifest definition, and used by DEV environment (already created).</li>
  <li><code class="language-plaintext highlighter-rouge">manifest.TEST.json</code>: the file that the define specific manifest configuration values for the TEST environment</li>
  <li><code class="language-plaintext highlighter-rouge">manifest.PROD.json</code>: the file that the define specific manifest configuration values for the PROD environment</li>
</ul>

<p>Create the 2 files inside the subfolder <code class="language-plaintext highlighter-rouge">src</code>.
Here is the content of each one:</p>

<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=manifest.TEST.json"> </script>

<script src="https://gist.github.com/4f9d7289273222713933d8a95a077311.js?file=manifest.PROD.json"> </script>

<h2 id="running-the-gulp-for-each-environment">Running the gulp for each environment</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-200-3afbb65ab.webp 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-336-3afbb65ab.webp 336w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-200-3afbb65ab.png 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-336-3afbb65ab.png 336w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/all-extension-environments-336-3afbb65ab.png" alt="post image" width="336" height="167" />
</picture>

      </center>
<p><br />
Run the command <code class="language-plaintext highlighter-rouge">gulp</code> in the root folder.
This will use <code class="language-plaintext highlighter-rouge">DEV</code> configuration from config.js and manifest.json</p>
<div class="note"><p>Is the same if you run <code class="language-plaintext highlighter-rouge">gulp --config DEV</code></p>
</div>

<p>Now, try to run <code class="language-plaintext highlighter-rouge">gulp --config TEST</code>.
In the Chrome Extensions page you should see something like this:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-extension-test-chrome-200-439243e20.webp 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-extension-test-chrome-400-439243e20.webp 400w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-extension-test-chrome-468-439243e20.webp 468w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-extension-test-chrome-200-439243e20.png 200w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-extension-test-chrome-400-439243e20.png 400w, /assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-extension-test-chrome-468-439243e20.png 468w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-extension-test-chrome-468-439243e20.png" alt="post image" width="468" height="358" />
</picture>

      </center>
<p><br /></p>

<p>Your extension is using the TEST environment values.
When you click on the extension icon on the Chrome toolbar, you should see something like this:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-world-test-129-24527d511.webp 129w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-world-test-129-24527d511.png 129w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/hello-world-test-129-24527d511.png" alt="post image" width="129" height="177" />
</picture>

      </center>
<p><br /></p>

<div class="note"><p>You can try to run <code class="language-plaintext highlighter-rouge">gulp --config PROD</code>. To see the <code class="language-plaintext highlighter-rouge">PROD</code> environment values on the extension.</p>
</div>

<h2 id="running-gulp---watch">Running <code class="language-plaintext highlighter-rouge">gulp --watch</code></h2>
<p>To have a fast and streamline workflow, we need that every time we change something on our <code class="language-plaintext highlighter-rouge">src</code> folder, the <code class="language-plaintext highlighter-rouge">dist</code> folder automatically updates and we can see the changes right on Chrome.</p>

<p>Run the command <code class="language-plaintext highlighter-rouge">gulp --watch</code>. It’ll monitor your <code class="language-plaintext highlighter-rouge">src</code> folder and update the <code class="language-plaintext highlighter-rouge">dist</code>.<br />
You can use the <code class="language-plaintext highlighter-rouge">--config</code> option combine, like <code class="language-plaintext highlighter-rouge">gulp --watch --config TEST</code>.</p>

<h2 id="download">Download</h2>
<p>You can download the full source code of the plugin of this tutorial: <a href="/assets/2020/09/11/using-gulp-for-chrome-extension-dev-workflow/chrome-extension-sample.zip">chrome-extension-sample.zip<a>.</a></a></p>

<p>In this .zip are all files mentioned in this tutorial, you just need to set up your gulp environment and call the <code class="language-plaintext highlighter-rouge">npm install</code> and <code class="language-plaintext highlighter-rouge">npm install gulp</code> before starting to use it.</p>

<h2 id="conclusion">Conclusion</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png" alt="post image" width="128" height="128" />
</picture>

<p>In this tutorial, we learned how to create a development workflow for a Chrome extension, with different configurations and manifest.json for each environment, like DEV, TEST, and PROD.</p>

<p><br /><br /><br />Icons made by <a href="http://www.freepik.com">Freepik</a>, <a href="http://www.flaticon.com/authors/vignesh-oviyan">Vignesh Oviyan</a> and <a href="https://www.flaticon.com/authors/eucalyp" title="Eucalyp">Eucalyp</a> from <a href="http://www.flaticon.com">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons BY 3.0</a></p>]]></content><author><name></name></author><category term="Tutorial" /><category term="unity3d" /><category term="gamedev" /><category term="math" /><category term="curves" /><summary type="html"><![CDATA[In this tutorial, we will learn how to create a development workflow for a Chrome extension, with different configurations and manifest.json for each environment, like DEV, TEST, and PROD.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Focused Inspector</title><link href="http://diegogiacomelli.com.br/unitytips-focused-inspector/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Focused Inspector" /><published>2020-09-08T00:00:00-03:00</published><updated>2020-09-08T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-focused-inspector</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-focused-inspector/"><![CDATA[<p>Starting in Unity 2020.1, you can add a dedicated inspector window for a specific GameObject, Component, or Asset. 
It always displays the properties of the item you opened it for, even if you select something else in the editor.</p>

<p>To activate a Focused Inspector, select an item <code class="language-plaintext highlighter-rouge">(GameObject, Component, or Asset)</code> and in the context menu hit the <code class="language-plaintext highlighter-rouge">Properties...</code> menu item.</p>

<center>                
        <img class="screenshot" src="/assets/2020/09/08/unitytips-focused-inspector/focused-inspector.gif " alt="post image" />
      </center>
<p><br /></p>

<p><br /></p>
<div class="note"><p>More details in the official documentation: <a href="https://docs.unity3d.com/2020.1/Documentation/Manual/InspectorFocused.html">Focused Inspectors</a></p>
</div>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><summary type="html"><![CDATA[Starting in Unity 2020.1, you can add a dedicated inspector window for a specific GameObject, Component, or Asset. It always displays the properties of the item you opened it for, even if you select something else in the editor.]]></summary></entry><entry><title type="html">Unity 2020.1&amp;amp;colon; What’s new</title><link href="http://diegogiacomelli.com.br/unity-2020-1-whats-new/" rel="alternate" type="text/html" title="Unity 2020.1&amp;amp;colon; What’s new" /><published>2020-09-04T00:00:00-03:00</published><updated>2020-09-04T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-2020-1-whats-new</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-2020-1-whats-new/"><![CDATA[<h2 id="unity-20201">Unity 2020.1</h2>
<p>The Unity 2020.1 was official release on <a href="https://blogs.unity3d.com/2020/07/23/unity-2020-1-is-now-available/">July 23, 2020</a> with a lot of fixes, API changes, changes, improvements and features.
You can find the new features directly on the Unity manual accessing this search: <a href="https://docs.unity3d.com/2020.1/Documentation/Manual/30_search.html?q=newin20201">newin20201</a>.
To read all items, access the complete <a href="https://unity3d.com/unity/whats-new/2020.1.0">release notes</a>.</p>

<h2 id="stats">Stats</h2>
<ul>
  <li>Fixes: <code class="language-plaintext highlighter-rouge">805</code></li>
  <li>API Changes: <code class="language-plaintext highlighter-rouge">79</code></li>
  <li>Changes: <code class="language-plaintext highlighter-rouge">70</code></li>
  <li>Improvements: <code class="language-plaintext highlighter-rouge">215</code></li>
  <li>Features: <code class="language-plaintext highlighter-rouge">74</code></li>
</ul>

<center>
        <iframe src="https://www.youtube.com/embed/yYjqJvd8lQI " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="my-feature-highlights">My feature highlights</h2>
<p>Below are the features that most caught my attention and that I believe can positively impact my development workflow.</p>

<h3 id="focused-inspector">Focused Inspector</h3>
<blockquote>
  <p>Editor: Add focused Inspector, a property editor to inspect single object.</p>
</blockquote>

<p>This is something I have been looking for for a while, an inspector editor for a specific item in the hierarchy.
Unity went further, allowing an editor focused on a component too.</p>

<center>                
        <img class="screenshot" src="/assets/2020/09/04/unity-2020-1-whats-new/focused-inspector.gif " alt="post image" />
      </center>
<p><br /></p>

<h4 id="for-gameobjects-and-project-assets">For GameObjects and Project Assets</h4>
<p>Right-click a <code class="language-plaintext highlighter-rouge">GameObject</code> in the <code class="language-plaintext highlighter-rouge">Hierarchy view</code>, or an <code class="language-plaintext highlighter-rouge">Asset</code> in the <code class="language-plaintext highlighter-rouge">Project view</code>.
From the context menu, select <code class="language-plaintext highlighter-rouge">Properties</code>.</p>

<p>Alternatively, select the <code class="language-plaintext highlighter-rouge">GameObject</code> or <code class="language-plaintext highlighter-rouge">Asset</code> and do one of the following:<br />
From the main menu, select Assets &gt; Properties.
Use the <code class="language-plaintext highlighter-rouge">Alt + P / Option + Shift + P</code> shortcut.</p>

<h4 id="for-components">For components</h4>
<p>Inspect the <code class="language-plaintext highlighter-rouge">GameObject</code> and locate the <code class="language-plaintext highlighter-rouge">component</code> you want to open a focused Inspector for.<br />
From the component’s <code class="language-plaintext highlighter-rouge">More items (⋮) menu</code>, select Properties.</p>

<p>More details in the <a href="https://docs.unity3d.com/2020.1/Documentation/Manual/InspectorFocused.html">official documentation</a>.</p>

<h3 id="previewscenestage">PreviewSceneStage</h3>
<blockquote>
  <p>Editor: Introduced PreviewSceneStage. Implement custom stages by inheriting from this class.</p>
</blockquote>

<p>I found this interesting but did not found any good documentation on how to use it.</p>

<h3 id="switch-between-debug-and-release-code-optimizations">Switch between debug and release code optimizations</h3>
<blockquote>
  <p>Editor: Support to switch between debug and release code optimizations without restarting the Unity Editor improving Unity Editor performance when compiling in release.</p>
</blockquote>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/switch-compilation-mode-200-29e77de54.webp 200w, /assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/switch-compilation-mode-388-29e77de54.webp 388w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/switch-compilation-mode-200-29e77de54.png 200w, /assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/switch-compilation-mode-388-29e77de54.png 388w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/switch-compilation-mode-388-29e77de54.png" alt="post image" width="388" height="149" />
</picture>

      </center>
<p><br /></p>

<h3 id="lighting-settings-as-an-asset">Lighting settings as an asset</h3>
<blockquote>
  <p>GI: Added all lighting settings as an asset. This will allow the user to share them between scenes or switch them out in an easy way.</p>
</blockquote>

<p>This can be quite useful when we need different lighting setups for different target platforms.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/lighting-seetings-asset-200-198be746b.webp 200w, /assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/lighting-seetings-asset-400-198be746b.webp 400w, /assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/lighting-seetings-asset-554-198be746b.webp 554w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/lighting-seetings-asset-200-198be746b.png 200w, /assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/lighting-seetings-asset-400-198be746b.png 400w, /assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/lighting-seetings-asset-554-198be746b.png 554w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/04/unity-2020-1-whats-new/lighting-seetings-asset-554-198be746b.png" alt="post image" width="554" height="638" />
</picture>

      </center>
<p><br /></p>

<h3 id="graphics-getpixeldata-api-was-added">Graphics: GetPixelData API was added</h3>
<blockquote>
  <p>Graphics: GetPixelData API was added to Texture2D, Texture3D, Texture2DArray, Cubemap and CubemapArray classes. It allows getting a pointer to the data of a particular mip level/array element in a Texture for reading/writing, and without creating any memory allocations (similar to Texture2D.GetRawTextureData).</p>
</blockquote>

<h3 id="input-system-is-now-verified">Input System is now verified</h3>
<blockquote>
  <p>Input: The Input System has moved out of preview.</p>
</blockquote>

<center>
        <iframe src="https://www.youtube.com/embed/sQaF9_jd9k4 " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h3 id="save-and-restore-particle-system-state-data">Save and restore Particle System state data</h3>
<blockquote>
  <p>Particles: Abiltiy to save and restore Particle System state data, making it possible to save a snapshot of an entire Particle System at a point in time. A use case for this is for efficient rewind support, by saving periodic keyframes of the particle state, to avoid full resimulations.</p>
</blockquote>

<p>It seems to be possible through methods <a href="https://docs.unity3d.com/2020.1/Documentation/ScriptReference/ParticleSystem.GetPlaybackState.html">GetPlaybackState</a> and <a href="https://docs.unity3d.com/2020.1/Documentation/ScriptReference/ParticleSystem.SetPlaybackState.html">SetPlaybackState</a>, but they were already available in Unity 2019.4.</p>

<h3 id="new-component-articulationbody">New component ArticulationBody</h3>
<blockquote>
  <p>Physics: Add a new component ArticulationBody that helps to create articulations. An articulation is a set of bodies, some of which have their relative motion constrained. All bodies are organized in a logical tree, where parent-child relation expresses the constrained motion. Unlike regular Rigidbodies with Joints, articulations are solved with a different solver (Featherstone) in reduced coordinates which guarantees there will never be any stretch of locked degrees of freedom. Typical examples of articulations include robotic arms, ragdolls, etc.</p>
</blockquote>

<p>This blog post talks in more details this new physics component: <a href="https://blogs.unity3d.com/2020/05/20/use-articulation-bodies-to-easily-prototype-industrial-designs-with-realistic-motion-and-behavior/">Use articulation bodies to easily prototype industrial designs with realistic motion and behavior</a>.</p>

<h3 id="new-shader-preprocessor">New shader preprocessor</h3>
<blockquote>
  <ul>
    <li>Shaders: New shader preprocessor (experimental).</li>
    <li>Faster shader compilation.</li>
    <li>Accurate include dependency tracking.</li>
  </ul>
</blockquote>

<h2 id="conclusion">Conclusion</h2>
<p>These were the features that brought my attention to Unity 2020.1.<br />
What were the features that caught your attention?</p>]]></content><author><name></name></author><category term="News" /><category term="unity3d" /><category term="gamedev" /><category term="unity-whatsnew" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Unity Distribution Portal (UDP) Journey&amp;amp;colon; Tips &amp;amp; Tricks</title><link href="http://diegogiacomelli.com.br/unity-distribution-portal-udp-journey-tips-and-tricks/" rel="alternate" type="text/html" title="Unity Distribution Portal (UDP) Journey&amp;amp;colon; Tips &amp;amp; Tricks" /><published>2020-09-01T00:00:00-03:00</published><updated>2020-09-01T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-distribution-portal-udp-journey-tips-and-tricks</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-distribution-portal-udp-journey-tips-and-tricks/"><![CDATA[<p>In this post, I will list some tips and tricks that I learned in my journey using the <a href="https://unity.com/products/unity-distribution-portal">Unity Distribution Portal (UDP)</a> to publish my game <a href="https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.puzzimals">Puzzimals</a> to 4 new stores, reaching millions of new users, with a single build.</p>

<h2 id="introduction">Introduction</h2>
<p>Unity has recently <a href="https://blogs.unity3d.com/2020/08/28/unlock-access-to-over-a-billion-new-players-for-your-android-mobile-game/">launch to everyone the Unity Distribution Portal (UDP)</a> a platform that enable Unity developers to distribute Android games beyond Google Play, into stores like Samsung Galaxy Store, ONE Store, Mi GetApps, HUAWEI AppGallery, QooApp Game Store, SHAREit Game Store, TPAY MOBILE Stores, APPTUTTI, and VIVEPORT.</p>

<blockquote>
  <p>The Unity Distribution Portal was created to help make publishing mobile games on alternative app stores faster and easier for developers. When you submit your game, UDP automatically creates specific builds with all required SDKs in the background, saving you a substantial amount of time when publishing to multiple stores.</p>
</blockquote>

<blockquote>
  <p>Unity Distribution Portal (UDP) lets you distribute your games to multiple app stores through a single hub. UDP repacks your Android build with each store’s dedicated In-App Purchase SDK. You can manage all your store submissions from the UDP console.</p>
</blockquote>

<p>This post is focused on games that have IAP and use Google Play Services, like leaderboards and achievements.
If your game does not have any of these features, publish to UDP is quite a more straightforward process and probably these tips here won’t be useful for you.</p>

<h2 id="available-stores">Available Stores</h2>
<p>As I write this post Unity is working to add even more stores to UDP.
From the 9 stores supported, 7 are fully integrated with UDP. What this meaning? You just need to create your account on each store, via UDP (in some cases fill some forms and send some ID and bank docs), and UDP will perform all the steps need to make your game available on the store.</p>

<h2 id="getting-started">Getting started</h2>
<p>Is not the intent of this post cover everything about how to publish your game using UDP, I guess this quite well documented on <a href="https://docs.unity3d.com/Packages/com.unity.purchasing.udp@2.0/manual/index.html">UDP package documentation</a>.</p>

<p>The idea of this post is to point out some tips and tricks that can help you, as helped me, to understand how to use UDP.</p>

<h2 id="read-the-docs">Read the docs</h2>
<p>Please, if you did not read the official documentation yet, go and <a href="https://docs.unity3d.com/Packages/com.unity.purchasing.udp@2.0/manual/index.html">read it</a>, then come back here. You’ll better understand this post and the whole UDP solution after educated yourself about it.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-200-51d2d476b.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-400-51d2d476b.webp 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-800-51d2d476b.webp 800w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-1024-51d2d476b.webp 1024w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-200-51d2d476b.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-400-51d2d476b.png 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-800-51d2d476b.png 800w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-1024-51d2d476b.png 1024w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-journey-800-51d2d476b.png" alt="post image" width="1024" height="768" />
</picture>

      </center>
<p><br /></p>

<h2 id="1-implement">1. Implement</h2>
<blockquote>
  <p>What docs says: Set up and configure UDP in the Unity Editor, implement UDP in your game project, and populate your IAP Catalog with your in-app purchase products (if any).</p>
</blockquote>

<h3 id="11-create-a-new-game-on-udp">1.1 Create a new game on UDP</h3>
<p>Go to the UDP dashboard and just create a new game. 
At this moment just set the game title.</p>

<h3 id="12-iap-and-target-udp">1.2 IAP and Target UDP</h3>
<p>There is two way to use UDP on your project: using the UDP package or using the Unity IAP.
In my case, I was using IAP already in the project.</p>

<p>This tip is in the official <a href="https://docs.unity3d.com/Packages/com.unity.purchasing.udp@2.0/manual/games-with-iap.html">documentation</a>, but would like to reinforce it:</p>

<blockquote>
  <p>In the Unity Editor, to choose UDP as the Android build target, select Window &gt; Unity IAP &gt; Android &gt; Target Unity Distribution Portal (UDP).</p>
</blockquote>

<p>You’ll need this when you build to UDP and remember to use the <code class="language-plaintext highlighter-rouge">Target Google Play</code> when you build to Google Play.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-200-2be9cf25c.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-400-2be9cf25c.webp 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-800-2be9cf25c.webp 800w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-1000-2be9cf25c.webp 1000w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-200-2be9cf25c.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-400-2be9cf25c.png 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-800-2be9cf25c.png 800w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-1000-2be9cf25c.png 1000w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/target-udp-800-2be9cf25c.png" alt="post image" width="1000" height="375" />
</picture>

      </center>
<p><br /></p>

<hr />

<h2 id="2-build--deploy">2. Build &amp; deploy</h2>
<blockquote>
  <p>What docs says: Build your UDP Android package (apk), test it in the UDP Sandbox environment, and deploy it to the UDP console where you’ll begin preparing your game for submission to the stores.</p>
</blockquote>

<h3 id="21-sandbox-environment-test">2.1 Sandbox environment test</h3>
<p>In the <code class="language-plaintext highlighter-rouge">Sandbox Testing</code> section of your game page on UDP, you will find some instructions on how to test your game on the UDP sandbox.</p>

<div class="note"><p>You will need to do this before repacking your game for the stores.</p>
</div>

<p>Just build your <code class="language-plaintext highlighter-rouge">.apk</code> on Unity and open it on emulator (like <a href="https://www.bluestacks.com/">BlueStacks</a>) or directly on your Android device.
If you setup UDP right, you should see a screen like below when the game starts.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-login-200-65a5a4303.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-login-400-65a5a4303.webp 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-login-489-65a5a4303.webp 489w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-login-200-65a5a4303.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-login-400-65a5a4303.png 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-login-489-65a5a4303.png 489w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/udp-login-489-65a5a4303.png" alt="post image" width="489" height="239" />
</picture>

      </center>
<p><br /></p>

<div class="note"><p>To login in this screen, use the accounts in the setup on <code class="language-plaintext highlighter-rouge">Sandbox Test Account</code>. Remember those e-mails don’t need to exist, they are just test accounts to validate UDP setup</p>
</div>

<p>Perform the login on the UDP sandbox and test your IAP.</p>

<p>After this, you can refresh your game page on UDP and you should see the result below on <code class="language-plaintext highlighter-rouge">Sandbox Testing</code> section:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/sandbox-testing-200-289a63222.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/sandbox-testing-346-289a63222.webp 346w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/sandbox-testing-200-289a63222.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/sandbox-testing-346-289a63222.png 346w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/sandbox-testing-346-289a63222.png" alt="post image" width="346" height="86" />
</picture>

      </center>
<p><br /></p>

<div class="note"><p>If you did not setup the UDP on your project, you should see a message like this on UDP dashboard notifications <code class="language-plaintext highlighter-rouge">apk analytics failed, caused by: analyse apk failed, caused by:Failed to find GameSettings.prop, please import udp sdk and generate GameSettings.</code></p>
</div>

<h3 id="22-package-name-extensions-and-google-play-services">2.2 Package name extensions and Google Play Services</h3>
<p>When UDP repacks your game with store-specific SDK it will, most of the time, change the name of the package, adding a store-specific extension, like:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">.gs</code> to Samsung Galaxy Store</li>
  <li><code class="language-plaintext highlighter-rouge">.unity.migc</code> to Mi GetApps</li>
  <li><code class="language-plaintext highlighter-rouge">.qooapp</code> QooApp to Game Store</li>
</ul>

<p>Because of this extension, we will need to configure a new OAuth credential to each extension on <a href="https://console.developers.google.com/apis">Google API Console</a>.</p>

<p>In my case on the <code class="language-plaintext highlighter-rouge">App Signature</code> section of the game info, a used the recommend option <code class="language-plaintext highlighter-rouge">Export and upload your own key and certificate</code>. This is the same certificate used by Google Play Services and APIs.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-200-3a4a50966.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-400-3a4a50966.webp 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-800-3a4a50966.webp 800w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-882-3a4a50966.webp 882w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-200-3a4a50966.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-400-3a4a50966.png 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-800-3a4a50966.png 800w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-882-3a4a50966.png 882w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/app-signature-800-3a4a50966.png" alt="post image" width="882" height="238" />
</picture>

      </center>
<p><br /></p>

<p>Go to <a href="https://console.developers.google.com/apis">Google API Console</a>, select your game project on the dropdown, then go to <code class="language-plaintext highlighter-rouge">Credentials</code> section, then on the <code class="language-plaintext highlighter-rouge">OAuth 2.0 Client IDs</code> section select the item with the name of your game, then copy the value of the field <code class="language-plaintext highlighter-rouge">SHA-1 certificate fingertip</code>.</p>

<p>Now, go back to the <code class="language-plaintext highlighter-rouge">Credentials</code> section and click on the button <code class="language-plaintext highlighter-rouge">Create credentials</code>, then <code class="language-plaintext highlighter-rouge">OAuth client ID</code>.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/google-api-credentials-200-ef36e16c7.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/google-api-credentials-400-ef36e16c7.webp 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/google-api-credentials-596-ef36e16c7.webp 596w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/google-api-credentials-200-ef36e16c7.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/google-api-credentials-400-ef36e16c7.png 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/google-api-credentials-596-ef36e16c7.png 596w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/google-api-credentials-596-ef36e16c7.png" alt="post image" width="596" height="240" />
</picture>

      </center>
<p><br /></p>

<p>In the new page, select <code class="language-plaintext highlighter-rouge">Android</code> on the <code class="language-plaintext highlighter-rouge">Application type</code> dropdown.</p>

<p>In the <code class="language-plaintext highlighter-rouge">Name</code> field you can write anything you want, but maybe use your game name following with the extension store can help to find it later.</p>

<p>In the <code class="language-plaintext highlighter-rouge">Package name</code> field you should add the exact package name for the specific store on UDP. For example, in my case for Mi GetApps store, the package name was <code class="language-plaintext highlighter-rouge">br.com.diegogiacomelli.puzzimals.unity.migc</code>.</p>

<div class="note"><p>If you have doubted what is the exact package name for your game on a specific store on UDP, you can click on <code class="language-plaintext highlighter-rouge">Advanced</code> link of that store on the <code class="language-plaintext highlighter-rouge">Publish</code> tab of UDP</p>
</div>

<p>Now in the field <code class="language-plaintext highlighter-rouge">SHA-1 certificate fingertip</code> you should paste the value you copy before from the original <code class="language-plaintext highlighter-rouge">OAuth 2.0 Client IDs</code> configuration.</p>

<p>Then click on the button <code class="language-plaintext highlighter-rouge">Create</code>.</p>

<p>You will need to repeat those steps for each store that change your package name.</p>

<hr />

<h2 id="3-game-info">3. Game Info</h2>
<blockquote>
  <p>What docs says: On the UDP console, provide app store listing information and resources for your game, such as multi-language descriptions, multi-currency price points, screenshots, video trailers, and create releases for distribution.</p>
</blockquote>

<h3 id="31-import-from-google-play">3.1 Import from Google Play</h3>
<p>As you follow the UDP documentation you will reach the point will need to create your game on the UDP dashboard.
If you already have the game published on Google Play, as was my case with <a href="https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.puzzimals">Puzzimals</a>, you can use the right-top button <code class="language-plaintext highlighter-rouge">IMPORT FROM GOOGLE PLAY</code> in the game page.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/import-from-google-200-0e5146f1b.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/import-from-google-400-0e5146f1b.webp 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/import-from-google-610-0e5146f1b.webp 610w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/import-from-google-200-0e5146f1b.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/import-from-google-400-0e5146f1b.png 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/import-from-google-610-0e5146f1b.png 610w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/import-from-google-610-0e5146f1b.png" alt="post image" width="610" height="239" />
</picture>

      </center>
<p><br /></p>

<p>After the import, you can edit the information as well.</p>

<div class="note"><p>You can add the argument <code class="language-plaintext highlighter-rouge">hl</code> to your Google Play url to import a specific translation, like <code class="language-plaintext highlighter-rouge">https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.puzzimals&amp;hl=pt</code> to import Portuguese translation</p>
</div>

<hr />

<h2 id="4-submission">4. Submission</h2>
<blockquote>
  <p>What docs says: Sign up with the stores using your UnityID, and register your game with the app stores directly from inside the UDP console.</p>
</blockquote>

<p>Go to the <code class="language-plaintext highlighter-rouge">Publish</code> tab, select a store and click on <code class="language-plaintext highlighter-rouge">Sign up to...</code>.</p>

<p>Follow the needed steps for each store you would like to publish.</p>

<hr />

<h2 id="5-publish">5. Publish</h2>
<blockquote>
  <p>What docs says: Select the stores you want to submit your game to. UDP automatically repacks your game into store-specific builds and submits them to the stores along with the relevant game descriptions.</p>
</blockquote>

<h3 id="51-upload">5.1 Upload</h3>
<p>Now that you have a valid UDP <code class="language-plaintext highlighter-rouge">.apk</code> and game info filled, you can upload it on the UDP dashboard, inside the <code class="language-plaintext highlighter-rouge">Binary</code> section.</p>

<h3 id="52-testing-your-repack-apk">5.2 Testing your repack .apk</h3>
<p>Now the specific store should show a <code class="language-plaintext highlighter-rouge">Repack game</code> dropdown on the UDP dashboard.</p>

<p>Select <code class="language-plaintext highlighter-rouge">Repack game</code> and UDP should generate a new <code class="language-plaintext highlighter-rouge">.apk</code> of your game with the store SDK. This <code class="language-plaintext highlighter-rouge">.apk</code> will be available to download on the <code class="language-plaintext highlighter-rouge">Advanced</code> link. Download it from the <code class="language-plaintext highlighter-rouge">Download APK Certificate</code>.</p>

<p>For each store, you need to test your repack <code class="language-plaintext highlighter-rouge">.apk</code> to certificate that everything in your game is running ok.</p>

<p>Open the repack <code class="language-plaintext highlighter-rouge">.apk</code> on an emulator or an Android device.</p>

<p>Test your IAP and Google Play Services, they are working as expected?</p>

<p>For each store, you will see different screens. For example, for QooApp you will see something like this:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/qooapp-login-200-1e49178bb.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/qooapp-login-282-1e49178bb.webp 282w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/qooapp-login-200-1e49178bb.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/qooapp-login-282-1e49178bb.png 282w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/qooapp-login-282-1e49178bb.png" alt="post image" width="282" height="268" />
</picture>

      </center>
<p><br /></p>

<h3 id="53-send-it-to-review">5.3 Send it to review</h3>
<p>Now you can select <code class="language-plaintext highlighter-rouge">Submit to Store</code> in the dropdown, then select the checkbox store on <code class="language-plaintext highlighter-rouge">Publish</code> page and click on the <code class="language-plaintext highlighter-rouge">Publish</code> button.
UDP will send the game to store review and you can monitor the progress on the dashboard.
UDP will send to you an e-mail when the game is approved.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-200-3447a9f64.webp 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-400-3447a9f64.webp 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-800-3447a9f64.webp 800w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-1000-3447a9f64.webp 1000w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-200-3447a9f64.png 200w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-400-3447a9f64.png 400w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-800-3447a9f64.png 800w, /assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-1000-3447a9f64.png 1000w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/09/01/unity-distribution-portal-udp-journey-tips-and-tricks/publish-button-800-3447a9f64.png" alt="post image" width="1000" height="470" />
</picture>

      </center>
<p><br /></p>

<hr />

<h2 id="6-performance">6. Performance</h2>
<blockquote>
  <p>What docs says: When your game is published, monitor its performance across the different stores from the UDP reporting dashboard.</p>
</blockquote>

<p>Wait the game been published on the store and will see the <code class="language-plaintext highlighter-rouge">Reporting Dashboard</code> been populated with stats about the game.</p>

<h2 id="conclusion">Conclusion</h2>
<p>With these tips and tricks that I learned while using UDP I hope I helped you to the UDP Journey:</p>
<ul>
  <li>Implement UDP in your Unity project</li>
  <li>Build and deploy your game to UDP</li>
  <li>Edit your game information</li>
  <li>Prepare your game for submission</li>
  <li>Publish to stores</li>
  <li>Track game performance</li>
</ul>]]></content><author><name></name></author><category term="Tutorial" /><category term="puzzimals" /><category term="unity3d" /><category term="gamedev" /><category term="android" /><category term="self-publishing" /><category term="udp" /><summary type="html"><![CDATA[In this post, I will list some tips and tricks that I learned in my journey using the Unity Distribution Portal (UDP) to publish my game Puzzimals to 4 new stores, reaching millions of new users, with a single build.]]></summary></entry><entry><title type="html">Kenney Jam 2020 entry&amp;amp;colon; Curseings</title><link href="http://diegogiacomelli.com.br/keeney-jam-2020-entry-curseings/" rel="alternate" type="text/html" title="Kenney Jam 2020 entry&amp;amp;colon; Curseings" /><published>2020-08-26T00:00:00-03:00</published><updated>2020-08-26T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/keeney-jam-2020-entry-curseings</id><content type="html" xml:base="http://diegogiacomelli.com.br/keeney-jam-2020-entry-curseings/"><![CDATA[<p>Last weekend I participated in <strong>Kenney Jam 2020</strong> (my first game jam).
The experience was really good, when you have so strong boundaries to make a game, in this case, <strong>48 hours and just use assets from <a href="http://Kenney.nl/assets">Kenney</a></strong>, you need to turn your way of think and expectations to a very specific and clear objective: release a fun and playable game the target just the core mechanics.</p>

<center>
        <iframe class="itchio-iframe" frameborder="0" src="https://itch.io/embed/737655 ">         
        </iframe>
       </center>

<h2 id="the-theme">The theme</h2>
<p>The theme for this game jam was <strong>“Cursed”</strong>.
I took some time thinking about what game I would like to play and develop with such a theme, then I remembered how much I loved to play Lemmings and how those little ones were cursed to live in the small world where some of them should sacrifice for the others.</p>

<p>With this in mind, I started developing the game and things happened very well and I delivered my entry right on time. I had the finished version some hours before, but I took some time to review it.</p>

<p>The final result is <strong>a simple game that takes the Lemmings core mechanic and adds some twist</strong>: in Curseings, there are two kinds of walkers: the human and the cursed and you need to take each kind to different portals. If a cursed touch a human, that human becomes a cursed one too. The gamer will need to use this new mechanic to overcome some levels, sometimes the player will need to avoid they touch each other, sometimes don’t.</p>

<center>
        <iframe src="https://www.youtube.com/embed/I3fRyrc6yrA " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="how-to-play">How to play</h2>
<p>The game can be download for Windows and Mac here: <a href="https://giacomelli.itch.io/curseings">https://giacomelli.itch.io/curseings</a>.</p>

<ul>
  <li>Just drag a behavior from the toolbar over a correspond walker to change his behavior.</li>
  <li>The objective of each level is to help the expected number of people and cursed to reach each portal.</li>
  <li>When a cursed touches a person, the person morphs into a cursed.</li>
  <li>Drag an item from the toolbar over a person or cursed to change its behavior.</li>
</ul>

<p><br /></p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/08/26/keeney-jam-2020-entry-curseings/cast-a-vote-192-6b3e9fff4.webp 192w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/08/26/keeney-jam-2020-entry-curseings/cast-a-vote-192-6b3e9fff4.png 192w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/08/26/keeney-jam-2020-entry-curseings/cast-a-vote-192-6b3e9fff4.png" alt="post image" width="192" height="256" />
</picture>

      </center>
<p><br />
<br /></p>

<h2 id="how-to-vote">How to vote</h2>
<p>If you liked the game, <strong>you can cast a vote</strong> for the game jam here: <a href="https://itch.io/jam/kenney-jam-2020/rate/737655">https://itch.io/jam/kenney-jam-2020/rate/737655</a>.</p>]]></content><author><name></name></author><category term="Article" /><category term="game-jam" /><category term="games" /><category term="made-with-unity" /><summary type="html"><![CDATA[Last weekend I participated in Kenney Jam 2020 (my first game jam). The experience was really good, when you have so strong boundaries to make a game, in this case, 48 hours and just use assets from Kenney, you need to turn your way of think and expectations to a very specific and clear objective: release a fun and playable game the target just the core mechanics.]]></summary></entry><entry><title type="html">Drawing a Maurer Rose With Unity</title><link href="http://diegogiacomelli.com.br/drawing-a-maurer-rose-with-unity/" rel="alternate" type="text/html" title="Drawing a Maurer Rose With Unity" /><published>2020-08-21T00:00:00-03:00</published><updated>2020-08-21T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/drawing-a-maurer-rose-with-unity</id><content type="html" xml:base="http://diegogiacomelli.com.br/drawing-a-maurer-rose-with-unity/"><![CDATA[<p>In this tutorial we will learn how to draw a <a href="https://en.wikipedia.org/wiki/Maurer_rose">Maurer Rose</a> with a <a href="https://docs.unity3d.com/ScriptReference/LineRenderer.html">LineRenderer</a> in Unity.</p>

<h2 id="introduction">Introduction</h2>
<p>Recently, I was watching a video by <a href="https://twitter.com/shiffman">Daniel Shiffman</a> about Maurer Rose that inspired me to try it out at Unity.</p>

<p>Now you must be thinking “What the hell is a Maurer Rose?”, Well, I didn’t know it until I watched <a href="https://youtu.be/4uU9lZ-HSqA">that video</a>.</p>

<p>Let’s see what Wikipedia says about:</p>

<blockquote>
  <p>A Maurer rose of the rose r = sin(nθ) consists of the 360 lines successively connecting the above 361 points. Thus a Maurer rose is a polygonal curve with vertices on a rose.</p>
</blockquote>

<p>The following gif shows the evolution of a Maurer Rose (n = 2, d = 29°) from 1 point to 361 points.</p>
<center>                
        <img class="screenshot" src="/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-sample.gif " alt="post image" />
      </center>
<p><br /></p>

<h2 id="definition">Definition</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/project-128-4f597ed4f.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/project-128-4f597ed4f.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/project-128-4f597ed4f.png" alt="post image" width="128" height="128" />
</picture>

<p>A Maurer Rose is always defined by two input parameters: <code class="language-plaintext highlighter-rouge">n</code> and <code class="language-plaintext highlighter-rouge">d</code>.</p>

<ul>
  <li>The <code class="language-plaintext highlighter-rouge">n</code> represents the number of petals. The rose has n petals if n is odd, and 2n petals if n is even (look to the gif above, n = 2, then 4 petals).</li>
  <li>The <code class="language-plaintext highlighter-rouge">d</code> represents the angle in degrees for each line.</li>
</ul>

<blockquote>
  <p>Let r = sin(nθ) be a rose in the polar coordinate system, where n is a positive integer.</p>

  <p>We then take 361 points on the rose:
(sin(nk), k) (k = 0, d, 2d, 3d, …, 360d),
where d is a positive integer and the angles are in degrees, not radians.</p>
</blockquote>

<p>This definition talks about <a href="https://en.wikipedia.org/wiki/Polar_coordinate_system">polar coordinate system</a>. The more important thing to know about it is this: <code class="language-plaintext highlighter-rouge">each point on a plane is determined by a distance from a reference point and an angle from a reference direction</code>. So, if you want to draw a line from a point, we need to take that point, an angle, and distance to calculate the second point.</p>

<h2 id="the-formula">The formula</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/math-128-7fe17d269.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/math-128-7fe17d269.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/math-128-7fe17d269.png" alt="post image" width="128" height="128" />
</picture>

<p>The basic formula is: <code class="language-plaintext highlighter-rouge">r = sin(nθ)</code> and we need to apply it to 361 points, where:</p>

<p><code class="language-plaintext highlighter-rouge">r = sin(n * (d * point))</code></p>

<p>In C# the code is something like this:</p>

<script src="https://gist.github.com/9dc5d4d408c00e92143827293a017936.js"> </script>

<p>We calculate the angle for each point, then we get the <code class="language-plaintext highlighter-rouge">r</code> and find the <code class="language-plaintext highlighter-rouge">x</code> and <code class="language-plaintext highlighter-rouge">y</code> for the second point on the polar coordinate system.</p>

<div class="note"><p>The <code class="language-plaintext highlighter-rouge">Mathf.PI / 180f</code> is to convert from degrees to radians to work properly with the Mathf functions.</p>
</div>

<h2 id="maurerroselinerenderer">MaurerRoseLineRenderer</h2>
<p>Now the complete code for a MonoBehaviour that takes the formula we saw in the previous section and combine it with a LineRenderer to draw the Maurer Rose.</p>

<script src="https://gist.github.com/f4aba5c5d7cbeb396ca784dff150e194.js"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>

<h2 id="using-the-maurerroselinerenderer">Using the MaurerRoseLineRenderer</h2>
<p>To use it, just create a new GameObject and add the <code class="language-plaintext highlighter-rouge">MaurerRoseLineRenderer</code> component to it.</p>

<p>If you just hit play button, you will see something like this:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-first-try-200-d24407ade.webp 200w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-first-try-256-d24407ade.webp 256w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-first-try-200-d24407ade.png 200w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-first-try-256-d24407ade.png 256w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-first-try-256-d24407ade.png" alt="post image" width="256" height="242" />
</picture>

      </center>
<p><br /></p>

<p><br />
Go to the LineRenderer component and change the line width to <code class="language-plaintext highlighter-rouge">0.03</code>, then hit play button again.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-second-try-200-71a3f234d.webp 200w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-second-try-256-71a3f234d.webp 256w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-second-try-200-71a3f234d.png 200w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-second-try-256-71a3f234d.png 256w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-rose-second-try-256-71a3f234d.png" alt="post image" width="256" height="224" />
</picture>

      </center>
<p><br /></p>

<h2 id="testing-new-inputs">Testing new inputs</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/programmer-128-6cef95d36.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/programmer-128-6cef95d36.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/programmer-128-6cef95d36.png" alt="post image" width="128" height="128" />
</picture>

<p>If you change the values of <code class="language-plaintext highlighter-rouge">N</code> and <code class="language-plaintext highlighter-rouge">D</code> of the component in the inspector, you will see a new Maurer Rose been drawing.</p>

<p>The image below shows the result of 6 different inputs (the same inputs used on <a href="https://en.wikipedia.org/wiki/Maurer_rose">Wikipedia</a>):</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-200-5a8621fe1.webp 200w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-400-5a8621fe1.webp 400w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-800-5a8621fe1.webp 800w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-1600-5a8621fe1.webp 1600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-200-5a8621fe1.png 200w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-400-5a8621fe1.png 400w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-800-5a8621fe1.png 800w, /assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-1600-5a8621fe1.png 1600w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/08/21/drawing-a-maurer-rose-with-unity/maurer-roses-800-5a8621fe1.png" alt="post image" width="2400" height="400" />
</picture>

      </center>
<p><br /></p>

<h2 id="going-beyond">Going beyond</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/beyond-128-1d53f18c1.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/beyond-128-1d53f18c1.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/beyond-128-1d53f18c1.png" alt="post image" width="128" height="128" />
</picture>

<p>Now that you understand what is a Maurer Rose and how to code it inside Unity you can try to do some crazy things with it, like animate the input values or the number of points, or still using it to build a particle system.</p>

<p>Below I show my realtime try on this matter:</p>

<iframe src="/apps/maurer-rose/index.html" style="width: 100%;min-height: 700px;"></iframe>

<h2 id="conclusion">Conclusion</h2>
<p>In this tutorial, we learned how to draw a Maurer Rose with a LineRenderer.
This simple formula show how math can be used to explore creativity and beauty.</p>

<p><br /><br /><br />Icons made by <a href="http://www.freepik.com">Freepik</a>, <a href="http://www.flaticon.com/authors/vignesh-oviyan">Vignesh Oviyan</a> and <a href="https://www.flaticon.com/authors/eucalyp" title="Eucalyp">Eucalyp</a> from <a href="http://www.flaticon.com">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons BY 3.0</a></p>

<p>The font used on the WebGL sample is from <a href="http://kenney.nl">Kenney</a>.</p>]]></content><author><name></name></author><category term="Tutorial" /><category term="unity3d" /><category term="gamedev" /><category term="math" /><category term="curves" /><category term="webgl" /><summary type="html"><![CDATA[In this tutorial we will learn how to draw a Maurer Rose with a LineRenderer in Unity.]]></summary></entry><entry><title type="html">Puzzimals&amp;amp;colon; Open beta</title><link href="http://diegogiacomelli.com.br/puzzimals-open-beta/" rel="alternate" type="text/html" title="Puzzimals&amp;amp;colon; Open beta" /><published>2020-08-12T00:00:00-03:00</published><updated>2020-08-12T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/puzzimals-open-beta</id><content type="html" xml:base="http://diegogiacomelli.com.br/puzzimals-open-beta/"><![CDATA[<p>After 4 months of work, I am finally starting the open beta of Puzzimals: <a href="https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.puzzimals">https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.puzzimals</a></p>

<center>
        <iframe src="https://www.youtube.com/embed/RmLcK4Z7EUY " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="cute-but-challenging">Cute, but challenging!</h2>

<p>Don’t let the cute look or super fun animations fool you, Puzzimals is a cube-matching game challenging you to match identical tiles in 100 levels of thought-provoking puzzles in a world map.</p>

<p>Packed with features and creative puzzles you can combine cubes of ice, wild cards, bombs and so much more!</p>

<p>Each level unlocks and increases in difficulty and offers an almost infinite number of combos.</p>

<p>Fans of casual puzzle games will enjoy the crisp, colorful graphics featuring cute animals and the compelling music offers great relaxation.</p>]]></content><author><name></name></author><category term="News" /><category term="puzzimals" /><category term="unity3d" /><category term="gamedev" /><category term="games" /><summary type="html"><![CDATA[After 4 months of work, I am finally starting the open beta of Puzzimals: https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.puzzimals]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; SettingsProvider</title><link href="http://diegogiacomelli.com.br/unitytips-settings-provider/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; SettingsProvider" /><published>2020-07-21T00:00:00-03:00</published><updated>2020-07-21T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-settings-provider</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-settings-provider/"><![CDATA[<p>You can add a custom section to <a href="https://docs.unity3d.com/Manual/comp-ManagerGroup.html">Project Settings</a> window that allows you to configure some global settings for your project using a <a href="https://docs.unity3d.com/2018.3/Documentation/ScriptReference/SettingsProvider.html">SettingsProvider</a></p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-200-27b940cc8.webp 200w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-400-27b940cc8.webp 400w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-800-27b940cc8.webp 800w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-1572-27b940cc8.webp 1572w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-200-27b940cc8.jpg 200w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-400-27b940cc8.jpg 400w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-800-27b940cc8.jpg 800w, /assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-1572-27b940cc8.jpg 1572w" type="image/jpeg" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/07/21/unitytips-settings-provider/settings-provider-800-27b940cc8.jpg" alt="post image" width="1572" height="618" />
</picture>

      </center>
<p><br /></p>

<h2 id="setup">Setup</h2>
<script src="https://gist.github.com/623de59997fa6f2aaeeb231a2a789933.js?file=FrameworkSettings.cs"> </script>

<script src="https://gist.github.com/623de59997fa6f2aaeeb231a2a789933.js?file=FrameworkSettingsRegister.cs"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><category term="custom-editor" /><summary type="html"><![CDATA[You can add a custom section to Project Settings window that allows you to configure some global settings for your project using a SettingsProvider]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; HelpBox Attribute (with docs button)</title><link href="http://diegogiacomelli.com.br/unitytips-helpbox-attribute/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; HelpBox Attribute (with docs button)" /><published>2020-07-14T00:00:00-03:00</published><updated>2020-07-14T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-helpbox-attribute</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-helpbox-attribute/"><![CDATA[<p>You can create a <a href="https://docs.unity3d.com/ScriptReference/PropertyAttribute.html">PropertyAttribute</a> to display a help box on inspector showing a few lines of information, like <a href="https://docs.unity3d.com/2020.1/Documentation/ScriptReference/EditorGUI.HelpBox.html">EditorGUI.HelpBox</a>, but with a <code class="language-plaintext highlighter-rouge">docs</code> button to the documentation page.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-200-8dae754d8.webp 200w, /assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-400-8dae754d8.webp 400w, /assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-467-8dae754d8.webp 467w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-200-8dae754d8.png 200w, /assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-400-8dae754d8.png 400w, /assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-467-8dae754d8.png 467w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/07/14/unitytips-helpbox-attribute/sample-component-467-8dae754d8.png" alt="post image" width="467" height="413" />
</picture>

      </center>
<p><br /></p>

<h2 id="setup">Setup</h2>
<script src="https://gist.github.com/be4850e86a0aacd3de4266830566b139.js?file=HelpBoxAttribute.cs"> </script>

<script src="https://gist.github.com/be4850e86a0aacd3de4266830566b139.js?file=HelpBoxDrawer.cs"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>

<h2 id="usage">Usage</h2>
<script src="https://gist.github.com/be4850e86a0aacd3de4266830566b139.js?file=SampleComponent.cs"> </script>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><category term="custom-editor" /><summary type="html"><![CDATA[You can create a PropertyAttribute to display a help box on inspector showing a few lines of information, like EditorGUI.HelpBox, but with a docs button to the documentation page.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Social Share</title><link href="http://diegogiacomelli.com.br/unitytips-social-share/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Social Share" /><published>2020-07-07T00:00:00-03:00</published><updated>2020-07-07T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-social-share</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-social-share/"><![CDATA[<p>Using <a href="https://github.com/yasirkula">Süleyman Yasir KULA</a> <a href="https://github.com/yasirkula/UnityNativeShare">Unity Native Share Plugin</a> you can easily add native share to your Android/iOS games.</p>

<p>I made the gist below that uses the plugin to add a social share component to any game object.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/07/07/unitytips-social-share/component-200-f6e7f7555.webp 200w, /assets/images/generated/assets/2020/07/07/unitytips-social-share/component-256-f6e7f7555.webp 256w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/07/07/unitytips-social-share/component-200-f6e7f7555.jpg 200w, /assets/images/generated/assets/2020/07/07/unitytips-social-share/component-256-f6e7f7555.jpg 256w" type="image/jpeg" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/07/07/unitytips-social-share/component-256-f6e7f7555.jpg" alt="post image" width="256" height="382" />
</picture>

      </center>
<p><br /></p>

<h2 id="code">Code</h2>
<script src="https://gist.github.com/c03ec79fa0f0def94726f4b6914b4769.js?file=SocialShare.cs"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><summary type="html"><![CDATA[Using Süleyman Yasir KULA Unity Native Share Plugin you can easily add native share to your Android/iOS games.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Dynamic Log</title><link href="http://diegogiacomelli.com.br/unitytips-dynamic-log/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Dynamic Log" /><published>2020-06-30T00:00:00-03:00</published><updated>2020-06-30T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-dynamic-log</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-dynamic-log/"><![CDATA[<p>You can create a simple logging component to record logs from any UnityEvent and configure them directly in the editor:</p>
<center>
        <iframe src="https://www.youtube.com/embed/HHcZeWjV7vY " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="code">Code</h2>
<script src="https://gist.github.com/bba329d772f4fb7c8e6c9a1d3047bae2.js?file=DynamicLog.cs"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><category term="logging" /><summary type="html"><![CDATA[You can create a simple logging component to record logs from any UnityEvent and configure them directly in the editor:]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Using ScriptableObject and EditorApplication.isPlaying to refresh the game view</title><link href="http://diegogiacomelli.com.br/unitytips-using-scriptableobject-and-editorapplication-isplaying-to-refresh-the-game-view/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Using ScriptableObject and EditorApplication.isPlaying to refresh the game view" /><published>2020-04-28T00:00:00-03:00</published><updated>2020-04-28T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-using-scriptableobject-and-editorapplication-isplaying-to-refresh-the-game-view</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-using-scriptableobject-and-editorapplication-isplaying-to-refresh-the-game-view/"><![CDATA[<p>You can use <a href="https://docs.unity3d.com/ScriptReference/EditorApplication-isPlaying.html">EditorApplication.isPlaying</a> in your custom editor to update the game view when a <a href="https://docs.unity3d.com/ScriptReference/ScriptableObject.html">ScriptableObject</a> is updated and you need to restart the scene or do something more complex to see the result of ScriptableObject changed during the game’s playing in the editor.</p>

<center>
        <iframe src="https://www.youtube.com/embed/oM5-RJU6g2I " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><category term="custom-editor" /><summary type="html"><![CDATA[You can use EditorApplication.isPlaying in your custom editor to update the game view when a ScriptableObject is updated and you need to restart the scene or do something more complex to see the result of ScriptableObject changed during the game’s playing in the editor.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; TimeSpan Box Drawer</title><link href="http://diegogiacomelli.com.br/unitytips-timespan-box-drawer/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; TimeSpan Box Drawer" /><published>2020-04-21T00:00:00-03:00</published><updated>2020-04-21T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-timespan-box-drawer</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-timespan-box-drawer/"><![CDATA[<p>You can create a <a href="https://docs.unity3d.com/ScriptReference/PropertyDrawer.html">PropertyDrawer</a> to display a help box on inspector showing the time information in seconds fields using <a href="https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-timespan-format-strings">TimeSpan format strings</a>:</p>
<center>                
        <img class="screenshot" src="/assets/2020/04/21/unitytips-timespan-box-drawer/TimeSpanBox.gif " alt="post image" />
      </center>
<p><br /></p>

<h2 id="setup">Setup</h2>
<script src="https://gist.github.com/bb3b4bf52e560c3d673cd3d50f563cfb.js?file=TimeSpanBoxAttribute.cs"> </script>

<script src="https://gist.github.com/bb3b4bf52e560c3d673cd3d50f563cfb.js?file=TimeSpanBoxDrawer.cs"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>

<h2 id="usage">Usage</h2>
<script src="https://gist.github.com/bb3b4bf52e560c3d673cd3d50f563cfb.js?file=TimeSpanBoxDrawerUsage.cs"> </script>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><category term="property-drawer" /><summary type="html"><![CDATA[You can create a PropertyDrawer to display a help box on inspector showing the time information in seconds fields using TimeSpan format strings:]]></summary></entry><entry><title type="html">Google Play Games Plugin for Unity&amp;amp;colon; Tips &amp;amp; Tricks</title><link href="http://diegogiacomelli.com.br/google-play-games-plugin-for-unity-tips-and-tricks/" rel="alternate" type="text/html" title="Google Play Games Plugin for Unity&amp;amp;colon; Tips &amp;amp; Tricks" /><published>2020-04-18T00:00:00-03:00</published><updated>2020-04-18T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/google-play-games-plugin-for-unity-tips-and-tricks</id><content type="html" xml:base="http://diegogiacomelli.com.br/google-play-games-plugin-for-unity-tips-and-tricks/"><![CDATA[<p>In this post I will list some tips and tricks that I learned while using the <a href="https://github.com/playgameservices/play-games-plugin-for-unity">Google Play Games Plugin for Unity</a>.</p>

<h2 id="introduction">Introduction</h2>
<p>The Unity3D has a code interface for questions regarding social features in games, these interfaces are called <a href="https://docs.unity3d.com/Manual/net-SocialAPI.html">Social API</a>.</p>

<blockquote>
  <p>It provides a unified interface to different social back-ends, such as GameCenter, and is meant to be used primarily by programmers on the game project.</p>
</blockquote>

<p>When you use it on a real platform, you will need to use some plugin that implement those interfaces, in the case of Android this job is done by the <a href="https://github.com/playgameservices/play-games-plugin-for-unity">Google Play Games Plugin for Unity</a>.</p>

<h2 id="configuring-the-game-on-google-play-console">Configuring the game on Google Play Console</h2>
<p>First of all you need to create the game on <a href="https://play.google.com/publish">Google Play Console</a> as any other game and make an app release (an <code class="language-plaintext highlighter-rouge">Internal test track</code> already works).</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-200-619cc16bd.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-400-619cc16bd.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-800-619cc16bd.webp 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-1600-619cc16bd.webp 1600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-200-619cc16bd.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-400-619cc16bd.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-800-619cc16bd.png 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-1600-619cc16bd.png 1600w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-release-800-619cc16bd.png" alt="post image" width="1912" height="1278" />
</picture>

      </center>
<p><br />
<br /></p>

<p>Then go to the <code class="language-plaintext highlighter-rouge">Services &amp; APIS</code> menu, after enter on the <code class="language-plaintext highlighter-rouge">Google Play game services</code>.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-200-d9c94847a.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-400-d9c94847a.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-800-d9c94847a.webp 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-1600-d9c94847a.webp 1600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-200-d9c94847a.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-400-d9c94847a.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-800-d9c94847a.png 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-1600-d9c94847a.png 1600w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/services-and-apis-800-d9c94847a.png" alt="post image" width="1872" height="212" />
</picture>

      </center>
<p><br />
<br /></p>

<p>Fill only the required information for test, then go to menu <code class="language-plaintext highlighter-rouge">Linked apps</code> and link it to your game on with the app on Google Play Console.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-200-e3ebbde48.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-400-e3ebbde48.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-800-e3ebbde48.webp 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-1600-e3ebbde48.webp 1600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-200-e3ebbde48.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-400-e3ebbde48.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-800-e3ebbde48.png 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-1600-e3ebbde48.png 1600w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/linked-apps-800-e3ebbde48.png" alt="post image" width="1906" height="390" />
</picture>

      </center>
<p><br />
<br /></p>

<h2 id="creating-some-achievements-for-test">Creating some achievements for test</h2>
<p>In the <code class="language-plaintext highlighter-rouge">Game services section</code> open the <code class="language-plaintext highlighter-rouge">Achievements</code> menu and add some achievements.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-200-06befe59c.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-400-06befe59c.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-800-06befe59c.webp 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-1600-06befe59c.webp 1600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-200-06befe59c.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-400-06befe59c.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-800-06befe59c.png 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-1600-06befe59c.png 1600w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-800-06befe59c.png" alt="post image" width="1916" height="404" />
</picture>

      </center>
<p><br />
<br /></p>

<blockquote>
  <p>I found empirically that test achievements that did not have an icon set on the Google Play Console did not show the standard Google Play Games UI when unlocked and were automatically locked again about 1 hour after they were unlocked.</p>
</blockquote>

<h2 id="installing-the-plugin">Installing the plugin</h2>
<p>To install the <code class="language-plaintext highlighter-rouge">Google Play Games Plugin for Unity</code>, you should follow the steps in <a href="https://github.com/playgameservices/play-games-plugin-for-unity#plugin-installation">Plugin Installation</a> and <a href="https://github.com/playgameservices/play-games-plugin-for-unity#android-setup">Android Setup</a> sections.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/android-setup-200-86fe283d8.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/android-setup-400-86fe283d8.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/android-setup-643-86fe283d8.webp 643w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/android-setup-200-86fe283d8.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/android-setup-400-86fe283d8.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/android-setup-643-86fe283d8.png 643w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/android-setup-643-86fe283d8.png" alt="post image" width="643" height="191" />
</picture>

      </center>
<p><br />
<br /></p>

<h2 id="oauth-and-upload-certificate">OAuth and Upload Certificate</h2>
<p>One thing can be a little confusing is about the certificate fingerprints.</p>

<p>Go to <a href="https://play.google.com/publish">Google Play Console</a> on <code class="language-plaintext highlighter-rouge">App Signing</code>section and use the option <code class="language-plaintext highlighter-rouge">App Signing by Google Play</code></p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-200-ffdbecbe0.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-400-ffdbecbe0.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-800-ffdbecbe0.webp 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-1014-ffdbecbe0.webp 1014w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-200-ffdbecbe0.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-400-ffdbecbe0.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-800-ffdbecbe0.png 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-1014-ffdbecbe0.png 1014w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/app-signing-800-ffdbecbe0.png" alt="post image" width="1014" height="264" />
</picture>

      </center>
<p><br />
<br /></p>

<p>Now you need to copy your <code class="language-plaintext highlighter-rouge">SHA-1</code> fingerprint of your <code class="language-plaintext highlighter-rouge">Upload certificate</code> from <code class="language-plaintext highlighter-rouge">App signing</code> section.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-200-6193a130c.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-400-6193a130c.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-800-6193a130c.webp 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-1600-6193a130c.webp 1600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-200-6193a130c.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-400-6193a130c.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-800-6193a130c.png 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-1600-6193a130c.png 1600w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/upload-certificate-800-6193a130c.png" alt="post image" width="1932" height="566" />
</picture>

      </center>
<p><br />
<br /></p>

<p>Then go to your OAuth credentials on <a href="https://console.developers.google.com/apis">Google API console</a>.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-200-4695c1fdb.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-400-4695c1fdb.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-800-4695c1fdb.webp 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-1600-4695c1fdb.webp 1600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-200-4695c1fdb.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-400-4695c1fdb.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-800-4695c1fdb.png 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-1600-4695c1fdb.png 1600w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-credentials-800-4695c1fdb.png" alt="post image" width="2018" height="814" />
</picture>

      </center>
<p><br />
<br /></p>

<p>In <code class="language-plaintext highlighter-rouge">the Google API console</code>, select your game on the top dropdown, then go to <code class="language-plaintext highlighter-rouge">Credentials</code> menu and edit the <code class="language-plaintext highlighter-rouge">OAuth 2.0 Client IDs</code>. Paste the fingertip on the field <code class="language-plaintext highlighter-rouge">SHA-1 certificate fingertip</code> and save it.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-200-d4e86c82d.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-400-d4e86c82d.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-800-d4e86c82d.webp 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-1600-d4e86c82d.webp 1600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-200-d4e86c82d.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-400-d4e86c82d.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-800-d4e86c82d.png 800w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-1600-d4e86c82d.png 1600w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/google-api-console-fingertip-800-d4e86c82d.png" alt="post image" width="1608" height="812" />
</picture>

      </center>
<p><br />
<br /></p>

<blockquote>
  <p>remember to remove the <code class="language-plaintext highlighter-rouge">SHA-1</code> prefix, if you copied it together.</p>
</blockquote>

<h2 id="testing-on-android">Testing on Android</h2>
<p>Now we have the basic setup done, we need to write some code to test it on an Android device:</p>

<script src="https://gist.github.com/c8bff996de4473c201f010b17d42fd2b.js?file=AchievementsController.cs"> </script>

<p>Add the script above to a game object in the scene, build and run the game on a Android device.</p>

<p>If everything was done correctly, you should see a screen like this:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-ui-200-aa631ec71.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-ui-400-aa631ec71.webp 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-ui-640-aa631ec71.webp 640w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-ui-200-aa631ec71.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-ui-400-aa631ec71.png 400w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-ui-640-aa631ec71.png 640w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/achievements-ui-640-aa631ec71.png" alt="post image" width="640" height="617" />
</picture>

      </center>
<p><br /></p>

<h2 id="conclusion">Conclusion</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/conclusion-128-2cdd65c40.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/conclusion-128-2cdd65c40.png 128w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/conclusion-128-2cdd65c40.png" alt="post image" width="128" height="128" />
</picture>

      </center>
<p><br /></p>

<p>With this basic setup you can start to use the other features from Google Play Games Plugin for Unity plugin, as:</p>
<ul>
  <li>unlock/reveal/increment achievement</li>
  <li>post score to leaderboard</li>
  <li>cloud save read/write</li>
  <li>show built-in achievement/leaderboards UI</li>
  <li>events</li>
  <li>video recording of gameplay</li>
  <li>nearby connections</li>
  <li>turn-based multiplayer</li>
  <li>real-time multiplayer</li>
</ul>

<p>Learn more about then on <a href="https://github.com/playgameservices/play-games-plugin-for-unity">plugin GitHub page</a>.</p>

<h2 id="extra-tips-and-tricks">Extra tips and tricks</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/extra-tips-tricks-128-4f597ed4f.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/extra-tips-tricks-128-4f597ed4f.png 128w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/extra-tips-tricks-128-4f597ed4f.png" alt="post image" width="128" height="128" />
</picture>

      </center>
<p><br />
Below a list of tips and tricks for non-common scenarios.</p>

<h3 id="log-on-device">Log on device</h3>
<p>If anything goes wrong on Android device you will need to see it logs, to do so, you can use adb logcat:</p>

<p>On MacOS, this shell do the job:</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /usr/local/Caskroom/android-platform-tools/29.0.5/platform-tools/

./adb logcat <span class="nt">-s</span> Unity PackageManager dalvikvm DEBUG
</code></pre></div></div>
<blockquote>
  <p>If you are using a different version of Android Platform Tools you will need to change the <code class="language-plaintext highlighter-rouge">29.0.5</code> version.</p>
</blockquote>

<h3 id="assembly-definition">Assembly definition</h3>
<p>If your game is using <a href="https://docs.unity3d.com/Manual/ScriptCompilationAssemblyDefinitionFiles.html">Assembly Definition</a> you will need this step.</p>

<p>The plugin code come without any assembly definition, so to use in our code you will need to create two assembly definitions to the plugin:</p>

<p>Go to the <code class="language-plaintext highlighter-rouge">Assets/GooglePlayGames</code> folder and create a new <code class="language-plaintext highlighter-rouge">Assembly Definition</code> called <code class="language-plaintext highlighter-rouge">GooglePlayGames</code>.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-runtime-200-12caebe29.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-runtime-312-12caebe29.webp 312w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-runtime-200-12caebe29.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-runtime-312-12caebe29.png 312w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-runtime-312-12caebe29.png" alt="post image" width="312" height="640" />
</picture>

      </center>
<p><br />
<br /></p>

<p>Go to the <code class="language-plaintext highlighter-rouge">Assets/GooglePlayGames/Editor</code> folder and create a new <code class="language-plaintext highlighter-rouge">Assembly Definition</code> called <code class="language-plaintext highlighter-rouge">GooglePlayGames.Editor</code>.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-editor-200-c0b33e16c.webp 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-editor-309-c0b33e16c.webp 309w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-editor-200-c0b33e16c.png 200w, /assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-editor-309-c0b33e16c.png 309w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2020/04/18/google-play-games-plugin-for-unity-tips-and-tricks/assembly-definition-editor-309-c0b33e16c.png" alt="post image" width="309" height="640" />
</picture>

      </center>
<p><br />
<br /></p>

<p>Now, go to your game assembly definition and add a reference to the <code class="language-plaintext highlighter-rouge">GooglePlayGames</code>.</p>

<blockquote>
  <p>After this, if you receive some compilation error about <code class="language-plaintext highlighter-rouge">BasicApi.Nearby</code> namespace, just close and open Unity again.</p>
</blockquote>

<h3 id="exception-class-not-found-comgoogleandroidgmsgamesgames">Exception class not found com.google.android.gms.games.Games</h3>
<p>If you see the the log message above on the adb logcat, you need to check on Unity <code class="language-plaintext highlighter-rouge">Player Settings / Publishing Settings</code> if the minify settings are set up correctly as describe here: <a href="https://github.com/playgameservices/play-games-plugin-for-unity/blob/master/README.md#play-games-services-proguard-configuration">Play Games Services Proguard configuration</a></p>

<p><br /><br /><br />Icons made by <a href="http://www.freepik.com">Freepik</a>, <a href="http://www.flaticon.com/authors/vignesh-oviyan">Vignesh Oviyan</a> and <a href="https://www.flaticon.com/authors/eucalyp" title="Eucalyp">Eucalyp</a> from <a href="http://www.flaticon.com">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons BY 3.0</a></p>]]></content><author><name></name></author><category term="Tutorial" /><category term="unity3d" /><category term="gamedev" /><category term="android" /><summary type="html"><![CDATA[In this post I will list some tips and tricks that I learned while using the Google Play Games Plugin for Unity.]]></summary></entry><entry><title type="html">Azure Pipelines - Generating DB Script with SqlPackage.exe</title><link href="http://diegogiacomelli.com.br/azure-pipelines-generating-db-script/" rel="alternate" type="text/html" title="Azure Pipelines - Generating DB Script with SqlPackage.exe" /><published>2019-12-17T00:00:00-03:00</published><updated>2019-12-17T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/azure-pipelines-generating-db-script</id><content type="html" xml:base="http://diegogiacomelli.com.br/azure-pipelines-generating-db-script/"><![CDATA[<p>Recently I needed to automate the generation of a database script deploy from a SQL Server Database Project on our Azure Pipelines continuous integration. Below I will describe the steps to achieve such thing.</p>

<h2 id="building-the-solution">Building the solution</h2>
<p>A SQL Server Database Project has a solution (.sln) as any other kind of Visual Studio projects and we need to build it to generate our <a href="https://docs.microsoft.com/en-us/sql/relational-databases/data-tier-applications/data-tier-applications?view=sql-server-ver15">DACPAC</a>.</p>

<blockquote>
  <p>A data-tier application (DAC) is a logical database management entity that defines all of the SQL Server objects - like tables, views, and instance objects, including logins - associated with a user’s database. A DAC is a self-contained unit of SQL Server database deployment that enables data-tier developers and database administrators to package SQL Server objects into a portable artifact called a DAC package, also known as a DACPAC</p>
</blockquote>

<script src="https://gist.github.com/30d0b7c0a3e803cb71ce4b1680d2a584.js?file=solution-build.yml"> </script>

<blockquote>
  <p>The variables used in the script portions are described in the <code class="language-plaintext highlighter-rouge">Complete azure-pipelines.yml</code> in the end of this post</p>
</blockquote>

<h2 id="generating-the-sql-script">Generating the .sql script</h2>
<p>With our .dacpac file built, now we need to generate our .sql database script. To perform this operation we need the <a href="https://docs.microsoft.com/en-us/sql/tools/sqlpackage?view=sql-server-ver15">sqlpackage.exe</a>, this command-line is available in some Azure Pipelines images, as <code class="language-plaintext highlighter-rouge">vs2017-win2016</code>, so you need to use it on your <code class="language-plaintext highlighter-rouge">azure-pipelines.yml</code> file:</p>

<script src="https://gist.github.com/30d0b7c0a3e803cb71ce4b1680d2a584.js?file=image.yml"> </script>

<p>Add the <code class="language-plaintext highlighter-rouge">CmdLine</code> task below to generate the .sql database script:
<script src="https://gist.github.com/30d0b7c0a3e803cb71ce4b1680d2a584.js?file=db-script-generate.yml"> </script></p>

<h2 id="publishing-the-sql-script">Publishing the .sql script</h2>
<p>Now we need to publish the .sql file to the build artifacts:
<script src="https://gist.github.com/30d0b7c0a3e803cb71ce4b1680d2a584.js?file=db-script-publish.yml"> </script></p>

<h2 id="complete-azure-pipelinesyml">Complete azure-pipelines.yml</h2>
<script src="https://gist.github.com/30d0b7c0a3e803cb71ce4b1680d2a584.js?file=azure-pipelines.yml"> </script>

<h2 id="extra-points">Extra points</h2>
<p>In the approach described above the .sql files is not automatically applied to the database, so someone need to download, check and apply the file manually against the target database. If you want to apply the database script automatically you can change <code class="language-plaintext highlighter-rouge">CmdLine</code> task that generate the .sql file to update the target database using the <a href="https://docs.microsoft.com/en-us/sql/tools/sqlpackage?view=sql-server-ver15#publish-parameters-properties-and-sqlcmd-variables"><code class="language-plaintext highlighter-rouge">action:publish</code> option of sqlpackage.exe</a>.</p>]]></content><author><name></name></author><category term="Article" /><category term="dotnet" /><category term="azure" /><category term="azure-pipelines" /><category term="database" /><category term="continuous-integration" /><summary type="html"><![CDATA[Recently I needed to automate the generation of a database script deploy from a SQL Server Database Project on our Azure Pipelines continuous integration. Below I will describe the steps to achieve such thing.]]></summary></entry><entry><title type="html">WinForms sample for HarSharp</title><link href="http://diegogiacomelli.com.br/winforms-sample-for-harsharp/" rel="alternate" type="text/html" title="WinForms sample for HarSharp" /><published>2019-10-29T00:00:00-03:00</published><updated>2019-10-29T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/winforms-sample-for-harsharp</id><content type="html" xml:base="http://diegogiacomelli.com.br/winforms-sample-for-harsharp/"><![CDATA[<p><a href="https://github.com/AJ1000">Ajay Tandon</a> sent me a WinForms sample that he made using HarSharp.</p>

<p>The HTTP Archive (HAR) format as defined in the W3C Specification is an archival format for HTTP transactions that can be used by a web browser to export detailed performance data about web pages it loads.</p>

<p><a href="https://github.com/giacomelli/harsharp">HarSharp</a> is a small and easy-to-use library to parse HAR files to .NET objects that I created some years ago for .NET Framework, today I released the version 2.0.0 with support to .NET Core / .NET Standard.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-200-6befe6eac.webp 200w, /assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-400-6befe6eac.webp 400w, /assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-800-6befe6eac.webp 800w, /assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-1385-6befe6eac.webp 1385w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-200-6befe6eac.png 200w, /assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-400-6befe6eac.png 400w, /assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-800-6befe6eac.png 800w, /assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-1385-6befe6eac.png 1385w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/10/29/winforms-sample-for-harsharp/har-file-analyzer-800-6befe6eac.png" alt="post image" width="1385" height="788" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>Har File Analyzer with a HAR file loaded</p>
</span></center>
<p><br /></p>

<h1 id="files">Files</h1>
<p>If you want to use the the Har File Analyzer or want to know how to create a Win Forms app with HarSharp, you can download to full solution here: <a href="/assets/2019/10/29/winforms-sample-for-harsharp/HarSharp_wingui.zip">HarSharp_wingui.zip<a></a></a></p>]]></content><author><name></name></author><category term="News" /><category term="harsharp" /><category term="dotnet" /><category term="winforms" /><summary type="html"><![CDATA[Ajay Tandon sent me a WinForms sample that he made using HarSharp.]]></summary></entry><entry><title type="html">HarSharp 2.0.0. - .NET Core</title><link href="http://diegogiacomelli.com.br/harsharp-2.0.0-dotnet-core/" rel="alternate" type="text/html" title="HarSharp 2.0.0. - .NET Core" /><published>2019-09-30T00:00:00-03:00</published><updated>2019-09-30T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/harsharp-2.0.0-dotnet-core</id><content type="html" xml:base="http://diegogiacomelli.com.br/harsharp-2.0.0-dotnet-core/"><![CDATA[<p>The HTTP Archive (HAR) format as defined in the W3C Specification is an archival format for HTTP transactions that can be used by a web browser to export detailed performance data about web pages it loads.</p>

<p><a href="https://github.com/giacomelli/harsharp">HarSharp</a> is a small and easy-to-use library to parse HAR files to .NET objects that I created some years ago for .NET Framework, today I released the version 2.0.0 with support to .NET Core / .NET Standard.</p>

<p>NuGet package:</p>
<blockquote>
  <p>install-package HarSharp</p>
</blockquote>

<p>More details at: <a href="">https://github.com/giacomelli/harsharp</a></p>

<hr />

<h2 id="thanks-to">Thanks to</h2>
<p>I would like to thanks to <a href="https://github.com/andrecosta-tw">André Costa</a> and <a href="https://github.com/mmoreira2000">mmoreira2000</a> for made pull-requests for bug fixes and <a href="https://github.com/Thoorium">Olivier Beaudoin</a> for contributing with the <a href="https://github.com/giacomelli/HarSharp/pull/9">support to .NET Core / .NET Standard</a>.</p>]]></content><author><name></name></author><category term="News" /><category term="harsharp" /><category term="dotnet" /><category term="release" /><summary type="html"><![CDATA[The HTTP Archive (HAR) format as defined in the W3C Specification is an archival format for HTTP transactions that can be used by a web browser to export detailed performance data about web pages it loads.]]></summary></entry><entry><title type="html">Creating dotnet new templates with samples</title><link href="http://diegogiacomelli.com.br/creating-dotnet-new-templates-with-samples/" rel="alternate" type="text/html" title="Creating dotnet new templates with samples" /><published>2019-09-04T00:00:00-03:00</published><updated>2019-09-04T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/creating-dotnet-new-templates-with-samples</id><content type="html" xml:base="http://diegogiacomelli.com.br/creating-dotnet-new-templates-with-samples/"><![CDATA[<p>In this post I will show the needed steps and samples to create dotnet new templates.</p>

<h2 id="introduction">Introduction</h2>

<p>Recently a friend asked me about the steps I follow to create dotnet new templates, while I was describing the steps to him I realized that information could be usefull to someone else or even to my future self.</p>

<p>Sometime ago I created some dotnet new templates for GeneticSharp: <a href="http://diegogiacomelli.com.br/dotnet-new-templates-for-GeneticSharp/">dotnet new templates for GeneticSharp</a> and I will use that template as samples for the steps below.</p>

<h2 id="nuget-pack--dotnet-pack">Nuget pack / dotnet pack</h2>
<p>Nowadays there are two main ways to build a dotnet new template: creating a <code class="language-plaintext highlighter-rouge">.nuspec</code> file or defining the package properties directly inside your <code class="language-plaintext highlighter-rouge">.csproj</code>.</p>

<p>To GeneticSharp templates I used a <code class="language-plaintext highlighter-rouge">.nuspec</code>.</p>

<h2 id="steps-and-samples">Steps and samples</h2>
<p>When I was trying to create the first templates I used this Microsoft documentation to learn about it: <a href="https://docs.microsoft.com/en-us/dotnet/core/tools/custom-templates">Custom templates for dotnet new</a>.</p>

<h3 id="creating">Creating</h3>
<ul>
  <li>Create a <code class="language-plaintext highlighter-rouge">Templates</code> folder: <a href="https://github.com/giacomelli/GeneticSharp/tree/master/src/Templates">sample</a></li>
  <li>Define the templates in the <code class="language-plaintext highlighter-rouge">.csproj</code> or create a <code class="language-plaintext highlighter-rouge">.nuspec</code>: <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/Templates/GeneticSharp.Templates.nuspec">sample</a></li>
  <li>Create a <code class="language-plaintext highlighter-rouge">content</code> folder inside the <code class="language-plaintext highlighter-rouge">Templates</code> folder: <a href="https://github.com/giacomelli/GeneticSharp/tree/master/src/Templates/content">sample</a></li>
  <li>Create a subfolder inside <code class="language-plaintext highlighter-rouge">content</code> for each template and put your template project source code there: <a href="https://github.com/giacomelli/GeneticSharp/tree/master/src/Templates/content/ConsoleApp">sample</a></li>
  <li>For each template folder, create a subfolder <code class="language-plaintext highlighter-rouge">template.config</code> then create a <code class="language-plaintext highlighter-rouge">template.json</code> file: <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/Templates/content/ConsoleApp/.template.config/template.json">sample</a></li>
</ul>

<div class="note"><p>In this <code class="language-plaintext highlighter-rouge">.json</code> you should define things like template name (shortName) and what it’s root namespace that will be replaced when a new project use this template (sourceName)</p>
</div>

<h3 id="building-and-testing">Building and testing</h3>
<ul>
  <li>Now you can create the <code class="language-plaintext highlighter-rouge">.nupkg</code> with the <code class="language-plaintext highlighter-rouge">dotnet pack</code> or <code class="language-plaintext highlighter-rouge">nuget pack</code></li>
  <li>You can test your templates locally installing them directly from the <code class="language-plaintext highlighter-rouge">.nupkg</code> file: <code class="language-plaintext highlighter-rouge">dotnet new -i your_templates_file.nupkg</code></li>
  <li>Install the template: <code class="language-plaintext highlighter-rouge">dotnet new template_shortname -n new_project_namespace -o output_folder</code></li>
</ul>

<div class="note"><p>Here a <code class="language-plaintext highlighter-rouge">.cmd</code> sample for last 3 steps: <a href="https://github.com/giacomelli/GeneticSharp/blob/master/tools/buildTemplatesNuget.cmd">sample</a></p>
</div>

<h3 id="publishing">Publishing</h3>
<ul>
  <li>If everything is right you can publish your <code class="language-plaintext highlighter-rouge">.nupkg</code> on <a href="">http://nuget.org</a> or to your private NuGet feed: <a href="https://www.nuget.org/packages/GeneticSharp.Templates/">sample</a></li>
</ul>

<h2 id="conclusion">Conclusion</h2>
<p>That’s it, with just 9 steps you can create your own dotnet new template and jumpstart your next project setup.</p>]]></content><author><name></name></author><category term="Tutorial" /><category term="dotnet" /><summary type="html"><![CDATA[In this post I will show the needed steps and samples to create dotnet new templates. Introduction]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; String interpolation</title><link href="http://diegogiacomelli.com.br/unitytips-string-interpolation/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; String interpolation" /><published>2019-09-03T00:00:00-03:00</published><updated>2019-09-03T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-string-interpolation</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-string-interpolation/"><![CDATA[<p>Since C# 6.0 you can use <a href="https://docs.microsoft.com/pt-br/dotnet/csharp/language-reference/tokens/interpolated">String interpolation</a> to make code more readable:</p>
<center>                
        <img class="screenshot" src="/assets/2019/09/03/unitytips-string-interpolation/string-interpolation.gif " alt="post image" />
      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>The sample lines will result in the same string</p>
</span></center>
<p><br /></p>

<blockquote>
  <p>The $ special character identifies a string literal as an interpolated string.</p>
</blockquote>

<blockquote>
  <p>String interpolation provides a more readable and convenient syntax to create formatted strings than a string composite formatting feature.</p>
</blockquote>]]></content><author><name></name></author><category term="Article" /><category term="unity3d" /><category term="unitytips" /><category term="csharp" /><summary type="html"><![CDATA[Since C# 6.0 you can use String interpolation to make code more readable: The sample lines will result in the same string]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Expression body definition</title><link href="http://diegogiacomelli.com.br/unitytips-expression-body-definition/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Expression body definition" /><published>2019-08-27T00:00:00-03:00</published><updated>2019-08-27T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-expression-body-definition</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-expression-body-definition/"><![CDATA[<p>When you have a single line method, you can use <a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/lambda-operator#expression-body-definition">expression body definition</a> do simplify and reduce the lines of code:</p>

<center>                
        <img class="screenshot" src="/assets/2019/08/27/unitytips-expression-body-definition/expression-body-definition-methods.gif " alt="post image" />
      </center>
<p><br /></p>

<blockquote>
  <p>Expression body definitions for methods and read-only properties are supported starting with C# 6. Expression body definitions for constructors, finalizers, property accessors, and indexers are supported starting with C# 7.0.</p>
</blockquote>

<p>So you can use the expression body definition for other members, like properties:</p>
<center>                
        <img class="screenshot" src="/assets/2019/08/27/unitytips-expression-body-definition/expression-body-definition-properties.gif " alt="post image" />
      </center>
<p><br /></p>]]></content><author><name></name></author><category term="Article" /><category term="unity3d" /><category term="unitytips" /><category term="csharp" /><summary type="html"><![CDATA[When you have a single line method, you can use expression body definition do simplify and reduce the lines of code:]]></summary></entry><entry><title type="html">Dapper and the NVARCHAR(4000) arguments</title><link href="http://diegogiacomelli.com.br/dapper-and-the-nvarchar-4000-arguments/" rel="alternate" type="text/html" title="Dapper and the NVARCHAR(4000) arguments" /><published>2019-08-14T00:00:00-03:00</published><updated>2019-08-14T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/dapper-and-the-nvarchar-4000-arguments</id><content type="html" xml:base="http://diegogiacomelli.com.br/dapper-and-the-nvarchar-4000-arguments/"><![CDATA[<p>Performing a profiler in the queries sended to the database you can see that in some cases Dapper is sending the string arguments as <code class="language-plaintext highlighter-rouge">NVARCHAR (4000)</code>.</p>

<h2 id="introduction">Introduction</h2>
<p>This happen because Dapper cannot infer what is the exactly type and length of the table column on database.</p>

<p>The downside of the <code class="language-plaintext highlighter-rouge">NVARCHAR (4000)</code> in arguments is that the database can choose a bad execution plan for the query.</p>

<h2 id="solution">Solution</h2>
<p>To avoid this you can pass the type of the argument to Dapper:</p>

<script src="https://gist.github.com/57f1f930ddd894eb8ab54fffed453842.js?file=dapper.sample1.cs"> </script>

<p>To make this solution easier to use I made two extension methods <code class="language-plaintext highlighter-rouge">ToVarChar</code> and <code class="language-plaintext highlighter-rouge">ToNVarChar</code>:</p>

<script src="https://gist.github.com/57f1f930ddd894eb8ab54fffed453842.js?file=dapper.sample2.cs"> </script>

<h2 id="extension-methods">Extension methods</h2>
<script src="https://gist.github.com/57f1f930ddd894eb8ab54fffed453842.js?file=DapperArgumentExtensions.cs"> </script>]]></content><author><name></name></author><category term="Lab" /><category term="dotnet" /><category term="dapper" /><category term="sql" /><summary type="html"><![CDATA[Performing a profiler in the queries sended to the database you can see that in some cases Dapper is sending the string arguments as NVARCHAR (4000).]]></summary></entry><entry><title type="html">Can I send batch messages larger than 256 KB to Azure Service Bus?</title><link href="http://diegogiacomelli.com.br/can-i-send-batch-messages-larger-than-256-kb-to-azure-service-bus/" rel="alternate" type="text/html" title="Can I send batch messages larger than 256 KB to Azure Service Bus?" /><published>2019-08-13T00:00:00-03:00</published><updated>2019-08-13T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/can-i-send-batch-messages-larger-than-256-kb-to-azure-service-bus</id><content type="html" xml:base="http://diegogiacomelli.com.br/can-i-send-batch-messages-larger-than-256-kb-to-azure-service-bus/"><![CDATA[<h2 id="the-short-answer">The short answer</h2>
<p>NO!</p>

<h2 id="the-long-answer">The long answer</h2>
<p>The Azure Service Bus maximum message size is 256 KB for <code class="language-plaintext highlighter-rouge">Standard tier</code> and <code class="language-plaintext highlighter-rouge">1 MB</code> for <code class="language-plaintext highlighter-rouge">Premium tier</code> (<a href="https://docs.microsoft.com/azure/service-bus-messaging/service-bus-quotas">https://docs.microsoft.com/azure/service-bus-messaging/service-bus-quotas</a>).</p>

<p>A simple solution to overcome this limitation is split the messages in blocks lower or equal to 256 KB size.</p>

<p>Below is a simplified version of the code that I used for Standard tier  case:</p>

<script src="https://gist.github.com/ed0d6eb6a8457eabed916e86c369c56c.js"> </script>]]></content><author><name></name></author><category term="Lab" /><category term="dotnet" /><category term="azure" /><category term="azure-service-bus" /><summary type="html"><![CDATA[The short answer NO!]]></summary></entry><entry><title type="html">Deploying a T4 Template with dotnet pack</title><link href="http://diegogiacomelli.com.br/deploying-a-t4-template-with-dotnet-pack/" rel="alternate" type="text/html" title="Deploying a T4 Template with dotnet pack" /><published>2019-08-08T00:00:00-03:00</published><updated>2019-08-08T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/deploying-a-t4-template-with-dotnet-pack</id><content type="html" xml:base="http://diegogiacomelli.com.br/deploying-a-t4-template-with-dotnet-pack/"><![CDATA[<p>In this post I will show how to deploy a T4 Template to a target project using a NuGet package built with dotnet CLI pack command.</p>

<h2 id="introduction">Introduction</h2>

<p>Recently I had to distribute a T4 template inside a NuGet package, so developers who installed the NuGet package would get, in addition to the library assemblies, a T4 template to help generate some scaffold code.</p>

<p>Nowadays there are two main ways to build a NuGet package: creating a <code class="language-plaintext highlighter-rouge">.nuspec</code> file or defining the package properties directly inside your <code class="language-plaintext highlighter-rouge">.csproj</code>.</p>

<p>The project that I want to distributed via NuGet is a .NET Standard library, so I decided to use the the dotnet core way: define the package properties inside the <code class="language-plaintext highlighter-rouge">.csproj</code> file.</p>

<h2 id="creating-the-nuget-project">Creating the NuGet project</h2>
<p>We will create a sample project to use during the post. Open a command-line/terminal and type:</p>

<script src="https://gist.github.com/34f72d3e54b5ac658a924bbb0f1f7e72.js?file=create-sample-project.sh"> </script>

<p>Let’s say that the T4 Template that we want to distribute is located inside a folder called <code class="language-plaintext highlighter-rouge">Templates</code> and the file is named <code class="language-plaintext highlighter-rouge">Scaffold.tt</code>.</p>

<p>Now open the <code class="language-plaintext highlighter-rouge">SampleNugetProject.csproj</code> in the Visual Studio and add a <code class="language-plaintext highlighter-rouge">T4 Template</code>:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/add-t4-template-200-26dab70a3.webp 200w, /assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/add-t4-template-400-26dab70a3.webp 400w, /assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/add-t4-template-558-26dab70a3.webp 558w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/add-t4-template-200-26dab70a3.png 200w, /assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/add-t4-template-400-26dab70a3.png 400w, /assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/add-t4-template-558-26dab70a3.png 558w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/add-t4-template-558-26dab70a3.png" alt="post image" width="558" height="412" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>Add new item…</p>
</span></center>
<p><br /></p>

<p>Our <code class="language-plaintext highlighter-rouge">Solution Explorer</code> should look like this:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/t4-template-added-solution-explorer-200-b5b822c1f.webp 200w, /assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/t4-template-added-solution-explorer-339-b5b822c1f.webp 339w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/t4-template-added-solution-explorer-200-b5b822c1f.png 200w, /assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/t4-template-added-solution-explorer-339-b5b822c1f.png 339w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/08/08/deploying-a-t4-template-with-dotnet-pack/t4-template-added-solution-explorer-339-b5b822c1f.png" alt="post image" width="339" height="194" />
</picture>

      </center>
<p><br /></p>

<h2 id="creating-a-targets">Creating a .targets</h2>
<p>We need to create a <code class="language-plaintext highlighter-rouge">.targets</code> file, it will be used to copy the T4 Template from the NuGet package folder to the target project in the build process:</p>

<p>Create a file with the same name of your NuGet package project, but with the extensions <code class="language-plaintext highlighter-rouge">.targets</code>.</p>

<p>For our sample the file will be <code class="language-plaintext highlighter-rouge">SampleNugetProject.targets</code>:</p>

<script src="https://gist.github.com/34f72d3e54b5ac658a924bbb0f1f7e72.js?file=SampleNugetProject.targets"> </script>

<h2 id="changing-the-csproj">Changing the .csproj</h2>
<p>In the project <code class="language-plaintext highlighter-rouge">.csproj</code> just add this <code class="language-plaintext highlighter-rouge">ItemGroup</code>:</p>

<script src="https://gist.github.com/34f72d3e54b5ac658a924bbb0f1f7e72.js?file=SampleNugetProject.csproj"> </script>

<h2 id="building-the-nuget-package">Building the NuGet package</h2>
<p>Inside the folder where are our <code class="language-plaintext highlighter-rouge">.csproj</code> and <code class="language-plaintext highlighter-rouge">.targets</code> files, type:</p>

<script src="https://gist.github.com/34f72d3e54b5ac658a924bbb0f1f7e72.js?file=dotnet-pack.sh"> </script>

<p>This will create a file <code class="language-plaintext highlighter-rouge">bin\Debug\SampleNugetProject.1.0.0.nupkg</code>.</p>

<h2 id="testing-the-nuget-package">Testing the NuGet package</h2>
<p>Create a new .NET Core project to test the package:</p>

<script src="https://gist.github.com/34f72d3e54b5ac658a924bbb0f1f7e72.js?file=create-TargetTestProject.sh"> </script>

<p>Now, add the NuGet package to the target project.
<script src="https://gist.github.com/34f72d3e54b5ac658a924bbb0f1f7e72.js?file=add-package.sh"> </script></p>

<blockquote>
  <p>To test our NuGet package without publish it to a NuGet source, just use the <code class="language-plaintext highlighter-rouge">--source</code> option and point it to the <code class="language-plaintext highlighter-rouge">SampleNugetProject.1.0.0.nupkg</code> folder.</p>
</blockquote>

<p>If we look to our <code class="language-plaintext highlighter-rouge">TargetTestProject</code> there is no <code class="language-plaintext highlighter-rouge">Scaffold.tt</code> file yet, this is because it will copied from NuGet package folder to the project structure during the build process.</p>

<p>Just build the target project and the <code class="language-plaintext highlighter-rouge">Scaffold.tt</code> will be copied.
<script src="https://gist.github.com/34f72d3e54b5ac658a924bbb0f1f7e72.js?file=dotnet-build.sh"> </script></p>

<h2 id="conclusion">Conclusion</h2>
<p>That’s it, now we have created a NuGet package that copy a T4 Template to target project’s structure.</p>

<p>You can expand this solution to copy other kind of files to the target project.</p>

<p>If you want to dig deeper into generating NuGet packages using dotnet-cli, starts with <a href="https://docs.microsoft.com/en-us/nuget/create-packages/creating-a-package-dotnet-cli">Create a NuGet package using the dotnet CLI</a>.</p>

<script>
        $(document).ready(function() {
          $('.gist-meta').remove();
        });
      </script>]]></content><author><name></name></author><category term="Tutorial" /><category term="dotnet" /><category term="t4-template" /><category term="nuget" /><summary type="html"><![CDATA[In this post I will show how to deploy a T4 Template to a target project using a NuGet package built with dotnet CLI pack command. Introduction]]></summary></entry><entry><title type="html">Unity and Game Development links (Aug 5th 2019)</title><link href="http://diegogiacomelli.com.br/unity-and-gamedev-links-aug-5th-2019/" rel="alternate" type="text/html" title="Unity and Game Development links (Aug 5th 2019)" /><published>2019-08-05T00:00:00-03:00</published><updated>2019-08-05T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-and-gamedev-links-aug-5th-2019</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-and-gamedev-links-aug-5th-2019/"><![CDATA[<ul>
  <li>
    <p><strong>Phi Dinh</strong> remembered a Twitter moment with tips and tutorials about the shaders used on Recompile. (<a href="https://twitter.com/i/moments/1122251136239570947">Recompile Unity Tips and Tutorials</a>).</p>
  </li>
  <li><strong>Thomas Krogh-Jacobsen</strong> wrote a blog post about Unity 2019.2 release. This version has more than 170 new features. (<a href="https://blogs.unity3d.com/2019/07/30/heres-whats-in-the-brand-new-unity-2019-2">Here’s what’s in the brand-new Unity 2019.2</a>).
    <blockquote>
      <p>Screen.cutouts for iOS/Android, Burst Compiler updates, TypeCache API in Editor code, PhysX Cloth Solver update, DSPGraph audio mixing/rendering engine, Intel® VTune™ Amplifier support, IDE support moving to packages, .NET 4.x is now default and Incremental Garbage Collection.</p>
    </blockquote>
  </li>
  <li><strong>Sykoo</strong> made a video about Unity 2019.2 features too (<a href="https://www.youtube.com/watch?v=qoERAtLGq-8">Unity 2019.2 is now available!</a>).</li>
</ul>
<center>
        <iframe src="https://www.youtube.com/embed/qoERAtLGq-8 " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<ul>
  <li>
    <p><strong>Andy Touch</strong> created a Twitter thread about the different 2D Light Types available in Unity 2019.2 (<a href="https://twitter.com/andytouch/status/1156204606562738176">2D Light Types</a>).</p>
  </li>
  <li>
    <p><strong>Dilmer Valecillos</strong> made a video showing how to use low polly assets for VR (<a href="https://www.youtube.com/watch?v=4SVUeuV6TpU">Unity3d Oculus Quest Development - Adding A Low Poly Asset for VR Usage from the Asset Store</a>).</p>
  </li>
  <li><strong>Alex Lindman</strong> wrote a blog post on custom lighting in Shader Graph (<a href="https://blogs.unity3d.com/2019/07/31/custom-lighting-in-shader-graph-expanding-your-graphs-in-2019">Custom Lighting in Shader Graph: Expanding your graphs in 2019</a>).
    <blockquote>
      <p>With the release of Unity Editor 2019.1, the Shader Graph package officially came out of preview! Now, in 2019.2, we’re bringing even more features and functionality to Shader Graph.</p>
    </blockquote>
  </li>
  <li><strong>Kenney</strong> has an incredible collection of free game assets that any game developer can use (<a href="https://kenney.nl/assets">Kenney Assets</a>).
    <blockquote>
      <p>License: (CC0 1.0 Universal) You’re free to use these game assets in any project, personal or commercial. There’s no need to ask permission before using these. Giving attribution is not required, but is greatly appreciated!</p>
    </blockquote>
  </li>
  <li><strong>Lindsay Cox</strong> made a peformance test comparing single thead, TPL and C# Job System (<a href="http://lindsaycox.co.uk/blog/unity/single-thread-vs-tasks-vs-unity-c-jobs-simple-performance-test/">Single Thread Vs Tasks Vs Unity C# Jobs – Simple Performance Test</a>).
    <blockquote>
      <p>In conclusion then, based on the above tests, if you are going to crunch through work without the Burst Compiler, maybe look at using something like Tasks first before opting for Jobs. If you are going to use the Burst Compiler, use the Job System.</p>
    </blockquote>
  </li>
  <li><strong>Kristin Stock</strong> made a video on procedurally generated low-poly planets (<a href="https://www.youtube.com/watch?v=2FfzEdALOGQ">Procedurally Generated Low-Poly Planets in Unity</a>).</li>
</ul>
<center>
        <iframe src="https://www.youtube.com/embed/2FfzEdALOGQ " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<ul>
  <li><strong>Eduardo Oriz and Mike Geig</strong> wrote a blog post about how to set up your Unity project for retro 16-bit games (<a href="https://blogs.unity3d.com/2019/08/02/2d-pixel-perfect-how-to-set-up-your-unity-project-for-retro-16-bit-games">2D Pixel Perfect: How to set up your Unity project for retro 16-bit games</a>).
    <blockquote>
      <p>In our first 2D Pixel Perfect guide for retro games, we showed you how to set up the 2D Pixel Perfect tool and how 8-bit graphics were made back in the day. In this post, we fast-forward to the 16-bit era. With the help of Mega Cat Studios, you’ll learn how to create authentic art for Sega Genesis (or Mega Drive) and Super NES-style games using Unity settings, graphics structures, and color palettes</p>
    </blockquote>
  </li>
  <li><strong>Unity</strong> released the <code class="language-plaintext highlighter-rouge">ML-Agents Beta 0.9.0</code> (<a href="https://github.com/Unity-Technologies/ml-agents/releases/tag/0.9.0">ML-Agents Beta 0.9.0</a>)
    <blockquote>
      <p>Generative Adversarial Imitation Learning, pre-training for the PPO trainer, training generalized reinforcement learning agents, options for Nature and ResNet CNN architectures.</p>
    </blockquote>
  </li>
</ul>]]></content><author><name></name></author><category term="News" /><category term="unity3d" /><category term="gamedev" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Developing Web APIs - Good Practices</title><link href="http://diegogiacomelli.com.br/developing-web-apis-good-practices/" rel="alternate" type="text/html" title="Developing Web APIs - Good Practices" /><published>2019-08-02T00:00:00-03:00</published><updated>2019-08-02T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/developing-web-apis-good-practices</id><content type="html" xml:base="http://diegogiacomelli.com.br/developing-web-apis-good-practices/"><![CDATA[<p>Some days ago a coworker asked me what I thought about wich status code a web api should return and if there are some good pratices to follow. When he asked this, I remembered that I’ve followed some good pratices, most of them based on my emperical knowledge of years of development and consuming web apis. For this reason I wrote this post as a way to organize and document what are those good pratices that I follow. Maybe it can be useful to someone.</p>

<h2 id="introduction">Introduction</h2>
<p>The list below is not intended to be right and definitive, there is no silver bullet, but just things that I learned and tested in more of a decade working with web apis. Things that worked for me and my projects can easily not work for you and your projects, because context is other  and challenges too.</p>

<p>Besides, if you disagree with some of this points, please let a comment in the end of the post, we could learn more with it!</p>

<h2 id="rest-or-not-restful">REST or not RESTful?</h2>
<p>First of all, build a software that really attend the requisites, that has good code quality and has good performance is more important than follow someone’s guidance, with this said I always try to implement REST web apis, but exceptions exists and we need to work with them, so don’t try to force some operation than will don’t fit well on REST way.</p>

<p>Remember, REST is a style architecture and as every architecture, you can (and most of time should) adapt it for your project needs and capacities.</p>

<h2 id="verbs-and-urls">Verbs and URLs</h2>
<p>Probably the most important rule about web api is to respect the meaning of verbs, this will really make the life easer for those whom are consuming your web api.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">GET</code>: to retrieve something.</li>
  <li><code class="language-plaintext highlighter-rouge">POST</code>: to create something.</li>
  <li><code class="language-plaintext highlighter-rouge">PUT</code>: to complete update something.</li>
  <li><code class="language-plaintext highlighter-rouge">PATCH</code>: to partially update something.</li>
  <li><code class="language-plaintext highlighter-rouge">DELETE</code>: to delete something</li>
</ul>

<p>Then, combining with URLs, you get a really clear way to work:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">GET</code>
    <ul>
      <li>/resource  : returns all resources.</li>
      <li>/resource/1: returns the resource with id 1.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">POST</code>
    <ul>
      <li>/resource: creates a new resource.</li>
      <li>/resource/1: Not used.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">PUT</code>
    <ul>
      <li>/resource: complete updates a bunch of resources (rarelly used).</li>
      <li>/resource/1: complete updates the resource with id 1.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">PATCH</code>
    <ul>
      <li>/resource: partial updates a bunch of resources (rarelly used).</li>
      <li>/resource/1: partial updates the resource with id 1.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">DELETE</code>
    <ul>
      <li>/resource: deletes all resources (rarelly used, mostly never).</li>
      <li>/resource/1: delete the resource with id 1.</li>
    </ul>
  </li>
</ul>

<h2 id="status-code">Status code</h2>
<p>I try to keep the range of returned status code small, the smallest one has only 3 status:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">200</code>: succesful request.</li>
  <li><code class="language-plaintext highlighter-rouge">400</code>: a client error.</li>
  <li><code class="language-plaintext highlighter-rouge">500</code> : a server error.</li>
</ul>

<p>Of course, you can extend this one, like use <code class="language-plaintext highlighter-rouge">201 (created)</code> to return status for POST verbs, and <code class="language-plaintext highlighter-rouge">401</code> to unauthorized requests, but try to keep this list small, so it will be easy to who consume your API take decisions about what to do with different status code.</p>

<p>Another good pratice is return an <code class="language-plaintext highlighter-rouge">error code</code> and an <code class="language-plaintext highlighter-rouge">error message</code> in the <code class="language-plaintext highlighter-rouge">json</code> of requests that result in <code class="language-plaintext highlighter-rouge">400</code> status code (client error), this way the client can react or display different informations to the end user. 
In most cases, <code class="language-plaintext highlighter-rouge">400</code> status code are about some business logic rule that need to be respect to result in a sucessful request, so provide some information to client can help it to understand what is wrong in the request.</p>

<h2 id="versioning">Versioning</h2>
<p>I see a lot of developers using <code class="language-plaintext highlighter-rouge">v1</code> inside the code to “versioning” their web apis, I really dislike this method, I can understand it is easy to deploy a new web api version to the same virtual application using this technique, but we need to agree that we do versioning using some SCM, like Git, SVN and Mercurial with everything else that correspond to our code, why should we do versioning inside the code in the case of web api?</p>

<p>In most of case your web api will have only one version, especially when you are developing a <code class="language-plaintext highlighter-rouge">SPA</code> app and it is the only client of your web api.</p>

<blockquote>
  <p>Versioning of APIs is a controversial topic—you will find a lot of contradictory guidance on the internet.
The pattern that is most commonly practiced is probably the one with a version identifier in a path
segment of URLs. Since there is little consensus on versioning, simply offering our opinions on the topic may not be very helpful, but we offer two thoughts:</p>
  <ol>
    <li>Doing nothing at all for API versioning is an intelligent approach that is getting more attention</li>
    <li>Links and version identifiers in URLs make awkward bedfellows</li>
  </ol>
</blockquote>
<center><span style="font-style:italic; font-size:small"><p><a href="https://cloud.google.com/files/apigee/apigee-web-api-design-the-missing-link-ebook.pdf">Web API Design: The Missing Link</a></p>
</span></center>
<p><br /></p>

<h3 id="my-web-api-really-need-versions">My web api really need versions</h3>
<p>In this case, the approach that I use is create a new site/virtual application every time that I need to publish a major version of my web api, so, in the code of the routes there is no <code class="language-plaintext highlighter-rouge">v1</code>, <code class="language-plaintext highlighter-rouge">v2</code> and so on.</p>

<p>Let say I have a web api publish on <code class="language-plaintext highlighter-rouge">http://diegogiacomelli.com.br/sample-api/v1</code>, than I made some breaking changes to the public interface of the web api and need to publish another version in a separated url to avoid any impact to the users that still use the old <code class="language-plaintext highlighter-rouge">v1</code>. I will just create the new <code class="language-plaintext highlighter-rouge">v2</code> virtual application, and the urls will be:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">http://diegogiacomelli.com.br/sample-api/v1</code></li>
  <li><code class="language-plaintext highlighter-rouge">http://diegogiacomelli.com.br/sample-api/v2</code></li>
</ul>

<p>In a moment in future you will want to remove the support to the <code class="language-plaintext highlighter-rouge">v1</code> version, in that moment you could configure your virtual application to redirect (status code <code class="language-plaintext highlighter-rouge">301</code> or <code class="language-plaintext highlighter-rouge">302</code>) to the next/latest version.</p>

<blockquote>
  <p>Of course, it’s a good pratice too have some public changelog about your web api versions releases to notify the clients developers.</p>
</blockquote>

<h2 id="describing">Describing</h2>
<p>In the field of how to describe a web api REST I can cite <code class="language-plaintext highlighter-rouge">Swagger</code>. It is not a attempt to create a WSDL like to web api REST, but it is a good attempt to create an open standard for describing web apis REST.</p>

<p>Swagger is a specification and complete framework implementation for describing, producing, consuming, and visualizing RESTful web services.</p>

<p>I use Swagger a lot and really love it, mainly because Swagger UI that allow you generate a nice live console and documentation for your web api.</p>

<p>There are many implementations of Swagger for most of languages: C#, Java, Python, Ruby, etc.</p>

<p>If you are using ASP .NET Web API, there a some projects to auto generate the Swagger specification, like <a href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore">Swashbuckle.AspNetCore</a>.</p>

<blockquote>
  <p>Swagger is very popular nowadays, but if you never see it in action, take a look on <a href="https://developer.marvel.com/docs">Marvel API</a> that use Swagger and Swagger UI.</p>
</blockquote>

<h2 id="other-conventions-and-good-pratices">Other conventions and good pratices</h2>
<p>To keep our lifes as developers easier is good to define some conventions of how our web api REST will behave, the best effort I know in this field are the very good <strong>Apigee e-books</strong>. The e-books are not an attempt to create a bible or a mantra about how to design your api, but rather a collection of conventions observed in large web REST apis, like Twitter, Facebook, Linkedin, Google, etc.</p>

<blockquote>
  <p>Most of the good pratices that I used, tested and mentioned in this post I learned from my experience and Apigee books.</p>
</blockquote>

<h2 id="conclusion">Conclusion</h2>
<p>I probably forgot some learnings that I still use in my web apis developing, maybe because it’s so common to perform it that I even do not notice them, but the ones cited above I think are the most remarkable.</p>

<h2 id="further-readings">Further readings</h2>
<p>I really recommend you to read the books bellow, they have detailed a lot of good practices about how do develop good web apis and can help you to design yours.</p>

<ul>
  <li><a href="https://pages.apigee.com/rs/apigee/images/api-design-ebook-2012-03.pdf">Web API Design</a>
    <blockquote>
      <p>The success of an API design is measured by how quickly developers can get
up to speed and start enjoying success using your API.</p>
    </blockquote>
  </li>
  <li><a href="https://cloud.google.com/files/apigee/apigee-web-api-design-the-missing-link-ebook.pdf">Web API Design: The Missing Link</a>
    <blockquote>
      <p>When you design any interface, you should try to put yourself in the shoes of the user</p>
    </blockquote>
  </li>
</ul>

<p><br /><br /><br />Icons made by <a href="http://www.freepik.com">Freepik</a>, <a href="http://www.flaticon.com/authors/vignesh-oviyan">Vignesh Oviyan</a> and <a href="https://www.flaticon.com/authors/eucalyp" title="Eucalyp">Eucalyp</a> from <a href="http://www.flaticon.com">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons BY 3.0</a></p>]]></content><author><name></name></author><category term="Article" /><category term="web-api" /><category term="good-pratices" /><summary type="html"><![CDATA[Some days ago a coworker asked me what I thought about wich status code a web api should return and if there are some good pratices to follow. When he asked this, I remembered that I’ve followed some good pratices, most of them based on my emperical knowledge of years of development and consuming web apis. For this reason I wrote this post as a way to organize and document what are those good pratices that I follow. Maybe it can be useful to someone.]]></summary></entry><entry><title type="html">Unity Toasty Notification</title><link href="http://diegogiacomelli.com.br/unity-toasty-notification/" rel="alternate" type="text/html" title="Unity Toasty Notification" /><published>2019-07-30T00:00:00-03:00</published><updated>2019-07-30T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-toasty-notification</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-toasty-notification/"><![CDATA[<p>Last saturday I created the <a href="https://github.com/giacomelli/Giacomelli.Unity.ToastyNotification">ToastyNotification</a> package, a fun editor log interceptor that play Mortal Kombat’s Toasty easter-egg every time an error is logged.</p>
<center>
        <iframe src="https://www.youtube.com/embed/wwhz2wPN_wU " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="setup">Setup</h2>
<p>Just install the <code class="language-plaintext highlighter-rouge">ToastyNotification.package</code> from the repository <a href="https://github.com/giacomelli/Giacomelli.Unity.ToastyNotification/releases">release page</a>.</p>

<p>Now every time your game raise an error on Unity’s editor console log, the Toasty Notifcation will warning you 😉!</p>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><category term="console-log" /><summary type="html"><![CDATA[Last saturday I created the ToastyNotification package, a fun editor log interceptor that play Mortal Kombat’s Toasty easter-egg every time an error is logged.]]></summary></entry><entry><title type="html">Unity and Game Development links (July 29th 2019)</title><link href="http://diegogiacomelli.com.br/unity-and-gamedev-links-july-29th-2019/" rel="alternate" type="text/html" title="Unity and Game Development links (July 29th 2019)" /><published>2019-07-29T00:00:00-03:00</published><updated>2019-07-29T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-and-gamedev-links-july-29th-2019</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-and-gamedev-links-july-29th-2019/"><![CDATA[<ul>
  <li><strong>Kristin Stock</strong> published an amazing video about SPH (Smoothed Particle Hydrodynamics) in Unity. (<a href="https://www.youtube.com/watch?v=NJBz8rMJ0ZU">Fluid Simulation / Smoothed Particle Hydrodynamics in Unity</a>).</li>
</ul>
<center>
        <iframe src="https://www.youtube.com/embed/NJBz8rMJ0ZU " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<ul>
  <li>
    <p><strong>SIGGRAPH 2019</strong> is taking place in Los Angeles, between July 28 and August 1. Unity has made a page where you can see the Unity’s  presentations calendar (<a href="https://unity.com/events/siggraph-2019">Unity at SIGGRAPH 2019</a>).</p>
  </li>
  <li><strong>Kin</strong> is a currency for the digital world that just now caught my attention. There is an SDK for Unity. They are posing a challenge for Unity developers, the deadline is December 30, 2019 (<a href="https://kin.org/developers/unityapply/gaming-challenge/">Kin Gaming Challenge</a>).
    <blockquote>
      <p>Kin enables the free and instant transfer of value between users, no matter how small the amount. This lets users give something more meaningful than a like, making your app even more fun and engaging.</p>
    </blockquote>
  </li>
  <li><strong>Lasse Jon Fuglsang Pedersen and Robert Cupisz</strong> in the making of The Heretic, a real-time short film made with Unity. (<a href="https://www.youtube.com/watch?v=5H9Jo2qjJXs">Lasse Jon Fuglsang Pedersen, Robert Cupisz - Making of The Heretic</a>).</li>
</ul>
<center>
        <iframe src="https://www.youtube.com/embed/5H9Jo2qjJXs " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<ul>
  <li>
    <p><strong>Sykoo</strong> made two videos, one showing his top 5 assets for Unity in 2019 (<a href="https://www.youtube.com/watch?v=s-4s9KhO_D0">5 AWESOME ASSETS FOR UNITY 2019!</a>) and a second one about the new Multiplayer system that Unity is working on (<a href="https://www.youtube.com/watch?v=n3kcbUBuPpk">NEW MULTIPLAYER in Unity 2019 – Connected Games (Overview)</a>).</p>
  </li>
  <li>
    <p><strong>Tyler Hurd</strong> presented to the world a tool that him have been working: Actuator leverages real-time physics and tracked VR devices for rigging, animating and puppeteering. (<a href="http://tylerhurd.com/projects/actuator/">Actuator)</a>).</p>
  </li>
</ul>
<center>
        <iframe src="https://www.youtube.com/embed/moYfppZzf2c " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>]]></content><author><name></name></author><category term="News" /><category term="unity3d" /><category term="gamedev" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Publishing a .NET Core project to SonarCloud with Cake</title><link href="http://diegogiacomelli.com.br/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/" rel="alternate" type="text/html" title="Publishing a .NET Core project to SonarCloud with Cake" /><published>2019-07-25T00:00:00-03:00</published><updated>2019-07-25T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/publishing-a-dotnet-core-project-to-sonarcloud-with-cake</id><content type="html" xml:base="http://diegogiacomelli.com.br/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/"><![CDATA[<p>In this post I will show how to use <a href="https://cakebuild.net/">Cake</a> to build and test a .NET Core project and then publish the results to <a href="https://sonarcloud.io">SonarCloud</a>.</p>

<h2 id="introduction">Introduction</h2>

<p><em><strong>Cake</strong> (C# Make) is a cross-platform build automation system with a C# DSL for tasks such as compiling code, copying files and folders, running unit tests, compressing files and building NuGet packages.</em></p>

<p><em><strong>SonarCloud</strong> is a cloud service offered by SonarSource and based on SonarQube. SonarQube is a widely adopted open source platform to inspect continuously the quality of source code and detect bugs, vulnerabilities and code smells.</em></p>

<h2 id="prerequisites">Prerequisites</h2>
<ul>
  <li><strong>Cake</strong>: install the <code class="language-plaintext highlighter-rouge">Cake</code> on your .NET Core project before start this tutorial. Follow this <a href="https://cakebuild.net/docs/tutorials/setting-up-a-new-project">Setting Up A New Project</a>.</li>
  <li><strong>SonarCloud</strong>: create an account and add a project on <a href="https://sonarcloud.io">https://sonarcloud.io</a>.</li>
</ul>

<h2 id="creating-the-buildcake">Creating the build.cake</h2>
<p>In project root folder, create a file called <code class="language-plaintext highlighter-rouge">build.cake</code>.</p>

<h3 id="adding-the-tools-and-addin-references">Adding the tools and addin references</h3>
<p>Add the lines below to the file:
<script src="https://gist.github.com/2ff83d13a8b970aacd4aa94b9182e7bb.js?file=build.v1.cake"> </script></p>

<div class="note"><p>We’ll use those tools and addins to create the complete .cake script.</p>
</div>

<h3 id="setting-the-variables">Setting the variables</h3>
<p>Now we need to set some variables:
<script src="https://gist.github.com/2ff83d13a8b970aacd4aa94b9182e7bb.js?file=build.v2.cake"> </script></p>

<p>Where:</p>
<ul>
  <li><strong>solutionDir</strong>: is the subfolder where your solution source code is located.</li>
  <li><strong>sonarLogin</strong>: Change the <code class="language-plaintext highlighter-rouge">[SONARCLOUD-USER-TOKEN]</code> for a token you can generate at the page <a href="https://sonarcloud.io/account/security/">https://sonarcloud.io/account/security/</a>.</li>
  <li><strong>branch</strong>: if you are using git, then the <code class="language-plaintext highlighter-rouge">GitBranchCurrent(".").FriendlyName</code> will pass the right branch name to SonarCloud, otherwise you can set it manually.</li>
</ul>

<p>If you are using <code class="language-plaintext highlighter-rouge">AppVeyor</code> you can use line bellow to allow discover the branch name locally and in the AppVeyor:
<script src="https://gist.github.com/2ff83d13a8b970aacd4aa94b9182e7bb.js?file=build.v3.cake"> </script></p>

<h3 id="build-task">Build task</h3>
<p>The first task definitions will build our .NET Core project:
<script src="https://gist.github.com/2ff83d13a8b970aacd4aa94b9182e7bb.js?file=build.v4.cake"> </script></p>

<h3 id="test-task">Test task</h3>
<p>Now we will define the task to run our tests:
<script src="https://gist.github.com/2ff83d13a8b970aacd4aa94b9182e7bb.js?file=build.v5.cake"> </script></p>

<p>This task use <code class="language-plaintext highlighter-rouge">Coverlet</code> to collect the code coverage. Install it on your test project using the <code class="language-plaintext highlighter-rouge">Coverlet</code> NuGet package:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>install-package coverlet.msbuild
</code></pre></div></div>

<h3 id="sonar-tasks">Sonar tasks</h3>
<p>The lasts tasks to define are responsible to scan the project and send the build and tests results to SonarCloud:
<script src="https://gist.github.com/2ff83d13a8b970aacd4aa94b9182e7bb.js?file=build.v6.cake"> </script></p>

<p>Where:</p>

<ul>
  <li><strong>Key</strong>: is your project key on SonarCloud. You can get it throw these steps on <a href="https://sonarcloud.io">SonarCloud</a>:
    <ul>
      <li>Select your project.</li>
      <li>Open the menu <code class="language-plaintext highlighter-rouge">Administration / Update Key</code></li>
    </ul>
  </li>
  <li><strong>Organization</strong>: is the name of your organization on SonarCloud. If your <code class="language-plaintext highlighter-rouge">projects</code> page is <code class="language-plaintext highlighter-rouge">https://sonarcloud.io/organizations/YOUR-ORGANIZATION/projects</code>, then your <strong>Organization</strong> value is <code class="language-plaintext highlighter-rouge">YOUR-ORGANIZATION</code>.</li>
  <li><strong>Exclusions</strong>: here you can define the wildcards to excluse some files fron Sonar scan, like sample, docs and test files.</li>
</ul>

<h3 id="defining-the-tasks-order">Defining the tasks order</h3>
<p>The last part of the <code class="language-plaintext highlighter-rouge">build.cake</code> file define the order that tasks will run:
<script src="https://gist.github.com/2ff83d13a8b970aacd4aa94b9182e7bb.js?file=build.v7.cake"> </script></p>

<h2 id="running-the-buildcake">Running the build.cake</h2>
<p>Now, every time you want to build, test and publish the results to SonarCloud you need to type this command on your project root folder:</p>

<p>MacOS:</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./build.sh
</code></pre></div></div>

<p>Windows:</p>

<p>Open a <code class="language-plaintext highlighter-rouge">powershell</code> terminal:</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.<span class="se">\b</span>uild.ps1
</code></pre></div></div>

<p>When the build finish, you should see something like this:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/cake-terminal-200-ec263fa2c.webp 200w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/cake-terminal-400-ec263fa2c.webp 400w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/cake-terminal-405-ec263fa2c.webp 405w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/cake-terminal-200-ec263fa2c.png 200w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/cake-terminal-400-ec263fa2c.png 400w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/cake-terminal-405-ec263fa2c.png 405w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/cake-terminal-405-ec263fa2c.png" alt="post image" width="405" height="149" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>Cake build</p>
</span></center>
<p><br /></p>

<p>Then open your project on <a href="https://sonarcloud.io/projects">SonarCloud</a>:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-200-a93997fec.webp 200w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-400-a93997fec.webp 400w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-800-a93997fec.webp 800w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-983-a93997fec.webp 983w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-200-a93997fec.png 200w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-400-a93997fec.png 400w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-800-a93997fec.png 800w, /assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-983-a93997fec.png 983w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/07/25/publishing-a-dotnet-core-project-to-sonarcloud-with-cake/sonarcloud-dashboard-800-a93997fec.png" alt="post image" width="983" height="503" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>SonarCloud dashboard</p>
</span></center>
<p><br /></p>

<p>That’s it, now your project is ready to using cake to publish results to SonarCloud.</p>

<h2 id="complete-buildcake">Complete build.cake</h2>
<script src="https://gist.github.com/2ff83d13a8b970aacd4aa94b9182e7bb.js?file=build.cake"> </script>

<h2 id="extras">Extras</h2>
<p>If you are using git, you can add this lines to your .gitignore file:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tools/**
!tools/packages.config
</code></pre></div></div>]]></content><author><name></name></author><category term="Tutorial" /><category term="dotnet" /><category term="sonar" /><category term="cake" /><summary type="html"><![CDATA[In this post I will show how to use Cake to build and test a .NET Core project and then publish the results to SonarCloud. Introduction]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Scene Preview Window</title><link href="http://diegogiacomelli.com.br/unitytips-scene-preview-window/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Scene Preview Window" /><published>2019-07-23T00:00:00-03:00</published><updated>2019-07-23T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-scene-preview-window</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-scene-preview-window/"><![CDATA[<p>I created this window that extends the Unity 3D editor so you can preview the scenes by selecting them in the project window.</p>
<center>
        <iframe src="https://www.youtube.com/embed/eh8nqfDCUVo " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h1 id="usage">Usage</h1>
<p>As can be seen from the video above the extension can be used in two ways after adding the <code class="language-plaintext highlighter-rouge">Scene Preview</code> window to the editor (via the<code class="language-plaintext highlighter-rouge"> Window / Scene Preview</code> menu):</p>

<ul>
  <li>Selects <code class="language-plaintext highlighter-rouge">Scene</code> and clicking the <code class="language-plaintext highlighter-rouge">Capture screenshot</code> button in both edit mode and play mode.</li>
  <li>Running <code class="language-plaintext highlighter-rouge">Scene</code> in play mode and if there is still no preview screenshot for the scene, a screenshot will be taken automatically after 10 seconds.</li>
</ul>

<h2 id="setup">Setup</h2>
<p>Below you can see only the code of <code class="language-plaintext highlighter-rouge">ScenePreviewEditor.cs</code>. There are 3 more files for this extension.</p>

<p>Download the full <a href="https://gist.github.com/giacomelli/ad9d4dcdb702d2d1edf0663628ca9608">gist</a> or use the <a href="/unitytips-gist-importer">Gist Importer</a> to import the complete <code class="language-plaintext highlighter-rouge">Scene Preview Window</code> for your project.</p>

<script src="https://gist.github.com/ad9d4dcdb702d2d1edf0663628ca9608.js?file=ScenePreviewWindow.cs"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>

<div class="note"><p>Remember that you need to save the above .cs files inside any <code class="language-plaintext highlighter-rouge">Editor</code> folder</p>
</div>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><category term="editor-window" /><summary type="html"><![CDATA[I created this window that extends the Unity 3D editor so you can preview the scenes by selecting them in the project window.]]></summary></entry><entry><title type="html">Unity and Game Development links (July 22th 2019)</title><link href="http://diegogiacomelli.com.br/unity-and-gamedev-links-july-22th-2019/" rel="alternate" type="text/html" title="Unity and Game Development links (July 22th 2019)" /><published>2019-07-22T00:00:00-03:00</published><updated>2019-07-22T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-and-gamedev-links-july-22th-2019</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-and-gamedev-links-july-22th-2019/"><![CDATA[<ul>
  <li><strong>Stephen Palmer</strong> presented the preview of Addressables, the Unity new system for editor and runtime asset management. (<a href="https://blogs.unity3d.com/2019/07/15/addressable-asset-system">Addressable Asset System</a>).
    <blockquote>
      <p>What we found when talking to developers about their experience using Asset Bundles was that almost everyone doing so successfully were more or less writing the same high level systems a thousand slightly different ways. Addressables was born out of this obvious need for a framework to solve a set of common problems related to addressing, building, and loading assets.</p>
    </blockquote>
  </li>
  <li>
    <p><strong>Cyan</strong> made a blog post about Voronoi noise, a type of noise based on cells,  and shaders (<a href="https://cyangamedev.wordpress.com/2019/07/16/voronoi/">Voronoi</a>).</p>
  </li>
  <li><strong>Kat Woolley</strong> introduced the Creator Kits, a beginners kit to learn Unity basics without writing code. (<a href="https://blogs.unity3d.com/2019/07/17/creator-kits-get-creating-quickly">Creator Kits – Get creating quickly</a>).
    <blockquote>
      <p>We’ve produced three kits: A puzzle game, an FPS and an RPG. Get a brief introduction to each game genre and learn the basics of Unity without writing code. The kits offer beginners a good way to create your own game in under an hour before embarking on something with a broader scope like the Game Kits.</p>
    </blockquote>
  </li>
  <li><strong>Unity</strong> made a case study about Playkot, the creators of Age Of Magic (<a href="https://unity.com/case-study/playkot-age-of-magic">Playkot – A Unity developer case study</a>).
    <blockquote>
      <p>How do a businessman and a software developer working at an improvised kitchen table in St. Petersburg, Russia go on to produce sophisticated social games and mobile RPGs with some of the best graphics in the industry? Meet Sasha Pavlov and Oleg Sysoev, who started Playkot Games in 2009. Since then, they’ve grown their team to 150+ by carefully combining the right people, adopting Unity, and implementing the right strategies to capture significant market share around the world.</p>
    </blockquote>
  </li>
  <li><strong>Anna Lee</strong> wrote a blog post on the series <code class="language-plaintext highlighter-rouge">Faces of Unity</code>, now presenting Dave Hunt, Lead Technical Artist in Copenhagen (<a href="https://blogs.unity3d.com/2019/07/19/faces-of-unity-dave-hunt">Faces of Unity – Dave Hunt)</a>).
    <blockquote>
      <p>Learn more about Dave as he shares about his career journey and work-life balance as a parent here at Unity!</p>
    </blockquote>
  </li>
  <li>
    <p><strong>Brackeys</strong> published a video about learnings in 10 years of game development! (<a href="https://youtu.be/T18X1HuawRc">What I learned after 10 Years of Game Development!</a>).</p>
  </li>
  <li><strong>Sykoo</strong> made a video showing how to make explosions and shockwave effects in Unity (<a href="https://youtu.be/u7lwL7ubwKA">SHOCKWAVE &amp; EXPLOSION IN UNITY 2019! (Tutorial)</a>).</li>
</ul>]]></content><author><name></name></author><category term="News" /><category term="unity3d" /><category term="gamedev" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">GeneticSharp in the Wild&amp;amp;colon; Design of a Warehouse Order Picking Policy</title><link href="http://diegogiacomelli.com.br/geneticsharp-in-the-wild-design-of-a-warehouse-order-picking-policy/" rel="alternate" type="text/html" title="GeneticSharp in the Wild&amp;amp;colon; Design of a Warehouse Order Picking Policy" /><published>2019-07-18T00:00:00-03:00</published><updated>2019-07-18T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/geneticsharp-in-the-wild-design-of-a-warehouse-order-picking-policy</id><content type="html" xml:base="http://diegogiacomelli.com.br/geneticsharp-in-the-wild-design-of-a-warehouse-order-picking-policy/"><![CDATA[<p>I started a <a href="/tags/geneticsharp-in-the-wild/">series of posts</a> about some outstanding scientific papers and projects using <a href="https://github.com/giacomelli/GeneticSharp">GeneticSharp</a>.</p>

<p>For this fourth post the choose one is the <code class="language-plaintext highlighter-rouge">Design of a Warehouse Order Picking Policy - Using Genetic Algorithm</code>.</p>

<h2 id="introduction">Introduction</h2>
<p>The main motivation of the author about this paper was:
<em>improving order-picking process is considered which is an essential
operation critically impacting warehouse and supply chain performance.</em></p>

<p><em>The study is composed of two phases: In the first phase, the
shortest path between each pair of items is determined in a pick list leading to the
second phase of determining the sequence of all items to be picked. A
mathematical model is utilized to find the shortest path between each item pair in
a pick list.</em></p>

<h2 id="usage">Usage</h2>
<p><em>A genetic algorithm based approach is developed to decide the picking
sequence of all items in an order list, given the shortest distance between each pair
of items. The performance of the proposed algorithms is compared to popular
heuristics used for multi-block warehouses, namely: S-Shape and Largest Gap.</em></p>

<p>Ahmet Can Saner, the paper author made <a href="http://diegogiacomelli.com.br/GeneticSharp-v1.2.0-sequence-mutations/">great contributions to GeneticSharp</a>, that him developed during his master degree, like: Displacement Mutation, Insertion Mutation and Partial Shuffle Mutation (PSM).</p>

<h2 id="results">Results</h2>
<ul>
  <li><em>For 25-item pick lists, all of the proposed
GA algorithms are superior to S-Shape and Largest Gap heuristics, in terms of travelled
distance. GA with order crossover operator, inversion mutation operator provides the best
results in terms of average travelled distance</em></li>
  <li><em>For 50-item pick lists, all of the proposed GA
algorithms are superior to S-Shape, in terms of travelled distance. But when compared to
Largest Gap heuristic, only GA algorithms with inversion mutation operator performs
better than Largest Gap, in terms of travelled distance.</em></li>
  <li><em>For 100-
item pick lists, only GA algorithms with inversion mutation operator performs better than
both S-Shape and Largest Gap heuristics, in terms of travelled distance. GA with order
crossover operator, inversion mutation operator setting performs the best in terms of
average travelled distance for pick lists of size 100.</em></li>
</ul>

<h2 id="author">Author</h2>
<p>Ahmet Can Saner, with Dr. Zehra
Düzgi supervision, wrote the paper for his master degree at Istanbul Bilgi University.</p>

<h2 id="further-reading">Further reading</h2>
<p>You can access the full paper directly on <a href="http://openaccess.bilgi.edu.tr:8080/xmlui/bitstream/handle/11411/1310/Design%20of%20a%20warehouse%20order%20picking%20policy%20using%20genetic%20algorithm.pdf?sequence=1&amp;isAllowed=y">Istanbul Bilgi University library</a>.</p>]]></content><author><name></name></author><category term="Article" /><category term="geneticsharp" /><category term="geneticsharp-in-the-wild" /><summary type="html"><![CDATA[I started a series of posts about some outstanding scientific papers and projects using GeneticSharp.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Hierarchy Window GameObject Icon</title><link href="http://diegogiacomelli.com.br/unitytips-hierarchy-window-gameobject-icon/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Hierarchy Window GameObject Icon" /><published>2019-07-16T00:00:00-03:00</published><updated>2019-07-16T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-hierarchy-window-gameobject-icon</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-hierarchy-window-gameobject-icon/"><![CDATA[<p>You can show the game objects icons in hierarchy window using <code class="language-plaintext highlighter-rouge">EditorGUIUtility.ObjectContent</code></p>
<center>
        <iframe src="https://www.youtube.com/embed/fwtQ51ybHpc " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="code">Code</h2>
<script src="https://gist.github.com/a73c947508ee0b32eef7c422620ec6b6.js?file=HierarchyWindowGameObjectIcon.cs"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>

<p>The icons used in the video are <a href="https://fontawesome.com/icons">Font Awesome</a> icons and I used <a href="http://fa2png.io/">fa2png.io</a> to convert them to .png.</p>

<div class="note"><p>Remember that you need to save the above .cs inside any <code class="language-plaintext highlighter-rouge">Editor</code> folder</p>
</div>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><category term="hierarchy-window" /><summary type="html"><![CDATA[You can show the game objects icons in hierarchy window using EditorGUIUtility.ObjectContent]]></summary></entry><entry><title type="html">Unity and Game Development links (July 15th 2019)</title><link href="http://diegogiacomelli.com.br/unity-and-gamedev-links-july-15th-2019/" rel="alternate" type="text/html" title="Unity and Game Development links (July 15th 2019)" /><published>2019-07-15T00:00:00-03:00</published><updated>2019-07-15T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-and-gamedev-links-july-15th-2019</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-and-gamedev-links-july-15th-2019/"><![CDATA[<ul>
  <li>
    <p><strong>Alexander Ameye</strong> made a tutorial about edge detection shaders with Shader Graph and how to use some Lightweight Rendering Pipeline customization to generate DepthNormals (<a href="https://alexanderameye.github.io/edgedetection">Edge Detection Shader</a>).</p>
  </li>
  <li><strong>Cyan</strong> made a blog post about Render Textures and how to read them  in a C# script (<a href="https://cyangamedev.wordpress.com/2019/07/08/render-textures/">Render Textures</a>).
    <blockquote>
      <p>Render Textures are stored and handled on the GPU, which means we can’t access the data from them in a C# script which runs on the CPU – and you shouldn’t really need to for most effects. However, I wanted my player to be able to interact with water which was based on a Render Texture and only spawn particles if the player was in the water, along with some other effects.</p>
    </blockquote>
  </li>
  <li><strong>Frank Manley</strong> wrote about the Unity Hackweek 2019 (<a href="https://blogs.unity3d.com/2019/07/08/unity-hackweek-2019-tackling-hard-problems-building-team-skills">Unity Hackweek 2019: Tackling hard problems, building team skills</a>).
    <blockquote>
      <p>What happens when you put 700+ people from Unity and our ecosystem in a secluded location once a year and tell them to solve hard tech, coding, and process problems? Their instructions? Unleash your creativity, collaborate like crazy, and embrace diverse perspectives.</p>
    </blockquote>
  </li>
  <li><strong>Tracy Joseph and Brittany Edmond,</strong> wrote a blog post about their experience on Cannes Lions 2019 (<a href="https://blogs.unity3d.com/2019/07/09/cannes-lions-2019-celebrating-creativity-innovation-storytelling">Cannes Lions 2019: Celebrating creativity, innovation &amp; storytelling</a>).
    <blockquote>
      <p>This year at the Cannes Lions International Festival of Creativity, Unity showed up as the leading real-time 3D creation platform.</p>
    </blockquote>
  </li>
  <li>
    <p><strong>Garrexus</strong> made a breakdown on the Screen space Cosmic shader (<a href="https://realtimevfx.com/t/screen-space-cosmic-shader-breakdown-unity-ase-shaders-textures-included/9753">Screen space Cosmic shader breakdown (Unity/ASE, Shaders/Textures included)</a>).</p>
  </li>
  <li>
    <p><strong>Alexander Ameye</strong> again, now with a tutorial about collision effect (<a href="https://alexanderameye.github.io/collision.html">Collision Effect</a>).</p>
  </li>
  <li><strong>Tenzin W. and Eduardo Oriz,</strong> wrote about the results of the latest Asset Store challenge (<a href="https://blogs.unity3d.com/2019/07/11/the-winners-inside-the-vault-3d-environment-art-contest">The Winners! Inside the Vault: 3D Environment Art Contest</a>).
    <blockquote>
      <p>A number of judges evaluated all of the impressive submissions to pick the winners of the latest Asset Store challenge: Use Substance Painter to texture stunning assets that expand the futuristic world of Buried Memories: Yggdrasil.</p>
    </blockquote>
  </li>
  <li><strong>Anis Benyoub</strong> made a speech about ray tracing hardware acceleration (<a href="https://www.youtube.com/watch?v=wbuvrAdNtmQ">Anis Benyoub - Leveraging Ray Tracing Hardware Acceleration In The Unity Game Engine</a>).
    <blockquote>
      <p>Ray tracing hardware acceleration (RTX) is a newly available feature that allows graphics developers to increase their image quality. While solving complex problems, properly integrating this new set of APIs (DXR and Vulkan ray tracing) in a game engine is tricky, especially so when the engine supports anything from mobile to virtual production.</p>
    </blockquote>
  </li>
  <li>
    <p><strong>Brackeys</strong> published a video about gamepad input (<a href="https://www.youtube.com/watch?v=p-3S73MaDP8">CONTROLLER INPUT in Unity!</a>).</p>
  </li>
  <li><strong>Sykoo</strong> made a video showing how to make terrains (<a href="https://www.youtube.com/watch?v=2Vvwjfp-hg8">How to make Terrains with Unity 2019! (Tutorial)</a>).</li>
</ul>]]></content><author><name></name></author><category term="News" /><category term="unity3d" /><category term="gamedev" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">GeneticSharp 2.6.0 - Blazor template</title><link href="http://diegogiacomelli.com.br/geneticsharp-2.6.0-blazor-template/" rel="alternate" type="text/html" title="GeneticSharp 2.6.0 - Blazor template" /><published>2019-07-11T00:00:00-03:00</published><updated>2019-07-11T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/geneticsharp-2.6.0-blazor-template</id><content type="html" xml:base="http://diegogiacomelli.com.br/geneticsharp-2.6.0-blazor-template/"><![CDATA[<p>The <strong><a href="https://github.com/giacomelli/GeneticSharp">GeneticSharp 2.6.0</a></strong> is out.</p>

<h2 id="blazor-template">Blazor template</h2>
<p>Now we have 4 <code class="language-plaintext highlighter-rouge">dotnet new</code> templates, besides the <code class="language-plaintext highlighter-rouge">GeneticSharpConsoleApp</code>, <code class="language-plaintext highlighter-rouge">GeneticSharpTspConsoleApp</code> and <code class="language-plaintext highlighter-rouge">GeneticSharpTspUnity3d</code> already existent, a new template for a Blazor client app was added: <code class="language-plaintext highlighter-rouge">GeneticSharpTspBlazorApp</code>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dotnet new -i GeneticSharp.Templates
dotnet new GeneticSharpTspBlazorApp -o TspBlazorApp
cd TspBlazorApp
dotnet run
</code></pre></div></div>

<center>                
        <img class="screenshot" src="/assets/2019/07/11/geneticsharp-2.6.0-blazor-template/geneticsharp-blazor-template.gif " alt="post image" />
      </center>
<p><br /></p>

<p>If you want to know more about how to use GeneticSharp with Blazor, take a look in this tutorial <a href="http://diegogiacomelli.com.br/tsp-with-geneticsharp-and-blazor/">TSP with GeneticSharp and Blazor</a>.</p>

<h2 id="new-papers-and-projects-using-geneticsharp">New papers and projects using GeneticSharp</h2>
<p>Four papers and one project were added to the list:</p>

<ul>
  <li><a href="https://github.com/giacomelli/GeneticSharp/blob/master/docs/mentioning-GeneticSharp/Design-of-a-warehouse-order-picking-policy-using-genetic-algorithm.pdf">Design of a warehouse order picking policy using genetic algorithm (paper)</a></li>
  <li><a href="https://ieeexplore.ieee.org/document/8643945">Fabrication of Adiabatic Quantum-Flux-Parametron Integrated Circuits Using an Automatic Placement Tool Based on Genetic Algorithms (paper)</a></li>
  <li><a href="https://github.com/giacomelli/GeneticSharp/blob/master/docs/mentioning-GeneticSharp/Modelling-and-Simulation-Analysis-of-Goal-Oriented-Business-Process.pdf">Modelling and Simulation Analysis of Goal-Oriented Business Process (paper)</a></li>
  <li><a href="https://github.com/giacomelli/GeneticSharp/blob/master/docs/mentioning-GeneticSharp/Optimisation-par-algorithme-genetique-de-structures-lattices.pdf">Optimization by genetic algorithm of lattices structures for the media generation in additive manufacturing (paper)</a></li>
  <li><a href="https://trussoptimizationweb.herokuapp.com">TrussOptimization (project)</a></li>
</ul>

<h2 id="how-to-install-the-new-version">How to install the new version</h2>
<h3 id="net-standard-20">.NET Standard 2.0</h3>
<p>Only GeneticSharp:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>install-package GeneticSharp
</code></pre></div></div>

<p>GeneticSharp and extensions (TSP, AutoConfig, Bitmap equality, Equality equation, Equation solver, Function builder, etc):</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>install-package GeneticSharp.Extensions
</code></pre></div></div>
<h3 id="unity3d">Unity3D</h3>
<p>You should use the <a href="https://github.com/xoofx/UnityNuGet">UnityNuGet</a> to install GeneticSharp directly from NuGet.</p>

<p>Or you can use the latest GeneticSharp.unitypackage available on our <a href="https://github.com/giacomelli/GeneticSharp/releases">release page</a>.</p>

<p>Let’s evolve!</p>]]></content><author><name></name></author><category term="News" /><category term="geneticsharp" /><category term="dotnet" /><category term="release" /><category term="blazor" /><summary type="html"><![CDATA[The GeneticSharp 2.6.0 is out.]]></summary></entry><entry><title type="html">TSP with GeneticSharp and Blazor</title><link href="http://diegogiacomelli.com.br/tsp-with-geneticsharp-and-blazor/" rel="alternate" type="text/html" title="TSP with GeneticSharp and Blazor" /><published>2019-07-10T00:00:00-03:00</published><updated>2019-07-10T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/tsp-with-geneticsharp-and-blazor</id><content type="html" xml:base="http://diegogiacomelli.com.br/tsp-with-geneticsharp-and-blazor/"><![CDATA[<p>In this post I will show how to use GeneticSharp and Blazor to solve the TSP (Travelling salesman problem).</p>

<h2 id="introduction">Introduction</h2>

<p>According to Wikipedia The travelling salesman problem (TSP) asks the following question:<em><strong>“Given a list of cities and the distances between each pair of cities, what is the shortest possible route that visits each city and returns to the origin city?”</strong></em></p>

<p>TSP is a classic sample to test some optimization techniques, as well it’s fairly used to demonstrate how to implement a genetic algorithm. For these reasons I will use it to show you how to implement a basic genetic algorithm in Blazor using GeneticSharp.</p>

<div class="note"><p>This post is a like a mirror of the <a href="/tsp-with-GeneticSharp-and-Unity3d">TSP with GeneticSharp an Unity3D</a>. It’s using the same format to teach TSP and GeneticSharp, but instead of Unity3D, this one is about Blazor.</p>
</div>

<p>You can see the final result of this tutorial on <a href="/apps/geneticsharp-runner-blazorapp">http://diegogiacomelli/apps/geneticsharp-runner-blazorapp</a>.</p>

<div class="note"><p>Note that the performance presented on this demo is not the performance that GeneticSharp presents in other apps kinds, like a ASP .NET Core backend app, a console app or in a Unity 3D game. As WebAssembly do not support create a new thread, we get limited to use a Timer to made this sample interactive. More details about this in next sections of the post.</p>
</div>

<h2 id="prerequisites">Prerequisites</h2>
<p>To better understand this tutorial, you need to have some experiences/knowledges in:</p>

<ul>
  <li>Blazor (beginner)</li>
  <li>Genetic algorithms (beginner).</li>
</ul>

<p>We will perform a very basic use of Blazor and everything you need to complete this tutorial will be explained or provided by the code samples, but if you want to find out better what’s happening under the hood, take a look on <a href="https://docs.microsoft.com/en-us/aspnet/core/blazor/get-started?view=aspnetcore-3.0&amp;viewFallbackFrom=aspnetcore-2.2&amp;tabs=netcore-cli">Blazor Get Started page</a>.</p>

<p>If you need an introduction to genetic algorithms, take a look at this tutorial <a href="/function-optimization-with-geneticsharp/">Function optimization with GeneticSharp</a>.</p>

<h2 id="creating-the-blazor-project">Creating the Blazor project</h2>
<p>Open a terminal and type:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dotnet new <span class="nt">-i</span> Microsoft.AspNetCore.Blazor.Templates::3.0.0-preview6.19307.2
</code></pre></div></div>
<center><span style="font-style:italic; font-size:small"><p>This will install the latest Blazor templates for .NET Core.</p>
</span></center>
<p><br /></p>

<div class="note"><p>This tutorial is based on Blazor <code class="language-plaintext highlighter-rouge">preview6</code>. If you are doing this tutorial using a newer Blazor version and have encountered some problem, leave a comment at the end of the post or contact me on <a href="https://twitter.com/ogiacomelli">Twitter</a>.</p>
</div>

<p>Now we’ll create a scaffold Blazor app using the <code class="language-plaintext highlighter-rouge">blazor</code> template:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dotnet new blazor <span class="nt">-o</span> TspWithGeneticSharp
<span class="nb">cd </span>TspWithGeneticSharp
dotnet watch run
</code></pre></div></div>

<p>Wait for the message <code class="language-plaintext highlighter-rouge">Application started. Press Ctrl+C to shut down</code> show up in terminal, then open the url <a href="http://localhost:5000">http://localhost:5000</a> on your browser, you should see something like this:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-200-f31194f79.webp 200w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-400-f31194f79.webp 400w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-800-f31194f79.webp 800w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-1019-f31194f79.webp 1019w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-200-f31194f79.png 200w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-400-f31194f79.png 400w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-800-f31194f79.png 800w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-1019-f31194f79.png 1019w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/blazor-scaffold-app-800-f31194f79.png" alt="post image" width="1019" height="310" />
</picture>

      </center>
<p><br /></p>

<h2 id="installing-geneticsharp">Installing GeneticSharp</h2>
<p>Open a new terminal in the same folder and type:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dotnet add package GeneticSharp
</code></pre></div></div>
<center><span style="font-style:italic; font-size:small"><p>This will install the latest <a href="https://www.nuget.org/packages/GeneticSharp/">GeneticSharp NuGet package</a> in your newly created Blazor app.</p>
</span></center>
<p><br /></p>

<h2 id="opening-the-project">Opening the project</h2>
<p>I recommend to you use <a href="https://code.visualstudio.com/">Visual Studio Code</a> to open the project. There are some cool VS Code extensions to work with Blazor.</p>

<p>In the same terminal where you added the GeneticSharp package, type:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>code <span class="nb">.</span>
</code></pre></div></div>
<center><span style="font-style:italic; font-size:small"><p>This will open the Blazor project with VS Code.</p>
</span></center>
<p><br /></p>

<p>In the root folder of your Blazor project create a new subfolder called <code class="language-plaintext highlighter-rouge">Tsp</code>. We’ll add all our C# classes inside this folder.</p>

<h2 id="defining-the-tsp-chromosome">Defining the TSP chromosome</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/route-128-704e92446.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/route-128-704e92446.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/route-128-704e92446.png" alt="post image" width="128" height="128" />
</picture>

<p>The chromosome represents a solution of the problem we are trying to solve. In our case the TSP chromosome should represent <em><strong>“the shortest possible route that visits each city and returns to the origin city”</strong></em>.</p>

<p>To represent the cities route each gene of our chromosome will represent an index of a city in the route.</p>

<p>Create a file called <code class="language-plaintext highlighter-rouge">TspChromosome.cs</code>:
<script src="https://gist.github.com/9addc5182943ba25eb82201e30c76418.js?file=TspChromosome.cs"> </script></p>

<h2 id="representing-a-city">Representing a city</h2>
<p>The next step is define our genetic algorithm fitness function, but first we need to create a simple class to represent a city on a 2D space.</p>

<p>Create a file called <code class="language-plaintext highlighter-rouge">TspCity.cs</code>:
<script src="https://gist.github.com/9addc5182943ba25eb82201e30c76418.js?file=TspCity.cs"> </script></p>

<h2 id="the-fitness-function">The fitness function</h2>
<p>Now we need to evaluate the <code class="language-plaintext highlighter-rouge">TspChromosome</code>.</p>

<p>Our fitness function will evaluate the chromosome fitness based on the total distance to reach all cities in the route represented by the chromosome. The shorter the distance, the better the chromosome.</p>

<p>Create a file called <code class="language-plaintext highlighter-rouge">TspFitness.cs</code>: <script src="https://gist.github.com/9addc5182943ba25eb82201e30c76418.js?file=TspFitness.cs"> </script></p>

<h2 id="configuring-the-genetic-algorithm">Configuring the Genetic Algorithm</h2>
<p>In this step we need to configure our genetic algorithm using the <code class="language-plaintext highlighter-rouge">TspChromosome</code>, <code class="language-plaintext highlighter-rouge">TspFitness</code> and some classic GA operators already built in GeneticSharp.</p>

<p>Create a file called <code class="language-plaintext highlighter-rouge">TspGA.cs</code>: <script src="https://gist.github.com/9addc5182943ba25eb82201e30c76418.js?file=TspGA.cs"> </script></p>

<div class="note"><h3 id="why-use-timer">Why use Timer?</h3>
<p>GeneticSharp can be used as single threading or multithreading to evaluate chromosomes with the fitness function, but WebAssembly (and Blazor) can use just the UI thread, in this scenario when we call <code class="language-plaintext highlighter-rouge">GeneticAlgorithm.Start</code> method it freezes the UI until the GA finish.</p>

<p>To avoid this behavior, the solution is: run each generation of the GA inside a step in a <code class="language-plaintext highlighter-rouge">System.Threading.Timer</code> as you can see in the <code class="language-plaintext highlighter-rouge">TspGA.Run</code> method.</p>

<blockquote>
  <p>APIs that aren’t applicable inside of a web browser (for example, accessing the file system, opening a socket, and <strong>threading</strong>) throw a PlatformNotSupportedException.
(<a href="https://docs.microsoft.com/pt-br/aspnet/core/blazor/?view=aspnetcore-3.0">https://docs.microsoft.com/pt-br/aspnet/core/blazor/?view=aspnetcore-3.0</a>)</p>
</blockquote>
</div>

<h2 id="creating-the-razor-page">Creating the Razor page</h2>
<p>Inside the folder <code class="language-plaintext highlighter-rouge">Pages</code> create a file called <code class="language-plaintext highlighter-rouge">Tsp.razor</code>: <script src="https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=Tsp.v1.razor"> </script></p>

<p>As we need to interop with JavaScript to manipulate DOM, we will use some helper JS functions. Add the file <code class="language-plaintext highlighter-rouge">canvas-helper.js</code> inside the folder <code class="language-plaintext highlighter-rouge">wwwroot/js</code>:  <script src="https://gist.github.com/9addc5182943ba25eb82201e30c76418.js?file=canvas-helper.js"> </script></p>

<p>Open the file <code class="language-plaintext highlighter-rouge">index.html</code> and add the tag below inside the tag <code class="language-plaintext highlighter-rouge">head</code>:  <script src="https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=index.canvas-helper.html"> </script></p>

<div class="note"><h3 id="why-use-ijsruntime-do-access-dom">Why use IJSRuntime do access DOM?</h3>
<p>It’s awesome we can now use C# in the browser with Blazor. But unfortunately we can’t do everything with it, yet. Currently, WebAssembly isn’t able to directly access the DOM API, which means that Blazor isn’t able to either.
(<a href="https://chrissainty.com/blazor-bites-javascript-interop">https://chrissainty.com/blazor-bites-javascript-interop/</a>)</p>

<h3 id="webassembly-roadmap">WebAssembly roadmap</h3>
<p>DOM integration is in the WebAssembly roadmap: <a href="https://webassembly.org/docs/future-features">https://webassembly.org/docs/future-features/</a>.</p>
</div>

<p>Check your terminal window where the command <code class="language-plaintext highlighter-rouge">dotnet watch run</code> is running, if there is no error in that window you can access the url <a href="http://localhost:5000/tsp">http://localhost:5000/tsp</a>.</p>

<p>Hit the <code class="language-plaintext highlighter-rouge">Run</code> button and take a look on the browser console window, you will see the distance to reach all cities getting smaller as the generations ran.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/console-window-200-938b3a100.webp 200w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/console-window-400-938b3a100.webp 400w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/console-window-565-938b3a100.webp 565w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/console-window-200-938b3a100.png 200w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/console-window-400-938b3a100.png 400w, /assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/console-window-565-938b3a100.png 565w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/console-window-565-938b3a100.png" alt="post image" width="565" height="354" />
</picture>

      </center>
<p><br /></p>

<div class="note"><p>This is not a tutorial about Blazor good pratices, so everything here is done in the simplest possible way to introduce how to use GenticSharp with Blazor.  I do not talk about things you should use when working with Blazor, such as separate logic from UI and use Blazor components.</p>
</div>

<h2 id="drawing-the-cities">Drawing the cities</h2>
<p>Now our GA is running inside the browser, but it needs to display the cities route better.
We need to create a visual representation to the cities.</p>

<p>In the <code class="language-plaintext highlighter-rouge">Tsp.razor</code> add the method <code class="language-plaintext highlighter-rouge">DrawCitiesAsync</code>:</p>

<script src="https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=DrawCitiesAsync.cs"> </script>

<p>Then call it from <code class="language-plaintext highlighter-rouge">OnAfterRenderAsync</code> method, after the <code class="language-plaintext highlighter-rouge">clearCanvas</code> call:
<script src="https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=DrawCitiesAsyncCall.cs"> </script></p>

<p>Reload the url <a href="http://localhost:5000/tsp">http://localhost:5000/tsp</a>.</p>

<p>Now you should see something like this:</p>
<center>                
        <img class="screenshot" src="/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/draw-cities.gif " alt="post image" />
      </center>
<p><br /></p>

<h2 id="drawing-the-route">Drawing the route</h2>
<p>In the previous step we drawn the cities and we have the visual of the problem: the cities.</p>

<p>Now we need to draw the solution: the route represented by the best chromosome of each generation.</p>

<p>Add the following method to the <code class="language-plaintext highlighter-rouge">Tsp.razor</code>:
<script src="https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=DrawRouteAsync.cs"> </script></p>

<p>Then call it from <code class="language-plaintext highlighter-rouge">OnAfterRenderAsync</code> method, after the <code class="language-plaintext highlighter-rouge">DrawCitiesAsync</code> call:
<script src="https://gist.github.com/c10fba01c090a89702818cd1c48a125f.js?file=DrawRouteAsyncCall.cs"> </script></p>

<p>Reload the url <a href="http://localhost:5000/tsp">http://localhost:5000/tsp</a> again, and hit the <code class="language-plaintext highlighter-rouge">Run</code> button, now you should see the route been optimizing as the generations are ran:</p>
<center>                
        <img class="screenshot" src="/assets/2019/07/10/tsp-with-geneticsharp-and-blazor/draw-route.gif " alt="post image" />
      </center>
<p><br /></p>

<h2 id="conclusion">Conclusion</h2>
<p>With only 4 C# classes, 1 JS file and 1 Blazor page we built a pretty nice sample of genetic algorithms using Blazor with GeneticSharp. Now you can improve it with your own ideas or use some of mine ;):</p>

<ul>
  <li>Maybe let user change the genetic algorithm operators (crossover, mutation, selection, etc)?</li>
  <li>Move the DrawCitiesAsync and DrawRouteAsync to <a href="https://docs.microsoft.com/en-us/aspnet/core/blazor/components?view=aspnetcore-3.0">Blazor components</a> responsible to only draw them?</li>
</ul>

<p>The full source code used in this post can be download or fork from this Gist: <a href="https://gist.github.com/giacomelli/9addc5182943ba25eb82201e30c76418">https://gist.github.com/giacomelli/9addc5182943ba25eb82201e30c76418</a></p>

<p>Let’s evolve!</p>

<p><br /><br /><br />Icons made by <a href="http://www.freepik.com">Freepik</a>, <a href="http://www.flaticon.com/authors/vignesh-oviyan">Vignesh Oviyan</a> and <a href="https://www.flaticon.com/authors/eucalyp" title="Eucalyp">Eucalyp</a> from <a href="http://www.flaticon.com">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons BY 3.0</a></p>]]></content><author><name></name></author><category term="Tutorial" /><category term="geneticsharp" /><category term="blazor" /><category term="webassembly" /><category term="tsp" /><category term="dotnet" /><summary type="html"><![CDATA[In this post I will show how to use GeneticSharp and Blazor to solve the TSP (Travelling salesman problem). Introduction]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Hierarchy Window Layer Info</title><link href="http://diegogiacomelli.com.br/unitytips-hierarchy-window-layer-info/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Hierarchy Window Layer Info" /><published>2019-07-09T00:00:00-03:00</published><updated>2019-07-09T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-hierarchy-window-layer-info</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-hierarchy-window-layer-info/"><![CDATA[<p>You can create a visual layer info to any component on your hierarchy window using <code class="language-plaintext highlighter-rouge">EditorApplication.hierarchyWindowItemOnGUI</code>:</p>
<center>
        <iframe src="https://www.youtube.com/embed/JxvOshwNdfE " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="code">Code</h2>
<script src="https://gist.github.com/096005d0d0df79b94321f950138220a3.js?file=HierarchyWindowLayerInfo.cs"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><category term="hierarchy-window" /><summary type="html"><![CDATA[You can create a visual layer info to any component on your hierarchy window using EditorApplication.hierarchyWindowItemOnGUI:]]></summary></entry><entry><title type="html">Unity and Game Development links (July 8th 2019)</title><link href="http://diegogiacomelli.com.br/unity-and-gamedev-links-july-8th-2019/" rel="alternate" type="text/html" title="Unity and Game Development links (July 8th 2019)" /><published>2019-07-08T00:00:00-03:00</published><updated>2019-07-08T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-and-gamedev-links-july-8th-2019</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-and-gamedev-links-july-8th-2019/"><![CDATA[<ul>
  <li>
    <p><strong>Sykoo</strong> released a YouTube video about the new Unity Terrain Tools package (<a href="https://www.youtube.com/watch?v=aExdxF4OKBo">Build Beautiful Terrains with Unity 2019! – New Terrain Tools Package</a>).</p>
  </li>
  <li><strong>Stacey Haffner</strong> made a blog post about the new experience for Collaborate that they are designing, like new UI and Git command-line support (<a href="https://blogs.unity3d.com/2019/07/01/collaborate-developer-diary-1-exploring-the-new-design">Collaborate Developer Diary #1: Exploring the New Design</a>).
    <blockquote>
      <p>Based on a set of guiding principles focused on delivering value to teams with diverse skill sets, we are designing a brand new experience for Collaborate.</p>
    </blockquote>
  </li>
  <li><strong>Matthew Crosby</strong> released the Animal-AI Olympics, a AI competition with $32,000 in prizes. (<a href="https://www.mdcrosby.com/blog/animalailaunch.html">Animal-AI Olympics now released into the wild!</a>).
    <blockquote>
      <p>The Animal-AI Olympics is an AI competition with tests inspired by animal cognition. Participants are given a small environment with just seven different classes of objects that can be placed inside. In each test, the agent needs to retrieve the food in the environment, but to do so there are obstacles to overcome, ramps to climb, boxes to push, and areas that must be avoided.</p>
    </blockquote>
  </li>
  <li><strong>Unity</strong> published the IAP Playbook: 12 strategies to help you monetize your game (<a href="https://create.unity3d.com/iap-playbook">The IAP playbook</a>).
    <blockquote>
      <p>In-app purchases are an important part of your monetization strategy, but implementing them correctly can be challenging. Understanding how to create, surface, and optimize them without disrupting the game experience takes hard work.</p>
    </blockquote>
  </li>
  <li>
    <p><strong>Sykoo</strong> published a YouTube video about how to make NPCs for your games (<a href="https://www.youtube.com/watch?v=FRFjggLMXFU">How to Make AWESOME NPCs for Your Game!</a>).</p>
  </li>
  <li>
    <p><strong>Brackeys</strong> made a video about how to add physics to ragdolls in Unity (<a href="https://www.youtube.com/watch?v=DInV-jHm9rk">RAGDOLL PHYSICS in Unity!</a>).</p>
  </li>
  <li><strong>Pierre Bosset</strong> interviewed <strong>Mirko Vescio</strong> about how to use Substance and Unity combined for realistic architectural visualization  (<a href="https://www.substance3d.com/blog/creating-realistic-archviz-experiences-oneiros-using-unity">Creating Realistic Archviz Experiences by Oneiros using Unity</a>).
    <blockquote>
      <p>It is important not to forget that one advantage of using Unity in architectural visualization is that you can get different types of output from the same scene. For example, it is possible to make a video in cinematic mode, as well as in virtual reality mode.</p>
    </blockquote>
  </li>
  <li>
    <p><strong>Alexandre Mutel</strong> released the the first preview version of <code class="language-plaintext highlighter-rouge">UnityNuGet</code> providing a service to install NuGet packages into an Unity project via the Unity Package Manager (<a href="https://github.com/xoofx/UnityNuGet">UnityNuGet</a>).</p>
  </li>
  <li><strong>Sykoo</strong> made another video, this time about realistic lighting in Unity (<a href="https://www.youtube.com/watch?v=zmF29YGEMUU">REALISTIC LIGHTING in Unity! (Tutorial)</a>).</li>
</ul>]]></content><author><name></name></author><category term="News" /><category term="unity3d" /><category term="gamedev" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">GeneticSharp in the Wild&amp;amp;colon; Frixel</title><link href="http://diegogiacomelli.com.br/geneticsharp-in-the-wild-frixel/" rel="alternate" type="text/html" title="GeneticSharp in the Wild&amp;amp;colon; Frixel" /><published>2019-07-04T00:00:00-03:00</published><updated>2019-07-04T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/geneticsharp-in-the-wild-frixel</id><content type="html" xml:base="http://diegogiacomelli.com.br/geneticsharp-in-the-wild-frixel/"><![CDATA[<p>I started a <a href="/tags/geneticsharp-in-the-wild/">series of posts</a> about some outstanding scientific papers and projects using <a href="https://github.com/giacomelli/GeneticSharp">GeneticSharp</a>.</p>

<p>For this third post the choose one is the <code class="language-plaintext highlighter-rouge">Frixel: 2D framing / pixel structural optimization</code>.</p>

<h2 id="introduction">Introduction</h2>

<p>Frixel is a plugin for <a href="https://rhino3d.com">Rhinoceros 6</a>, a 3D computer graphics and computer-aided design (CAD) application.</p>

<p><em>A finite element analysis program that’s so easy a 5 year old could use it.</em></p>

<p><em>Provided only a closed curve representing a building massing and location for core, Frixel generates a 2 dimensional grid and runs structural analysis on it.</em></p>

<p><em>You can tweak grid size, gravitation magnitude and lateral wind force to see how your design perfoms under different conditions. Additionally, it can run structural topology optimization to improve its mechanical performance by adding bracing in appropriate places.</em></p>

<h2 id="usage">Usage</h2>
<p>GeneticSharp was used to design the <a href="https://github.com/EmilPoulsen/Frixel/blob/7a80a96e2793fd3f4e32bcf01ba6ca13fcc6a06a/Frixel.Optimizer/Optimization/StructuralChromosome.cs">structural chromosomes</a> and <a href="https://github.com/EmilPoulsen/Frixel/blob/7a80a96e2793fd3f4e32bcf01ba6ca13fcc6a06a/Frixel.Optimizer/Optimization/StructuralFitness.cs">fitness function</a> to allow framing / pixel structural optimization through the <a href="https://github.com/EmilPoulsen/Frixel/blob/7a80a96e2793fd3f4e32bcf01ba6ca13fcc6a06a/Frixel.Optimizer/Optimization/FrixelOptimizer.cs">Frixel optimizer</a>.</p>

<center>                
        <img class="screenshot" src="/assets/2019/07/04/geneticsharp-in-the-wild-frixel/geneticsharp-frixel-optimization.gif " alt="post image" />
      </center>
<p><br /></p>

<h2 id="functionality">Functionality</h2>
<p>According to the developers, these are the features of Frixel:</p>

<ul>
  <li>A power-up for architect-engineer collaboration.</li>
  <li>A great way to test and guide options in early stage design.</li>
  <li>Fast. You can quickly get an understanding of structural behavior.</li>
  <li>Topology optimization for minimal displacement.</li>
  <li>Platform agnostic</li>
</ul>

<h2 id="authors">Authors</h2>
<p>The project was developed from scratch under 24 intense hours at the beyondAEC Hackathon July 2018, in Boston MA by <a href="https://github.com/lelandjobson">Leland Jobson</a> and <a href="https://github.com/EmilPoulsen">Emil Poulsen</a>.</p>

<h2 id="further-reading">Further reading</h2>
<p>You can access the project repository at: <a href="https://github.com/EmilPoulsen/Frixel">https://github.com/EmilPoulsen/Frixel</a>.</p>]]></content><author><name></name></author><category term="Article" /><category term="geneticsharp" /><category term="geneticsharp-in-the-wild" /><summary type="html"><![CDATA[I started a series of posts about some outstanding scientific papers and projects using GeneticSharp.]]></summary></entry><entry><title type="html">unitytips Museum</title><link href="http://diegogiacomelli.com.br/unitytips-museum/" rel="alternate" type="text/html" title="unitytips Museum" /><published>2019-07-02T00:00:00-03:00</published><updated>2019-07-02T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-museum</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-museum/"><![CDATA[<p>I <a href="https://twitter.com/ogiacomelli/status/1144379461317648384">recently</a> started studying <a href="https://dotnet.microsoft.com/apps/aspnet/web-apps/client">Blazor</a> and last weekend I created this simple app that I called: <code class="language-plaintext highlighter-rouge">#unitytips Museum</code>, a collection of best #unitytips.</p>

<p>You can access it directly in my site, in this url: <a href="http://diegogiacomelli.com.br/apps/unitytips-museum">http://diegogiacomelli.com.br/apps/unitytips-museum</a></p>

<center>
        <iframe src="https://www.youtube.com/embed/B9eTNZWhojI " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="the-unitytips-collection">The #unitytips collection</h2>
<p>Every week all #unitytips retweeted by <a href="https://twitter.com/unity3d">@unity3d</a> will be included to the collection.</p>

<p>If you know a really good #unitytips (at least 50 retweets) that should be added to the collection, please follow one of options above:</p>

<ul>
  <li>Contact me on Twitter <a href="https://twitter.com/ogiacomelli">@ogiacomelli</a>.</li>
  <li><a href="https://github.com/giacomelli/unitytips-museum">Fork it on GitHub</a>, add the #unitytips to the wwwroot/data/tips.json file and create a pull-request.</li>
</ul>

<h2 id="about-blazor">About Blazor</h2>
<blockquote>
  <p>Blazor can run your client-side C# code directly in the browser, using WebAssembly. Because it’s real .NET running on WebAssembly, you can re-use code and libraries from server-side parts of your application.</p>
</blockquote>

<p>In a future post I will discuss what I learned about Blazor while developing the #unitytips Museum, but I can give a spoiler: I really liked it!</p>]]></content><author><name></name></author><category term="News" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><category term="blazor" /><summary type="html"><![CDATA[I recently started studying Blazor and last weekend I created this simple app that I called: #unitytips Museum, a collection of best #unitytips.]]></summary></entry><entry><title type="html">Unity and Game Development links (July 1st 2019)</title><link href="http://diegogiacomelli.com.br/unity-and-gamedev-links-july-1st-2019/" rel="alternate" type="text/html" title="Unity and Game Development links (July 1st 2019)" /><published>2019-07-01T00:00:00-03:00</published><updated>2019-07-01T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-and-gamedev-links-july-1st-2019</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-and-gamedev-links-july-1st-2019/"><![CDATA[<ul>
  <li>
    <p><strong>Unity</strong> released a YouTube tutorial about how to create a portal effect in Lightweight Render Pipeline with Shader Graph (<a href="https://www.youtube.com/watch?v=TkzASwVgnj8">Making Portals with Shader Graph in Unity! (Tutorial)</a>).</p>
  </li>
  <li>
    <p><strong>Dilmer Valecillos</strong> posted a video on augmented reality while implementing a dragging feature with ray-casting (<a href="https://www.youtube.com/watch?v=nBftG-gXUE8">AR Foundation with Unity3d and Adding Dragging Functionality with AR Raycast and Physics Raycast</a>).</p>
  </li>
  <li><strong>Felipe Lira</strong> created a GitHub repository with a bare bones Scriptable Render Pipeline. (<a href="https://github.com/phi-lira/HelloSRP">HelloSRP</a>).
    <blockquote>
      <p>Bare Bones Scriptable Render Pipeline. Use it as a base to create your own.</p>
    </blockquote>
  </li>
  <li><strong>Sebastian Lague</strong> made some updates to his path creation tool (<a href="https://github.com/SebLague/Path-Creator">Bézier Path Creator</a>).
    <blockquote>
      <p>An intuitive and lightweight editor for quickly creating smooth paths in the editor.
You can easily make objects move along these paths, or use them as a guide for spawning objects and generating meshes.</p>
    </blockquote>
  </li>
  <li>
    <p><strong>Unity</strong>, started its annual survey asking for community feedback (<a href="https://on.unity.com/2xdSRmX">survey</a>).</p>
  </li>
  <li>
    <p><strong>Sykoo</strong> published a YouTube video showing what he learned after making more than 100 game levels (<a href="https://www.youtube.com/watch?v=WPimiBP8d6o">What I Learned after Making 100+ GAME LEVELS! (Unity Level Design)</a>).</p>
  </li>
  <li><strong>Nichole Wong</strong> wrote about the new <code class="language-plaintext highlighter-rouge">Unity Learn Premium</code> (<a href="https://blogs.unity3d.com/2019/06/27/introducing-unity-learn-premium/">Introducing Unity Learn Premium: Get direct guidance from experts</a>).
    <blockquote>
      <p>We’ve heard your requests for more advanced and in-depth content, and resources for specific industries like automotive, architecture, or media and entertainment. And we’ve also heard that you want access to experts who can give you immediate guidance and feedback on specific challenges or questions</p>
    </blockquote>
  </li>
  <li><strong>Eduardo Oriz and Alitt Khaliq</strong> made a post showing the behind the scenes and dive further into the creative process behind Buried Memories Volume 2: Serekh (<a href="https://blogs.unity3d.com/2019/06/28/the-creative-process-behind-serekh/">The creative process behind Serekh</a>).
    <blockquote>
      <p>Developing a strong game, large or small, depends on having a dedicated team of skilled and specialized people who share a vision and care deeply about what they are making. The development of Serekh was a combined effort by Edvige Faini, the Concept Artist, and the Unity Icon Collective. Some of the most significant challenges on this project were conceptual rather than technical.</p>
    </blockquote>
  </li>
  <li><strong>Sykoo</strong> again, with a video on tips, tricks, and list of features in Unity for making 2D games (<a href="https://www.youtube.com/watch?v=-MuWAydTjY0">How to make 2D Games with Unity 2019!</a>).</li>
</ul>]]></content><author><name></name></author><category term="News" /><category term="unity3d" /><category term="gamedev" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Starting an Unity3D project with GeneticSharp using dotnet new</title><link href="http://diegogiacomelli.com.br/starting-an-unity3d-project-with-geneticsharp-using-dotnet-new/" rel="alternate" type="text/html" title="Starting an Unity3D project with GeneticSharp using dotnet new" /><published>2019-06-27T00:00:00-03:00</published><updated>2019-06-27T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/starting-an-unity3d-project-with-geneticsharp-using-dotnet-new</id><content type="html" xml:base="http://diegogiacomelli.com.br/starting-an-unity3d-project-with-geneticsharp-using-dotnet-new/"><![CDATA[<p>In this post I will show how to use <code class="language-plaintext highlighter-rouge">dotnet new</code> command to start an Unity3D project with GeneticSharp.</p>

<h2 id="introduction">Introduction</h2>
<p>Sometime ago I created a NuGet package called <a href="/dotnet-new-templates-for-GeneticSharp">GeneticSharp.Templates</a>, this package allows developers to install <a href="https://github.com/giacomelli/GeneticSharp">GeneticSharp</a> templates using the dotnet new command.</p>

<p>Among the availables templates in <code class="language-plaintext highlighter-rouge">GeneticSharp.Templates</code>, there is one specific to create an Unity3D project with GeneticSharp. Besides this, the project has a sample of Travelling Salesman Problem (TSP) using GeneticSharp and can be used as a scaffold to starting use genetic algorithms in your games.</p>

<h2 id="usage">Usage</h2>
<p>Create an Unity3D project using dotnet new is fast and simple, depending of your machine performance, you’ll have the sample running in less than a minute.</p>

<p>Open a terminal/prompt and type:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dotnet new <span class="nt">-i</span> GeneticSharp.Templates
dotnet new GeneticSharpTspUnity3d <span class="nt">-o</span> GeneticSharpSample
</code></pre></div></div>
<center><span style="font-style:italic; font-size:small"><p>The argument <code class="language-plaintext highlighter-rouge">-o</code> is the the output folder of the Unity3D project</p>
</span></center>
<p><br /></p>

<p>Now you can open the <code class="language-plaintext highlighter-rouge">GeneticSharpSample</code> in Unity3D editor.
Open the <code class="language-plaintext highlighter-rouge">MainScene</code> scene and hit the play button, you should see something like this:</p>
<center>                
        <img class="screenshot" src="/assets/2019/06/27/starting-an-unity3d-project-with-geneticsharp-using-dotnet-new/geneticsharp-ts-template.gif " alt="post image" />
      </center>
<p><br /></p>

<h2 id="conclusion">Conclusion</h2>
<p>Thats it, now you can use this sample to understand how to use GeneticSharp in your game.</p>

<p>If you want more details about the code and the sample itself, please, take a look on this tutorial <a href="/tsp-with-GeneticSharp-and-Unity3d/">TSP with GeneticSharp and Unity3D</a>.</p>

<blockquote>
  <p>If you need an introduction to genetic algorithms, this tutorial could help you <a href="/function-optimization-with-geneticsharp/">Function optimization with GeneticSharp</a>.</p>
</blockquote>

<p>Let’s evolve!</p>]]></content><author><name></name></author><category term="Tutorial" /><category term="geneticsharp" /><category term="unity3d" /><category term="dotnet" /><summary type="html"><![CDATA[In this post I will show how to use dotnet new command to start an Unity3D project with GeneticSharp. Introduction Sometime ago I created a NuGet package called GeneticSharp.Templates, this package allows developers to install GeneticSharp templates using the dotnet new command.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Gist Importer</title><link href="http://diegogiacomelli.com.br/unitytips-gist-importer/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Gist Importer" /><published>2019-06-25T00:00:00-03:00</published><updated>2019-06-25T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-gist-importer</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-gist-importer/"><![CDATA[<p>Using the Gist below you can easily import other Gists to your Unity project just copying the URL from browser:</p>
<center>
        <iframe src="https://www.youtube.com/embed/YljjAkebxiE " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="code">Code</h2>
<script src="https://gist.github.com/9a248eecf5c1ffc477b59524f63264d3.js"> </script>

<center><span style="font-style:italic; font-size:small"><p>All Gists are imported to folder <code class="language-plaintext highlighter-rouge">Assets/Gists</code></p>
</span></center>
<p><br /></p>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><summary type="html"><![CDATA[Using the Gist below you can easily import other Gists to your Unity project just copying the URL from browser:]]></summary></entry><entry><title type="html">Unity and Game Development links (June 24th 2019)</title><link href="http://diegogiacomelli.com.br/unity-and-gamedev-links-june-24th-2019/" rel="alternate" type="text/html" title="Unity and Game Development links (June 24th 2019)" /><published>2019-06-24T00:00:00-03:00</published><updated>2019-06-24T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-and-gamedev-links-june-24th-2019</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-and-gamedev-links-june-24th-2019/"><![CDATA[<ul>
  <li>
    <p><strong>Sykoo</strong> made a video about the Buried Memories Volume 2: Serekh (<a href="https://www.youtube.com/watch?v=5CTAVFOrbsM">Buried Memories: Serekh – New HDRP Asset Pack for Unity! (Overview)</a>).</p>
  </li>
  <li><strong>Jean-Christophe Cimetiere</strong> wrote a post about how to use Unity as a library inside other apps (<a href="https://blogs.unity3d.com/2019/06/17/add-features-powered-by-unity-to-native-mobile-apps">Add features powered by Unity to native mobile apps</a>).
    <blockquote>
      <p>Unity 2019.3 will add support for using Unity as a library controlled by native Android/Java and iOS/Objective C apps so you can easily insert AR and other Unity features.</p>
    </blockquote>
  </li>
  <li><strong>Egor Bogatov</strong> created a GitHub repository with a sample Xamarin app using Unity as a library (<a href="https://github.com/EgorBo/XamarinWithUnityApp">XamarinWithUnityApp</a>).
    <blockquote>
      <p>You can now easily add a Unity scene (e.g. ARCore scene) to any native or Xamarin app via .aar file.</p>
    </blockquote>
  </li>
  <li><strong>Jacob Shriar</strong> posted about a survey that Unity made with 1000 creatives within advertising and marketing about AR (<a href="https://blogs.unity3d.com/2019/06/18/creative-professionals-are-struggling-to-implement-augmented-reality">Creative professionals are struggling to implement augmented reality</a>).
    <blockquote>
      <p>In anticipation for Cannes this year, we surveyed 1000 creatives within advertising and marketing to gauge a better understanding on their comfort level, technical competency, and enthusiasm towards AR, including what it means for the future of storytelling. And what we found was very telling</p>
    </blockquote>
  </li>
  <li>
    <p><strong>Harry Alisavakis</strong>, released another tutorial in his series <code class="language-plaintext highlighter-rouge">VFX Master Shader</code> (<a href="https://halisavakis.com/my-take-on-shaders-vfx-master-shader-part-ii/">My take on shaders: VFX Master Shader (Part II)</a>).</p>
  </li>
  <li><strong>Nick Davis</strong> wrote about how automotive companies are leveraging real-time 3D to reduce costs and accelerate development (<a href="https://blogs.unity3d.com/2019/06/19/how-real-time-3d-is-changing-every-industry">How real-time 3D is changing every industry</a>).
    <blockquote>
      <p>Real-time 3D is changing everything, in much deeper ways than most people realize. Forged in gaming, this technology continues to transform the way games are created, operated and monetized. Its impact now also extends to industries of all kinds, from film to automotive.</p>
    </blockquote>
  </li>
  <li><strong>Seth Barton</strong> made a post about how HDRP is taking next-gen graphics to a new level (<a href="https://www.mcvuk.com/in-the-pipeline-unitys-hdrp-brings-next-gen-graphics-to-the-worlds-most-used-game-engine/">In the pipeline: Unity’s HDRP brings next-gen graphics to the world’s most-used game engine</a>).
    <blockquote>
      <p>What do System Shock 3, Oddworld: Soulstorm and Harold Halibut have in common? Well, all of these incredible-looking upcoming titles are built on Unity, and more specifically will utilise Unity’s upcoming High Definition Render Pipeline or HDRP for short.</p>
    </blockquote>
  </li>
  <li><strong>Caitlin W and Macy Mills</strong> wrote a post about the new Unity’s <code class="language-plaintext highlighter-rouge">Verified Solutions Partners</code> (<a href="https://blogs.unity3d.com/2019/06/20/unitys-new-partnerships-bring-verified-solutions-to-developers-across-industries">Unity’s new partnerships bring verified solutions to developers across industries</a>).
    <blockquote>
      <p>Verified Solutions Partners represent a collection of 3rd-party SDKs, plugins, editor applications, cloud services, and more that enable the success of your project while ensuring deeper technical alignment with partners’ products and services to ensure 0% developer downtime. Partners accepted into the program go through a verification process to ensure their SDK or software is optimized for the latest version of Unity.</p>
    </blockquote>
  </li>
  <li>
    <p><strong>Elena Nizhnik</strong> released a new <code class="language-plaintext highlighter-rouge">Community Component</code> post, highlighting some games, posts, videos and tools (<a href="https://blogs.unity3d.com/2019/06/22/community-component-audio-design-pixel-games-custom-tools-and-best-of-made-with-unity-on-youtube">Community Component – audio design, pixel games, custom tools and Best of Made with Unity on YouTube</a>).</p>
  </li>
  <li>
    <p><strong>Sykoo</strong> again, now with a timelapse level design video (<a href="https://www.youtube.com/watch?v=f3vNNUC1tnE">LEVEL DESIGN IN UNITY! - Village &amp; Castle Scene (Timelapse)</a>).</p>
  </li>
  <li><strong>Brackeys</strong> made a video about the new Terrain System in Unity (<a href="https://www.youtube.com/watch?v=MWQv2Bagwgk">How to make Terrain in Unity!</a>).</li>
</ul>]]></content><author><name></name></author><category term="News" /><category term="unity3d" /><category term="gamedev" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">GeneticSharp in the Wild&amp;amp;colon; Context-Sensitive Code Completion</title><link href="http://diegogiacomelli.com.br/geneticsharp-in-the-wild-context-sensitive-code-completion/" rel="alternate" type="text/html" title="GeneticSharp in the Wild&amp;amp;colon; Context-Sensitive Code Completion" /><published>2019-06-21T00:00:00-03:00</published><updated>2019-06-21T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/geneticsharp-in-the-wild-context-sensitive-code-completion</id><content type="html" xml:base="http://diegogiacomelli.com.br/geneticsharp-in-the-wild-context-sensitive-code-completion/"><![CDATA[<p>I decided to start a <a href="/tags/geneticsharp-in-the-wild/">series of posts</a> about some outstanding scientific papers and projects using <a href="https://github.com/giacomelli/GeneticSharp">GeneticSharp</a>.</p>

<p>For this second post the choose one is the <code class="language-plaintext highlighter-rouge">Context-Sensitive Code
Completion: Improving Predictions with Genetic Algorithms</code>.</p>

<h2 id="introduction">Introduction</h2>
<p>The main motivation of the author about this paper was:
<em>Current methods of training code completion systems can possibly be improved in order
to reduce prediction errors. This requires that the amount of information considered in a
pattern is optimized. The question raised is then: how should the training of predictive
models be focused in order to increase prediction quality?</em></p>

<p><em>This thesis will aim to answer the question: to what extent is it possible to improve predictions
of existing state-of-the-art code completion systems with a genetic algorithm?</em></p>

<h2 id="usage">Usage</h2>
<p><em>GeneticSharp is an open-source Genetic Algorithm library for C#, released under the MIT
license (Giacomelli). It has an extensible interface that allows for most, if not all, functionality
to be implemented from scratch via interfaces or leveraged by extending base classes. Classes
and interfaces also use the same terminology that has already been established, which makes
the translation from theory to implementation much more clear.</em></p>

<h2 id="results">Results</h2>
<p><em>As a result of the new training scheme, the quality of predictions can be increased without
losing generalizability. Application of the new training scheme could possibly be applied
to any code completion systems that trains a predictive model, making it a candidate for
improving existing systems as well as in future research.</em></p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/21/geneticsharp-in-the-wild-context-sensitive-code-completion/gscc-vs-genecscc-200-096aa452c.webp 200w, /assets/images/generated/assets/2019/06/21/geneticsharp-in-the-wild-context-sensitive-code-completion/gscc-vs-genecscc-400-096aa452c.webp 400w, /assets/images/generated/assets/2019/06/21/geneticsharp-in-the-wild-context-sensitive-code-completion/gscc-vs-genecscc-652-096aa452c.webp 652w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/21/geneticsharp-in-the-wild-context-sensitive-code-completion/gscc-vs-genecscc-200-096aa452c.png 200w, /assets/images/generated/assets/2019/06/21/geneticsharp-in-the-wild-context-sensitive-code-completion/gscc-vs-genecscc-400-096aa452c.png 400w, /assets/images/generated/assets/2019/06/21/geneticsharp-in-the-wild-context-sensitive-code-completion/gscc-vs-genecscc-652-096aa452c.png 652w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/06/21/geneticsharp-in-the-wild-context-sensitive-code-completion/gscc-vs-genecscc-652-096aa452c.png" alt="post image" width="652" height="324" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>results comparison between GCC and GeneCSCC (developed using GeneticSharp)</p>
</span></center>
<p><br /></p>

<h2 id="author">Author</h2>
<p>Marcus Ording wrote the paper for his degree project in Computer Engineering at KTH Royal Institute of Technology from Stockholm, Sweden.</p>

<h2 id="further-reading">Further reading</h2>
<p>You can access the full paper directly on <a href="http://www.diva-portal.org/smash/get/diva2:1088591/FULLTEXT01.pdf">DiVA Portal</a>.</p>]]></content><author><name></name></author><category term="Article" /><category term="geneticsharp" /><category term="geneticsharp-in-the-wild" /><summary type="html"><![CDATA[I decided to start a series of posts about some outstanding scientific papers and projects using GeneticSharp.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Changing the style of the Hierarchy Window Group Header</title><link href="http://diegogiacomelli.com.br/unitytips-changing-the-style-of-the-hierarchy-window-group-header/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Changing the style of the Hierarchy Window Group Header" /><published>2019-06-20T00:00:00-03:00</published><updated>2019-06-20T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-changing-the-style-of-the-hierarchy-window-group-header</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-changing-the-style-of-the-hierarchy-window-group-header/"><![CDATA[<p>In my last <a href="/tags/unitytips/">#unitytips</a> I demonstrated how you could create a visual header to any group of components on your hierarchy window using <code class="language-plaintext highlighter-rouge">EditorApplication.hierarchyWindowItemOnGUI</code>. Now I’m improving it allowing you to <strong>customize its style</strong>.</p>

<center>
        <iframe src="https://www.youtube.com/embed/g2lq0lIJzh8 " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>
<center><span style="font-style:italic; font-size:small"><p>To change the style, you just need to edit the values of the HierarchyWindowGroupHeaderSettings in the inspector</p>
</span></center>
<p><br /></p>

<h2 id="code">Code</h2>
<script src="https://gist.github.com/bb6a9932e5f49a072c57a7c17135bf6b.js?file=HierarchyWindowGroupHeader.cs"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>

<div class="note"><p>Remember that you need to save the above .cs inside any <code class="language-plaintext highlighter-rouge">Editor</code> folder</p>
</div>
<div class="note"><p>It’s a good practice add the tag <code class="language-plaintext highlighter-rouge">EditorOnly</code> to your group header game objects</p>
</div>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><category term="hierarchy-window" /><summary type="html"><![CDATA[In my last #unitytips I demonstrated how you could create a visual header to any group of components on your hierarchy window using EditorApplication.hierarchyWindowItemOnGUI. Now I’m improving it allowing you to customize its style.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; Hierarchy Window Group Header</title><link href="http://diegogiacomelli.com.br/unitytips-hierarchy-window-group-header/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; Hierarchy Window Group Header" /><published>2019-06-18T00:00:00-03:00</published><updated>2019-06-18T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-hierarchy-window-group-header</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-hierarchy-window-group-header/"><![CDATA[<p>You can create a visual header to any group of components on your hierarchy window using <code class="language-plaintext highlighter-rouge">EditorApplication.hierarchyWindowItemOnGUI</code>:</p>
<center>
        <iframe src="https://www.youtube.com/embed/YS5H8Y2Ytww " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="code">Code</h2>
<script src="https://gist.github.com/35410d682e41a504c7869a464a96c30a.js?file=HierarchyWindowGroupHeader.cs"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>
<center><span style="font-style:italic; font-size:small"><p>Any GameObject with name that starts with “—” will be considered a group header</p>
</span></center>
<p><br /></p>

<div class="note"><p>You can set tag of the headers game objects as <code class="language-plaintext highlighter-rouge">EditorOnly</code> to avoid them on runtime</p>
</div>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><category term="hierarchy-window" /><summary type="html"><![CDATA[You can create a visual header to any group of components on your hierarchy window using EditorApplication.hierarchyWindowItemOnGUI:]]></summary></entry><entry><title type="html">Unity and Game Development links (June 17th 2019)</title><link href="http://diegogiacomelli.com.br/unity-and-gamedev-links-june-17th-2019/" rel="alternate" type="text/html" title="Unity and Game Development links (June 17th 2019)" /><published>2019-06-17T00:00:00-03:00</published><updated>2019-06-17T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-and-gamedev-links-june-17th-2019</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-and-gamedev-links-june-17th-2019/"><![CDATA[<ul>
  <li>
    <p><strong>Sebastian Lague</strong> made an ecosystem simulation with foxes and rabbits in Unity3d (<a href="https://www.youtube.com/watch?v=r_It_X7v-1E">Coding Adventure: Simulating an Ecosystem</a>).</p>
  </li>
  <li><strong>Marius Horga</strong> wrote an overview about Metal 3 (<a href="http://metalkit.org/2019/06/10/introducing-metal-3.html">Introducing Metal 3</a>).
    <blockquote>
      <p>Metal 3 was announced last week at WWDC 2019. Apple presented it along with relevant numbers:</p>

      <ul>
        <li>Metal can now make 100 times more draw calls than OpenGL.</li>
        <li>Metal runs on roughly 1.4 billion devices currently.</li>
        <li>Metal can drive up to 56 TFLOPS of single precision.</li>
      </ul>
    </blockquote>
  </li>
  <li><strong>Mike Wuetherick</strong>, Head of Tech for Unity’s Innovation Group, posted about “Sherman”, the new short film made in real-time using Unity (<a href="https://blogs.unity3d.com/2019/06/11/introducing-sherman-part-1">Introducing Sherman (Part 1) – a Unity project featuring Real time fur, HDRP and Visual FX Graph for animators</a>).
    <blockquote>
      <p>Created by the Emmy-winning team that brought you Baymax Dreams, Sherman is a new real time Unity short that delivers the most advanced real time fur ever!</p>
    </blockquote>
  </li>
  <li><strong>Brandi House</strong> posted a guidance to transition the games between UNet and the new connected games stack (<a href="https://blogs.unity3d.com/2019/06/13/navigating-unitys-multiplayer-netcode-transition">Navigating Unity’s multiplayer Netcode transition</a>).
    <blockquote>
      <p>As many of you know, we put UNet into maintenance mode because we believe there is a better way forward with our new connected games stack</p>
    </blockquote>
  </li>
  <li><strong>War Robots case study</strong> shows how Pixonic used Unity to lift up their revenue from War Robots without negatively impacting user experience (<a href="https://unity.com/case-study/pixonic-war-robots">Pixonic - War Robots case study</a>).
    <blockquote>
      <p>How do you find new revenue opportunities in a free-to-play game that’s been going strong for over five years? Moscow-based Pixonic, a Top 100-grossing game developer in the CIS, has driven War Robots’ monthly players’ spending to over $5M.</p>
    </blockquote>
  </li>
  <li><strong>Keijiro Takahashi</strong>, an Unity evangelist, released the first version of <code class="language-plaintext highlighter-rouge">MidiAnimationTrack</code> that imports .mid files into Unity Timeline. It allows creating musically synchronized animation (<a href="https://github.com/keijiro/MidiAnimationTrack">MIDI Animation Track</a>).
    <blockquote>
      <p>Is a custom timeline/playables package that provides functionality to control object properties based on sequence data contained in a standard MIDI file</p>
    </blockquote>
  </li>
  <li>
    <p><strong>Sykoo</strong> made a new video about his 5 favorite assets from Unity Asset Store (<a href="https://www.youtube.com/watch?v=LLlJzQNYsAI">5 AMAZING ASSETS for Unity 2019</a>).</p>
  </li>
  <li><strong>Brackeys</strong> released a video about new 2D renderer in Unity (<a href="https://www.youtube.com/watch?v=nkgGyO9VG54">2D Lights in Unity!</a>).</li>
</ul>]]></content><author><name></name></author><category term="News" /><category term="unity3d" /><category term="gamedev" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Using Tesseract 4 with C#</title><link href="http://diegogiacomelli.com.br/using-tesseract4-with-csharp/" rel="alternate" type="text/html" title="Using Tesseract 4 with C#" /><published>2019-06-13T00:00:00-03:00</published><updated>2019-06-13T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/using-tesseract4-with-csharp</id><content type="html" xml:base="http://diegogiacomelli.com.br/using-tesseract4-with-csharp/"><![CDATA[<p>Recently I built a small tool to read the text of thousands of images.</p>

<h2 id="introduction">Introduction</h2>
<p>A common technique to extract text from images is know as OCR (Optical character recognition) and the best implementation, that I Know, is called <a href="https://github.com/tesseract-ocr/tesseract">Tesseract</a>.</p>

<p>When a I started to build the tool, I used the most famous <a href="https://github.com/charlesw/tesseract">Tesseract’s wrapper for .NET</a>.</p>

<p>Although the wrapper worked very well, I was curious about if there was a way to get better peformance results. With a little search I noticed that the .NET wrapper still use Tesseract 3, but there was a version 4 available with a lot of performance improvements:</p>

<blockquote>
  <p>If you are running Tesseract 4, you can use the “fast” integer models.</p>

  <p>Tesseract 4 also uses up to four CPU threads while processing a page, so it will be faster than Tesseract 3</p>
</blockquote>
<center><span style="font-style:italic; font-size:small"><p>https://github.com/tesseract-ocr/tesseract/wiki/FAQ#can-i-increase-speed-of-ocr</p>
</span></center>
<p><br /></p>

<p>So, I decided to try Tesseract 4 to see how could it impact in the performance of my tool. As at the time there was no .NET wrapper for it, I removed the old wrapper and called Tesseract 4 directly as a process.</p>

<div class="note"><p>The use of Tesseract 4 cut off the time to read the images in almost half</p>
</div>

<h2 id="tesseractservice">TesseractService</h2>
<p>I ended up developing the class below to call the <code class="language-plaintext highlighter-rouge">Tesseract 4</code> command-line <code class="language-plaintext highlighter-rouge">(tesseract.exe)</code> directly from the C# code. 
&lt;!– <br /></p>

<script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>

<p><ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-4531139417583317" data-ad-slot="3308598273"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<p><br /> –&gt;
<script src="https://gist.github.com/ae80c1ed9b374894b21890f1d2dee42a.js?file=TesseractService.cs"> </script></p>

<h2 id="setup">Setup</h2>
<ul>
  <li>Just download the gist above and add it to your .NET project.</li>
  <li>Install Tesseract 4
    <ul>
      <li>Linux and OSX: <a href="https://github.com/tesseract-ocr/tesseract/wiki">https://github.com/tesseract-ocr/tesseract/wiki</a></li>
      <li>Windows: <a href="https://github.com/UB-Mannheim/tesseract/wiki">https://github.com/UB-Mannheim/tesseract/wiki</a></li>
    </ul>
  </li>
  <li>Download the trained data model for the language you need to read the images
    <ul>
      <li>More accurate, but slower: <a href="https://github.com/tesseract-ocr/tessdata_best">https://github.com/tesseract-ocr/tessdata_best</a></li>
      <li>Faster, but less accurate: <a href="https://github.com/tesseract-ocr/tessdata_fast">https://github.com/tesseract-ocr/tessdata_fast</a>.</li>
    </ul>
  </li>
</ul>

<h2 id="usage">Usage</h2>
<script src="https://gist.github.com/ae80c1ed9b374894b21890f1d2dee42a.js?file=usage-sample.cs"> </script>

<p>If you try to read a image like this one:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-200-171750320.webp 200w, /assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-400-171750320.webp 400w, /assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-800-171750320.webp 800w, /assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-1024-171750320.webp 1024w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-200-171750320.png 200w, /assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-400-171750320.png 400w, /assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-800-171750320.png 800w, /assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-1024-171750320.png 1024w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/06/13/using-tesseract4-with-csharp/input-sample-image-800-171750320.png" alt="post image" width="1024" height="800" />
</picture>

      </center>
<p><br /></p>

<p>You will get this result after call the <code class="language-plaintext highlighter-rouge">TesseractService.GetText</code> method:
<code class="language-plaintext highlighter-rouge">The (quick) [brown] {fox} jumps!
Over the $43,456.78 &lt;lazy&gt; #90 dog
&amp; duck/goose, as 12.5% of E-mail
from aspammer@website.com is spam.
Der ,.schnelle" braune Fuchs springt
iiber den faulen Hund. Le renard brun
«rapide» saute par-dessus le chien
paresseux. La volpe marrone rapida
salta sopra il cane pigro. El zorro
marron rapido salta sobre el perro
perezoso. A raposa marrom rapida
salta sobre o céo preguicoso.</code></p>

<h2 id="further-reading">Further reading</h2>
<ul>
  <li><a href="https://github.com/charlesw/tesseract">A .Net wrapper for tesseract-ocr</a></li>
  <li><a href="https://github.com/tesseract-ocr/tesseract/wiki/FAQ#can-i-increase-speed-of-ocr">Can I increase speed of OCR?</a></li>
  <li><a href="https://github.com/doxakis/How-to-use-tesseract-ocr-4.0-with-csharp">How to use Tesseract OCR 4.0 with C#</a></li>
  <li><a href="https://appliedmachinelearning.blog/2018/06/30/performing-ocr-by-running-parallel-instances-of-tesseract-4-0-python/">Performing OCR by running parallel instances of Tesseract 4.0</a></li>
  <li><a href="https://github.com/tesseract-ocr/tesseract">Tesseract repository</a></li>
</ul>]]></content><author><name></name></author><category term="Lab" /><category term="tesseract" /><category term="ocr" /><category term="dotnet" /><summary type="html"><![CDATA[Recently I built a small tool to read the text of thousands of images.]]></summary></entry><entry><title type="html">unitytips&amp;amp;colon; MenuItem “CONTEXT/component”</title><link href="http://diegogiacomelli.com.br/unitytips-menuitem-context-component/" rel="alternate" type="text/html" title="unitytips&amp;amp;colon; MenuItem “CONTEXT/component”" /><published>2019-06-11T00:00:00-03:00</published><updated>2019-06-11T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unitytips-menuitem-context-component</id><content type="html" xml:base="http://diegogiacomelli.com.br/unitytips-menuitem-context-component/"><![CDATA[<p>You can create a context menu for any component using the <code class="language-plaintext highlighter-rouge">"CONTEXT/&lt;component&gt;/&lt;menu name&gt;"</code> on a MenuItem attribute:</p>
<center>
        <iframe src="https://www.youtube.com/embed/ZCGsunoO-TA " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="code">Code</h2>
<script src="https://gist.github.com/3c05b37b9af2ec6cfef0db58a2e5e3a7.js?file=TransformContextMenu.cs"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="gamedev" /><summary type="html"><![CDATA[You can create a context menu for any component using the "CONTEXT/&lt;component&gt;/&lt;menu name&gt;" on a MenuItem attribute:]]></summary></entry><entry><title type="html">Unity and Game Development links (June 10th 2019)</title><link href="http://diegogiacomelli.com.br/unity-and-gamedev-links-june-10th-2019/" rel="alternate" type="text/html" title="Unity and Game Development links (June 10th 2019)" /><published>2019-06-10T00:00:00-03:00</published><updated>2019-06-10T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-and-gamedev-links-june-10th-2019</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-and-gamedev-links-june-10th-2019/"><![CDATA[<ul>
  <li><strong>Toulouse de Margerie</strong> wrote a post about how Unity natively maintains frame rates an how to make Unity follow a precise frame rate (<a href="https://blogs.unity3d.com/2019/06/03/precise-framerates-in-unity/">Precise frame rates in Unity</a>).
    <blockquote>
      <p>Normally, out of the box, a Unity project will attempt to run your project as fast as possible. Frames will be rendered as quickly as they can while generally being limited by your display device’s refresh rate.</p>
    </blockquote>
  </li>
  <li><strong>Jean-Christophe Cimetiere</strong>, Sr. Technical Product Manager for Mobile Plaftorms at Unity, made a forum post  about the first preview of the new Project Tiny that uses C# as the programming language (<a href="https://forum.unity.com/threads/project-tiny-c-preview-available.688969/">Project Tiny C# Preview available</a>).
    <blockquote>
      <p>We’ve been hard at work changing most of the underlying technology powering Project Tiny in response to your feedback, and in order to bring it closer to the Unity ecosystem. This preview is fully integrated with Unity’s Data-Oriented Tech Stack (DOTS) and sets up a foundation for bringing advanced features for both tiny and big use cases.</p>
    </blockquote>
  </li>
  <li>
    <p><strong>Claudia L.</strong> posted about the Unity Asset Store partnership with Kochava to bring the Kochava SDK for free (<a href="https://blogs.unity3d.com/2019/06/04/bringing-the-power-of-marketing-data-to-indie-devs/">Bringing the power of marketing data to indie devs</a>).</p>
  </li>
  <li><strong>Jeff Campbell</strong> wrote an article covering his experience of porting an existing game system to Unity’s DOTS (<a href="https://www.jeffcampbellmakes.games/blog/2019/5/26/diving-in-headfirst-unitys-job-system-and-jtween">Porting Existing Systems to Unity’s DOTS: JTween</a>).
    <blockquote>
      <p>Profile early and often as a DOTS implementation develops.</p>
    </blockquote>
  </li>
  <li><strong>Alexey Zakharov</strong> wrote a forum post about the UnityEditor.TypeCache API available on Unity 2019.2 or later (<a href="https://forum.unity.com/threads/unityeditor-typecache-api-for-fast-extraction-of-type-attributes-in-the-editor-tooling.687682">UnityEditor.TypeCache API for fast extraction of type attributes in the Editor tooling</a>).
    <blockquote>
      <p>For 2019.2 we optimized and extended the native cache and exposed it as a public UnityEditor.TypeCache API. It can extract information very quickly, allowing iteration over the smaller number of types we are interested in (10–100). That significantly reduces the time required to fetch types by Editor tooling.</p>
    </blockquote>
  </li>
  <li><strong>Harry Alisavakis</strong> started a series of tutorials about shaders called <code class="language-plaintext highlighter-rouge">VFX Master Shader</code> (<a href="https://halisavakis.com/my-take-on-shaders-vfx-master-shader-part-i/">My take on shaders: VFX Master Shader (Part I)</a>).
    <blockquote>
      <p>While I experimented with different VFX concepts, I noticed that I was using a bunch of common shader techniques to create new shaders again and again, and I thought to myself: “Why not have one shader to rule them all?”</p>
    </blockquote>
  </li>
  <li>
    <p><strong>Sykoo</strong> made a new video tutorial about the Terrain Tools Package preview  in Unity 2019.1 (<a href="https://www.youtube.com/watch?v=tazRinr6nRg">NEW TERRAIN TOOLS in Unity! (Tutorial)</a>).</p>
  </li>
  <li>
    <p><strong>Unity</strong> published a video tutorial to show how to create a toon outiline effect using the new Scriptable Render pass feature (<a href="https://www.youtube.com/watch?v=joG_tmXUX4M">How to Make a Toon Outline Effect in Unity 2019 LWRP! (Tutorial)</a>.</p>
  </li>
  <li><strong>William Todd Stinson</strong> wrote a blog post about how to access ARKit 3 functionality with AR foundation 2.2 and Unity 2019.1 (<a href="https://blogs.unity3d.com/2019/06/06/ar-foundation-support-for-arkit-3">AR Foundation support for ARKit 3</a>).
    <blockquote>
      <p>Unity has been working closely with Apple throughout the development of ARKit 3, and we are excited to bring these new features to Unity developers.</p>
    </blockquote>
  </li>
  <li>
    <p><strong>Kristin Stock</strong> made a video showing how to create a simple build system with a circular UI (<a href="https://www.youtube.com/watch?v=tKmsMfoPTC0">Building System and Circular UI in Unity</a>.</p>
  </li>
  <li><strong>Sirawat Pitaksarit</strong> wrote a article about Unity Timeline, Playables and the undocumented new feature <code class="language-plaintext highlighter-rouge">Marker</code> (<a href="https://gametorrahod.com/timeline-marker-and-everything-leading-up-to-it/">Timeline marker and everything leading up to it</a>).
    <blockquote>
      <p>New in Unity 2019.1, you can now create a duration-less object on the timeline, the marker.</p>
    </blockquote>
  </li>
  <li><strong>Eduardo Oriz and Alitt Khaliq</strong> made a post about the high-end asset pack <code class="language-plaintext highlighter-rouge">Buried Memories Vollume 2: Sereckh</code> (<a href="https://blogs.unity3d.com/2019/06/07/introducing-serekh-new-asset-pack-buried-memories-volume-2">Introducing Serekh: New asset pack, Buried Memories Volume 2</a>).
    <blockquote>
      <p>The Unity Icon Collective strives to democratize high-end asset production. With Buried Memories, starting with Volume 1: Yggdrasil, we hope to inspire creators to extend their own universe but especially to guide aspiring artists and others to observe, analyze and learn from the techniques of industry veterans.</p>
    </blockquote>
  </li>
</ul>]]></content><author><name></name></author><category term="News" /><category term="unity3d" /><category term="gamedev" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Easing2Curve&amp;amp;colon; An editor window to create animation curve from easing functions</title><link href="http://diegogiacomelli.com.br/easing-2-curve-an-editor-window-to-create-animation-curve-from-easing-functions/" rel="alternate" type="text/html" title="Easing2Curve&amp;amp;colon; An editor window to create animation curve from easing functions" /><published>2019-06-07T00:00:00-03:00</published><updated>2019-06-07T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/easing-2-curve-an-editor-window-to-create-animation-curve-from-easing-functions</id><content type="html" xml:base="http://diegogiacomelli.com.br/easing-2-curve-an-editor-window-to-create-animation-curve-from-easing-functions/"><![CDATA[<p>I’ve coded an <a href="https://docs.unity3d.com/Manual/editor-EditorWindows.html">EditorWindow</a> to create an <a href="https://docs.unity3d.com/ScriptReference/AnimationCurve.html">AnimationCurve</a> using easing functions that define how much a value changes over time.</p>

<p>$# Introduction
There are many classic easing functions, such as: InQuad, OutElastic, InOutSin, and InOutBounce. All of these are functions that have a <code class="language-plaintext highlighter-rouge">time</code> input parameter and a return value between 0 and 1.</p>

<p>For example, the easing function <code class="language-plaintext highlighter-rouge">OutCirc</code> is coded like:</p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">public</span> <span class="kt">float</span> <span class="nf">Calculate</span><span class="p">(</span><span class="kt">float</span> <span class="n">time</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span><span class="n">Mathf</span><span class="p">.</span><span class="nf">Sqrt</span><span class="p">((</span><span class="m">2</span> <span class="p">-</span> <span class="n">time</span><span class="p">)</span> <span class="p">*</span> <span class="n">time</span><span class="p">);</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>In the <code class="language-plaintext highlighter-rouge">Easing2Curve</code> editor window you can see 31 easing function availables:</p>

<ul>
  <li>Linear</li>
  <li>InQuad, OutQuad, InOutQuad</li>
  <li>InCubic, OutCubic, InOutCubic</li>
  <li>InQuart, OutQuart, InOutQuart</li>
  <li>InQuint, OutQuint, InOutQuint</li>
  <li>InElastic, OutElastic, InOutElastic</li>
  <li>InSin, OutSin, InOutSin</li>
  <li>InExpo, OutExpo, InOutExpo</li>
  <li>InCirc, OutCirc, InOutCirc</li>
  <li>InBack, OutBack, InOutBack</li>
  <li>InBounce, OutBounce and InOutBounce.</li>
</ul>

<p>In addition, you can add new easing functions just implementing the <code class="language-plaintext highlighter-rouge">IEasing</code> interface.</p>

<h2 id="setup">Setup</h2>
<p>To setup the <code class="language-plaintext highlighter-rouge">Easing2Curve</code> just download this <a href="https://gist.github.com/giacomelli/7324d63679c11529e1710a5470d9ee7f">gist</a> and unzip it on an <code class="language-plaintext highlighter-rouge">Editor</code> folder inside your Unity project.</p>

<script src="https://gist.github.com/7324d63679c11529e1710a5470d9ee7f.js?file=Easing2CurveEditorWindow.cs"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>

<h2 id="using">Using</h2>
<p>You can open the window through the context menu on any <code class="language-plaintext highlighter-rouge">AnimationCurve</code> property on <code class="language-plaintext highlighter-rouge">Inspector</code>.</p>

<p>In the video below you can see how to use the <code class="language-plaintext highlighter-rouge">Easing2Curve</code>:</p>
<center>
        <iframe src="https://www.youtube.com/embed/2W-g6-k74nc " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="editor-window" /><category term="animation-curve" /><category term="gamedev" /><category term="open-source" /><category term="gist" /><summary type="html"><![CDATA[I’ve coded an EditorWindow to create an AnimationCurve using easing functions that define how much a value changes over time.]]></summary></entry><entry><title type="html">Evolution (or from prototype to game)</title><link href="http://diegogiacomelli.com.br/evolution-or-from-prototype-to-game/" rel="alternate" type="text/html" title="Evolution (or from prototype to game)" /><published>2019-06-06T00:00:00-03:00</published><updated>2019-06-06T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/evolution-or-from-prototype-to-game</id><content type="html" xml:base="http://diegogiacomelli.com.br/evolution-or-from-prototype-to-game/"><![CDATA[<h2 id="the-importance-of-game-prototype">The importance of game prototype</h2>
<p>Several famous books and game designers cite how the prototyping phase of a new game project is an important time to <strong>lay out the foundations that will guide the whole game structure</strong> during its development project and, as well, to experiment with concepts and ideas of quick and unassuming way.</p>

<p>The prototyping phase, although important, often takes a small percentage in the development time of a game project or in some cases is not part of the project itself, but rather a point prior to that, where we are seeking the idea or concept that will give birth to the new project.</p>

<h2 id="transposing-the-fog">Transposing the fog</h2>
<p>I always find it interesting to <strong>compare when an idea is born, or has its first steps, with its final result</strong>, because when we are at the beginning of any project or journey, the path may seem hazy and maybe it will become clear only when we manage to transpose the fog which separates the persevering from those who prefer to fear it.</p>

<p>For this reason I present the screenshots to <strong>compare Ships N ‘Battles in its prototype</strong> phase, which, incidentally, at that stage did not have a name, only its project name “iBattleships”;) , <strong>with the final result of its HD version for iOS devices</strong> with armv7 and retina display, that is, after letting the fog of this project back.</p>

<h2 id="prototype-x-final-product">Prototype x final product</h2>
<p>So we have below the screenshots of the main menu, deploy ships, aim and view the player’s ships, for the first functional prototype version running on Windows and the HD edition version running on an iPad 2:</p>

<center>
  
  <ul id="lightSlider">
    
        <li data-thumb="/assets/2019/06/06/evolution-or-from-prototype-to-game/01_prototype_menu2.png">
          <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/01_prototype_menu2-200-19608643f.webp 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/01_prototype_menu2-400-19608643f.webp 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/01_prototype_menu2-640-19608643f.webp 640w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/01_prototype_menu2-200-19608643f.png 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/01_prototype_menu2-400-19608643f.png 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/01_prototype_menu2-640-19608643f.png 640w" type="image/png" />
  <img class="" src="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/01_prototype_menu2-640-19608643f.png" alt="post image" width="640" height="361" />
</picture>
        
        </li>
    
        <li data-thumb="/assets/2019/06/06/evolution-or-from-prototype-to-game/02_hd_menu2.png">
          <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/02_hd_menu2-200-a49ddc189.webp 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/02_hd_menu2-400-a49ddc189.webp 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/02_hd_menu2-640-a49ddc189.webp 640w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/02_hd_menu2-200-a49ddc189.png 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/02_hd_menu2-400-a49ddc189.png 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/02_hd_menu2-640-a49ddc189.png 640w" type="image/png" />
  <img class="" src="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/02_hd_menu2-640-a49ddc189.png" alt="post image" width="640" height="480" />
</picture>
        
        </li>
    
        <li data-thumb="/assets/2019/06/06/evolution-or-from-prototype-to-game/03_prototype_deploy.png">
          <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/03_prototype_deploy-200-9e00142b6.webp 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/03_prototype_deploy-400-9e00142b6.webp 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/03_prototype_deploy-640-9e00142b6.webp 640w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/03_prototype_deploy-200-9e00142b6.png 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/03_prototype_deploy-400-9e00142b6.png 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/03_prototype_deploy-640-9e00142b6.png 640w" type="image/png" />
  <img class="" src="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/03_prototype_deploy-640-9e00142b6.png" alt="post image" width="640" height="361" />
</picture>
        
        </li>
    
        <li data-thumb="/assets/2019/06/06/evolution-or-from-prototype-to-game/04_hd_deploy.png">
          <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/04_hd_deploy-200-ac049100f.webp 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/04_hd_deploy-400-ac049100f.webp 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/04_hd_deploy-640-ac049100f.webp 640w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/04_hd_deploy-200-ac049100f.png 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/04_hd_deploy-400-ac049100f.png 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/04_hd_deploy-640-ac049100f.png 640w" type="image/png" />
  <img class="" src="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/04_hd_deploy-640-ac049100f.png" alt="post image" width="640" height="480" />
</picture>
        
        </li>
    
        <li data-thumb="/assets/2019/06/06/evolution-or-from-prototype-to-game/05_prototype_aim.png">
          <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/05_prototype_aim-200-fb66828ba.webp 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/05_prototype_aim-400-fb66828ba.webp 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/05_prototype_aim-640-fb66828ba.webp 640w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/05_prototype_aim-200-fb66828ba.png 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/05_prototype_aim-400-fb66828ba.png 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/05_prototype_aim-640-fb66828ba.png 640w" type="image/png" />
  <img class="" src="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/05_prototype_aim-640-fb66828ba.png" alt="post image" width="640" height="361" />
</picture>
        
        </li>
    
        <li data-thumb="/assets/2019/06/06/evolution-or-from-prototype-to-game/06_hd_aim.png">
          <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/06_hd_aim-200-81c8c605b.webp 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/06_hd_aim-400-81c8c605b.webp 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/06_hd_aim-640-81c8c605b.webp 640w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/06_hd_aim-200-81c8c605b.png 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/06_hd_aim-400-81c8c605b.png 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/06_hd_aim-640-81c8c605b.png 640w" type="image/png" />
  <img class="" src="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/06_hd_aim-640-81c8c605b.png" alt="post image" width="640" height="480" />
</picture>
        
        </li>
    
        <li data-thumb="/assets/2019/06/06/evolution-or-from-prototype-to-game/07_prototype_myShips.png">
          <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/07_prototype_myShips-200-dbd2f0ce5.webp 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/07_prototype_myShips-400-dbd2f0ce5.webp 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/07_prototype_myShips-640-dbd2f0ce5.webp 640w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/07_prototype_myShips-200-dbd2f0ce5.png 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/07_prototype_myShips-400-dbd2f0ce5.png 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/07_prototype_myShips-640-dbd2f0ce5.png 640w" type="image/png" />
  <img class="" src="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/07_prototype_myShips-640-dbd2f0ce5.png" alt="post image" width="640" height="361" />
</picture>
        
        </li>
    
        <li data-thumb="/assets/2019/06/06/evolution-or-from-prototype-to-game/08_hd_myShips.png">
          <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/08_hd_myShips-200-65c1ea7b6.webp 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/08_hd_myShips-400-65c1ea7b6.webp 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/08_hd_myShips-640-65c1ea7b6.webp 640w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/08_hd_myShips-200-65c1ea7b6.png 200w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/08_hd_myShips-400-65c1ea7b6.png 400w, /assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/08_hd_myShips-640-65c1ea7b6.png 640w" type="image/png" />
  <img class="" src="/assets/images/generated/assets/2019/06/06/evolution-or-from-prototype-to-game/08_hd_myShips-640-65c1ea7b6.png" alt="post image" width="640" height="480" />
</picture>
        
        </li>
    
  </ul>
  
 </center>

<script type="text/javascript">
var initialized = false;

$(document).ready(function() {
  var inview = new Waypoint.Inview({
    element: document.getElementById('lightSlider'),
    enter: function(direction) {
      initializeGallery();
    }
  });
});

function initializeGallery() {
  if(initialized) return;
  
  initialized = true;

  $('#lightSlider').lightSlider({
    gallery: true,
    pager: true,
    controls: false,
    thumbItem: 8,
    item: 1,
    loop: false,
    slideMargin: 0,
    autoWidth: true,
    adaptiveHeight: true,
    mode: "fade",
    useCSS: true,
    cssEasing: 'ease',
    easing: 'linear'
  });
}
</script>

<blockquote>
  <p>There are only two mistakes one can make along the road to truth; not going all the way, and not starting. (Buddha)</p>
</blockquote>

<div class="note"><p>This is an old post that I made years ago on <a href="http://skahal.github.io">Skahal</a>’s blog, as the subject still relevant, I reposted it here.</p>
</div>]]></content><author><name></name></author><category term="Article" /><category term="gamedev" /><category term="game-design" /><category term="motivation" /><summary type="html"><![CDATA[The importance of game prototype Several famous books and game designers cite how the prototyping phase of a new game project is an important time to lay out the foundations that will guide the whole game structure during its development project and, as well, to experiment with concepts and ideas of quick and unassuming way.]]></summary></entry><entry><title type="html">GeneticSharp in the Wild&amp;amp;colon; AeroVision - Aircraft Trajectories Optimization and Visualization</title><link href="http://diegogiacomelli.com.br/geneticsharp-in-the-wild-aerovision-aircraft-trajectories-optimization-and-visualization/" rel="alternate" type="text/html" title="GeneticSharp in the Wild&amp;amp;colon; AeroVision - Aircraft Trajectories Optimization and Visualization" /><published>2019-06-05T00:00:00-03:00</published><updated>2019-06-05T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/geneticsharp-in-the-wild-aerovision-aircraft-trajectories-optimization-and-visualization</id><content type="html" xml:base="http://diegogiacomelli.com.br/geneticsharp-in-the-wild-aerovision-aircraft-trajectories-optimization-and-visualization/"><![CDATA[<p>I decided to start a <a href="/tags/geneticsharp-in-the-wild/">series of posts</a> about some outstanding scientific papers and projects using <a href="https://github.com/giacomelli/GeneticSharp">GeneticSharp</a>.</p>

<p>For this first post the choose one is the <code class="language-plaintext highlighter-rouge">AeroVision - Aircraft Trajectories Optimization and Visualization</code>.</p>

<h2 id="introduction">Introduction</h2>
<p>The main motivation of the authors about the AeroVision was:
<em>build program that represents an innovative and efficient way to
minimize and visualize aircraft noise along simulated and real flight routes. There are no existing programs that offer both optimization and visualization of aircraft noise.</em></p>

<h2 id="usage">Usage</h2>
<p><em>To optimize aircraft trajectories using a genetic algorithm, AeroVision uses the <a href="https://github.com/giacomelli/geneticsharp">GeneticSharp</a> library, which is a fast, extensible, multi-platform and multithreading C# Genetic Algorithm library that simplifies the development of applications using Genetic Algorithms.</em></p>

<p><em>The library supports a number of selection methods, of which the most basic option (elite selection) is recommended. The mutation method used by AeroVision is crossover, which is a commonly used setting. The stop criteria can be a fixed number of generations, which can be specified by the user.</em></p>

<p><em>Additionally, the user is free to define the number of chromosomes that are part of one population. The default population size is 70 chromosomes, each representing a possible trajectory in our case.</em></p>

<h2 id="results">Results</h2>
<p><em>For trajectory optimization we were able to achieve a <code class="language-plaintext highlighter-rouge">performance improvement of 84%</code> by using a <a href="https://github.com/giacomelli/GeneticSharp/wiki/multithreading">multi-core and multi-threaded genetic algorithm</a> based on <a href="https://github.com/giacomelli/GeneticSharp/wiki/crossovers">crossover operations</a>. This led to a major improvement on the workﬂow management and automation</em></p>

<h2 id="authors">Authors</h2>
<p>Elvan Kula and Hans Schouten wrote the paper as requirements for their degree of Bachelor of Science in Computer Science. The Dr. Ir. N. Dintzner (TU Delft, supervisor), Dr. ir. S. Hartjes (Client) and Dr. ir. M. Larson (Bachelor Project Coordinator) are the thesis committee.</p>

<h2 id="further-reading">Further reading</h2>
<p>You can access the full paper directly on <a href="http://resolver.tudelft.nl/uuid:91c8261d-a5f2-414a-9b83-2e0d6ad5b37f">TUDelft library repository</a>.</p>]]></content><author><name></name></author><category term="Article" /><category term="geneticsharp" /><category term="geneticsharp-in-the-wild" /><summary type="html"><![CDATA[I decided to start a series of posts about some outstanding scientific papers and projects using GeneticSharp.]]></summary></entry><entry><title type="html">Using a Sprite Mask to create a flashlight effect</title><link href="http://diegogiacomelli.com.br/using-a-sprite-mask-to-create-a-flashlight-effect/" rel="alternate" type="text/html" title="Using a Sprite Mask to create a flashlight effect" /><published>2019-06-04T00:00:00-03:00</published><updated>2019-06-04T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/using-a-sprite-mask-to-create-a-flashlight-effect</id><content type="html" xml:base="http://diegogiacomelli.com.br/using-a-sprite-mask-to-create-a-flashlight-effect/"><![CDATA[<p>When I was reading about the <a href="https://docs.unity3d.com/Manual/class-SpriteMask.html">Sprite Mask</a> on Unity Manual, I questioned my self <code class="language-plaintext highlighter-rouge">"How long does it take to create a flashlight effect using the Sprite Mask?"</code>.</p>

<p>The answer is: <code class="language-plaintext highlighter-rouge">less than 2 minutes</code>.</p>

<p>You can check this by watching the video tutorial that I made showing how to add the a flashlight effect to the <a href="https://assetstore.unity.com/packages/essentials/tutorial-projects/2d-roguelike-29825">Unity 2D Roguelike sample project</a>:</p>
<center>
        <iframe src="https://www.youtube.com/embed/EfXLi6AWc_4 " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>]]></content><author><name></name></author><category term="Tutorial" /><category term="unity3d" /><category term="unitytips" /><category term="sprite-mask" /><category term="gamedev" /><summary type="html"><![CDATA[When I was reading about the Sprite Mask on Unity Manual, I questioned my self "How long does it take to create a flashlight effect using the Sprite Mask?".]]></summary></entry><entry><title type="html">Unity and Game Development links (June 3th 2019)</title><link href="http://diegogiacomelli.com.br/unity-and-gamedev-links-june-3th-2019/" rel="alternate" type="text/html" title="Unity and Game Development links (June 3th 2019)" /><published>2019-06-03T00:00:00-03:00</published><updated>2019-06-03T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-and-gamedev-links-june-3th-2019</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-and-gamedev-links-june-3th-2019/"><![CDATA[<ul>
  <li>
    <p><strong>Nick Davis</strong> wrote a post about how Unity recently teamed up with Autodesk and Texel Logic to create a mixed-reality experience to illustrate and understand the complex nature of airflow passing over and around an IndyCar (<a href="https://blogs.unity3d.com/2019/05/24/simulating-high-speed-indycars-in-ar/">Simulating high-speed IndyCars in AR</a>).</p>
  </li>
  <li>
    <p><strong>Sykoo</strong>, online evangelist for Unity, published a video showing his techniques during the level design process (<a href="https://www.youtube.com/watch?v=oKzX-wS4_so">How I made a Village in Unity in 1 Hour!</a>).</p>
  </li>
  <li>
    <p><strong>Joyce[MinionsArt]</strong> released another shader tutorial on Twitter (<a href="https://twitter.com/minionsart/status/1132593681452683264">Using particle lifetime to create a fire system</a>).</p>
  </li>
  <li><strong>Keen Claassen</strong> celebrated the enter of <code class="language-plaintext highlighter-rouge">Motion Matching for Unity</code> on Asset Store (<a href="https://www.youtube.com/watch?v=hiWvExOyBgQ">Motion Matching for Unity (MxM) - Trailer</a>).
    <blockquote>
      <p>can produce highly fluid and responsive animations with the need for state machines or complex logic.</p>
    </blockquote>
  </li>
  <li><strong>Chandra Foxglove</strong> introduced the Terrain Tools package (preview) for Unity 2019.1 (<a href="https://blogs.unity3d.com/2019/05/28/speed-up-your-work-with-the-new-terrain-tools-package">Speed up your work with the new Terrain Tools Package</a>).
    <blockquote>
      <p>This package contains over 15 new sculpting tools, as well as a utility toolbox to streamline terrain workflow.</p>
    </blockquote>
  </li>
  <li><strong>The Making of The Heretic: Digital Humans and VFX Characters</strong> is available through a <a href="https://docs.google.com/presentation/d/1aiBXsNu-D9ZfpBNqcs08w7ToNJ2e7jgyoyfNUXSCWW8/edit#slide=id.g552bb7139f_6_1117">Google Docs presentation</a>.
    <blockquote>
      <p>Now the HD Render Pipeline and Post Processing are quite solid, and we were able to put much more effort into building on top of that foundation. Among other things, we put some effort into human faces and vfx-heavy characters.</p>
    </blockquote>
  </li>
  <li>
    <p>The evangelist <strong>Keijiro Takahashi</strong> released a GitHub repository with an example that shows how to connect RealSense depth camera to Unity VFX Graph (<a href="https://github.com/keijiro/Rsvfx">Rsvfx</a>).</p>
  </li>
  <li><strong>Martin Best</strong> posted about the official Unity Editor for Linux (<a href="">Announcing the Unity Editor for Linux</a>).
    <blockquote>
      <p>We expect it to be fully supported by Unity 2019.3.</p>
    </blockquote>
  </li>
  <li>
    <p><strong>Anis Benyoub</strong> wrote about <a href="https://auzaiffe.files.wordpress.com/2019/05/digital-dragons-leveraging-ray-tracing-hardware-acceleration-in-unity.pdf">Leveraging Ray Tracing
Hardware Acceleration
In Unity</a>.</p>
  </li>
  <li>
    <p><strong>Elena Nizhnik</strong> made a post listing the most outstanding #madewithunity projects from last days (<a href="https://blogs.unity3d.com/2019/06/01/community-component-soft-body-physics-shaders-that-deform-space-normans-island-and-our-steam-wishlist">Community Component – Soft body physics, shaders that deform space, Norman’s Island and our Steam wishlist</a>).</p>
  </li>
  <li><strong>Sykoo</strong> again, now with a video tutorial about the new 2D lights in Unity  2019.2 (<a href="https://www.youtube.com/watch?v=ZJvCphxCGJU">NEW 2D LIGHTS IN UNITY 2019.2</a>).</li>
</ul>]]></content><author><name></name></author><category term="News" /><category term="unity3d" /><category term="gamedev" /><summary type="html"><![CDATA[Nick Davis wrote a post about how Unity recently teamed up with Autodesk and Texel Logic to create a mixed-reality experience to illustrate and understand the complex nature of airflow passing over and around an IndyCar (Simulating high-speed IndyCars in AR).]]></summary></entry><entry><title type="html">Using an AssetPostprocessor + EditorWindow to keep assets organized on Unity projects</title><link href="http://diegogiacomelli.com.br/using-an-assetpostprocessor-editorwindow-to-keep-assets-organized-on-unity-projects/" rel="alternate" type="text/html" title="Using an AssetPostprocessor + EditorWindow to keep assets organized on Unity projects" /><published>2019-05-31T00:00:00-03:00</published><updated>2019-05-31T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/using-an-assetpostprocessor-editorwindow-to-keep-assets-organized-on-unity-projects</id><content type="html" xml:base="http://diegogiacomelli.com.br/using-an-assetpostprocessor-editorwindow-to-keep-assets-organized-on-unity-projects/"><![CDATA[<p>I created an AssetPostProcessor and an EditorWindow to validate if assets are in the right folder and help the Unity projects to keep organized.</p>

<h2 id="introduction">Introduction</h2>
<p>There are many ways to structure folders in a Unity project, but most common ones are cited by the Unity Learn tutorial: <a href="https://unity3d.com/pt/learn/tutorials/topics/tips/large-project-organisation">Large Project Organisation</a>:</p>

<blockquote>
  <p>To keep the project easy to navigate, avoid placing files in the root Assets folder. Use subfolders. How you organize those subfolders is generally decided by your projects but the two main ways to do it are:</p>

  <p><strong>A folder for each type of asset and subfolders in them per objects</strong>, zones (For example Assets/Materials, Assets/Prefabs, with subfolders Assets/Material/Level1 or Assets/Prefabs/Enemies)</p>

  <p><strong>A folder per objects or zones</strong> (Such as Assets/Level1/Enemies/Archer, Assets/Shared/UI, Assets/Forest/Trees) with all assets related to those in the folders (Assets/Forest/Trees/BigTree.fbx, Assets/Forest/Trees/Tree.mat, Assets/Forest/Trees/Tree_Bark.jpg).</p>
</blockquote>

<p>With big teams or even with the small ones is easy that some assets will be placed in wrong folders. To help to identify and keep those projects folders organized I coded a couple of editor scripts that I called <code class="language-plaintext highlighter-rouge">Folder organizer</code>.</p>

<div class="note"><p>Another advantage of keeping assets organized in their proper folders is that you can <a href="https://docs.unity3d.com/Manual/DefaultPresetsByFolder.html">apply defaults presets to assets by folder</a>.</p>
</div>

<h2 id="setup">Setup</h2>
<p>To setup the <code class="language-plaintext highlighter-rouge">Folder organizer</code> just download this <a href="https://gist.github.com/giacomelli/2d561e29beadab641a4f8b56954f53f7">gist</a> and unzip it on an <code class="language-plaintext highlighter-rouge">Editor</code> folder inside your Unity project.</p>
<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>

<h2 id="using">Using</h2>
<p>You can open the window through the menu <code class="language-plaintext highlighter-rouge">Window / Folder organizer</code>.</p>

<p>Just configure the folders to ignore, if should run the validation every time an asset is imported and defined a regular expression to find the assets and what is the expected folder.</p>

<p>In the video below you can see in more details how to use the <code class="language-plaintext highlighter-rouge">Folder organizer</code> to validate if your assets are in the right folders:</p>
<center>
        <iframe src="https://www.youtube.com/embed/GU6jWl6MpdM " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="editor-window" /><category term="asset-post-processor" /><category term="gamedev" /><category term="open-source" /><summary type="html"><![CDATA[I created an AssetPostProcessor and an EditorWindow to validate if assets are in the right folder and help the Unity projects to keep organized.]]></summary></entry><entry><title type="html">Coding an EditorWindow to create default animations from sprites</title><link href="http://diegogiacomelli.com.br/coding-an-editorwindow-to-create-default-animations-from-sprites/" rel="alternate" type="text/html" title="Coding an EditorWindow to create default animations from sprites" /><published>2019-05-30T00:00:00-03:00</published><updated>2019-05-30T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/coding-an-editorwindow-to-create-default-animations-from-sprites</id><content type="html" xml:base="http://diegogiacomelli.com.br/coding-an-editorwindow-to-create-default-animations-from-sprites/"><![CDATA[<p>In this tutorial, we will learn how to coding an <a href="https://docs.unity3d.com/Manual/editor-EditorWindows.html">EditorWindow</a> that creates <a href="https://docs.unity3d.com/Manual/AnimationClips.html">Animation Clips</a> and <a href="https://docs.unity3d.com/Manual/AnimatorOverrideController.html">Animator Override Controller</a> from <a href="https://docs.unity3d.com/Manual/Sprites.html">Sprites</a>.</p>

<h2 id="introduction">Introduction</h2>
<p>Create animation clips from sprites is quite a simple operation to perform on Unity:</p>
<center><video width="640" autoplay="" muted="" loop="">
          <source src="/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/create-animation-clip-from-sprite.mp4 " type="video/mp4" />
          Your browser does not support the video tag.
       </video></center>

<p>But in many cases, you need to repeat this operation over and over again to create other animations to the same character, like clips for idle, walk up, walk down and walk horizontal animations.</p>

<p>When you need to this for only one character, there is no problem, but imagine you need to create the same 4 animation clip for dozens (maybe hundreds) of characters. Besides being a boring operation, you probably will make some mistake and creating some wrong clip. In cases like that, could be a good option to create your own EditorWindow to automate those operations.</p>

<h2 id="editorwindow">EditorWindow</h2>
<p>To start, let’s see what Unity Manual says about <a href="https://docs.unity3d.com/Manual/editor-EditorWindows.html">EditorWindow</a>:</p>

<blockquote>
  <p>You can create any number of custom windows in your app. These behave just like the Inspector, Scene or any other built-in ones. This is a great way to add a user interface to a sub-system for your game.</p>

  <p>Making a custom Editor Window involves the following simple steps:</p>
  <ul>
    <li>Create a script that derives from EditorWindow.</li>
    <li>Use code to trigger the window to display itself.</li>
    <li>Implement the GUI code for your tool.</li>
  </ul>
</blockquote>

<p>During this tutorial we will create a class called DefaultAnimationsEditorWindow that derives from EditorWindow, we will add a menu item to Unity Editor to allow call our EditorWindow and we will implement the GUI for the window.</p>

<p>Furthermore, we will implement the code that allows us to create Animation Clips and Animation Override Controller from sprites.</p>

<p>The idea behind DefaultAnimationsEditorWindow is that when you have a bunch o characters using the same kind of animations, they used the same structure of sprite sheets, so you can create the animations based on the sprites indexes on sprite sheet texture.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/similar-spritesheets-200-7a432d7c2.webp 200w, /assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/similar-spritesheets-400-7a432d7c2.webp 400w, /assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/similar-spritesheets-678-7a432d7c2.webp 678w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/similar-spritesheets-200-7a432d7c2.png 200w, /assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/similar-spritesheets-400-7a432d7c2.png 400w, /assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/similar-spritesheets-678-7a432d7c2.png 678w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/similar-spritesheets-678-7a432d7c2.png" alt="post image" width="678" height="178" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>similar sprites sheets from Phantasy Star IV (Alys, Chaz and Demi). Sprites ripped by Ultimecia from <a href="https://www.spriters-resource.com/genesis_32x_scd/ps4">The Spriters Resource</a></p>
</span></center>
<p><br /></p>

<p>Starting with sprite to walk down and ending with the last sprite of walk horizontal, we have 9 sprites and in all sprite sheets the sprites indexes are the same:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/alys-walking-spritesheet-134-bbec336e1.webp 134w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/alys-walking-spritesheet-134-bbec336e1.png 134w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/alys-walking-spritesheet-134-bbec336e1.png" alt="post image" width="134" height="31" />
</picture>

      </center>
<p><br /></p>

<ul>
  <li>Idle: index 1</li>
  <li>Walk down: indexes 0, 1 and 2.</li>
  <li>Walk up: indexes 3, 4 and 5.</li>
  <li>Walk horizontal: indexes 6, 7 and 9.</li>
</ul>

<h2 id="starter-project">Starter project</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/project-128-4f597ed4f.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/project-128-4f597ed4f.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/project-128-4f597ed4f.png" alt="post image" width="128" height="128" />
</picture>

<p>All the source code and assets for this tutorial are available on this GitHub repository: <a href="https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites">https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites</a>. To start the tutorial you need to fork, clone or download the repository.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites.git
</code></pre></div></div>

<p>Open the folder <code class="language-plaintext highlighter-rouge">default-animations-editor-window-starter</code> on Unity.</p>
<div class="note"><p>This starter project has an initial setup and assets to allow us to focus on the learning about how to code the EditorWindow.</p>
</div>

<p>Open the scene <code class="language-plaintext highlighter-rouge">_Tutorial/Scenes/TutorialScene</code>.</p>

<p>Hit the <code class="language-plaintext highlighter-rouge">Play</code> button. You should see a screen like this:</p>

<center><video width="640" autoplay="" muted="" loop="">
          <source src="/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/starter-project-play-mode.mp4 " type="video/mp4" />
          Your browser does not support the video tag.
       </video></center>

<h2 id="the-editor-window-code-organization">The editor window code organization</h2>

<p>We will organize our DefaultAnimationsEditorWindow in 3 main classes:</p>

<ul>
  <li>
    <p><strong>DefaultAnimationsEditorWindow</strong>: where is the menu and GUI for our editor window.</p>
  </li>
  <li>
    <p><strong>DefaultAnimationsSettings</strong>: this is our <a href="https://docs.unity3d.com/Manual/class-ScriptableObject.html">ScriptableObject</a> to save our settings defined on DefaultAnimationsEditorWindow.</p>
  </li>
  <li>
    <p><strong>DefaultAnimationsUtility</strong>: here we will implement the code used by our DefaultAnimationsEditorWindow to perform an operation. Put the operation code in a separated class not bounded by the GUI allow us to use these operations in any other script. This way to work is similar to what Unity itself use in some editor operations, like: <a href="https://docs.unity3d.com/ScriptReference/AnimationUtility.html">AnimationUtility</a>, <a href="https://docs.unity3d.com/ScriptReference/PrefabUtility.html">PrefabUtility</a> and <a href="https://docs.unity3d.com/ScriptReference/Sprites.SpriteUtility.html">SpriteUtility</a>.</p>
  </li>
</ul>

<div class="note"><p>Besides the above classes, there are some other extension method classes on the folder <a href="https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites/tree/master/default-animations-editor-window-complete/Assets/_Tutorial/Editor/DefaultAnimations/Extensions">Extensions</a> that are self-explanatory and I won’t talk in details, but you can check them and read their code documentation to a better understanding.</p>
</div>

<h2 id="defaultanimationseditorwindow">DefaultAnimationsEditorWindow</h2>
<p>In the code bellow, we define the menu for the window through the method <code class="language-plaintext highlighter-rouge">ShowWindow</code> and the attribute <code class="language-plaintext highlighter-rouge">MenuItem</code>.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/menu-item-200-3ddf249e2.webp 200w, /assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/menu-item-225-3ddf249e2.webp 225w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/menu-item-200-3ddf249e2.png 200w, /assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/menu-item-225-3ddf249e2.png 225w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/menu-item-225-3ddf249e2.png" alt="post image" width="225" height="201" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>Default Animations menu item</p>
</span></center>
<p><br /></p>

<p>At the <code class="language-plaintext highlighter-rouge">OnEnable</code> we read the settings from our ScriptableObject DefaultAnimationsSettings.</p>

<p>The next 3 methods just draw the components to the editor window GUI.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/editor-window-empty-200-aa3ab20da.webp 200w, /assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/editor-window-empty-375-aa3ab20da.webp 375w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/editor-window-empty-200-aa3ab20da.png 200w, /assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/editor-window-empty-375-aa3ab20da.png 375w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/30/coding-an-editorwindow-to-create-default-animations-from-sprites/editor-window-empty-375-aa3ab20da.png" alt="post image" width="375" height="186" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>editor window</p>
</span></center>
<p><br /></p>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist">
        <div class="gist-file">
          <div class="gist-meta">Open <a href="https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites/blob/master/default-animations-editor-window-complete/Assets/_Tutorial/Editor/DefaultAnimations/DefaultAnimationsEditorWindow.cs ">DefaultAnimationsEditorWindow.cs </a>hosted with ❤ by <a href="https://github.com">GitHub</a>
          </div>
        </div>
      </div>

<h2 id="defaultanimationssettings">DefaultAnimationsSettings</h2>
<p>There are few things to talk about this class because it is just an ordinary ScriptableObject with a couple of properties that will be serialized and used by the DefaultAnimationsUtility class, a singleton to make easier to access the settings, two methods to load/create the asset and a subclass to sprite mappings.</p>

<p>The most important code of this class is the property <code class="language-plaintext highlighter-rouge">SpriteIndexes</code> that figure out what are the sprite indexes from the sprite sheet that ClipToOverride is using.</p>

<div class="note"><p>SpriteIndexes will be used by DefaultAnimationsUtility.CreateAnimationClips to know what sprites should be used to create the new animations based on the DefaultAnimationsSettings.AnimationsMapping.</p>
</div>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist">
        <div class="gist-file">
          <div class="gist-meta">Open <a href="https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites/blob/master/default-animations-editor-window-complete/Assets/_Tutorial/Editor/DefaultAnimations/DefaultAnimationsSettings.cs ">DefaultAnimationsSettings.cs </a>hosted with ❤ by <a href="https://github.com">GitHub</a>
          </div>
        </div>
      </div>

<h2 id="defaultanimationsutility">DefaultAnimationsUtility</h2>
<p>In this class is where the heart of our editor window resides.</p>

<p>There are 2 important methods here: CreateAnimationClips and CreateAnimatorOverride.</p>

<h3 id="createanimationclips">CreateAnimationClips</h3>
<p>It iterates through the <code class="language-plaintext highlighter-rouge">AnimationsMappings</code> defined in the editor window (saved on DefaultAnimationsSettings.AnimationsMapping), for each mapping it will call the method <code class="language-plaintext highlighter-rouge">CreateAnimationClip</code>.</p>

<p>The <code class="language-plaintext highlighter-rouge">CreateAnimationClip</code> creates a new <code class="language-plaintext highlighter-rouge">AnimationClip</code> (or load if already exists one with the same name), copying the frame rate and wrap mode from the <code class="language-plaintext highlighter-rouge">ClipToOverride</code> defined in the mapping. After, if wrap mode is a loop, it uses the <code class="language-plaintext highlighter-rouge">AnimationUtility</code> to set the loop time to the clip settings (through the extension methods).</p>

<p>Now is the most tricky part of this class, we need to create an <code class="language-plaintext highlighter-rouge">EditorCurveBinding</code> for the sprite and get the <code class="language-plaintext highlighter-rouge">ObjectReferenceKeyframe</code> from the <code class="language-plaintext highlighter-rouge">ClipToOverride</code> and create new <code class="language-plaintext highlighter-rouge">ObjectReferenceKeyframe</code> to our new keyframes (<code class="language-plaintext highlighter-rouge">AnimationClipExtensions</code>).</p>

<h2 id="createanimatoroverride">CreateAnimatorOverride</h2>
<p>In this method we create <code class="language-plaintext highlighter-rouge">AnimatorOverrideController</code> that will override each clip from the <code class="language-plaintext highlighter-rouge">DefaultAnimationsSettings.AnimatorController</code> by the ClipToOverride of each mapping defined on <code class="language-plaintext highlighter-rouge">DefaultAnimationsSettings.AnimationsMapping</code> (<code class="language-plaintext highlighter-rouge">AnimatorOverrideControllerExtensions</code>).</p>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist">
        <div class="gist-file">
          <div class="gist-meta">Open <a href="https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites/blob/master/default-animations-editor-window-complete/Assets/_Tutorial/Editor/DefaultAnimations/DefaultAnimationsUtility.cs ">DefaultAnimationsUtility.cs </a>hosted with ❤ by <a href="https://github.com">GitHub</a>
          </div>
        </div>
      </div>

<h2 id="setup">Setup</h2>
<p>Copy <a href="https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites/tree/master/default-animations-editor-window-complete/Assets/_Tutorial/Editor">this whole Editor folder</a> to your <code class="language-plaintext highlighter-rouge">Assets/_Tutorial</code> folder.</p>

<div class="note"><p>this folder is available on your local clone of the repository inside the folder <code class="language-plaintext highlighter-rouge">default-animations-editor-window-complete/Assets/_Tutorial</code></p>
</div>

<p>Delete the DefaultAnimationsSettings scriptable object instance.</p>

<p>Open the editor window on menu <code class="language-plaintext highlighter-rouge">Windows / Default Animations</code> and configure it as showing in the video below:</p>
<center>
        <iframe src="https://www.youtube.com/embed/5Hk8awWCtSs " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="creating-and-using-the-default-animations">Creating and using the default animations</h2>
<p>Drag all the sprite sheets (textures) from folder <code class="language-plaintext highlighter-rouge">Assets/_Tutorial/Sprites</code> to the <code class="language-plaintext highlighter-rouge">Spritesheets</code> field and click on <code class="language-plaintext highlighter-rouge">Create animations</code> button:</p>
<center>
        <iframe src="https://www.youtube.com/embed/49KKfR081Po " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="challenge">Challenge</h2>
<p>Try to change de editor window to allow more the one set of default animations. One way to this is by creating another ScriptableObject to save the current selected <code class="language-plaintext highlighter-rouge">DefaultAnimationsSettings</code> asset.</p>

<p>If you have any doubt how to implement any part of this challenge, feel free to ask on this post comments or <a href="about">send me a message</a>.</p>

<h2 id="solution">Solution</h2>
<p>The <a href="https://github.com/giacomelli/coding-an-editorwindow-to-create-default-animations-from-sprites">tutorial repository</a> has two main folders:</p>

<ul>
  <li><strong>default-animations-editor-window-starter</strong>: the one you used to make this tutorial.</li>
  <li><strong>default-animations-editor-window-complete</strong>: the whole solution with all scripts and assets implemented. Use this one, in case you get stuck in any item on the challenge.</li>
</ul>

<h2 id="conclusion">Conclusion</h2>
<p>In this tutorial, we learned how to coding a custom editor window to create a set of default animation clips and animator override controller.</p>

<p><br /><br /><br />Icons made by <a href="http://www.freepik.com">Freepik</a>, <a href="http://www.flaticon.com/authors/vignesh-oviyan">Vignesh Oviyan</a> and <a href="https://www.flaticon.com/authors/eucalyp" title="Eucalyp">Eucalyp</a> from <a href="http://www.flaticon.com">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons BY 3.0</a></p>]]></content><author><name></name></author><category term="Tutorial" /><category term="unity3d" /><category term="editor-window" /><category term="animation-clip" /><category term="animator-override-controller" /><category term="gamedev" /><category term="open-source" /><summary type="html"><![CDATA[In this tutorial, we will learn how to coding an EditorWindow that creates Animation Clips and Animator Override Controller from Sprites.]]></summary></entry><entry><title type="html">Publishing WebJobs with Azure Pipelines</title><link href="http://diegogiacomelli.com.br/publishing-webjobs-with-azure-pipelines/" rel="alternate" type="text/html" title="Publishing WebJobs with Azure Pipelines" /><published>2019-05-29T00:00:00-03:00</published><updated>2019-05-29T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/publishing-webjobs-with-azure-pipelines</id><content type="html" xml:base="http://diegogiacomelli.com.br/publishing-webjobs-with-azure-pipelines/"><![CDATA[<p><a href="https://docs.microsoft.com/en-US/azure/app-service/webjobs-sdk-get-started">Azure WebJobs</a> are a great way to execute background process.</p>

<h2 id="scenario">Scenario</h2>
<p>In last days I’ve created a <a href="https://azure.microsoft.com/pt-br/services/devops/pipelines/">Azure Pipelines</a> that publish WebJobs, but in our specific case our WebJobs were not being published to <code class="language-plaintext highlighter-rouge">/site/wwwroot/App_Data/jobs/Continuous/&lt;webjobs name&gt;</code>, because “reasons” our root web app is using ‘/site/www’ as folder. So, you should expect that the new folder to deploy WebJobs is <code class="language-plaintext highlighter-rouge">/site/www/App_Data/jobs/Continuous/&lt;webjobs name&gt;</code>, but <code class="language-plaintext highlighter-rouge">NO</code>, the new folder is <code class="language-plaintext highlighter-rouge">/site/jobs/Continuous/&lt;webjobs name&gt;</code>.</p>

<p>The big problem with the above behaviour is that <code class="language-plaintext highlighter-rouge">WebDeploy</code> via VS or  <code class="language-plaintext highlighter-rouge">AzureRmWebAppDeployment</code> task via Azure Pipeline will still try to deploy the webjobs to the folder inside <code class="language-plaintext highlighter-rouge">/site/www/</code></p>

<p>My best suspects are these lines on <a href="https://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureRmWebAppDeploymentV3/azurermwebappdeployment.ts#L73">AzureRmWebAppDeployment@3</a>
<script src="https://gist.github.com/1d47b7bf7e9a2b3806dbd0b0332743d2.js?file=AzureRmWebAppDeployment-lines.ts"> </script></p>

<p>The <code class="language-plaintext highlighter-rouge">AzureRmWebAppDeployment</code> just check the physical path configured on Azure when we defined a <code class="language-plaintext highlighter-rouge">VirtualApplicatoin</code> parameter, but in our case it is not a virtual application, but it is a different folder than <code class="language-plaintext highlighter-rouge">/site/wwwroot/</code>.</p>
<div class="externalref"><p>in <a href="https://github.com/projectkudu/kudu/wiki/WebJobs">Kudu wiki</a> there is some explanation about the webjobs folders.</p>
</div>

<h2 id="solution">Solution</h2>
<p>I used the FtpUpload task to publish the WebJobs binaries to the <code class="language-plaintext highlighter-rouge">/site/jobs/Continuous/&lt;webjobs name&gt;</code> and two instances of <code class="language-plaintext highlighter-rouge">AzureAppServiceManage</code> task to stop and start the jobs:</p>

<div class="note"><p>you’ll need to replace the values between &lt;..&gt; in the <code class="language-plaintext highlighter-rouge">variables</code> section to specific values of your project</p>
</div>
<script src="https://gist.github.com/1d47b7bf7e9a2b3806dbd0b0332743d2.js?file=azure-pipelines.yml"> </script>

<div class="note"><p>I omitted some tasks from the original azure-pipelines.yml for simplicity. The original has a lot of others taks, as unit tests and web api publishing</p>
</div>

<h2 id="extra-points-graceful-shutdown">Extra points (graceful shutdown)</h2>
<p>Now that you’ve automate your WebJobs publishing, is a good idea improve your jobs to check if Azure has requested a shutdown. You can do this taks through the <a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-dotnet-class-library#cancellation-tokens">CancellationToken</a> parameter passed to the job.</p>

<blockquote>
  <p>A function can accept a CancellationToken parameter, which enables the operating system to notify your code when the function is about to be terminated. You can use this notification to make sure the function doesn’t terminate unexpectedly in a way that leaves data in an inconsistent state.</p>
</blockquote>

<h2 id="further-reading">Further reading</h2>
<ul>
  <li><a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/ftp-upload?view=azure-devops">FTP Upload task</a></li>
  <li><a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-app-service-manage?view=azure-devops">Azure App Service Manage task</a></li>
  <li><a href="http://blog.amitapple.com/post/2014/05/webjobs-graceful-shutdown">WebJobs Graceful Shutdown</a></li>
  <li><a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&amp;tabs=schema">YAML schema reference</a></li>
  <li><a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&amp;tabs=yaml">Predefined variables</a></li>
</ul>]]></content><author><name></name></author><category term="Article" /><category term="dotnet" /><category term="azure" /><category term="webjobs" /><category term="azure-pipelines" /><category term="continuous-integration" /><summary type="html"><![CDATA[Azure WebJobs are a great way to execute background process.]]></summary></entry><entry><title type="html">A Sorting Layer Debugger for Unity</title><link href="http://diegogiacomelli.com.br/a-sorting-layer-debugger-for-unity/" rel="alternate" type="text/html" title="A Sorting Layer Debugger for Unity" /><published>2019-05-28T00:00:00-03:00</published><updated>2019-05-28T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/a-sorting-layer-debugger-for-unity</id><content type="html" xml:base="http://diegogiacomelli.com.br/a-sorting-layer-debugger-for-unity/"><![CDATA[<p>While I was reading about <a href="https://docs.unity3d.com/Manual/2DSorting.html">2D Sorting</a> and <a href="https://docs.unity3d.com/Manual/class-TagManager.html#SortingLayers">Sorting Layers</a> on Unity Manual I came up with the idea of creating a custom editor window to see which sorting layer the sprites on the scene are using.</p>

<center>
        <iframe src="https://www.youtube.com/embed/e_WaZrGMPdM " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>
<center><span style="font-style:italic; font-size:small"><p>In the video above you can see the Sorting Layer Debugger been used in the <a href="https://assetstore.unity.com/packages/essentials/tutorial-projects/2d-platformer-11228">Unity 2D Platformer</a> sample project</p>
</span></center>
<p><br /></p>

<h2 id="setup">Setup</h2>
<p>Just download the gist bellow to your Unity3D project and add it inside a <code class="language-plaintext highlighter-rouge">Editor</code> folder.</p>

<script src="https://gist.github.com/141742c3175476f03ca2437c7b35fd88.js?file=SortingLayerDebugger.cs"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>

<h2 id="usage">Usage</h2>
<p>You can open the debugger window through the menu <code class="language-plaintext highlighter-rouge">Window / Sorting Layer Debugger</code>.</p>

<p>The debugger can be enabled in the edit or the play mode and it will list the Sorting Layers and the number of game objects using each layer. You can hide/show the game objects of each layer by clicking on its check box.</p>

<p>The name of Sorting Layer been used is showing in the top of each game object in the scene view.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-200-6c947fd93.webp 200w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-400-6c947fd93.webp 400w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-800-6c947fd93.webp 800w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-1084-6c947fd93.webp 1084w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-200-6c947fd93.png 200w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-400-6c947fd93.png 400w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-800-6c947fd93.png 800w, /assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-1084-6c947fd93.png 1084w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/28/a-sorting-layer-debugger-for-unity/SortingLayerDebugger-800-6c947fd93.png" alt="post image" width="1084" height="548" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>Scene view with Sorting Layer Debugger enabled</p>
</span></center>
<p><br /></p>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="sorting-layers" /><category term="2D" /><category term="editor-window" /><category term="gamedev" /><category term="open-source" /><summary type="html"><![CDATA[While I was reading about 2D Sorting and Sorting Layers on Unity Manual I came up with the idea of creating a custom editor window to see which sorting layer the sprites on the scene are using.]]></summary></entry><entry><title type="html">Unity and Game Development links (May 24th 2019)</title><link href="http://diegogiacomelli.com.br/unity-and-gamedev-links-may-24th-2019/" rel="alternate" type="text/html" title="Unity and Game Development links (May 24th 2019)" /><published>2019-05-24T00:00:00-03:00</published><updated>2019-05-24T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-and-gamedev-links-may-24th-2019</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-and-gamedev-links-may-24th-2019/"><![CDATA[<ul>
  <li>
    <p><strong>Kristin Stock</strong> posted a video about how she is <a href="https://www.youtube.com/watch?v=zBDrH3lg4YY">procedurally generating cities using Subdivsion in Unity</a>.</p>
  </li>
  <li><strong>Dave Hunt and Yang-Hai Eakes</strong> made an <a href="https://blogs.unity3d.com/2019/05/14/introducing-the-animation-rigging-preview-package-for-unity-2019-1/">introduction for the Animation Rigging preview package for Unity 2019.1</a>.
    <blockquote>
      <p>Set up procedural motion on animated skeletons at runtime. You can use a set of predefined animation constraints to manually build a control rig hierarchy for a character or develop your own custom constraints in C#.</p>
    </blockquote>
  </li>
  <li>
    <p><strong>Alexander Ameye</strong> launched a <a href="https://alexanderameye.github.io/">site with many Unity tutorials</a>, like <code class="language-plaintext highlighter-rouge">Water 1: Tessellated Plane</code> and <code class="language-plaintext highlighter-rouge">Toon Shading</code>.</p>
  </li>
  <li><strong>Shahriar Shahrabi</strong> made a post showing how use <a href="https://medium.com/realities-io/making-the-inception-effect-in-unity-3d-with-few-lines-of-code-fb9667d4786f">deformation matrices to achieve the <code class="language-plaintext highlighter-rouge">Inception effect</code></a>.
    <blockquote>
      <p>Have you ever wondered how your brain would react if you bend the space around you in VR? Or change the field of view and do a vertigo? Well I did, so I started writing a series of shaders which deformed the space around me, using matrices and ended up with an Inception looking effect.</p>
    </blockquote>
  </li>
  <li><strong>Steve Cavanagh and Lyndon Homewood</strong> wrote a post about the <a href="https://blogs.unity3d.com/2019/05/13/introducing-the-profile-analyzer/">Unity Profile Analyzer (preview)</a>.
    <blockquote>
      <p>Have you ever needed to compare the difference in performance between two versions of your project? See the impact of an asset or code change, optimization work, settings change or Unity version upgrade?</p>
    </blockquote>
  </li>
  <li>
    <p><strong>Unity 2019.2 beta</strong> released an <a href="https://forum.unity.com/threads/experimental-2d-renderer-in-lwrp.683623">experimental 2D Renderer in LWRP</a> with 2D lights, Lit and Unlit Sprite Masternode in Shader Graph, and Pixel Perfect Camera.</p>
  </li>
  <li><strong>Julien Blais</strong> wrote a post about <a href="https://blogs.unity3d.com/2019/05/21/how-to-use-timeline-signals">new feature Signals</a> added to Timeline in Unity 2019.1.
    <blockquote>
      <p>We’ve built Signals to establish a communication channel between Timeline and outside systems. But what does that mean? Why did we decide on this approach?</p>
    </blockquote>
  </li>
</ul>]]></content><author><name></name></author><category term="News" /><category term="unity3d" /><category term="gamedev" /><summary type="html"><![CDATA[Kristin Stock posted a video about how she is procedurally generating cities using Subdivsion in Unity.]]></summary></entry><entry><title type="html">Unity Avatar Mask and Animation Layers</title><link href="http://diegogiacomelli.com.br/unity-avatar-mask-and-animation-layers/" rel="alternate" type="text/html" title="Unity Avatar Mask and Animation Layers" /><published>2019-05-21T00:00:00-03:00</published><updated>2019-05-21T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/unity-avatar-mask-and-animation-layers</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity-avatar-mask-and-animation-layers/"><![CDATA[<p>In this tutorial we will learn how to use <a href="https://docs.unity3d.com/Manual/AnimationMaskOnImportedClips.html">Avatar Mask</a> and <a href="https://docs.unity3d.com/Manual/AnimationLayers.html">Animation Layers</a> to combine multiple animations.</p>

<h2 id="introduction">Introduction</h2>
<p>Imagine we imported an animated 3D model from Asset Store, in our sample, we will use the incredible robot from the free package <a href="https://assetstore.unity.com/packages/3d/characters/humanoids/sci-fi-warrior-pbr-hp-106154">Sci Fi Warrior PBR HP</a> by <a href="https://assetstore.unity.com/publishers/23554">Dungeon Mason</a>.
In this package, there are 10 animation clips:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-clips-200-9e758fd81.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-clips-213-9e758fd81.webp 213w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-clips-200-9e758fd81.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-clips-213-9e758fd81.png 213w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-clips-213-9e758fd81.png" alt="post image" width="213" height="186" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>animation clips available on Sci Fi Warrior PBR HP</p>
</span></center>
<p><br /></p>

<p>All those clips are animations for full body. So, when you play them:</p>

<p><strong>Idle_GunMiddle</strong></p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/Idle_GunMiddle-200-2295a48c7.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/Idle_GunMiddle-400-2295a48c7.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/Idle_GunMiddle-445-2295a48c7.webp 445w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/Idle_GunMiddle-200-2295a48c7.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/Idle_GunMiddle-400-2295a48c7.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/Idle_GunMiddle-445-2295a48c7.png 445w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/Idle_GunMiddle-445-2295a48c7.png" alt="post image" width="445" height="488" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>the robot stands idle with the gun in the middle of his body</p>
</span></center>
<p><br /></p>

<p><strong>WalkForward_Shoot</strong></p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/WalkForward_Shoot-200-475cee141.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/WalkForward_Shoot-400-475cee141.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/WalkForward_Shoot-492-475cee141.webp 492w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/WalkForward_Shoot-200-475cee141.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/WalkForward_Shoot-400-475cee141.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/WalkForward_Shoot-492-475cee141.png 492w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/WalkForward_Shoot-492-475cee141.png" alt="post image" width="492" height="583" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>the robot walk forward and shoot</p>
</span></center>
<p><br /></p>

<div class="externalref"><p>You can see all the animations available on the Sci Fi Warrior PBR HP package in this video <a href="https://www.youtube.com/watch?v=fNzBdYhm3Gk">https://www.youtube.com/watch?v=fNzBdYhm3Gk</a></p>
</div>

<p>These are great animations, although if <strong>we want to make the robot stands idle, but instead of keeping the gun in the middle of his body, he aims the gun or shoot?</strong></p>

<p>Or <strong>if we want that robot walk forward but holding the gun in the middle of his body?</strong></p>

<p>Of course, we can ask to the artist to create all those animation combinations, but there is a smarter approach for this case…</p>

<h2 id="avatar-masks-and-animation-layers-goes-to-the-rescue">Avatar Masks and Animation Layers goes to the rescue</h2>
<p>To start, lets see what Unity Manual says about Avatar Masks and Animation Layers:</p>

<p><a href="https://docs.unity3d.com/Manual/AnimationMaskOnImportedClips.html">Avatar Masks</a></p>
<blockquote>
  <p>Masking allows you to discard some of the animation data within a clip, <strong>allowing the clip to animate only parts of the object or character rather than the entire thing</strong>. For example, if you had a character with a throwing animation. If you wanted to be able to <strong>use the throwing animation in conjunction with various other body movements such as running, crouching and jumping</strong>, you could create a mask for the throwing animation limiting it to just the right arm, upper body and head. This portion of the animation can then be played in a layer over the top of the base running or jumping animations.</p>
</blockquote>

<p><a href="https://docs.unity3d.com/Manual/AnimationLayers.html">Animation Layers</a></p>
<blockquote>
  <p>Unity uses Animation Layers for managing complex state machines for different body parts. An example of this is if you have a lower-body layer for walking-jumping, and an upper-body layer for throwing objects / shooting.</p>
</blockquote>

<p>By reading those two sections is quite clear that we need to use avatar masks and animation layers together to combine our animations of different body parts. So, in the next sections, I will demonstrate how to combine three animations (Idle_GunMiddle, WalkForward_Shoot, and Shoot_single) to make the robot shoot while stands idle and walk forward with a gun in middle body. After that, I will propose you a challenge for the other animations available.</p>

<h2 id="starter-project">Starter project</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/project-128-4f597ed4f.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/project-128-4f597ed4f.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/project-128-4f597ed4f.png" alt="post image" width="128" height="128" />
</picture>

<p>All the source code and assets for this tutorial are available on this GitHub repository: <a href="https://github.com/giacomelli/unity-avatar-mask-and-animation-layers">https://github.com/giacomelli/unity-avatar-mask-and-animation-layers</a>. To start this tutorial you need to fork, clone or download the repository.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/giacomelli/unity-avatar-mask-and-animation-layers.git
</code></pre></div></div>

<p>Open the folder <code class="language-plaintext highlighter-rouge">avatar-mask-starter</code> on Unity.</p>
<div class="note"><p>This starter project has an initial setup and assets to allow us to focus in the learning about Avatar Masks and Animations Layers.</p>
</div>

<p>Open the scene <code class="language-plaintext highlighter-rouge">_Tutorial/Scenes/TutorialScene</code>.</p>

<div class="note"><p>If you see a popup called <code class="language-plaintext highlighter-rouge">TMP importer</code>, hit the <code class="language-plaintext highlighter-rouge">Import TPM Essentials</code> button to import the TextMesh Pro’s assets.</p>
</div>

<p>Hit the <code class="language-plaintext highlighter-rouge">Play</code> button. You should see a screen like this:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-200-383f1880a.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-400-383f1880a.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-800-383f1880a.webp 800w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-837-383f1880a.webp 837w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-200-383f1880a.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-400-383f1880a.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-800-383f1880a.png 800w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-837-383f1880a.png 837w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/starter-project-800-383f1880a.png" alt="post image" width="837" height="469" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>Starter project running: just HUD</p>
</span></center>
<p><br /></p>

<h2 id="creating-the-animation-controller">Creating the Animation Controller</h2>

<p>Create a new <code class="language-plaintext highlighter-rouge">Animation Controller</code> (menu <code class="language-plaintext highlighter-rouge">Assets/Create/Animation Controller</code>) and open it:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-window-empty-200-eb3e09a46.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-window-empty-400-eb3e09a46.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-window-empty-548-eb3e09a46.webp 548w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-window-empty-200-eb3e09a46.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-window-empty-400-eb3e09a46.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-window-empty-548-eb3e09a46.png 548w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-window-empty-548-eb3e09a46.png" alt="post image" width="548" height="212" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>Animator window showing the animation controller created</p>
</span></center>
<p><br /></p>

<p>All animation layers, nodes and transitions for this tutorial will be created inside this animation controller.</p>

<p>In the hierarchy, select the SciFiWarriorHP and in the Animator component set the <code class="language-plaintext highlighter-rouge">Controller</code> property to our Animation Controller.</p>

<h2 id="making-the-robot-walk-forward">Making the robot walk forward</h2>
<p>To get something running right now, we will make the robot walk forward when the button <code class="language-plaintext highlighter-rouge">WALK / FORWARD</code> became checked.</p>

<p>In the Animator opening with our Animation Controller drag the animation clip <code class="language-plaintext highlighter-rouge">Idle_GunMiddle</code> from folder <code class="language-plaintext highlighter-rouge">SciFiWarrior/Animations</code>. Do the same with the clip <code class="language-plaintext highlighter-rouge">WalkForward_Shoot</code>.</p>

<p>Create a <a href="https://docs.unity3d.com/Manual/class-Transition.html">transition</a> (right click on the node and  <code class="language-plaintext highlighter-rouge">Make transition</code>) from <code class="language-plaintext highlighter-rouge">Any state</code> to <code class="language-plaintext highlighter-rouge">WalkForward_Shoot</code> and create another transition from <code class="language-plaintext highlighter-rouge">WalkForward_Shoot</code> to <code class="language-plaintext highlighter-rouge">Idle_GunMiddle</code>.</p>

<p>Now we need to tell to the animation controller when it should activate the two transitions, for this we will create a bool <a href="https://docs.unity3d.com/Manual/AnimationParameters.html">animation parameter</a> called <code class="language-plaintext highlighter-rouge">WalkForward</code>.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-parameter-200-d9aa1ab44.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-parameter-323-d9aa1ab44.webp 323w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-parameter-200-d9aa1ab44.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-parameter-323-d9aa1ab44.png 323w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animation-parameter-323-d9aa1ab44.png" alt="post image" width="323" height="84" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>WalkForward parameter created</p>
</span></center>
<p><br /></p>

<p>We want to activate the transition from <code class="language-plaintext highlighter-rouge">Any state</code> to <code class="language-plaintext highlighter-rouge">WalkForward_Shoot</code> when <code class="language-plaintext highlighter-rouge">WalkForward</code> is true, so select this transition (click on the arrow connecting the state <code class="language-plaintext highlighter-rouge">Any State</code> to <code class="language-plaintext highlighter-rouge">WalkForward_Shoot</code>) and in the <code class="language-plaintext highlighter-rouge">Conditions</code> list on inspector add the <code class="language-plaintext highlighter-rouge">WalkForward</code> equals <code class="language-plaintext highlighter-rouge">true</code>:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/walk-forward-condition-200-6d24ef63e.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/walk-forward-condition-400-6d24ef63e.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/walk-forward-condition-426-6d24ef63e.webp 426w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/walk-forward-condition-200-6d24ef63e.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/walk-forward-condition-400-6d24ef63e.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/walk-forward-condition-426-6d24ef63e.png 426w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/walk-forward-condition-426-6d24ef63e.png" alt="post image" width="426" height="74" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>WalkForward condition defined</p>
</span></center>
<p><br /></p>

<p>Click the <code class="language-plaintext highlighter-rouge">reset</code> to auto fit the exit and transition time:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/reset-transition-200-b2fd78dec.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/reset-transition-400-b2fd78dec.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/reset-transition-424-b2fd78dec.webp 424w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/reset-transition-200-b2fd78dec.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/reset-transition-400-b2fd78dec.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/reset-transition-424-b2fd78dec.png 424w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/reset-transition-424-b2fd78dec.png" alt="post image" width="424" height="80" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>reseting the transition settings</p>
</span></center>
<p><br /></p>

<p>Repeat the same steps as above for the transition from <code class="language-plaintext highlighter-rouge">WalkForward_Shoot</code> to <code class="language-plaintext highlighter-rouge">Idle_GunMiddle</code>, but use <code class="language-plaintext highlighter-rouge">false</code> as the value for <code class="language-plaintext highlighter-rouge">WalkForward</code>.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-base-layer-200-600187dda.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-base-layer-400-600187dda.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-base-layer-566-600187dda.webp 566w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-base-layer-200-600187dda.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-base-layer-400-600187dda.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-base-layer-566-600187dda.png 566w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/animator-base-layer-566-600187dda.png" alt="post image" width="566" height="171" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>animation base layer</p>
</span></center>
<p><br /></p>

<p>Hit the <code class="language-plaintext highlighter-rouge">Play</code> button to test the animation states. When you click on <code class="language-plaintext highlighter-rouge">WALK / FORWARD</code> the robot starts to walk, when you click it again the robot stops to walk.</p>

<h3 id="creating-the-upper-body-avatar-mask">Creating the upper body avatar mask</h3>
<p>The animation for walk forward works pretty well, the robot walks forward while it’s aiming the gun. This is the whole movement animated inside the <code class="language-plaintext highlighter-rouge">WalkForward_Shoot</code> clip.</p>

<p>Now we want that robot walk forward without aiming the gun, instead of this, we want it keeps the gun in the middle as it does when <code class="language-plaintext highlighter-rouge">Idle_GunMiddle</code> is active. To get this done, first, we need to create an avatar mask to the upper body.</p>

<p>Create a new Avatar Mask (<code class="language-plaintext highlighter-rouge">Assets/Create/Avatar Mask</code>) called <code class="language-plaintext highlighter-rouge">UpperBody</code>. In the inspector, uncheck all lower body parties, as the image below:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upper-body-avatar-mask-200-461836169.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upper-body-avatar-mask-400-461836169.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upper-body-avatar-mask-435-461836169.webp 435w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upper-body-avatar-mask-200-461836169.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upper-body-avatar-mask-400-461836169.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upper-body-avatar-mask-435-461836169.png 435w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upper-body-avatar-mask-435-461836169.png" alt="post image" width="435" height="485" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>only upper body</p>
</span></center>
<p><br /></p>

<h3 id="creating-a-upper-body-animation-layer">Creating a upper body animation layer</h3>
<p>With the UpperBody Avatar Mask created, we will need to create a new animation layer that will use the mask. Go to the animator window and create a new layer using the <code class="language-plaintext highlighter-rouge">+ button</code>:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-200-65fcea606.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-400-65fcea606.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-588-65fcea606.webp 588w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-200-65fcea606.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-400-65fcea606.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-588-65fcea606.png 588w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-588-65fcea606.png" alt="post image" width="588" height="186" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>the new layer created with the mask</p>
</span></center>
<p><br /></p>

<p>Change the <code class="language-plaintext highlighter-rouge">Weight</code> property to 1 and set the Mask to the UpperBody Avatar Mask. Keep the <code class="language-plaintext highlighter-rouge">Blending</code> as override.</p>

<p>Drag the animation clip <code class="language-plaintext highlighter-rouge">Idle_GunMiddle</code> from folder <code class="language-plaintext highlighter-rouge">SciFiWarrior/Animations</code> to the <code class="language-plaintext highlighter-rouge">UpperBody</code> layer.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-fsm-200-84abc2d22.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-fsm-400-84abc2d22.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-fsm-573-84abc2d22.webp 573w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-fsm-200-84abc2d22.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-fsm-400-84abc2d22.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-fsm-573-84abc2d22.png 573w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/upperbody-animation-layer-fsm-573-84abc2d22.png" alt="post image" width="573" height="156" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>upper body animation layer</p>
</span></center>
<p><br /></p>

<h4 id="testing-the-animations">Testing the animations</h4>
<p>Hit the <code class="language-plaintext highlighter-rouge">Play</code> button to test the animation states. When you click on <code class="language-plaintext highlighter-rouge">WALK / FORWARD</code> the robot starts to walk, but now it’s not aiming the gun, instead it keeps the gun in the middle.</p>

<h4 id="why-does-this-happen">Why does this happen?</h4>
<p>So, this is done by the UpperBody Animation Layer that we added to our animation controller, as it’s mask was defined with our UpperBody Avatar Mask that only consider upper body parts of the humanoid, Unity overrides the base layer animation with the upper body part of the <code class="language-plaintext highlighter-rouge">Idle_GunMiddle</code>.</p>

<h2 id="making-the-robot-shoot">Making the robot shoot</h2>
<p>We will make the robot shoot when the button <code class="language-plaintext highlighter-rouge">SHOOT / SINGLE</code> became checked, this will help us to better understand how the Avatar Mask and Animation Layer works to override the animations from the base layer with the animations from UpperBody layer.</p>

<p>In the Animator Window with our Animation Controller opened, select the UpperBody layer and drag the animation clip <code class="language-plaintext highlighter-rouge">Shoot_single</code> from folder <code class="language-plaintext highlighter-rouge">SciFiWarrior/Animations</code>.</p>

<p>Create a <a href="https://docs.unity3d.com/Manual/class-Transition.html">transition</a> (right click on node and  <code class="language-plaintext highlighter-rouge">Make transition</code>) from <code class="language-plaintext highlighter-rouge">Any state</code> to <code class="language-plaintext highlighter-rouge">Shoot_single</code> and create another transition from <code class="language-plaintext highlighter-rouge">Shoot_single</code> to <code class="language-plaintext highlighter-rouge">Idle_GunMiddle</code>.</p>

<p>Now we need to tell to the animation controller when it should activate the two transitions, for this we will create a bool <a href="https://docs.unity3d.com/Manual/AnimationParameters.html">animation parameter</a> called <code class="language-plaintext highlighter-rouge">ShootSingle</code>.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/shoot-single-parameter-200-e06f77f07.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/shoot-single-parameter-350-e06f77f07.webp 350w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/shoot-single-parameter-200-e06f77f07.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/shoot-single-parameter-350-e06f77f07.png 350w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/shoot-single-parameter-350-e06f77f07.png" alt="post image" width="350" height="107" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>ShootSingle parameter created</p>
</span></center>
<p><br /></p>

<p>We want to activate the transition from <code class="language-plaintext highlighter-rouge">Any state</code> to <code class="language-plaintext highlighter-rouge">Shoot_single</code> when <code class="language-plaintext highlighter-rouge">ShootSingle</code> is true, so select this transition (click on the arrow connecting the state <code class="language-plaintext highlighter-rouge">Any State</code> to <code class="language-plaintext highlighter-rouge">Shoot_single</code>) and in the <code class="language-plaintext highlighter-rouge">Conditions</code> list on inspector add the <code class="language-plaintext highlighter-rouge">ShootSingle</code> equals  <code class="language-plaintext highlighter-rouge">true</code>.</p>

<p>Click the <code class="language-plaintext highlighter-rouge">reset</code> to auto fit the exit and transition time.</p>

<p>Repeat the same steps as above for the transition from <code class="language-plaintext highlighter-rouge">ShootSingle</code> to <code class="language-plaintext highlighter-rouge">Idle_GunMiddle</code>, but use <code class="language-plaintext highlighter-rouge">false</code> as the value for <code class="language-plaintext highlighter-rouge">ShootSingle</code>.</p>

<p>Hit the <code class="language-plaintext highlighter-rouge">Play</code> button to test the animation states. When you click on <code class="language-plaintext highlighter-rouge">SHOOT / SINGLE</code> the robot shoot.</p>

<p>Now you can combine the two buttons <code class="language-plaintext highlighter-rouge">WALK / FORWARD</code> and <code class="language-plaintext highlighter-rouge">SHOOT / SINGLE</code> and see how the animations combine.</p>

<h2 id="challenge">Challenge</h2>
<p>Do something is better to learn than just reading and following someone instructions because this I will challenge you to try to implement other actions:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/challenge-200-1ccb62e9c.webp 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/challenge-400-1ccb62e9c.webp 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/challenge-640-1ccb62e9c.webp 640w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/challenge-200-1ccb62e9c.png 200w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/challenge-400-1ccb62e9c.png 400w, /assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/challenge-640-1ccb62e9c.png 640w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/05/21/unity-avatar-mask-and-animation-layers/challenge-640-1ccb62e9c.png" alt="post image" width="640" height="359" />
</picture>

      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>the remaining actions to the challenge</p>
</span></center>
<p><br /> 	 	 
To implement these actions you need to do almost the same thing we did in this tutorial so far, just using another animation clips, transitions and parameters.</p>

<div class="note"><p>The challenger items are the legs because you will need to create new Avatar Masks with the <code class="language-plaintext highlighter-rouge">Transform</code> option of the avatar configuration to get the right animation. New Animation Layers will be needed as well.</p>
</div>

<p>If you have any doubt how to implement any part of this challenge, feel free to ask on this post comments or <a href="about">send me a message</a>.</p>

<h2 id="solution">Solution</h2>
<p>The whole source code and assets for this tutorial are available on: <a href="https://github.com/giacomelli/unity-avatar-mask-and-animation-layers">https://github.com/giacomelli/unity-avatar-mask-and-animation-layers</a></p>

<p>This repository has two main folders:</p>

<ul>
  <li><strong>avatar-mask-starter</strong>: the one you used to make this tutorial.</li>
  <li><strong>avatar-mask-complete</strong>: the whole solution with all actions implemented. Use this one, in case you get stuck in any item on the challenge.</li>
</ul>

<p>The video below shows the complete solution running:</p>
<center>
        <iframe src="https://www.youtube.com/embed/sl9EheTbmhE " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="conclusion">Conclusion</h2>
<p>In this tutorial, we learn how to use Avatar Masks and Animation Layers to animate a robot with different masks and layers.
These techniques allowing us to use already existent animations and combine them.</p>

<p><br /><br /><br />Icons made by <a href="http://www.freepik.com">Freepik</a>, <a href="http://www.flaticon.com/authors/vignesh-oviyan">Vignesh Oviyan</a> and <a href="https://www.flaticon.com/authors/eucalyp" title="Eucalyp">Eucalyp</a> from <a href="http://www.flaticon.com">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons BY 3.0</a></p>]]></content><author><name></name></author><category term="Tutorial" /><category term="unity3d" /><category term="gamedev" /><category term="animation" /><category term="avatar-mask" /><category term="animation-layers" /><category term="open-source" /><summary type="html"><![CDATA[In this tutorial we will learn how to use Avatar Mask and Animation Layers to combine multiple animations.]]></summary></entry><entry><title type="html">dotnet new templates for GeneticSharp</title><link href="http://diegogiacomelli.com.br/dotnet-new-templates-for-GeneticSharp/" rel="alternate" type="text/html" title="dotnet new templates for GeneticSharp" /><published>2019-02-03T00:00:00-02:00</published><updated>2019-02-03T00:00:00-02:00</updated><id>http://diegogiacomelli.com.br/dotnet-new-templates-for-GeneticSharp</id><content type="html" xml:base="http://diegogiacomelli.com.br/dotnet-new-templates-for-GeneticSharp/"><![CDATA[<p>Now GeneticSharp has a NuGet package called GeneticSharp.Templates, this package allows you to install GeneticSharp templates using the <strong>dotnet new</strong> command.</p>

<h2 id="installing-the-geneticsharptemplates">Installing the GeneticSharp.Templates</h2>
<p>Before you can use the <code class="language-plaintext highlighter-rouge">dotnet new</code> command to create the GeneticSharp projects from templates, you need to install it on your machine:</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dotnet new <span class="nt">-i</span> GeneticSharp.Templates
</code></pre></div></div>
<p>After this, if you run the command:</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dotnet new GeneticSharp <span class="nt">--list</span>  
</code></pre></div></div>

<p>The GeneticSharp templates will be listed:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/dotnet-new-list-output-200-b583e7472.webp 200w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/dotnet-new-list-output-400-b583e7472.webp 400w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/dotnet-new-list-output-759-b583e7472.webp 759w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/dotnet-new-list-output-200-b583e7472.png 200w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/dotnet-new-list-output-400-b583e7472.png 400w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/dotnet-new-list-output-759-b583e7472.png 759w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/dotnet-new-list-output-759-b583e7472.png" alt="post image" width="759" height="82" />
</picture>

      </center>
<p><br /></p>

<h2 id="creating-a-new-geneticsharp-project-from-templates">Creating a new GeneticSharp project from templates</h2>

<h3 id="console-application">Console Application</h3>
<p>Create a new console application template with GeneticSharp where you just need to implement the chromosome and fitness function.</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dotnet new GeneticSharpConsoleApp <span class="nt">-n</span> MyNamespace <span class="nt">-o</span> MyOutoputFolder
</code></pre></div></div>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-200-98f58dec8.webp 200w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-400-98f58dec8.webp 400w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-800-98f58dec8.webp 800w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-1032-98f58dec8.webp 1032w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-200-98f58dec8.png 200w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-400-98f58dec8.png 400w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-800-98f58dec8.png 800w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-1032-98f58dec8.png 1032w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/consoleapp-project-800-98f58dec8.png" alt="post image" width="1032" height="685" />
</picture>

      </center>
<p><br /></p>

<h3 id="tsp-console-application">TSP Console application</h3>
<p>Create a new console application template with GeneticSharp ready to run a Travelling Salesman Problem (TSP).</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dotnet new GeneticSharpTspConsoleApp <span class="nt">-n</span> MyNamespace <span class="nt">-o</span> MyOutoputFolder
</code></pre></div></div>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-200-e178fd623.webp 200w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-400-e178fd623.webp 400w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-800-e178fd623.webp 800w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-1024-e178fd623.webp 1024w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-200-e178fd623.png 200w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-400-e178fd623.png 400w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-800-e178fd623.png 800w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-1024-e178fd623.png 1024w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspconsoleapp-project-800-e178fd623.png" alt="post image" width="1024" height="893" />
</picture>

      </center>
<p><br /></p>

<h3 id="tsp-unity3d">TSP Unity3D</h3>
<p>Create an Unity3D template with GeneticSharp ready to run a Travelling Salesman Problem (TSP).</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dotnet new GeneticSharpTspUnity3d <span class="nt">-n</span> MyNamespace <span class="nt">-o</span> MyOutoputFolder
</code></pre></div></div>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-200-a9154db29.webp 200w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-400-a9154db29.webp 400w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-800-a9154db29.webp 800w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-1218-a9154db29.webp 1218w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-200-a9154db29.png 200w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-400-a9154db29.png 400w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-800-a9154db29.png 800w, /assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-1218-a9154db29.png 1218w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2019/02/03/dotnet-new-templates-for-GeneticSharp/tspunity3d-project-800-a9154db29.png" alt="post image" width="1218" height="902" />
</picture>

      </center>
<p><br /></p>

<p>Let’s evolve!</p>]]></content><author><name></name></author><category term="News" /><category term="geneticsharp" /><category term="dotnet" /><summary type="html"><![CDATA[Now GeneticSharp has a NuGet package called GeneticSharp.Templates, this package allows you to install GeneticSharp templates using the dotnet new command.]]></summary></entry><entry><title type="html">GeneticSharp v2.4.0 - New crossovers and TPL implementations</title><link href="http://diegogiacomelli.com.br/GeneticSharp-v2.4.0-New-Crossovers-and-TPL-implementations/" rel="alternate" type="text/html" title="GeneticSharp v2.4.0 - New crossovers and TPL implementations" /><published>2019-01-19T00:00:00-02:00</published><updated>2019-01-19T00:00:00-02:00</updated><id>http://diegogiacomelli.com.br/GeneticSharp-v2.4.0-New-Crossovers-and-TPL-implementations</id><content type="html" xml:base="http://diegogiacomelli.com.br/GeneticSharp-v2.4.0-New-Crossovers-and-TPL-implementations/"><![CDATA[<p>The <strong><a href="https://github.com/giacomelli/GeneticSharp">GeneticSharp v2.4.0</a></strong> is out.</p>

<p>The additions of this version are the two new crossovers implementations and a new option of ITaskExecutor that use TPL.</p>

<h2 id="crossovers">Crossovers</h2>
<h3 id="alternating-position-ap">Alternating-position (AP)</h3>
<p>The alternating position crossover operator (Larrañaga et al. 1996a) simply creates an offspring by selecting alternately the next element of the first parent and the next element of the second parent, omitting the elements already present in the offspring.</p>

<h3 id="voting-recombination-crossover-vr">Voting Recombination Crossover (VR)</h3>
<p>It can be seen as a P-sexual crossover operator, where p (parents number) is a natural number greater than, or equal to, 2.</p>

<p>It starts by defining a threshold, which is a natural number smaller than, or equal to p.</p>

<p>Next, for every; i E {l, 2, . . .N} the set of ith elements of all the parents is considered. If in this set an element occurs at least the threshold number of times, it is copied into the offspring.</p>

<h2 id="tpl">TPL</h2>
<p>Three new classes were implemented to run some key points of genetic algorithm using TPL.</p>

<p>Those new classes can be used alone, but normally you will use all them together. You can see a sample usage at unit test <code class="language-plaintext highlighter-rouge">Start_TplManyGenerations_Optimization</code>.</p>

<h3 id="tpltaskexecutor">TplTaskExecutor:</h3>
<p>An ITaskExecutor’s implementation that executes the tasks in a parallel fashion using Task Parallel Library (TPL).</p>

<h3 id="tplpopulation">TplPopulation</h3>
<p>Represents a population of candidate solutions (chromosomes) using TPL to create them.</p>

<h3 id="tploperatorsstrategy">TplOperatorsStrategy</h3>
<p>A new interface called IOperatorsStrategy was added to GeneticAlgorithm as an option. Two options of operators strategy were created, the default one, called DefaultOperatorsStrategy and the new one called TplOperatosStrategy.</p>

<hr />

<h2 id="thanks-to">Thanks to</h2>
<p>I would like to thanks to <a href="https://github.com/EMostafaAli">EMostafaAli</a> and <a href="https://github.com/InRedikaWB">Alexey I.</a> for opened some issues and made small pull requests and <a href="https://github.com/codingdna2">Dan</a> for contributing with the <a href="https://github.com/giacomelli/GeneticSharp/pull/56">TPL implementations</a>.</p>

<p>Let’s evolve!</p>]]></content><author><name></name></author><category term="News" /><category term="geneticsharp" /><category term="dotnet" /><category term="release" /><summary type="html"><![CDATA[The GeneticSharp v2.4.0 is out.]]></summary></entry><entry><title type="html">jogosdaqui - um pouco de história, open source e colaboração (pt-BR)</title><link href="http://diegogiacomelli.com.br/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/" rel="alternate" type="text/html" title="jogosdaqui - um pouco de história, open source e colaboração (pt-BR)" /><published>2018-11-21T00:00:00-02:00</published><updated>2018-11-21T00:00:00-02:00</updated><id>http://diegogiacomelli.com.br/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao</id><content type="html" xml:base="http://diegogiacomelli.com.br/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/"><![CDATA[<p>Muitos não sabem, mas além de programar, sempre gostei de ajudar a divulgar a indústria brasileira de desenvolvimento de jogos.</p>

<h2 id="criação-do-jogosdaqui">Criação do jogosdaqui</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-site-php-200-ccfb13d6d.webp 200w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-site-php-400-ccfb13d6d.webp 400w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-site-php-200-ccfb13d6d.png 200w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-site-php-400-ccfb13d6d.png 400w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-site-php-400-ccfb13d6d.png" alt="post image" width="400" height="94" />
</picture>

      </center>
<p><br /></p>

<p>Em 2005, junto com mais 3 amigos, foi fundado o site jogosdaqui, que era um site especializado em falar sobre os games desenvolvidos por empresas brasileiras.</p>

<p>Esse site produziu muitos artigos, catalogando diversos games, desde o Aeroporto 83, considerado o primeiro game brazuca.</p>

<p>Essa produção de artigos se manteve bastante ativa entre entre 2005 e 2007, mas em 2008 “fechamos as portas”, pois não conseguíamos mais atualizá-lo como merecia.</p>

<h2 id="conta-no-twitter">Conta no Twitter</h2>
<p>Em 2010, no meio da produção do game <a href="http://skahal.github.io/press/kit/snb/index.html">Ships N’ Battles</a> da minha gamedev indie Skahal Studios, criei uma conta de Twitter para o <a href="https://twitter.com/jogosdaqui">jogosdaqui</a>, para pelo menos conseguir ajudar um pouco na divulgação dos games nacionais.</p>

<p>A conta ganhou alguma notoriedade quando fiz uma pergunta sobre o posicionamento dos candidatos a presidente em relação a indústria brasileira de jogos e o José Serra respondeu:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-jose-serra-responde-tweet-200-d44a5ad08.webp 200w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-jose-serra-responde-tweet-400-d44a5ad08.webp 400w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-jose-serra-responde-tweet-200-d44a5ad08.png 200w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-jose-serra-responde-tweet-400-d44a5ad08.png 400w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-jose-serra-responde-tweet-400-d44a5ad08.png" alt="post image" width="400" height="188" />
</picture>

      </center>
<p><br /></p>

<h2 id="blog-no-uol-jogos">Blog no UOL Jogos</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-blog-uol-200-f7c742626.webp 200w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-blog-uol-400-f7c742626.webp 400w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-blog-uol-200-f7c742626.png 200w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-blog-uol-400-f7c742626.png 400w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-blog-uol-400-f7c742626.png" alt="post image" width="400" height="64" />
</picture>

      </center>
<p><br /></p>

<p>Tempos depois fui convidado pelo Théo Azevedo do UOL Jogos para criar um blog do jogosdaqui no UOL.</p>

<p>Esse blog durou entre o final de 2010 e o final de 2014.</p>

<p>Durante esse tempo também produzi algumas entrevistas para a revista EGW, com a mesma finalidade do jogosdaqui, falar sobre gamedevs brasileiras:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/EGW-entrevista-Doubleleft-200-3a8e7bb02.webp 200w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/EGW-entrevista-Doubleleft-400-3a8e7bb02.webp 400w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/EGW-entrevista-Doubleleft-200-3a8e7bb02.png 200w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/EGW-entrevista-Doubleleft-400-3a8e7bb02.png 400w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/EGW-entrevista-Doubleleft-400-3a8e7bb02.png" alt="post image" width="400" height="451" />
</picture>

      </center>
<p><br /></p>

<h2 id="site-wordpress">Site WordPress</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-site-wordpress-200-0ca54e66f.webp 200w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-site-wordpress-400-0ca54e66f.webp 400w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-site-wordpress-200-0ca54e66f.png 200w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-site-wordpress-400-0ca54e66f.png 400w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-site-wordpress-400-0ca54e66f.png" alt="post image" width="400" height="134" />
</picture>

      </center>
<p><br /></p>

<p>No final de 2014, comecei a migrar o jogosdaqui para um site próprio em WordPress e durante todo ano de 2015 foram produzidos diversas matérias, mas devido a demandas pessoais o site ficou no ar apenas até 2016.</p>

<h2 id="open-source-e-colaborativo">Open source e colaborativo</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-logo-200-2b5eb7141.webp 200w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-logo-225-2b5eb7141.webp 225w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-logo-200-2b5eb7141.png 200w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-logo-225-2b5eb7141.png 225w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/jogosdaqui-logo-225-2b5eb7141.png" alt="post image" width="225" height="225" />
</picture>

      </center>
<p><br /></p>

<p>E essa história nos leva a esse momento, pois acredito que o material que o jogosdaqui produziu sobre os games nacionais, alguns deles que podem ser encontrados somente no jogosdaqui, não devem ser esquecidos ou perdidos.</p>

<p>Então no início desse mês comecei a conversão de todos os artigos, oriundos de 3 modelos diferentes (site PHP, blog UOL e WordPress) para uma única plataforma open source, baseada no GitHub Pages (Jekyll) e que permitirá que esse material não seja perdido, possa ainda ser melhorado e novos posts possam ser publicados por qualquer pessoa interessada em divulgar a indústria brasileira de desenvolvimento de jogos.</p>

<p>Acessem o <a href="https://jogosdaqui.github.io">https://jogosdaqui.github.io</a> e aproveitem para conhecer mais sobre jogos os eletrônicos brasileiros.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/150-jogosdaqui-200-93f318e9f.webp 200w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/150-jogosdaqui-400-93f318e9f.webp 400w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/150-jogosdaqui-800-93f318e9f.webp 800w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/150-jogosdaqui-1500-93f318e9f.webp 1500w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/150-jogosdaqui-200-93f318e9f.jpg 200w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/150-jogosdaqui-400-93f318e9f.jpg 400w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/150-jogosdaqui-800-93f318e9f.jpg 800w, /assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/150-jogosdaqui-1500-93f318e9f.jpg 1500w" type="image/jpeg" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/11/21/jogosdaqui-um-pouco-de-historia-open-source-e-colaboracao/150-jogosdaqui-800-93f318e9f.jpg" alt="post image" width="1500" height="500" />
</picture>

      </center>
<p><br /></p>]]></content><author><name></name></author><category term="Article" /><category term="jogosdaqui" /><category term="pt-br" /><category term="brasil" /><summary type="html"><![CDATA[Muitos não sabem, mas além de programar, sempre gostei de ajudar a divulgar a indústria brasileira de desenvolvimento de jogos.]]></summary></entry><entry><title type="html">GeneticSharp v2.2.0 - Sudoku sample</title><link href="http://diegogiacomelli.com.br/GeneticSharp-v2.2.0-Sudoku-sample/" rel="alternate" type="text/html" title="GeneticSharp v2.2.0 - Sudoku sample" /><published>2018-11-03T00:00:00-03:00</published><updated>2018-11-03T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/GeneticSharp-v2.2.0-Sudoku%20sample</id><content type="html" xml:base="http://diegogiacomelli.com.br/GeneticSharp-v2.2.0-Sudoku-sample/"><![CDATA[<p>The <strong><a href="https://github.com/giacomelli/GeneticSharp">GeneticSharp v2.2.0</a></strong> is out.</p>

<p>The additions of this version are the new whole sample and extensions showing how to use GeneticSharp to solve a Sudoku.</p>

<p>The GeneticSharp.Extensions project receive those new features:</p>

<h2 id="multiple">Multiple</h2>
<h3 id="multiplechromosome">MultipleChromosome</h3>
<p>Compound chromosome to artificially increase genetics diversity by evolving a list of chromosomes instead of just one.
Sub-genes are inlined into a single compound list of genes.</p>

<h3 id="multiplefitness">MultipleFitness</h3>
<p>Fitness class that can evaluate a compound chromosome by summing over the evaluation of its sub-chromosomes.</p>

<h2 id="sudoku">Sudoku</h2>
<h3 id="isudokuchromosome">ISudokuChromosome:</h3>
<p>Represents each type of chromosome for solving a sudoku is simply required to output a list of candidate sudokus.</p>

<h3 id="sudokuboard">SudokuBoard</h3>
<p>A class that represents a Sudoku, fully or partially completed. 
Holds a list of 81 int for cells, with 0 for empty cells.
Can parse strings and files from most common formats and displays the sudoku in an easy to read format.</p>

<h3 id="sudokucellschromosome">SudokuCellsChromosome</h3>
<p>This simple chromosome simply represents each cell by a gene with a value between 1 and 9, accounting for the target mask if given.</p>

<h3 id="sudokufitness">SudokuFitness</h3>
<p>Evaluates a sudoku chromosome for completion by counting duplicates in rows, columns, boxes, and differences from the target mask.</p>

<h3 id="sudokupermutationschromosome">SudokuPermutationsChromosome</h3>
<p>This more elaborated chromosome manipulates rows instead of cells, and each of its 9 gene holds an integer for the index of the row’s permutation amongst all that respect the target mask.
Permutations are computed once when a new Sudoku is encountered, and stored in a static dictionary for further reference.</p>

<h3 id="sudokurandompermutationschromosome">SudokuRandomPermutationsChromosome</h3>
<p>This chromosome aims at increasing genetic diversity of SudokuPermutationsChromosome, which exhibits only 9 permutation genes.
Here, instead, an arbitrary number of Sudokus are generated where for each row, a random gene is picked amongst an arbitrary number of corresponding permutation genes.</p>

<h2 id="samples">Samples</h2>
<p>GTK# sample
<img src="https://user-images.githubusercontent.com/177389/47957137-6bff2200-df8f-11e8-8b07-a144289389a0.png" alt="gtk-sudoku-sample" /></p>

<hr />

<h2 id="thanks-to">Thanks to</h2>
<p>I would like to thanks to Jean-Sylvain Boige (@jsboige) for contributing with those great new samples and extensions and for use GeneticSharp in his <a href="https://github.com/giacomelli/GeneticSharp/pull/43#issuecomment-433662175">Artificial Intelligence course in French engineering schools (course)</a>.</p>

<p>Take a look on the pull-request for more details about those new features: <a href="https://github.com/giacomelli/GeneticSharp/pull/43">New Sudoku extension and GTK# sample #43</a>.</p>

<p>Let’s evolve!</p>]]></content><author><name></name></author><category term="News" /><category term="geneticsharp" /><category term="dotnet" /><category term="release" /><summary type="html"><![CDATA[The GeneticSharp v2.2.0 is out.]]></summary></entry><entry><title type="html">GeneticSharp v2.1.0</title><link href="http://diegogiacomelli.com.br/GeneticSharp-v2.1.0/" rel="alternate" type="text/html" title="GeneticSharp v2.1.0" /><published>2018-10-30T00:00:00-03:00</published><updated>2018-10-30T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/GeneticSharp-v2.1.0</id><content type="html" xml:base="http://diegogiacomelli.com.br/GeneticSharp-v2.1.0/"><![CDATA[<p>The <strong><a href="https://github.com/giacomelli/GeneticSharp">GeneticSharp v2.1.0</a></strong> is out.</p>

<h3 id="features">Features</h3>

<ul>
  <li>Add constructor with values to FloatingPointChromosome <a href="https://github.com/giacomelli/GeneticSharp/issues/33">#33</a></li>
</ul>

<blockquote>
  <p>As it is now whenever you create an instance of FloatingPointChromosome, it will randomly create gene values.
I have a case where I need to stop optimization at some time, save results to DB and resume it later. For this, I need to be able to give gene values to FloatingPointChromosome.</p>
</blockquote>

<ul>
  <li>New NuGet version <a href="https://github.com/giacomelli/GeneticSharp/issues/44">#44</a></li>
</ul>

<h3 id="bug-fix">Bug fix</h3>
<ul>
  <li>Bug/Error when using ParallelTaskExecutor <a href="https://github.com/giacomelli/GeneticSharp/issues/40">#40</a></li>
</ul>

<blockquote>
  <p>I just discovered that when running the optimizer within a Task/Tread/TPL Dataflow block with TaskExecutor set to ParallelTaskExecutor when instantiating GeneticAlgorithm, it blocks all other outside operations during the lifetime of the optimizer run. This does not happen when not setting the TaskExecutor option.</p>
</blockquote>

<h3 id="thanks-to">Thanks to</h3>

<p>I would like to thanks to <a href="https://github.com/MattWolf74">@MattWolf74</a>  and <a href="https://github.com/mersadk">@mersadk</a> for contributing to the open issues and pull-request</p>

<p>If you want to use this new version on your project, just get the 2.1.0 version from NuGet:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code> update-package GeneticSharp
</code></pre></div></div>

<p>Let’s evolve!</p>]]></content><author><name></name></author><category term="News" /><category term="geneticsharp" /><category term="dotnet" /><category term="release" /><summary type="html"><![CDATA[The GeneticSharp v2.1.0 is out.]]></summary></entry><entry><title type="html">GeneticSharp Unity3d Samples released on Google Play</title><link href="http://diegogiacomelli.com.br/GeneticSharp-Unity3d-Samples-released-on-Google-Play/" rel="alternate" type="text/html" title="GeneticSharp Unity3d Samples released on Google Play" /><published>2018-09-22T00:00:00-03:00</published><updated>2018-09-22T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/GeneticSharp-Unity3d-Samples-released-on-Google-Play</id><content type="html" xml:base="http://diegogiacomelli.com.br/GeneticSharp-Unity3d-Samples-released-on-Google-Play/"><![CDATA[<p>I published on Google Play the <strong>GeneticSharp Unity3d Samples</strong>.</p>

<center>
        <iframe src="https://www.youtube.com/embed/pJpZwCW2m4s " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<center>
	<a href="https://play.google.com/store/apps/details?id=br.com.diegogiacomelli.geneticsharprunnersunityapp">
		
	</a>
</center>

<p>In this app you can see GeneticSharp running on Unity3d in three different samples:</p>

<h2 id="car2d">Car2D</h2>
<p>Based on famous BoxCar2D, this sample uses a genetic algorithm to create car designs to overcome road challenges, like gaps, hills, and obstacles.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-200-605d2bd7e.webp 200w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-400-605d2bd7e.webp 400w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-800-605d2bd7e.webp 800w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-1600-605d2bd7e.webp 1600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-200-605d2bd7e.png 200w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-400-605d2bd7e.png 400w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-800-605d2bd7e.png 800w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-1600-605d2bd7e.png 1600w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Car2d-800-605d2bd7e.png" alt="post image" width="1920" height="1080" />
</picture>

      </center>
<p><br /></p>

<h2 id="tsp">TSP</h2>
<p>The classic TSP sample, but in this, we can change the cities positions while the genetic algorithm is running and see how it finds the best route.</p>

<p>This sample inspired this post <a href="/tsp-with-GeneticSharp-and-Unity3d/">TSP with GeneticSharp and Unity3D</a>.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-200-fcf1c65a0.webp 200w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-400-fcf1c65a0.webp 400w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-800-fcf1c65a0.webp 800w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-1600-fcf1c65a0.webp 1600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-200-fcf1c65a0.png 200w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-400-fcf1c65a0.png 400w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-800-fcf1c65a0.png 800w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-1600-fcf1c65a0.png 1600w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-TSP-800-fcf1c65a0.png" alt="post image" width="1920" height="1080" />
</picture>

      </center>
<p><br /></p>

<h2 id="wall-builder">Wall builder</h2>
<p>This sample tries to build a higher wall using random initial bricks positions.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-200-44a0f3b6a.webp 200w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-400-44a0f3b6a.webp 400w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-800-44a0f3b6a.webp 800w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-1600-44a0f3b6a.webp 1600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-200-44a0f3b6a.png 200w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-400-44a0f3b6a.png 400w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-800-44a0f3b6a.png 800w, /assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-1600-44a0f3b6a.png 1600w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/09/22/GeneticSharp-Unity3d-Samples-released-on-Google-Play/GeneticSharp-Unity3d-Samples-Wall-Builder-800-44a0f3b6a.png" alt="post image" width="1920" height="1080" />
</picture>

      </center>
<p><br /></p>

<p>You can get the full source code here: <a href="https://github.com/giacomelli/GeneticSharp/tree/master/src/GeneticSharp.Runner.UnityApp">https://github.com/giacomelli/GeneticSharp/tree/master/src/GeneticSharp.Runner.UnityApp</a></p>

<p>Let’s evolve!</p>]]></content><author><name></name></author><category term="News" /><category term="geneticsharp" /><category term="unity3d" /><category term="dotnet" /><category term="android" /><category term="google-play" /><summary type="html"><![CDATA[I published on Google Play the GeneticSharp Unity3d Samples.]]></summary></entry><entry><title type="html">GeneticSharp Car2D</title><link href="http://diegogiacomelli.com.br/GeneticSharp-Car2D/" rel="alternate" type="text/html" title="GeneticSharp Car2D" /><published>2018-06-01T00:00:00-03:00</published><updated>2018-06-01T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/GeneticSharp-Car2D</id><content type="html" xml:base="http://diegogiacomelli.com.br/GeneticSharp-Car2D/"><![CDATA[<p>I made an Unity3D sample for <a href="https://github.com/giacomelli/GeneticSharp">GeneticSharp</a> inspired by amazing <a href="http://boxcar2d.com/about.html">BoxCar2D</a> where a genetic algorithm tries to design 2D cars to overcome roads challenges.</p>

<h2 id="introduction">Introduction</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-200-6761995cb.webp 200w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-400-6761995cb.webp 400w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-800-6761995cb.webp 800w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-801-6761995cb.webp 801w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-200-6761995cb.png 200w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-400-6761995cb.png 400w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-800-6761995cb.png 800w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-801-6761995cb.png 801w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/car-800-6761995cb.png" alt="post image" width="801" height="388" />
</picture>

      </center>
<p><br /></p>

<p>I was always amazed by the 2D cars designed by <a href="http://boxcar2d.com/about.html">BoxCar2D</a>  and see how genetic algorithm make new and (probably) better cars each new generation and I always wanted make a sample inspired by it using GeneticSharp.</p>

<p>The sample that I will talk about is available on the GeneticSharp repository at GeneticSharp.Runner.UnityApp. You can fork GeneticSharp and open it on Unity3D editor, then run the MenuScene.</p>

<blockquote>
  <p>If you need some introduction to genetic algorithms or GeneticSharp:</p>
  <ul>
    <li>Introduction to genetic algorithms: <a href="/function-optimization-with-geneticsharp/">Function optimization with GeneticSharp</a>.</li>
    <li>Using GeneticSharp on Unity3D: <a href="/tsp-with-GeneticSharp-and-Unity3d/">TSP with GeneticSharp and Unity3D</a>.</li>
  </ul>
</blockquote>

<h2 id="what-is-our-2d-car">What is our 2D car?</h2>
<p>In GeneticSharp Car2D, a car is composed of:</p>

<ul>
  <li>8 vectors with 64 meters max size and an angle that will be calculate from the car center.</li>
  <li>0 to 8 wheels
    <ul>
      <li>Radius from 0 to 3</li>
      <li>Vector index (a vector can have more than one wheel)</li>
    </ul>
  </li>
</ul>

<p>The vectors and wheels have mass, so bigger ones will made a slower car.</p>

<h2 id="the-chromosome">The chromosome</h2>
<p>To represent the phenotype described above the car chromosome will be:</p>

<ul>
  <li>A float to represent the vector size (7 bits)</li>
  <li>A float to represent the vector angle (9 bits)</li>
  <li>An integer to represent the wheel vector index (7 bits)</li>
  <li>A float to represent the wheel radius (4 bits)</li>
</ul>

<p>This structure will take 27 bits, then we will repeat it 8 times, that is the number of the car vectors. This give us a chromosome with 216 bits.</p>

<p>The bit string chromosome will look like this:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>001101110101110100001000010010100100111000100000010101010100000111100100001110010010010101010111100000000011011100000001110000001110010000110101011111100000100011011101101011101000001110000011011000110111000000000011
</code></pre></div></div>

<h2 id="the-roads">The roads</h2>
<p>The roads and cars can be configured using the scriptable object CarSampleConfig. The GeneticSharp Car2D allows create any number of different roads and car configs, but for this post, I will show 3 roads configurations with the same car configuration mentioned above.</p>

<blockquote>
  <p>If you want to add new roads, just create a new CarSampleConfig in “Assets / Create / GeneticSharp / Car / CarSampleConfig”. The new road will automatically appear on Car2D menu when you run the sample.</p>
</blockquote>

<p>A road is defined by its points quantity and distance, height, rotation, gaps, and obstacles. The gravity and everything about physics is automatically simulated by Unity3d itself.</p>

<h2 id="the-fitness-function">The fitness function</h2>
<p>The fitness of each car (chromosome) to the road will be the <strong>sum of the max distance</strong> reach by it <strong>plus the average velocity</strong> at that moment.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-200-40a0bcc10.webp 200w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-400-40a0bcc10.webp 400w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-800-40a0bcc10.webp 800w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-1053-40a0bcc10.webp 1053w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-200-40a0bcc10.png 200w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-400-40a0bcc10.png 400w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-800-40a0bcc10.png 800w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-1053-40a0bcc10.png 1053w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/FitnessFunction-800-40a0bcc10.png" alt="post image" width="1053" height="550" />
</picture>

      </center>
<p><br /></p>

<h2 id="genetic-algorithm-and-the-simulation">Genetic algorithm and the simulation</h2>
<p>The genetic algorithm to evaluate the simulation is configured with this operators:</p>

<ul>
  <li>Population: 16 chromosomes per generation</li>
  <li>Crossover: Uniform</li>
  <li>Mutation: Flip Bit</li>
  <li>Selection: Elite</li>
  <li>Termination: Time evolving</li>
</ul>

<p>Besides that, the chromosomes are evaluated in parallel using the GeneticSharp’s ParallelTaskExecutor and you can see all them in 4x4 grid:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-200-277a451e7.webp 200w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-400-277a451e7.webp 400w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-800-277a451e7.webp 800w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-1600-277a451e7.webp 1600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-200-277a451e7.png 200w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-400-277a451e7.png 400w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-800-277a451e7.png 800w, /assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-1600-277a451e7.png 1600w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/06/01/GeneticSharp-Car2D/SimulationGrid-800-277a451e7.png" alt="post image" width="1915" height="988" />
</picture>

      </center>
<p><br /></p>

<blockquote>
  <p>If you are running the sample inside Unity3D editor you can change the size of the simulation grid in the SampleController game object from CarScene.</p>
</blockquote>

<h2 id="designing-the-cars">Designing the cars</h2>
<p>Now that we have our Car2D and roads defining, we can put the genetic algorithm to run and see how it design the cars for each road.</p>

<p>Besides the roads that are different, the car setup is the same. This way we can compare how genetic algorithm will reach different car designs to different challenges (roads).</p>

<h3 id="gap-road">Gap road</h3>
<p>The first is a road with gaps that getting greater. 
The next video resumes how GeneticSharp designs the car for the gap road.</p>

<center>
        <iframe src="https://www.youtube.com/embed/hxt2E3QGZw4 " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<blockquote>
  <p>All videos are recording running the GeneticSharp Car2D on my Android. I used the <a href="https://play.google.com/store/apps/details?id=com.duapps.recorder&amp;hl=en_US">DU Recorder</a> to record them. Amazing app BTW.</p>
</blockquote>

<p>About 100 generations, GeneticSharp generate a car that has a front wheel suspend in the air that allows it to reach the other side of the gap without fall on it.</p>

<h3 id="hill-road">Hill road</h3>
<p>This road has some hills that increase as the car travels.</p>

<center>
        <iframe src="https://www.youtube.com/embed/x0zCDyGc80s " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<p>For hill road, the genetic algorithm creates a car with enough length to touch the two sides of the downhills at the same time, this allows the car to keep the velocity needed to overcome the hill part. The middle wheel is what allows the car to pass the hill part of the road.</p>

<h3 id="obstacle-road">Obstacle road</h3>
<p>Some fixed obstacles are placed on the road and force the cars to pass over them</p>

<center>
        <iframe src="https://www.youtube.com/embed/gJCz79xdCFY " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<p>This is probably the most curious design because the genetic algorithm found out that to overcome the obstacle, the car needed to reach it at high velocity and needs to have a back support to avoid car rollover.</p>

<h2 id="conclusion">Conclusion</h2>
<p>A think two things are quite clear after I build this sample:</p>

<h3 id="incremental-challenges">Incremental challenges</h3>
<p>All the challenges in the roads are incremental, the gaps start small and get bigger by the extension of the road. The same was did to the hills and the obstacle.</p>

<p><strong>Why do the challenges need to be incremental?</strong></p>

<p>During first tests with the gap road I realized if I just put an 8 meters gap in front of first-generation cars, the genetic algorithm cannot choose better designs, because most of them just fall in the first gap. The challenge was too much for the initial generations, but if I just increased the size of the gaps from small size until it gets to 8 meters, the genetic algorithm could choose better and better designs each generation.</p>

<p><strong>It’s how we learn</strong></p>

<p>The same happens on how we learn many things, like math: first basic operations, then simple equations and in some years we are calculating integrals (or trying at least).</p>

<p>It’s easy to spot this behavior on evolution itself, where the genetic algorithms are based. In the book “Guns, Germs and Steel” Jared Diamond says:</p>

<p><em>“The near-simultaneous disappearance of so many large species raises an
obvious question: what caused it? An obvious possible answer is that they
were killed off or else eliminated indirectly by the first arriving humans.
Recall that Australian / New Guinean animals had evolved for millions of
years in the absence of human hunters. We know that Galapagos and Antarctic
birds and mammals, which similarly evolved in the absence of
humans and did not see humans until modern times, are still incurably
tame today.”</em></p>

<p>The Australian / New Guinean animals got a challenge that was too much to them in that time, different of the other animals from other continents that evolved together with humans (or proto-humans) and learn to survive this predator.</p>

<h3 id="different-design">Different design</h3>
<p>Different challenges lead to different car designs. 
It’s quite clear that the best cars design to each of the 3 roads are different between them and only works in its specific road.</p>

<p>Now, it’s up to you, fork <a href="https://github.com/giacomelli/GeneticSharp/fork">GeneticSharp</a> and run the GeneticSharp Car2D on your Unity3D editor. <a href="http://twitter.com/ogiacomelli">Let me know</a> what roads and results you created.</p>

<p>Let’s evolve!</p>]]></content><author><name></name></author><category term="Article" /><category term="geneticsharp" /><category term="unity3d" /><category term="tsp" /><category term="car2d" /><category term="dotnet" /><summary type="html"><![CDATA[I made an Unity3D sample for GeneticSharp inspired by amazing BoxCar2D where a genetic algorithm tries to design 2D cars to overcome roads challenges.]]></summary></entry><entry><title type="html">GeneticSharp - Unity3d sample</title><link href="http://diegogiacomelli.com.br/GeneticSharp-Unity3d-sample/" rel="alternate" type="text/html" title="GeneticSharp - Unity3d sample" /><published>2018-05-31T00:00:00-03:00</published><updated>2018-05-31T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/GeneticSharp-Unity3d-sample</id><content type="html" xml:base="http://diegogiacomelli.com.br/GeneticSharp-Unity3d-sample/"><![CDATA[<p>I just pushed to GeneticSharp master branch the <a href="https://github.com/giacomelli/GeneticSharp/tree/master/src/GeneticSharp.Runner.UnityApp">GeneticSharp.Runners.UnityApp</a>.</p>

<p>In this Unity3d project there are 3 samples:</p>

<h2 id="car2d">Car2D</h2>
<p>Based on famous BoxCar2D, this sample uses a genetic algorithm to create car designs to overcome road challenges, like gaps, hills, and obstacles.</p>

<p>A post explaining this sample in detail will be published tomorrow.</p>

<h2 id="tsp">TSP</h2>
<p>The classic TSP sample, but in this, we can change the cities positions while the genetic algorithm is running and see how it finds the best route.</p>

<p>This sample inspired this post <a href="/tsp-with-GeneticSharp-and-Unity3d/">TSP with GeneticSharp and Unity3D</a>.</p>

<h2 id="wall-builder">Wall builder</h2>
<p>This sample tries to build a higher wall using random initial bricks positions.</p>

<center>
        <iframe src="https://www.youtube.com/embed/xXqNcgeOU_g " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<h2 id="experimental-components">Experimental components</h2>
<p>In the folder _runner/Commons there are the BitStringChromosome class and some phenotype implementations. At the moment they are experimental, but I will wait for the community feedback to see if they can be promoted to GeneticSharp library code.</p>

<p>Let’s evolve!</p>]]></content><author><name></name></author><category term="News" /><category term="geneticsharp" /><category term="unity3d" /><category term="gamedev" /><category term="tsp" /><category term="car2d" /><category term="dotnet" /><summary type="html"><![CDATA[I just pushed to GeneticSharp master branch the GeneticSharp.Runners.UnityApp.]]></summary></entry><entry><title type="html">TSP with GeneticSharp and Unity3D</title><link href="http://diegogiacomelli.com.br/tsp-with-GeneticSharp-and-Unity3d/" rel="alternate" type="text/html" title="TSP with GeneticSharp and Unity3D" /><published>2018-05-16T00:00:00-03:00</published><updated>2018-05-16T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/tsp-with-GeneticSharp-and-Unity3d</id><content type="html" xml:base="http://diegogiacomelli.com.br/tsp-with-GeneticSharp-and-Unity3d/"><![CDATA[<style>
div.gist-meta { display:none; }
</style>

<p>In this post I will show how to use GeneticSharp and Unity3D to solve the TSP (Travelling salesman problem).</p>

<h2 id="introduction">Introduction</h2>

<p>According to Wikipedia <em><strong>“The travelling salesman problem (TSP) asks the following question: “Given a list of cities and the distances between each pair of cities, what is the shortest possible route that visits each city and returns to the origin city?”</strong></em></p>

<p>TSP is a classic sample to test some optimization techniques, as well it’s fairly used to demonstrate how to implement a genetic algorithm. For these reasons I will use it to show you how to implement a basic genetic algorithm in Unity3D using GeneticSharp.</p>

<h2 id="prerequisites">Prerequisites</h2>
<p>To better understand this tutorial, you need to have some experiences/knowledges in:</p>

<ul>
  <li>Unity3D (beginner)</li>
  <li>Genetic algorithms (beginner).</li>
</ul>

<blockquote>
  <p>If you need an introduction to genetic algorithms, take a look at this tutorial  <a href="/function-optimization-with-geneticsharp/">Function optimization with GeneticSharp</a>.</p>
</blockquote>

<h2 id="creating-the-unity3d-project">Creating the Unity3D project</h2>
<p>Using Unity 2018.1+, create a new project called TspSample.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/creating-project-200-e53d80e12.webp 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/creating-project-400-e53d80e12.webp 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/creating-project-669-e53d80e12.webp 669w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/creating-project-200-e53d80e12.png 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/creating-project-400-e53d80e12.png 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/creating-project-669-e53d80e12.png 669w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/creating-project-669-e53d80e12.png" alt="post image" width="669" height="321" />
</picture>

      </center>
<p><br /></p>

<h2 id="using-net-standard-20">Using .NET Standard 2.0</h2>
<p>Go to “Player settings” / “Other settings” / “Configuration”, select “.NET 4.x Equivalent” on “Scripting Runtime Version”. Unity will ask to restart, you can confirm.</p>

<p>After restart, go back to “Player settings”, select “.NET Standard 2.0” on “Api Compability Level”.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/player-settings-200-444856e1a.webp 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/player-settings-400-444856e1a.webp 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/player-settings-426-444856e1a.webp 426w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/player-settings-200-444856e1a.png 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/player-settings-400-444856e1a.png 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/player-settings-426-444856e1a.png 426w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/player-settings-426-444856e1a.png" alt="post image" width="426" height="82" />
</picture>

      </center>
<p><br /></p>

<h2 id="installing-geneticsharp">Installing GeneticSharp</h2>
<p>Install GeneticSharp using the .unitypackage available on <a href="https://github.com/giacomelli/GeneticSharp/releases">GeneticSharp release page</a>.</p>

<h2 id="defining-the-tsp-chromosome">Defining the TSP chromosome</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/route-128-704e92446.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/route-128-704e92446.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/route-128-704e92446.png" alt="post image" width="128" height="128" />
</picture>

<p>The chromosome represents a solution of the problem we are trying to solve. In our case the TSP chromosome should represent <em><strong>“the shortest possible route that visits each city and returns to the origin city”</strong></em>.</p>

<p>To represent the cities route each gene of our chromosome will represent an index of a city in the route.</p>

<p>Create a C# script called “TspChromosome.cs”:
<script src="https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=TspChromosome.cs"> </script></p>

<h2 id="representing-a-city">Representing a city</h2>
<p>The next step is define our genetic algorithm fitness function, but first we need to create a simple class to represent a city on a 2D space.</p>

<p>Create a C# script called “City.cs”:
<script src="https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=City.cs"> </script></p>

<h2 id="the-fitness-function">The fitness function</h2>
<p>Now we need to evaluate the TspChromosome.</p>

<p>Our fitness function will evaluate the TspChromosome fitness based on the total distance to reach all cities in the route represented by the chromosome. The shorter the distance, the better the chromosome.</p>

<p>Create a C# script called “TspFitness.cs”: <script src="https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=TspFitness.cs"> </script></p>

<h2 id="running-the-genetic-algorithm">Running the Genetic Algorithm</h2>
<p>In this step we need to configure our genetic algorithm using the TspChromosome, TspFitness and some classic GA operators already built in GeneticSharp.</p>

<p>Create a C# script called “GAController.cs”: <script src="https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=GAController.v1.cs"> </script></p>

<p>Create a GameObject called “GAController” in the scene and add the GAController.cs to it.</p>

<p>Save the scene.</p>

<p>Run the scene on editor and take a look on the console window, you will see the distance to reach all cities getting smaller as the generations ran.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/console-window-200-cb99efe0f.webp 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/console-window-400-cb99efe0f.webp 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/console-window-488-cb99efe0f.webp 488w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/console-window-200-cb99efe0f.png 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/console-window-400-cb99efe0f.png 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/console-window-488-cb99efe0f.png 488w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/console-window-488-cb99efe0f.png" alt="post image" width="488" height="361" />
</picture>

      </center>
<p><br /></p>

<h2 id="drawing-the-cities">Drawing the cities</h2>
<p>Now our GA is running inside Unity3D, but it need to display the cities route better.
We need to create a visual representation to the cities.</p>

<h3 id="city-prefab">City prefab</h3>
<p>We will create a prefab based on a sprite of a pin. You can use an icon as this one from <a href="https://www.flaticon.com/free-icon/maps-and-flags_447031#term=pin&amp;page=1&amp;position=6">www.flaticon.com</a>.</p>

<p>Download it to inside your Unity3D project.</p>
<blockquote>
  <p>Maybe you will need to change the ‘Pixels Per Unit’ to 1000 to get a good pin size on screen.</p>
</blockquote>

<p>Drag it to the hierarchy panel, rename the new GameObject to CityPrefab and drag it back to your Assets folder on Project panel. Now our CityPrefab is created.</p>

<p>Delete the CityPrefab game object from the current scene.</p>

<h3 id="instantiating-the-cities-prefabs">Instantiating the cities prefabs</h3>
<p>Add the following field to the GAController.cs
<script src="https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=GAController.change1.cs"> </script></p>

<p>Then, create the method DrawCities:
<script src="https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=GAController.change2.cs"> </script></p>

<p>And then call it from Start method:
<script src="https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=GAController.change3.cs"> </script></p>

<p>Now, select the GAController game object on hierarchy and set the CityPrefab property.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/setting-cityprefab-200-e77776a1f.webp 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/setting-cityprefab-400-e77776a1f.webp 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/setting-cityprefab-595-e77776a1f.webp 595w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/setting-cityprefab-200-e77776a1f.png 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/setting-cityprefab-400-e77776a1f.png 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/setting-cityprefab-595-e77776a1f.png 595w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/setting-cityprefab-595-e77776a1f.png" alt="post image" width="595" height="190" />
</picture>

      </center>
<p><br /></p>

<p>Try to run the scene, you should see something like this:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-200-e9b99a942.webp 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-400-e9b99a942.webp 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-800-e9b99a942.webp 800w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-1600-e9b99a942.webp 1600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-200-e9b99a942.png 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-400-e9b99a942.png 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-800-e9b99a942.png 800w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-1600-e9b99a942.png 1600w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-cities-800-e9b99a942.png" alt="post image" width="2032" height="1209" />
</picture>

      </center>
<p><br /></p>

<h2 id="drawing-the-route">Drawing the route</h2>
<p>In the previous step we drawn the cities and we have the visual of the problem: the cities.</p>

<p>Now we need to draw the solution: the route represented by the best chromosome of each generation.</p>

<p>One of the simplest ways to draw some lines in Unity3D is using the LineRenderer component.</p>

<p>Add the following code to the GAController.cs:
<script src="https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=GAController.change4.cs"> </script></p>

<p>Create the method DrawRoute:
<script src="https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=GAController.change5.cs"> </script></p>

<p>Then call it from Update method:
<script src="https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=GAController.change6.cs"> </script></p>

<p>Before run the scene, we need to add a LineRenderer component to our GAController game object.</p>

<blockquote>
  <p>Change the width property of the LineRenderer from 1 to 0.1.</p>
</blockquote>

<p>Run the scene again, now you should see the route been optimizing as the generations are ran:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-200-4154f5d73.webp 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-400-4154f5d73.webp 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-800-4154f5d73.webp 800w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-1600-4154f5d73.webp 1600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-200-4154f5d73.png 200w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-400-4154f5d73.png 400w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-800-4154f5d73.png 800w, /assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-1600-4154f5d73.png 1600w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/draw-route-800-4154f5d73.png" alt="post image" width="2032" height="1209" />
</picture>

      </center>
<p><br /></p>

<h2 id="changing-the-cities-positions">Changing the cities positions</h2>
<p>Our sample could be considered done, but would it be nice if we you could change the cities positions while the genetic algorithm are running and see how it manages these cities positions changes.</p>

<h3 id="citycontroller">CityController</h3>
<p>Create a C# script called “CityController.cs”: <script src="https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=CityController.cs"> </script>
I won’t getting in details about how this is script works, but it’s allow the user to drag the cities’ pin using the mouse or the finger touch if build it to mobile.</p>

<p>Add the CityController.cs to the CityPrefab.</p>

<p>Change the GAController.cs script adding the line below to the end of the for loop of DrawCities method:
<script src="https://gist.github.com/94721a46d33c6bcb1f3ae11117b7f888.js?file=GAController.change7.cs"> </script></p>

<p>Finally, our sample is really done and you should be capable to change the cities positions, by dragging the pins around, and genetic algorithm will try to figure out the best route in real time.</p>

<center>                
        <img class="screenshot" src="/assets/2018/05/16/tsp-with-GeneticSharp-and-Unity3d/tsp-sample.gif " alt="post image" />
      </center>
<p><br /></p>

<h2 id="conclusion">Conclusion</h2>
<p>With only 5 C# scripts and 1 prefab we built a pretty nice sample of genetic algorithms using in Unity3D with GeneticSharp. Now you can improve it with your own ideas or use some of mine ;):</p>

<ul>
  <li>How about make it 3D and using a Vector3 instead of Vector2 on City.Position?</li>
  <li>Maybe let user change the number of cities or change the genetic algorithm operators?</li>
  <li>Move the DrawCities and DrawRoutes methods to a script responsible to only draw the GA.</li>
</ul>

<p>The full source code used in this post can be download or fork from this Gist: <a href="https://gist.github.com/giacomelli/94721a46d33c6bcb1f3ae11117b7f888">https://gist.github.com/giacomelli/94721a46d33c6bcb1f3ae11117b7f888</a></p>

<p>Let’s evolve!</p>

<div>Icons made by <a href="http://www.freepik.com" title="Freepik">Freepik</a> from <a href="http://www.flaticon.com" title="Flaticon">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0" target="_blank">CC 3.0 BY</a></div>]]></content><author><name></name></author><category term="Tutorial" /><category term="geneticsharp" /><category term="unity3d" /><category term="tsp" /><category term="dotnet" /><summary type="html"><![CDATA[In this post I will show how to use GeneticSharp and Unity3D to solve the TSP (Travelling salesman problem). Introduction]]></summary></entry><entry><title type="html">GeneticSharp v2.0.0 - .NET Core</title><link href="http://diegogiacomelli.com.br/GeneticSharp-v2.0.0-dotnet-core/" rel="alternate" type="text/html" title="GeneticSharp v2.0.0 - .NET Core" /><published>2018-05-12T00:00:00-03:00</published><updated>2018-05-12T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/GeneticSharp-v2.0.0-dotnet-core</id><content type="html" xml:base="http://diegogiacomelli.com.br/GeneticSharp-v2.0.0-dotnet-core/"><![CDATA[<p>The <strong><a href="https://github.com/giacomelli/GeneticSharp/releases/tag/v2.0.0">GeneticSharp v2.0.0</a></strong> is out with support to .NET Standard 2.0 and .NET Framework 4.6.2.</p>

<h2 id="introduction">Introduction</h2>

<p>In march GenetichSharp start to support .NET Standard 2.0 in the 2.0.0-rc version. Two months have pass and in the meanwhile the community have time to test that release candidate version and now Unity3D has an official .NET Standard 2.0 profile.</p>

<p>So, it’s time to release the GeneticSharp v2.0.0.</p>

<h2 id="installing">Installing</h2>
<p>Only GeneticSharp:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>install-package GeneticSharp
</code></pre></div></div>

<p>GeneticSharp and extensions (TSP, AutoConfig, Bitmap equality, Equality equation, Equation solver, Function builder, etc):</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>install-package GeneticSharp.Extensions
</code></pre></div></div>

<p>If you’re still in a .NET Framework version lower than 4.6.2 project use the <a href="https://www.nuget.org/packages/GeneticSharp/1.2.0">1.2.0 version</a>.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>install-package GeneticSharp <span class="nt">-Version</span> 1.2.0
</code></pre></div></div>

<h2 id="breaking-changes">Breaking changes</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/breaking-changes-128-473f11369.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/breaking-changes-128-473f11369.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/breaking-changes-128-473f11369.png" alt="post image" width="128" height="128" />
</picture>

<blockquote>
  <p>I’ve already talk about these breaking changes on the post about the release candidate version, but I guess is good to point them again:</p>
</blockquote>

<ul>
  <li>The GeneticSharp NuGet package was split into two packages:
    <ul>
      <li>GeneticSharp: only GeneticSharp.Domain.dll and GeneticSharp.Infrastructure.Framework.dll</li>
      <li>GeneticSharp.Extensions: depends on GenetiSharp.Package and add the GeneticSharp.Extensions.dll.</li>
    </ul>
  </li>
  <li>SmartThreadPoolTaskExecutor does not exists anymore. You should use ParallelTaskExecutor class (not disposable).</li>
  <li>The projects are not signed anymore:
    <ul>
      <li><a href="https://github.com/dotnet/cli/issues/6911#issuecomment-309647478">Error signing output with public key from file ‘x.snk’ – Assembly signing not supported</a></li>
    </ul>
  </li>
  <li>In the ConsoleApp the EquationSolverSampleController was removed until the <a href="https://github.com/pieterderycke/Jace">Jace</a> library suportt .NET Core.</li>
</ul>

<p>Let’s evolve!</p>

<div>Icons made by <a href="http://www.freepik.com" title="Freepik">Freepik</a> from <a href="http://www.flaticon.com" title="Flaticon">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0" target="_blank">CC 3.0 BY</a></div>]]></content><author><name></name></author><category term="News" /><category term="geneticsharp" /><category term="dotnet" /><category term="release" /><summary type="html"><![CDATA[The GeneticSharp v2.0.0 is out with support to .NET Standard 2.0 and .NET Framework 4.6.2. Introduction]]></summary></entry><entry><title type="html">DocsByReflection v1.0.13 - .NET Standard 2.0</title><link href="http://diegogiacomelli.com.br/DocsByRelection-v1.0.13-netstandard2.0/" rel="alternate" type="text/html" title="DocsByReflection v1.0.13 - .NET Standard 2.0" /><published>2018-04-05T00:00:00-03:00</published><updated>2018-04-05T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/DocsByRelection-v1.0.13-netstandard2.0</id><content type="html" xml:base="http://diegogiacomelli.com.br/DocsByRelection-v1.0.13-netstandard2.0/"><![CDATA[<p>The <strong><a href="https://github.com/giacomelli/DocsByReflection/releases/tag/v1.0.13">DocsByReflection v1.0.13</a></strong> is out.</p>

<blockquote>
  <p>If you don’t know what is DocsByReflection or what you can do with it, take a look in my previous post about it “<a href="/getting-your-code-documentation-at-runtime/">Getting your code documentation at runtime</a>”.</p>
</blockquote>

<h2 id="net-standard-20-and-net-framework-46">.NET Standard 2.0 and .NET Framework 4.6</h2>
<p>In this version <a href="https://github.com/giacomelli/DocsByReflection">DocsByReflection</a> starts to support .NET Standard 2.0.</p>

<p>Now, if you need to use the library on .NET Standard 2.0 or .NET Framework 4.6 projects:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>install-package DocsByReflection.
</code></pre></div></div>

<h2 id="net-framework">.NET Framework</h2>
<p>If you are in a .NET Framework project lower than .NET Framework 4.6 you can use the previous version:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>install-package DocsByReflection <span class="nt">-Version</span> 1.0.12.20
</code></pre></div></div>

<h2 id="thanks-to">Thanks to</h2>
<p>I would like to thanks <a href="https://github.com/onionhammer">Erik O’Leary</a> to perform the whole migration of DocsByReflection to .NET Standard 2.0.</p>]]></content><author><name></name></author><category term="News" /><category term="DocsByReflection" /><category term="dotnet" /><category term="release" /><summary type="html"><![CDATA[The DocsByReflection v1.0.13 is out.]]></summary></entry><entry><title type="html">Porting GeneticSharp to .NET Core</title><link href="http://diegogiacomelli.com.br/porting-GeneticSharp-to-dotnet-core/" rel="alternate" type="text/html" title="Porting GeneticSharp to .NET Core" /><published>2018-03-28T00:00:00-03:00</published><updated>2018-03-28T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/porting-GeneticSharp-to-dotnet-core</id><content type="html" xml:base="http://diegogiacomelli.com.br/porting-GeneticSharp-to-dotnet-core/"><![CDATA[<p>The <strong><a href="https://github.com/giacomelli/GeneticSharp/releases/tag/v2.0.0-rc1">GeneticSharp v2.0.0-rc1</a></strong> is out.</p>

<p>In this version GeneticSharp starts to support .NET Standard 2.0 and .NET Framework 4.6.2.</p>

<p>Porting 
to <img class="icon" src="/assets/logos/netcore.svg " alt="post image" /></p>

<h2 id="introduction">Introduction</h2>

<p><a href="https://twitter.com/ogiacomelli/status/958114986601172992">Sometime ago I started to porting GeneticSharp to .NET Core</a> and today, after more than 40 hours of work, I finally finish it.</p>

<p>Although GeneticSharp born as a multi-platform library that ran in any OS supported by .NET Framework and Mono, convert it to .NET Core was a desired thing, because .NET Core is where .NET ecosystem is targeting.</p>

<h2 id="release-candidate">Release candidate</h2>
<p>This 2.0.0-rc1 was already published to nuget.org, but it’s marked as a pre-realease package. I will kept it as a RC until get sure that there is no issue with the porting and until the Unity3d remove the “experimental” status to its support to .NET Standard 2.0.</p>

<p>If you are in .NET Core or in .NET Framework 4.6.2+ project, please try the the <a href="https://www.nuget.org/packages/GeneticSharp/2.0.0-rc1">2.0.0-rc1</a> version.</p>

<p>Only GeneticSharp:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>install-package GeneticSharp <span class="nt">-Version</span> 2.0.0-rc1
</code></pre></div></div>

<p>GeneticSharp and extensions (TSP, AutoConfig, Bitmap equality, Equality equation, Equation solver, Function builder, etc):</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>install-package GeneticSharp.Extensions <span class="nt">-Version</span> 2.0.0-rc1
</code></pre></div></div>

<p>If you’re still in a .NET Framework version lower than 4.6.2 project use the <a href="https://www.nuget.org/packages/GeneticSharp/1.2.0">1.2.0 version</a>.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>install-package GeneticSharp <span class="nt">-Version</span> 1.2.0
</code></pre></div></div>

<h2 id="porting">Porting</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/porting-128-43430b71d.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/porting-128-43430b71d.png 128w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/porting-128-43430b71d.png" alt="post image" width="128" height="128" />
</picture>

      </center>
<p><br /></p>

<h3 id="warmup">Warmup</h3>

<p>To start the porting I followed the good pratices describe on links below:</p>

<ul>
  <li><a href="https://docs.microsoft.com/en-us/dotnet/core/porting/libraries">Porting to .NET Core - Libraries</a></li>
  <li><a href="https://docs.microsoft.com/en-us/dotnet/core/porting/index">Porting to .NET Core from .NET Framework</a></li>
</ul>

<p>Based on those reads, I decided to support the .NET Standard 2.0 (netstandard2.0) and the .NET Framework 4.6.2 (net462). This meaning that GeneticSharp can be used in .NET Standard and .NET Framework projects, with no differences.</p>

<p>Another thing that I considered was the Unity3d support, so based on this post <a href="https://blogs.unity3d.com/pt/2018/01/10/get-early-access-to-unity-2018-1-the-beta-is-out/">Unity 2018.1 - .NET Standard 2.0 and .NET 4.6 support</a> Unity is already using a experimental support to netstandard2.0 and net462 libraries.</p>

<h3 id="domain">Domain</h3>
<p>The domain part of the library, the GeneticSharp.Domain library was the easy part to port, if I cleary remember there was no change it all, besides the changes on .csproj.</p>

<h3 id="extensions">Extensions</h3>
<p>The extensions from GeneticSharp.Extensions project needed some more work, because the System.Drawing do not exists directly in .NET Standard 2.0. That was resolved using the <a href="https://www.nuget.org/packages/System.Drawing.Common/">System.Drawing.Common</a> NuGet package.</p>

<p>The NCalc library used on FunctionBuilderFitness was updated to use the <a href="https://www.nuget.org/packages/NCalc.NetCore/">NCalc.NetCore</a> version.</p>

<h3 id="threading">Threading</h3>
<p>One of the most tricky porting was the GeneticSharp.Infrastructure.Threading, because it used the external library <a href="https://github.com/amibar/SmartThreadPool">SmartThreadPool</a> and that one was not supporting .NET Core at that time. I decided to implement the parallel task executor using the .NET built-in ThreadPool class, this implementation was done on <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Infrastructure.Framework/Threading/ParallelTaskExecutor.cs">ParallelTaskExecutor</a> and its use can be tested on  <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Infrastructure.Framework.UnitTests/Threading/ParallelTaskExecutorTest.cs">ParallelTaskExecutorTest</a>.</p>

<h3 id="gtkapp">GtkApp</h3>
<p>GeneticSharp sample app (GeneticSharp.Runner.GtkApp) was built using Gtk# 2, but only version 3 was ported to .NET Core, and there are huge breaking changes between these two Gtk# versions, so for a while I’ll keeping the sample app still running only on .NET Framework/Mono.</p>

<p>I hope in a near future we can built a cross-platform sample app, maybe using Xamarin Forms for iOS, Android, macOS and UWP. This would be great, but perform this task during the to .NET Core supporting is far from the scope right now.</p>

<p>The links below are some readings that I did while looking for some GTK# alternatives:</p>

<ul>
  <li><a href="https://blog.xamarin.com/building-xamarin-forms-apps-net-standard/">Building Xamarin.Forms Apps with .NET </a></li>
  <li><a href="https://blog.xamarin.com/preview-bringing-macos-to-xamarin-forms/">Preview: Bringing macOS to Xamarin.Forms</a></li>
  <li><a href="https://docs.microsoft.com/en-us/xamarin/mac/get-started/hello-mac">Xamarin.Mac - Hello, Mac</a></li>
</ul>

<h3 id="unit-tests">Unit tests</h3>
<p>Unit tests projects were using the <a href="https://github.com/ayende/rhino-mocks">Rhino Mocks</a> as the mocking library, but Rhino Mocks was not supporting (maybe never) .NET Core, so it was replaced by the amazing <a href="http://nsubstitute.github.io/">NSubstitute</a>.</p>

<h4 id="code-coverage">Code Coverage</h4>
<p>As the time I wrote this, there was no unanimity about what is the best cross-platform tool to collect code-coverage in .NET Core.
There are some tools, but each one has some pros and cons:</p>

<ul>
  <li>VS 2017 Code Coverage
Can be easily used on Windows platform directly on VS 2017 or in command line:
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dotnet <span class="nb">test</span> <span class="nt">--collect</span>:<span class="s2">"Code Coverage"</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p><a href="https://github.com/SteveGilham/altcover">altcover</a>
Instrumenting coverage tool for .net/.net core and Mono, emitting NCover or OpenCover format output.</p>
  </li>
  <li>
    <p><a href="https://github.com/lucaslorentz/minicover">MiniCover</a>
Minimalist Code Coverage Tool for .NET Core.</p>
  </li>
  <li><a href="https://github.com/tonerdo/coverlet">coverlet</a>
Cross platform code coverage library for .NET Core.</li>
</ul>

<p>I guess the most promising tool is the coverlet, but I’ll waiting until the end of GeneticSharp 2.0.0 release candidate period to choose one.</p>

<h3 id="problems-readings-tricks-and-hacks">Problems, readings, tricks and hacks</h3>
<p>Of course that a porting always come with some problems that will you need to figure out by doing some research and solve them, most of time, using some trick and hacks. These one was some of I’ve done:</p>

<h4 id="net-sdk-20-projects-targeting-net-4x-on-mono">.NET SDK 2.0 projects targeting .NET 4.x on Mono</h4>
<p>As GeneticSharp need to support .NET Framework 4.6.2, but the msbuild does not know where to looking for the framework assemblies in macOS and Linux, so I found thi .NET SDK issue comment <a href="https://github.com/dotnet/sdk/issues/335#issuecomment-368669050">issue comment</a>:</p>
<blockquote>
  <p>When compiling .NET SDK 2.0 projects targeting .NET 4.x on Mono using ‘dotnet build’ you have to teach MSBuild where the Mono copy of the reference asssemblies is.</p>
</blockquote>

<p>This msbuild file <a href="src/msbuilds/GeneticSharp.dotnet-core.targets">GeneticSharp.dotnet-core.targets</a> was created and referenced in all .csproj.</p>

<h4 id="dotnet-test-failed-to-initialize-client-proxy">dotnet test “Failed to initialize client proxy”</h4>
<p>Sometimes dotnet test gives the error:</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Starting <span class="nb">test </span>execution, please wait...
Failed to initialize client proxy: could not connect to <span class="nb">test </span>process.

Test Run Aborted
</code></pre></div></div>
<p>Delete the “obj” and “bin” folders from unit test project will “fix” the problem.</p>

<h2 id="breaking-changes">Breaking changes</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/breaking-changes-128-473f11369.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/breaking-changes-128-473f11369.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/breaking-changes-128-473f11369.png" alt="post image" width="128" height="128" />
</picture>

<ul>
  <li>The GeneticSharp NuGet package was split into two packages:
    <ul>
      <li>GeneticSharp: only GeneticSharp.Domain.dll and GeneticSharp.Infrastructure.Framework.dll</li>
      <li>GeneticSharp.Extensions: depends on GenetiSharp.Package and add the GeneticSharp.Extensions.dll.</li>
    </ul>
  </li>
  <li>SmartThreadPoolTaskExecutor does not exists anymore. You should use ParallelTaskExecutor class (not disposable).</li>
  <li>The projects are not signed anymore:
    <ul>
      <li><a href="https://github.com/dotnet/cli/issues/6911#issuecomment-309647478">Error signing output with public key from file ‘x.snk’ – Assembly signing not supported</a></li>
    </ul>
  </li>
  <li>In the ConsoleApp the EquationSolverSampleController was removed until the <a href="https://github.com/pieterderycke/Jace">Jace</a> library suportt .NET Core.</li>
</ul>

<h2 id="reads-during-the-porting">Reads during the porting</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png" alt="post image" width="128" height="128" />
</picture>

<p>Some readings I did during the whole process, maybe can be useful to someone porting a library to .NET Core too.</p>

<ul>
  <li><a href="https://github.com/amibar/SmartThreadPool/pull/17">SmartThreadPool - Adding support to .NET Core 2.0</a></li>
  <li><a href="https://stackoverflow.com/a/43605256/956886">How to set <code class="language-plaintext highlighter-rouge">OutputPath</code> attribute in Visual Studio 2017 project ( new .csproj file format ) without target framework cluttering the resolved path?</a></li>
  <li><a href="https://stackoverflow.com/a/42787747/956886">How do you multi-target a .NET Core class library with csproj?</a></li>
  <li><a href="https://www.natemcmaster.com/blog/2017/03/09/vs2015-to-vs2017-upgrade/">Old csproj to new csproj: Visual Studio 2017 upgrade guide</a></li>
  <li><a href="https://wrightfully.com/guide-to-nsubstitute-for-rhino-mocks-users">A Guide to NSubstitute for Rhino.Mocks Users</a></li>
  <li><a href="https://github.com/dotnet/cli/issues/4710">Duplicate ‘System.Reflection.AssemblyCompanyAttribute’ attribute</a></li>
  <li><a href="https://github.com/nunit/dotnet-test-nunit/issues/122">NUnit - Support .NET Core 2.0</a></li>
  <li><a href="https://weblog.west-wind.com/posts/2017/Jun/22/MultiTargeting-and-Porting-a-NET-Library-to-NET-Core-20">Multi-Targeting and Porting a .NET Library to .NET Core 2.0</a></li>
  <li><a href="https://docs.microsoft.com/en-us/dotnet/core/porting/project-structure">Organizing your project to support .NET Framework and .NET Core</a></li>
  <li><a href="https://github.com/dotnet/standard/issues/443">System.Drawing.Bitmap class is claimed to be present in netcoreapp2.0</a></li>
  <li><a href="https://blogs.msdn.microsoft.com/dotnet/2017/01/19/net-core-image-processing/">.NET Core Image Processing</a></li>
  <li><a href="https://github.com/Microsoft/vstest/issues/981">Add support for dotnet test –collect:”Code Coverage”</a></li>
  <li><a href="https://docs.microsoft.com/en-us/nuget/create-packages/prerelease-packages">Building pre-release packages</a></li>
  <li><a href="https://github.com/NuGet/Home/issues/6636">dotnet pack with nuspec file does not set PackageVersion from csproj</a></li>
  <li><a href="https://github.com/NuGet/Home/issues/5655">Invalid warning “Assembly outside lib folder.” in dotnet pack</a></li>
  <li><a href="https://github.com/NuGet/Home/issues/3891#issuecomment-375501212">Feature : Allow project reference DLLs to be added to the parent nupkg for pack target like IncludeReferencedProjects in nuget.exe</a></li>
  <li><a href="https://github.com/dotnet/cli/issues/5504">https://github.com/dotnet/cli/issues/5504</a></li>
</ul>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-200-e18b9b55c.webp 200w, /assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-400-e18b9b55c.webp 400w, /assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-800-e18b9b55c.webp 800w, /assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-1600-e18b9b55c.webp 1600w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-200-e18b9b55c.png 200w, /assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-400-e18b9b55c.png 400w, /assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-800-e18b9b55c.png 800w, /assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-1600-e18b9b55c.png 1600w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2018/03/28/porting-GeneticSharp-to-dotnet-core/GeneticSharp-dotnet-build-800-e18b9b55c.png" alt="post image" width="1992" height="632" />
</picture>

      </center>
<p><br /></p>

<p>Now I’m planning to create a GeneticSharp’s sample using Unity3d’s new beta features, like the new ECS (Entity Component System), C# Job System and the Burst compiler.</p>

<p>Let’s evolve!</p>

<div>Icons made by <a href="http://www.freepik.com" title="Freepik">Freepik</a> from <a href="http://www.flaticon.com" title="Flaticon">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0" target="_blank">CC 3.0 BY</a></div>]]></content><author><name></name></author><category term="Article" /><category term="geneticsharp" /><category term="dotnet" /><category term="release" /><summary type="html"><![CDATA[The GeneticSharp v2.0.0-rc1 is out.]]></summary></entry><entry><title type="html">GeneticSharp v1.2.0 - Sequence mutations</title><link href="http://diegogiacomelli.com.br/GeneticSharp-v1.2.0-sequence-mutations/" rel="alternate" type="text/html" title="GeneticSharp v1.2.0 - Sequence mutations" /><published>2018-01-26T00:00:00-02:00</published><updated>2018-01-26T00:00:00-02:00</updated><id>http://diegogiacomelli.com.br/GeneticSharp-v1.2.0-sequence-mutations</id><content type="html" xml:base="http://diegogiacomelli.com.br/GeneticSharp-v1.2.0-sequence-mutations/"><![CDATA[<p>The <strong><a href="https://github.com/giacomelli/GeneticSharp">GeneticSharp v1.2.0</a></strong> is out.</p>

<p>The additions of this version are the new sequence mutation operators: Displacement, InsertionMutation and Partial Shuffle (PSM).</p>

<p><strong>Displacement Mutation</strong>: a substring is randomly selected from chromosome, is removed, then replaced at a randomly selected position.</p>

<p><strong>Insertion Mutation</strong>: a gene is randomly selected from chromosome, is removed, then replaced at a randomly selected position.</p>

<p><strong>Partial Shuffle Mutation (PSM)</strong>: we take a sequence S limited by two positions i and j randomly chosen. The gene order in this sequence will be shuffled. Sequence will be shuffled until it becomes different than the starting order.</p>

<p>I would like to thanks to Ahmet Can Saner (<a href="https://github.com/cansaner">@cansaner</a>) for contribute with those great new mutations that him developed during his master degree.</p>

<p>If you want to use the new mutations in your project, just get the new GeneticSharp version from Nuget.</p>

<p>Let’s evolve!</p>

<div>Icons made by <a href="http://www.freepik.com" title="Freepik">Freepik</a> from <a href="http://www.flaticon.com" title="Flaticon">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0" target="_blank">CC 3.0 BY</a></div>]]></content><author><name></name></author><category term="News" /><category term="geneticsharp" /><category term="dotnet" /><category term="release" /><summary type="html"><![CDATA[The GeneticSharp v1.2.0 is out. The additions of this version are the new sequence mutation operators: Displacement, InsertionMutation and Partial Shuffle (PSM).]]></summary></entry><entry><title type="html">Unity3D ScenePreview inspector</title><link href="http://diegogiacomelli.com.br/unity3d-scenepreview-inspector/" rel="alternate" type="text/html" title="Unity3D ScenePreview inspector" /><published>2017-11-26T00:00:00-02:00</published><updated>2017-11-26T00:00:00-02:00</updated><id>http://diegogiacomelli.com.br/unity3d-scenepreview-inspector</id><content type="html" xml:base="http://diegogiacomelli.com.br/unity3d-scenepreview-inspector/"><![CDATA[<p>I’m working in a new game prototype and in this process I was creating some experimental levels to test the mechanics, but by the name of scene I was having dificult to remember which mechanic the level was about and I had to open each level to discover that one was looking for, so I thought: it will be cool have an image preview of the scene when we select the file in hierarchy.</p>

<h2 id="introduction">Introduction</h2>
<p>I google and didn’t find any project or asset in Asset Store that already did something like this (please, let me know if you know a similar tool) and, well, I prefer code something, than google something, then I coded a little inspector, that I named as ScenePreview:</p>

<div class="note"><p>UPDATED: I created a new Scene Preview solution, now using its own window editor: <a href="/unitytips-scene-preview-window/">Scene Preview Window</a>.</p>
</div>

<center>                
        <img class="screenshot" src="/assets/2017/11/26/unity3d-scenepreview-inspector/ScenePreview.gif " alt="post image" />
      </center>
<p><br /></p>

<h2 id="setup">Setup</h2>
<p>Just download the gist bellow to your Unity3D project and add it inside a “Editor” folder.</p>

<script src="https://gist.github.com/f74a23107fe862ae7501002ac856f932.js?file=ScenePreview.cs"> </script>

<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css" />
<div class="gist" style="margin-top:-17px">
        <div class="gist-file">
          <div class="gist-meta">
            <a href="/unitytips-gist-importer/">You can easily import this gist directly into your Unity 3D project using the <b>Gist Importer</b><img style="float:right;width:48px;" src="/assets/logos/Unity3d.png" alt="Gist Importer" /></a></div>
        </div>
      </div>

<p>After this, open it and edit the line below:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Change this to a folder in your project. </span>
<span class="c1">// Maybe the folder where your scenes are located. Remember to create a subfolder called "Resources" inside of it.</span>
    <span class="k">const</span> <span class="kt">string</span> <span class="n">PreviewFolders</span> <span class="p">=</span> <span class="s">"_scenes"</span><span class="p">;</span>
</code></pre></div></div>

<h2 id="usage">Usage</h2>
<p>If you select any scene in the hierarchy you will see a message like this:</p>

<blockquote>
  <p>“There is no image preview for scene ‘’ at ‘’. Please play the scene on editor and image preview will be captured automatically.”</p>
</blockquote>

<p>So, play the scene on editor and the image preview will be taken, when you select the scene file again you see the preview.</p>

<p>That’s it! I hope this inspector can be useful to you too.</p>]]></content><author><name></name></author><category term="Lab" /><category term="unity3d" /><category term="unitytips" /><category term="custom-editor" /><category term="gamedev" /><category term="open-source" /><summary type="html"><![CDATA[I’m working in a new game prototype and in this process I was creating some experimental levels to test the mechanics, but by the name of scene I was having dificult to remember which mechanic the level was about and I had to open each level to discover that one was looking for, so I thought: it will be cool have an image preview of the scene when we select the file in hierarchy.]]></summary></entry><entry><title type="html">Function optimization with GeneticSharp</title><link href="http://diegogiacomelli.com.br/function-optimization-with-geneticsharp/" rel="alternate" type="text/html" title="Function optimization with GeneticSharp" /><published>2017-06-13T00:00:00-03:00</published><updated>2017-06-13T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/function-optimization-with-geneticsharp</id><content type="html" xml:base="http://diegogiacomelli.com.br/function-optimization-with-geneticsharp/"><![CDATA[<p>In this tutorial we will learn how to use GeneticSharp to optimize the inputs of math function and more about genetic algorithms meanwhile.</p>

<h2 id="introduction">Introduction</h2>
<p>I created <a href="https://github.com/giacomelli/GeneticSharp">GeneticSharp</a> a long time ago because three main reasons:</p>

<ul>
  <li>I needed a fast, extensible, multi-platform and multithreading C# genetic algorithm library to use in my GA experiments;</li>
  <li>I wanted to study and understand GA better;</li>
  <li>and Genetic algorithm are pretty fun to implement and use!</li>
</ul>

<p>As far as I know GeneticSharp has been used in a lot of different projects, since card games deck optimization, self managing distributed file system, context-sensitive code completion, even in airplanes trajectories optimization. These are pretty cool and exciting topics, but this tutorial is not about this advanced topics. Here I want to take a very simple sample and show how easy and fast you can add genetic algorithms on your project using GeneticSharp. So, let’s evolve!</p>

<h2 id="the-problem">The problem</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/problem-128-a3f91d933.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/problem-128-a3f91d933.png 128w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/problem-128-a3f91d933.png" alt="post image" width="128" height="128" />
</picture>

      </center>
<p><br /></p>

<p>In our sample we will optimize the input of a mathematical function, this function will be used as our fitness evaluation function. For this sample we will use a function that everyone saw in school time, the famous <a href="https://en.wikipedia.org/wiki/Euclidean_distance">Euclidean distance</a> or commonly know as distance of two points function:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharp-EuclideanDistanceFunction-200-d144504d3.webp 200w, /assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharp-EuclideanDistanceFunction-320-d144504d3.webp 320w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharp-EuclideanDistanceFunction-200-d144504d3.png 200w, /assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharp-EuclideanDistanceFunction-320-d144504d3.png 320w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharp-EuclideanDistanceFunction-320-d144504d3.png" alt="post image" width="320" height="53" />
</picture>

      </center>
<p><br /></p>

<p>We will consider our chromosome fitness as the result of this function. The higher the result, the better is the chromosome fitness.</p>

<p>Our chromosome will be the Euclidean distance function arguments, the X1, Y1, X2 and Y2.</p>

<h2 id="what-our-genetic-algorithm-is-looking-for">What our genetic algorithm is looking for?</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/telescope-128-e0357d1e6.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/telescope-128-e0357d1e6.png 128w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/telescope-128-e0357d1e6.png" alt="post image" width="128" height="128" />
</picture>

      </center>
<p><br /></p>

<p>The goal of our genetic algortim is <strong>find the input values of Euclidean distance function: X1, Y1 and X2, Y2 that result in the greatest distance in a rectangular area</strong>.</p>

<p>What? You can think: <em>“this is a stupid goal”</em>, because everyone knows that the longest distance between two points in a rectangular area are their diagonals. Yeah, you are right, but this is one of the best things about genetic algorithm, our GA code does not know anything about this, it just know that some X1, Y1 and X2, Y2 inputs generate a fitness value and greatest fitness are better. The other justification to use this so simple GA objective is that everyone can understand what is happening and we can focus to learn genetic algorithm.</p>

<blockquote>
  <p>We can easly create a brute force solution with four nested loops that will find the solution of our problem, but as I mencioned before this ‘problem’ is just for the tutorial purpose, because in normal applications genetic algoritm find solutions to problems that the solution is not so obvious or in some cases the solutions are even unknow.</p>
</blockquote>

<h2 id="creating-the-project">Creating the project</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/project-128-4f597ed4f.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/project-128-4f597ed4f.png 128w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/project-128-4f597ed4f.png" alt="post image" width="128" height="128" />
</picture>

      </center>
<p><br /></p>

<p>Open your IDE (Visual Studio/Xamarin Studio) and create a new console project.</p>

<p>Install the GeneticSharp package:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>install-package GeneticSharp
</code></pre></div></div>

<h2 id="using-geneticsharp">Using GeneticSharp</h2>

<p>GeneticSharp implements all the classic components of a genetic algorithm, like gene, chromosome, population, fitness, selection, crossover, mutation, reinsetion and termination. When you use it to build your genetic algorithm code you just need to implement a few things, mostly you will need to code just your solution’s chromosome and fitness.</p>

<h2 id="creating-an-euclidean-distance-chromosome">Creating an Euclidean distance chromosome</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/chromosome-128-8b4102796.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/chromosome-128-8b4102796.png 128w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/chromosome-128-8b4102796.png" alt="post image" width="128" height="128" />
</picture>

      </center>
<p><br /></p>

<p>Chromosome is the representation of a possible solution in genetic algoritms.</p>

<p>In GeneticSharp a chromosome needs to implement the <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Chromosomes/IChromosome.cs">IChromosome</a> interface, but in most of cases you just need to inherit the <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Chromosomes/ChromosomeBase.cs">ChromosomeBase</a> class and override the methods GenerateGene and CreateNew.</p>

<p>Besides IChromosome and ChromosomeBase also exist the classes: <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Chromosomes/BinaryChromosomeBase.cs">BinaryChromosomeBase</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Chromosomes/FloatingPointChromosome.cs">FloatingPointChromosome</a> and <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Chromosomes/IntegerChromosome.cs">IntegerChromosome</a> that are chromosome classes that can be directly used when your solution chromosome can be represented as numbers or a string representation of 0 and 1.</p>

<p>In our case we need to create a chromosome that represent the input variables of the Euclidean distance function: X1, Y1 and X2, Y2.</p>

<p>The FloatingPointChromosome is a perfect fit for this kind of representation, because it allows represent more than one number inside of it.</p>

<p>Open the Program.cs file and inside the Main function enter the code below:</p>

<script src="https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=CreatingAnEuclideanDistanceChromsome.cs"> </script>

<p>In the code above we create two variables to represent our rectangle area size: maxWidth and maxHeight, then we created a new instance of FloatingPointChromome, this will be the template to all chromsome in our solution.</p>

<p>The constructor receive four arrays, they are:</p>

<p>1) The minimum values of numbers inside the chromosome. Our rectangle area will start at 0 points, so the min value of X1, Y1, X2 and Y2 are 0 (zero).</p>

<p>2) The maximum values. We use our previous created variables.</p>

<p>3) The total bits used to represent each number. The maximum value is 998, so 10 bits is what we need.</p>

<blockquote>
  <p>GeneticSharp will warn you if you try to use a total bits that cannot hold a number inside your floating point chromosome.</p>
</blockquote>

<p>4) The number of fraction (scale or decimal) part of the number. In our case we will not use any.</p>

<h2 id="creating-the-population">Creating the population</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/population-128-3f5c6fbb1.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/population-128-3f5c6fbb1.png 128w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/population-128-3f5c6fbb1.png" alt="post image" width="128" height="128" />
</picture>

      </center>
<p><br /></p>

<p>The population represents the possible solutions to our problem, so we need to create a population of our Euclidean distance chromosome.</p>

<p>In GeneticSharp a population is represented by the <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Populations/IPopulation.cs">IPopulation</a> interface, but in most cases you can directly use the <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Populations/Population.cs">Population</a> class.</p>

<script src="https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=CreatingThePopulation.cs"> </script>

<p>We created a population that will have a minimum number of 50 chromosomes and a maximum number of 100 and used our chromosome template as the “Adam chromosome” (yeah, you get the reference) of our GA.</p>

<h2 id="creating-the-fitness-function">Creating the fitness function</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/score-128-702a2b758.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/score-128-702a2b758.png 128w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/score-128-702a2b758.png" alt="post image" width="128" height="128" />
</picture>

      </center>
<p><br /></p>

<p>The fitness function is where the genetic algoritm will evaluate and give a value (fitness) to each chromosome generated inside it. A good fitness function can guide your GA to a fast and optimum solution.</p>

<p>In GeneticSharp we represent a fitness function through the <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Fitnesses/IFitness.cs">IFitness</a> interface. Almost always you wil have to code a class that implement this interface, but for our tutorial we can use the simple and lower friction class <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Fitnesses/FuncFitness.cs">FuncFitness</a>. This class allow us to build our fitness evalution as its constructor argument.</p>

<script src="https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=CreatingTheFitnessFunction.cs"> </script>

<p>We receive a IChromosome in the variable “c”, then we cast it to FloatingPointChromosme.</p>

<p>To allow us to evaluate the chromosome we need to convert it from its genotype (FloatingPointChromosome) to its phenotype (x1, y1 and x2, y2), we do this calling the ToFloatingPoints method. This method return an array of numbers using that configuration we used when we created our Euclidean distance chromosome. Now we have our X1, Y1 and X2 and Y2 numbers we just need to pass it to the Euclidean distance function and return the value as the fitness value of the current chromosome.</p>

<h2 id="creating-the-selection">Creating the selection</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/podium-128-f9f44969b.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/podium-128-f9f44969b.png 128w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/podium-128-f9f44969b.png" alt="post image" width="128" height="128" />
</picture>

      </center>
<p><br /></p>

<p>A selection is the genetic algorithm operator responsible for decing which chromosomes of current population will be selected as parent of the next population.</p>

<p>You can code your our selection through the <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Selections/ISelection.cs">ISelection</a> interface or extending the <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Selections/SelectionBase.cs">SelectionBase</a> class.</p>

<p>Besides this, you can use the already implemented classic selections: <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Selections/EliteSelection.cs">Elite</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Selections/RouletteWheelSelection.cs">Roulete Wheel</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Selections/StochasticUniversalSamplingSelection.cs">Stochastic Universal Sampling</a> and <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Selections/TournamentSelection.cs">Tournament</a>.</p>

<script src="https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=CreatingTheSelection.cs"> </script>

<p>Elite selection is a good option, because it will select the chromosomes with the best fitness (greatest distance). You can try the others selection options too and see how they change the GA speed and results.</p>

<h2 id="creating-the-crossover">Creating the crossover</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/cross-128-ffae692c2.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/cross-128-ffae692c2.png 128w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/cross-128-ffae692c2.png" alt="post image" width="128" height="128" />
</picture>

      </center>
<p><br /></p>

<p>The chromosomes selected by the selection need to cross to generate new possible solutions of the next generation of the GA. The crossover operator is responsible for crossing these selected chromosomes.</p>

<p>There are the <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/ICrossover.cs">ICrossover</a> interface and <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/CrossoverBase.cs">CrossoverBase</a> class if you want to code your crossover from scratch or you can use one of already available: <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/CutAndSpliceCrossover.cs">Cut and Splice</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/CycleCrossover.cs">Cycle (CX)</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/OnePointCrossover.cs">One-Point (C1)</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/OrderBasedCrossover.cs">Order-based (OX2)</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/OrderedCrossover.cs">Ordered (OX1)</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/PartiallyMappedCrossover.cs">Partially Mapped (PMX)</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/PositionBasedCrossover.cs">Position-based (POS)</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/ThreeParentCrossover.cs">Three parent</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/TwoPointCrossover.cs">Two-Point (C2)</a> and <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Crossovers/UniformCrossover.cs">Uniform</a></p>

<blockquote>
  <p>Some of those classics crossovers, like OX1 and OX2, cannot be used in our tutorial because they need chromosomes with ordered genes and this is not the case of our chromosomes with 0101001100 genes. Do not worry, because GeneticSharp will warn you if you try to use an invalid chromosome in an ordered crossover</p>
</blockquote>

<script src="https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=CreatingTheCrossover.cs"> </script>

<p>Uniform Crossover enables the parent chromosomes to contribute the gene level rather than the segment level, for example: if the mix probability is 0.5, the offspring has approximately half of the genes from first parent and the other half from second parent.</p>

<p>So, in our case Uniform crossover is a very good option, because using the 0.5f mix probability it will generate new chromosomes that are combination of X1, Y1 from one parent and X2, Y2 from another parent.</p>

<h2 id="creating-the-mutation">Creating the mutation</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/mutation-128-a489f3853.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/mutation-128-a489f3853.png 128w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/mutation-128-a489f3853.png" alt="post image" width="128" height="128" />
</picture>

      </center>
<p><br /></p>

<p>The biology definition of mutations is: 
<em>“In genetics, mutation may be small scale (affecting a gene) or large scale (involving a change in the chromosome). It may arise from faulty deletions, insertions, or exchanges of the genetic material. Such a change may result in the creation of a new character or trait.”</em></p>

<p>This biological process is one of the process responsible for I am able to write this tutorial and you be able read it. Without mutation, our species might have been found an local optima and perhaps we would never have evolved into what we are now.</p>

<p>The mutation operator has the same purpose in genetic algorithm, it avoid that our GA get stuck in optima local and end up never finding a better solution.</p>

<p>Like the other operators, you can create your own mutation implementing the <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Mutations/src/GeneticSharp.Domain/Mutations/IMutation.cs">IMutation</a> interface or extending <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Mutations/src/GeneticSharp.Domain/Mutations/MutationBase.cs">MutationBase</a> or use some from the GeneticSharp menu: <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Mutations/src/GeneticSharp.Domain/Mutations/FlipBitMutation.cs">Flip-bit</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Mutations/src/GeneticSharp.Domain/Mutations/ReverseSequenceMutation.cs">Reverse Sequence (RSM)</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Mutations/src/GeneticSharp.Domain/Mutations/TworsMutation.cs">Twors</a> and <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Mutations/src/GeneticSharp.Domain/Mutations/UniformMutation.cs">Uniform</a>.</p>

<script src="https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=CreatingTheMutation.cs"> </script>

<p>Flip-bit mutation is a mutation specific to chromosomes that implement <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Chromosomes/IBinaryChromosome.cs">IBinaryChromosome</a> interface, as our FloatingPointChromosome does. It will randomly chose a gene and flip it bit, so a gene with value 0 will turn to 1 and vice-versa.</p>

<h2 id="creating-the-termination">Creating the termination</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/end-128-2cdd65c40.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/end-128-2cdd65c40.png 128w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/end-128-2cdd65c40.png" alt="post image" width="128" height="128" />
</picture>

      </center>
<p><br /></p>

<p>A termination decide when a GA should be stopped. GeneticSharp use the generation number termination with just one generation as default termination. This mean that the genetic algoritm will run just one generation when you call the Start method, after this you can increment the expected generation number of the termination and call the method Resume how many times you want.</p>

<p>There are cases where you want to call the Start method in just wait until some condition be reached, this why termination exist.</p>

<p>If you have some special condition to terminate your GA you can implement the <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Terminations/src/GeneticSharp.Domain/Terminations/ITermination.cs">ITermination</a> interface or extend the <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Terminations/src/GeneticSharp.Domain/Terminations/TerminationBase.cs">TerminationBase</a> class, but for most of cases you just need to use some of the availables terminations: <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Terminations/src/GeneticSharp.Domain/Terminations/GenerationNu">Generation number</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Terminations/src/GeneticSharp.Domain/Terminations/TimeEvolvingTermination.cs">Time evolving</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Terminations/src/GeneticSharp.Domain/Terminations/FitnessStagnationTermination.cs">Fitness stagnation</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Terminations/src/GeneticSharp.Domain/Terminations/FitnessThresholdTermination.cs">Fitness threshold</a>, <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Terminations/src/GeneticSharp.Domain/Terminations/AndTermination.cs">And</a> e <a href="https://github.com/giacomelli/GeneticSharp/blob/master/src/GeneticSharp.Domain/Terminations/src/GeneticSharp.Domain/Terminations/OrTermination.cs">Or</a> (allows combine others terminations).</p>

<script src="https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=CreatingTheTermination.cs"> </script>

<p>In our tutorial we will use the fitness stagnation termination with a expected stagnant generations number of 100, this mean that if our GA generate the same best chromsome fitness in the last 100 generations then it will be terminated.</p>

<h2 id="running-the-ga">Running the GA</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/running-128-bc0b48bec.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/running-128-bc0b48bec.png 128w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/running-128-bc0b48bec.png" alt="post image" width="128" height="128" />
</picture>

      </center>
<p><br /></p>

<p>Now that everything is set up, we just need to instantiate and start our genetic algorithm and watch it run.</p>

<script src="https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=RunningtheGA1.cs"> </script>

<p>So the GA ran, but where is the result? You can always get the best chromosome from the GeneticAlgorithm.BestChromosome property.</p>

<p>Another and better way to monitor the current best chromosome is use the GeneticAlgorithm.GenerationRan event. This event is raised right after a generation finish to run. Using this event you can see in 
realtime how the genetic algorithm is evolving.</p>

<p>Let’s replace our last “ga.Start();” line to the code below:</p>

<script src="https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=RunningtheGA2.cs"> </script>

<p>Now if your run the program you will see an output like that:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Generation  1: (178,330),(974,228) = 802.508566932466
Generation  2: (950,487),(45,520) = 905.601457596
Generation  3: (935,103),(38,617) = 1033.83025686038
Generation  4: (998,680),(49,65) = 1130.85189127489
Generation  8: (998,680),(57,1) = 1160.39734573981
Generation  9: (998,680),(49,1) = 1166.89416829462
Generation 11: (998,680),(17,19) = 1182.91250733095
Generation 12: (998,680),(25,3) = 1185.35142468384
Generation 14: (998,680),(17,3) = 1191.92701118819
Generation 16: (998,680),(17,1) = 1193.06412233375
Generation 17: (998,680),(16,1) = 1193.88651051932
Generation 23: (998,680),(0,1) = 1207.08119030991
Generation 32: (998,680),(0,0) = 1207.6439872744
</code></pre></div></div>
<p>If we plot these generations the output image will be like this:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-200-d0df984ce.webp 200w, /assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-400-d0df984ce.webp 400w, /assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-800-d0df984ce.webp 800w, /assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-983-d0df984ce.webp 983w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-200-d0df984ce.png 200w, /assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-400-d0df984ce.png 400w, /assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-800-d0df984ce.png 800w, /assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-983-d0df984ce.png 983w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/GeneticSharpFunctionOptimizatonPlot-800-d0df984ce.png" alt="post image" width="983" height="677" />
</picture>

      </center>
<p><br /></p>

<p>We can see that in the first generations (black lines) the genetic algorithm as some intermediate results and at the end (red line) <strong>it found the best possible solution: a diagonal.</strong></p>

<h2 id="complete-source-code">Complete source code</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/programmer-128-6cef95d36.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/programmer-128-6cef95d36.png 128w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/programmer-128-6cef95d36.png" alt="post image" width="128" height="128" />
</picture>

      </center>
<p><br /></p>

<p>When you finish the tutorial your source code will be this one:</p>

<script src="https://gist.github.com/b6861313762464fe62b652ef7d03b91c.js?file=CompleteSourceCode.cs"> </script>

<h2 id="conclusion">Conclusion</h2>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/conclusion-128-875fc7bbb.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/conclusion-128-875fc7bbb.png 128w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2017/06/13/function-optimization-with-geneticsharp/conclusion-128-875fc7bbb.png" alt="post image" width="128" height="128" />
</picture>

      </center>
<p><br /></p>

<p>In this tutorial we learn how genetic algoritm works and how to use GeneticSharp to solve a very simple sample. Now you can try it to solve more complex problems.</p>

<p>Let’s evolve!
<br /><br /><br /></p>

<div>Icons made by <a href="http://www.freepik.com" title="Freepik">Freepik</a> and <a href="http://www.flaticon.com/authors/vignesh-oviyan" title="Vignesh Oviyan">Vignesh Oviyan</a> from <a href="http://www.flaticon.com" title="Flaticon">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0" target="_blank">CC 3.0 BY</a></div>]]></content><author><name></name></author><category term="Tutorial" /><category term="geneticsharp" /><category term="dotnet" /><category term="genetic-algorithm" /><summary type="html"><![CDATA[In this tutorial we will learn how to use GeneticSharp to optimize the inputs of math function and more about genetic algorithms meanwhile.]]></summary></entry><entry><title type="html">GeneticSharp v1.1.0 - Binary chromosomes</title><link href="http://diegogiacomelli.com.br/GeneticSharp-v1.1.0-binary-chromosomes/" rel="alternate" type="text/html" title="GeneticSharp v1.1.0 - Binary chromosomes" /><published>2017-06-11T00:00:00-03:00</published><updated>2017-06-11T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/GeneticSharp-v1.1.0-binary-chromosomes</id><content type="html" xml:base="http://diegogiacomelli.com.br/GeneticSharp-v1.1.0-binary-chromosomes/"><![CDATA[<p>The <strong><a href="https://github.com/giacomelli/GeneticSharp">GeneticSharp v1.1.0</a></strong> is out. The greatest additions of this version are the binary chromosomes: <strong>FloatingPointChromosome and IntegerChromosome.</strong></p>

<p>Binary chromosomes can be directly used when your solution chromosome can be represented as numbers or a string representation of 0 and 1.</p>

<p>A new sample has been added to the GeneticSharp.Runner.GtkApp, this sample called “Function optimization” show the FloatingPointChromsome in action:</p>

<center>
        <iframe src="https://www.youtube.com/embed/Q62tGjEDsYM " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<p>Besides these new chromosomes, there is a new mutation: FlipBit, a special mutation to IBinaryChromosome that takes the chosen gene and inverts the bits.</p>

<p>If you want to use the new chromosomes in your project, just get the new GeneticSharp version from Nuget.</p>

<p>In the next days I will post a tutorial showing how to optimize a very simple function using GeneticSharp and the new FloatingPointChromosome.</p>

<p>Let’s evolve!
<br /><br /><br /></p>

<div>Icons made by <a href="http://www.freepik.com" title="Freepik">Freepik</a> from <a href="http://www.flaticon.com" title="Flaticon">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0" target="_blank">CC 3.0 BY</a></div>]]></content><author><name></name></author><category term="News" /><category term="geneticsharp" /><category term="dotnet" /><category term="release" /><summary type="html"><![CDATA[The GeneticSharp v1.1.0 is out. The greatest additions of this version are the binary chromosomes: FloatingPointChromosome and IntegerChromosome.]]></summary></entry><entry><title type="html">Buildron 2.0.0</title><link href="http://diegogiacomelli.com.br/buildron.2.0.0/" rel="alternate" type="text/html" title="Buildron 2.0.0" /><published>2016-09-24T00:00:00-03:00</published><updated>2016-09-24T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/buildron.2.0.0</id><content type="html" xml:base="http://diegogiacomelli.com.br/buildron.2.0.0/"><![CDATA[<p>After some months to test the <a href="https://github.com/skahal/Buildron/releases/tag/v2.0.0-RC1">v2.0.0-RC1</a> we are releasing the final version of <a href="https://github.com/skahal/Buildron/">Buildron</a> mods support with this <a href="https://github.com/skahal/Buildron/releases/tag/v2.0.0">2.0.0 version</a>.</p>

<p>Mods supports represents a great change in Buildron code structure, because we built a mods support that allow any developer add his own mods to Buildron.</p>

<h2 id="mods-available">Mods available</h2>
<p>The classic visual and behavior that you already know at Buildron was moved to mods, you can see them at <a href="https://github.com/skahal/Buildron-Classic-Mods">Buildron Classic Mods repository</a>.</p>

<p>Right now we have 9 mods developed to Buildron:</p>

<ul>
  <li>
    <p><a href="https://github.com/giacomelli/Buildron-ConsoleMod/releases">ConsoleMod</a>: adds a console window to Buildron and let you monitor his events.</p>
  </li>
  <li>Classic Mods
    <ul>
      <li><a href="https://github.com/skahal/Buildron-Classic-Mods">BuildMod</a>: represents each build as part of totem.</li>
      <li><a href="https://github.com/skahal/Buildron-Classic-Mods">CameraMod</a>: auto position of camera to show all builds and users.</li>
      <li><a href="https://github.com/skahal/Buildron-Classic-Mods">EasterEggMod</a>: surprise.</li>
      <li><a href="https://github.com/skahal/Buildron-Classic-Mods">EnvironmentMod</a>: the classic Tron style floor.</li>
      <li><a href="https://github.com/skahal/Buildron-Classic-Mods">SoundMod</a>: the classic explosion sounds and allow change the sounds for each user.</li>
      <li><a href="https://github.com/skahal/Buildron-Classic-Mods">UserMod</a>: each user is represented by a robot and an avatar.</li>
    </ul>
  </li>
  <li>
    <p><a href="https://github.com/giacomelli/Buildron.SlackBotMod/releases">SlackBotMod</a>: adds a bot to your Slack that acts as Buildron and your team can interact with it, like filter builds, sort builds, move camera, receive build status change notifications and taking screenshots.</p>
  </li>
  <li><a href="https://github.com/skahal/Buildron-Mod-Samples">ToastyMod</a>: the Mortal Kombat “Toasty!” easter egg that can be configured to show on build success, running or failed.</li>
</ul>

<h2 id="developing-new-mods">Developing new mods</h2>
<p>Do you want to develop your own mod to Buildron? Take a look on our wiki pages about mods and start to build your mod now:</p>

<ul>
  <li><a href="https://github.com/skahal/buildron/wiki/mods-introduction">Introduction</a></li>
  <li><a href="/starting-a-buildron-mod-with-a-mod-template/">Starting a Buildron mod with a mod template</a></li>
  <li><a href="https://github.com/skahal/buildron/wiki/mods-getting-started">Getting started</a></li>
  <li><a href="https://github.com/skahal/buildron/wiki/mods-ModSdk">ModSdk</a></li>
  <li><a href="https://github.com/skahal/buildron/wiki/mods-tutorial-creating-a-mod">Tutorial “Creating a mod”</a></li>
</ul>

<center>                
        <img class="screenshot" src="/assets/2016/08/28/buildron.2.0.0-rc1-mods-support/BuildronBuildMod.gif " alt="post image" />
      </center>
<p><br /></p>

<blockquote>
  <p>BuildMod running inside Buildron.ModSdk simulator</p>
</blockquote>]]></content><author><name></name></author><category term="News" /><category term="buildron" /><category term="continuous-integration" /><category term="skahal" /><category term="open-source" /><category term="dotnet" /><category term="unity3d" /><category term="release" /><summary type="html"><![CDATA[After some months to test the v2.0.0-RC1 we are releasing the final version of Buildron mods support with this 2.0.0 version.]]></summary></entry><entry><title type="html">Buildron SlackBotMod</title><link href="http://diegogiacomelli.com.br/buildron-slackbotmod/" rel="alternate" type="text/html" title="Buildron SlackBotMod" /><published>2016-09-22T00:00:00-03:00</published><updated>2016-09-22T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/buildron-slackbotmod</id><content type="html" xml:base="http://diegogiacomelli.com.br/buildron-slackbotmod/"><![CDATA[<p><a href="https://github.com/skahal/buildron">Buildron</a> is a build radiator to help software development teams to see the current status of their continous integration server and <a href="https://slack.com/">Slack</a> is the omnipresent communication app for almost every developer in the world.</p>

<p>For these reasons, I made a mod called <a href="https://github.com/giacomelli/Buildron.SlackBotMod">Buildron.SlackBotMod</a> that let you interact with Buildron through the Slack.</p>

<center>                
        <img class="screenshot" src="/assets/2016/09/22/buildron-slackbotmod/Buildron.SlackBotMod-2016-09-18.gif " alt="post image" />
      </center>
<p><br /></p>

<h2 id="features">Features</h2>
<p>Currently Buildron SlackBotMod has the follow features:</p>

<h3 id="status-changed-notifications">Status changed notifications</h3>
<p>Your team can be notified by Buildron about builds status changed. In the mod preferences you can choose what status you want to receive notifications (running|succes|failed).</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-build-status-change-notifications-200-0e248dd25.webp 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-build-status-change-notifications-400-0e248dd25.webp 400w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-build-status-change-notifications-450-0e248dd25.webp 450w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-build-status-change-notifications-200-0e248dd25.png 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-build-status-change-notifications-400-0e248dd25.png 400w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-build-status-change-notifications-450-0e248dd25.png 450w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-build-status-change-notifications-450-0e248dd25.png" alt="post image" width="450" height="106" />
</picture>

      </center>
<p><br /></p>

<h3 id="filter-builds">Filter builds</h3>
<p>Filter buils by status or text.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-filter-by-200-2de211b94.webp 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-filter-by-400-2de211b94.webp 400w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-filter-by-565-2de211b94.webp 565w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-filter-by-200-2de211b94.png 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-filter-by-400-2de211b94.png 400w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-filter-by-565-2de211b94.png 565w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-filter-by-565-2de211b94.png" alt="post image" width="565" height="186" />
</picture>

      </center>
<p><br /></p>

<h3 id="reset-filter">Reset filter</h3>
<p>Reset previous builds filter (no filter).</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-filter-200-220e5013f.webp 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-filter-248-220e5013f.webp 248w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-filter-200-220e5013f.png 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-filter-248-220e5013f.png 248w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-filter-248-220e5013f.png" alt="post image" width="248" height="102" />
</picture>

      </center>
<p><br /></p>

<h3 id="sort-builds">Sort builds</h3>
<p>Sort buils by status, text or date.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-sort-by-200-b97f5d2a2.webp 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-sort-by-218-b97f5d2a2.webp 218w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-sort-by-200-b97f5d2a2.png 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-sort-by-218-b97f5d2a2.png 218w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-sort-by-218-b97f5d2a2.png" alt="post image" width="218" height="95" />
</picture>

      </center>
<p><br /></p>

<h3 id="move-camera">Move camera</h3>
<p>Move the camera the amount of pixels define in the x,y,z coordinates.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-move-camera-200-3cb740d22.webp 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-move-camera-256-3cb740d22.webp 256w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-move-camera-200-3cb740d22.png 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-move-camera-256-3cb740d22.png 256w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-move-camera-256-3cb740d22.png" alt="post image" width="256" height="95" />
</picture>

      </center>
<p><br /></p>

<h3 id="reset-camera">Reset camera</h3>
<p>Reset the camera position.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-camera-200-dee0bb971.webp 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-camera-213-dee0bb971.webp 213w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-camera-200-dee0bb971.png 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-camera-213-dee0bb971.png 213w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-reset-camera-213-dee0bb971.png" alt="post image" width="213" height="97" />
</picture>

      </center>
<p><br /></p>

<h3 id="take-a-screenshot">Take a screenshot</h3>
<p>Take a screenshot of current Buildron state.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-take-screenshot-200-ddc5d66d5.webp 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-take-screenshot-400-ddc5d66d5.webp 400w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-take-screenshot-418-ddc5d66d5.webp 418w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-take-screenshot-200-ddc5d66d5.png 200w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-take-screenshot-400-ddc5d66d5.png 400w, /assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-take-screenshot-418-ddc5d66d5.png 418w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/22/buildron-slackbotmod/Buildron-SlackBotMod-take-screenshot-418-ddc5d66d5.png" alt="post image" width="418" height="424" />
</picture>

      </center>
<p><br /></p>

<h2 id="conclusion">Conclusion</h2>
<p>If you are not using Buildron yet, <a href="https://github.com/skahal/buildron">give it a try</a>.
If you are already using Buildron and Slack, try my <a href="https://github.com/giacomelli/Buildron.SlackBotMod">Buildron.SlackBotMod</a>.</p>]]></content><author><name></name></author><category term="News" /><category term="Buildron" /><category term="slack" /><category term="unity3d" /><category term="open-source" /><category term="dotnet" /><category term="bot" /><summary type="html"><![CDATA[Buildron is a build radiator to help software development teams to see the current status of their continous integration server and Slack is the omnipresent communication app for almost every developer in the world.]]></summary></entry><entry><title type="html">Sending a Slackbot message from Unity3d</title><link href="http://diegogiacomelli.com.br/sending-a-slackbot-message-from-unity3d/" rel="alternate" type="text/html" title="Sending a Slackbot message from Unity3d" /><published>2016-09-17T00:00:00-03:00</published><updated>2016-09-17T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/sending-a-slackbot-message-from-unity3d</id><content type="html" xml:base="http://diegogiacomelli.com.br/sending-a-slackbot-message-from-unity3d/"><![CDATA[<p>I was looking for a way to send a message to a Slack channel using the Slackbot API.</p>

<h2 id="introduction">Introduction</h2>
<p>This is a pretty easy task to perform in C#, because there are some great client libraries implementations to the Slack API, like: <a href="https://github.com/Inumedia/SlackAPI">SlackApi</a>, <a href="https://github.com/jammerware/margiebot">MargieBot</a> and <a href="https://github.com/noobot/SlackConnector">SlackConnector</a>. However, in the Unity3d world the story is a little different, because Unity3d uses an older .NET version and those mentioned client libraries are implemented using newer .NET framework versions that are incompatible with Unity3d.</p>

<p>I could have tried to compile those client libraries projects using a older .NET version, what I really tried to do, but almost all are using things like Task and async, that are really not supported by Unity3d .NET version right now.</p>

<p>Then I decided to try a very raw solution using the Unity3d WWWForm and it worked well, very simple, but can be useful to someone. The result is the code bellow:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-200-c91ea3bd8.webp 200w, /assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-400-c91ea3bd8.webp 400w, /assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-611-c91ea3bd8.webp 611w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-200-c91ea3bd8.png 200w, /assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-400-c91ea3bd8.png 400w, /assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-611-c91ea3bd8.png 611w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/17/sending-a-slackbot-message-from-unity3d/SlackBotMessage-611-c91ea3bd8.png" alt="post image" width="611" height="119" />
</picture>

      </center>
<p><br /></p>

<h2 id="botcontroller">BotController</h2>
<script src="https://gist.github.com/1c8e405116e1b48a7d25dec9b36edbea.js"> </script>]]></content><author><name></name></author><category term="Tutorial" /><category term="slack" /><category term="unity3d" /><category term="gamedev" /><category term="open-source" /><category term="gist" /><category term="dotnet" /><category term="bot" /><summary type="html"><![CDATA[I was looking for a way to send a message to a Slack channel using the Slackbot API.]]></summary></entry><entry><title type="html">Creating a ConsoleMod to Buildron</title><link href="http://diegogiacomelli.com.br/creating-a-consolemod-to-buildron/" rel="alternate" type="text/html" title="Creating a ConsoleMod to Buildron" /><published>2016-09-15T00:00:00-03:00</published><updated>2016-09-15T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/creating-a-consolemod-to-buildron</id><content type="html" xml:base="http://diegogiacomelli.com.br/creating-a-consolemod-to-buildron/"><![CDATA[<p>In this post we’ll create a mod that adds a console window to Buildron and let you monitor its events. Our ConsoleMod will have 2 classes: ModController and Mod.</p>

<h2 id="modcontroller-class">ModController class</h2>
<p>ModController class will be a MonoBehaviour responsible to showing to the user a window where the Buildron events will be logged. It’s a very simple Unity3d MonoBehaviour that use some GUILayout stuffs to build its UI.</p>

<h2 id="mod-class">Mod class</h2>
<p>Mod class is the basic class for every Buildron mod and it will be responsible to creating the ModController GameObject and attach to listen a lot of the Buildron events.</p>

<h2 id="download-buildron-mod-template">Download Buildron-Mod-Template</h2>
<p>Go to Buildron <a href="https://github.com/skahal/Buildron/releases">release page</a> and download Buildron-Mod-Template.zip</p>

<h2 id="create-your-mod-solution">Create your mod solution</h2>
<p>Unzip the Buildron-Mod-Template.zip.</p>

<p>Open a prompt/terminal and go to the folder of unzip Buildron-Mod-Template.</p>

<p>Type:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jumpstart.exe <span class="nt">-n</span> ConsoleMod
</code></pre></div></div>

<blockquote>
  <p>If you are using jumpstart in Mac/Linux, remember to call it with “mono “ prefix.</p>
</blockquote>

<p>A folder called ConsoleMod should be created. Open the src/Code/ConsoleMod.sln.</p>

<h2 id="creating-modcontroller-class">Creating ModController class</h2>
<p>Delete the sample file BoxController.cs</p>

<p>Create a new class called ModController and add the code below to it:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">class</span> <span class="nc">ModController</span> <span class="p">:</span> <span class="n">MonoBehaviour</span>
<span class="p">{</span>
   <span class="err">#</span><span class="n">region</span> <span class="n">Fields</span>
   <span class="k">private</span> <span class="kt">string</span> <span class="n">m_title</span><span class="p">;</span>
   <span class="k">private</span> <span class="n">Rect</span> <span class="n">m_windowRect</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Rect</span><span class="p">(</span><span class="m">10</span><span class="p">,</span> <span class="m">10</span><span class="p">,</span> <span class="m">400</span><span class="p">,</span> <span class="m">300</span><span class="p">);</span>
   <span class="k">private</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">m_msgs</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span>
   <span class="err">#</span><span class="n">endregion</span>

   <span class="err">#</span><span class="n">region</span> <span class="n">Constructors</span>
   <span class="k">public</span> <span class="nf">ModController</span><span class="p">()</span>
   <span class="p">{</span>
      <span class="n">m_title</span> <span class="p">=</span> <span class="s">"Console mod (v.{0})"</span><span class="p">.</span><span class="nf">With</span><span class="p">(</span><span class="nf">GetType</span><span class="p">().</span><span class="n">Assembly</span><span class="p">.</span><span class="nf">GetName</span><span class="p">().</span><span class="n">Version</span><span class="p">);</span>
   <span class="p">}</span>
   <span class="err">#</span><span class="n">endregion</span>

   <span class="err">#</span><span class="n">region</span> <span class="n">Methods</span>    
   <span class="c1">/// &lt;summary&gt;</span>
   <span class="c1">/// Adds the message to the console window.</span>
   <span class="c1">/// &lt;/summary&gt;</span>
   <span class="c1">/// &lt;param name="message"&gt;The message.&lt;/param&gt;</span>
   <span class="c1">/// &lt;param name="args"&gt;The arguments.&lt;/param&gt;</span>
   <span class="k">public</span> <span class="k">void</span> <span class="nf">AddMessage</span><span class="p">(</span><span class="kt">string</span> <span class="n">message</span><span class="p">,</span> <span class="k">params</span> <span class="kt">object</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
   <span class="p">{</span>
      <span class="kt">var</span> <span class="n">formattedMessage</span> <span class="p">=</span> <span class="n">message</span><span class="p">.</span><span class="nf">With</span><span class="p">(</span><span class="n">args</span><span class="p">);</span>
      <span class="n">m_msgs</span><span class="p">.</span><span class="nf">Insert</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="s">"[{0:HH:mm:ss}] {1}"</span><span class="p">.</span><span class="nf">With</span><span class="p">(</span><span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">,</span> <span class="n">formattedMessage</span><span class="p">));</span>

      <span class="k">if</span> <span class="p">(</span><span class="n">m_msgs</span><span class="p">.</span><span class="n">Count</span> <span class="p">&gt;</span> <span class="m">10</span><span class="p">)</span>
      <span class="p">{</span>
         <span class="n">m_msgs</span><span class="p">.</span><span class="nf">RemoveAt</span><span class="p">(</span><span class="m">10</span><span class="p">);</span>
      <span class="p">}</span>
   <span class="p">}</span>

   <span class="k">void</span> <span class="nf">OnGUI</span><span class="p">()</span>
   <span class="p">{</span>
      <span class="n">GUILayout</span><span class="p">.</span><span class="nf">Window</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">m_windowRect</span><span class="p">,</span> <span class="n">HandleWindowFunction</span><span class="p">,</span> <span class="n">m_title</span><span class="p">,</span> <span class="n">GUILayout</span><span class="p">.</span><span class="nf">MinWidth</span><span class="p">(</span><span class="m">100</span><span class="p">),</span> <span class="n">GUILayout</span><span class="p">.</span><span class="nf">MinHeight</span><span class="p">(</span><span class="m">100</span><span class="p">));</span>
   <span class="p">}</span>

   <span class="k">void</span> <span class="nf">HandleWindowFunction</span><span class="p">(</span><span class="kt">int</span> <span class="n">id</span><span class="p">)</span>
   <span class="p">{</span>
      <span class="n">GUILayout</span><span class="p">.</span><span class="nf">BeginVertical</span><span class="p">();</span>

      <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">msg</span> <span class="k">in</span> <span class="n">m_msgs</span><span class="p">)</span>
      <span class="p">{</span>
         <span class="n">GUILayout</span><span class="p">.</span><span class="nf">Label</span><span class="p">(</span><span class="n">msg</span><span class="p">);</span>
      <span class="p">}</span>

      <span class="n">GUILayout</span><span class="p">.</span><span class="nf">EndVertical</span><span class="p">();</span>
   <span class="p">}</span>
   <span class="err">#</span><span class="n">endregion</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="creating-the-mod-class">Creating the Mod class</h2>
<p>Replace the content of Mod.cs with the code below:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">Buildron.Domain.Mods</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">UnityEngine</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">ConsoleMod</span>
<span class="p">{</span>
	<span class="c1">/// &lt;summary&gt;</span>
	<span class="c1">/// Responsible to create the ModController GameObject and attach to listen a lot of the Buildron events.</span>
	<span class="c1">/// &lt;/summary&gt;</span>
	<span class="k">public</span> <span class="k">class</span> <span class="nc">Mod</span> <span class="p">:</span> <span class="n">IMod</span>
	<span class="p">{</span>
		<span class="c1">/// &lt;summary&gt;</span>
		<span class="c1">/// Initialize the mod with the context.</span>
		<span class="c1">/// &lt;/summary&gt;</span>
		<span class="c1">/// &lt;param name="context"&gt;The mod context.&lt;/param&gt;</span>
		<span class="k">public</span> <span class="k">void</span> <span class="nf">Initialize</span><span class="p">(</span><span class="n">IModContext</span> <span class="n">context</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="kt">var</span> <span class="n">controller</span> <span class="p">=</span> <span class="nf">CreateModController</span><span class="p">();</span>
			<span class="nf">ListenEvents</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="n">controller</span><span class="p">);</span>            
		<span class="p">}</span>

		<span class="k">private</span> <span class="k">static</span> <span class="n">ModController</span> <span class="nf">CreateModController</span><span class="p">()</span>
		<span class="p">{</span>
		    	<span class="kt">var</span> <span class="n">go</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">GameObject</span><span class="p">(</span><span class="s">"ConsoleController"</span><span class="p">);</span>
		    	<span class="k">return</span> <span class="n">go</span><span class="p">.</span><span class="n">AddComponent</span><span class="p">&lt;</span><span class="n">ModController</span><span class="p">&gt;();</span>
		<span class="p">}</span>

		<span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">ListenEvents</span><span class="p">(</span><span class="n">IModContext</span> <span class="n">context</span><span class="p">,</span> <span class="n">ModController</span> <span class="n">controller</span><span class="p">)</span>
		<span class="p">{</span>
			    <span class="n">context</span><span class="p">.</span><span class="n">BuildFound</span> <span class="p">+=</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&gt;</span>
			    <span class="p">{</span>
				        <span class="n">controller</span><span class="p">.</span><span class="nf">AddMessage</span><span class="p">(</span><span class="s">"Build found: {0}"</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">Build</span><span class="p">);</span>
			    <span class="p">};</span>

			    <span class="n">context</span><span class="p">.</span><span class="n">BuildRemoved</span> <span class="p">+=</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&gt;</span>
			    <span class="p">{</span>
				<span class="n">controller</span><span class="p">.</span><span class="nf">AddMessage</span><span class="p">(</span><span class="s">"Build removed: {0}"</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">Build</span><span class="p">);</span>
			    <span class="p">};</span>

			    <span class="n">context</span><span class="p">.</span><span class="n">BuildsRefreshed</span> <span class="p">+=</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&gt;</span>
			    <span class="p">{</span>
				<span class="n">controller</span><span class="p">.</span><span class="nf">AddMessage</span><span class="p">(</span><span class="s">"Build refreshed: {0} builds found, {1} builds removed, {2} builds status changed"</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">BuildsFound</span><span class="p">.</span><span class="n">Count</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">BuildsRemoved</span><span class="p">.</span><span class="n">Count</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">BuildsStatusChanged</span><span class="p">.</span><span class="n">Count</span><span class="p">);</span>
			    <span class="p">};</span>

			    <span class="n">context</span><span class="p">.</span><span class="n">BuildStatusChanged</span> <span class="p">+=</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&gt;</span>
			    <span class="p">{</span>
				<span class="n">controller</span><span class="p">.</span><span class="nf">AddMessage</span><span class="p">(</span><span class="s">"Build status changed: {0}"</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">Build</span><span class="p">);</span>
			    <span class="p">};</span>

			    <span class="n">context</span><span class="p">.</span><span class="n">BuildTriggeredByChanged</span> <span class="p">+=</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&gt;</span>
			    <span class="p">{</span>
				<span class="n">controller</span><span class="p">.</span><span class="nf">AddMessage</span><span class="p">(</span><span class="s">"Build triggered by changed: {0}/{1}"</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">Build</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">Build</span><span class="p">.</span><span class="n">TriggeredBy</span><span class="p">);</span>
			    <span class="p">};</span>

			    <span class="n">context</span><span class="p">.</span><span class="n">BuildUpdated</span> <span class="p">+=</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&gt;</span>
			    <span class="p">{</span>
				<span class="n">controller</span><span class="p">.</span><span class="nf">AddMessage</span><span class="p">(</span><span class="s">"Build updated: {0}"</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">Build</span><span class="p">);</span>
			    <span class="p">};</span>

			    <span class="n">context</span><span class="p">.</span><span class="n">CIServerStatusChanged</span> <span class="p">+=</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&gt;</span>
			    <span class="p">{</span>
				<span class="n">controller</span><span class="p">.</span><span class="nf">AddMessage</span><span class="p">(</span><span class="s">"CI server status changed: {0}"</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">Server</span><span class="p">.</span><span class="n">Status</span><span class="p">);</span>
			    <span class="p">};</span>

			    <span class="n">context</span><span class="p">.</span><span class="n">RemoteControlChanged</span> <span class="p">+=</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&gt;</span>
			    <span class="p">{</span>
				<span class="n">controller</span><span class="p">.</span><span class="nf">AddMessage</span><span class="p">(</span><span class="s">"RC changed: {0}"</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">RemoteControl</span><span class="p">);</span>
			    <span class="p">};</span>

			    <span class="n">context</span><span class="p">.</span><span class="n">UserAuthenticationCompleted</span> <span class="p">+=</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&gt;</span>
			    <span class="p">{</span>
				<span class="n">controller</span><span class="p">.</span><span class="nf">AddMessage</span><span class="p">(</span><span class="s">"User authentication completed: {0}:{1}"</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">User</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">Success</span> <span class="p">?</span> <span class="s">"success"</span> <span class="p">:</span> <span class="s">"failed"</span><span class="p">);</span>
			    <span class="p">};</span>

			    <span class="n">context</span><span class="p">.</span><span class="n">UserFound</span> <span class="p">+=</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&gt;</span>
			    <span class="p">{</span>
				<span class="n">controller</span><span class="p">.</span><span class="nf">AddMessage</span><span class="p">(</span><span class="s">"User found: {0}"</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">User</span><span class="p">);</span>
			    <span class="p">};</span>

			    <span class="n">context</span><span class="p">.</span><span class="n">UserRemoved</span> <span class="p">+=</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&gt;</span>
			    <span class="p">{</span>
				<span class="n">controller</span><span class="p">.</span><span class="nf">AddMessage</span><span class="p">(</span><span class="s">"User remoed: {0}"</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">User</span><span class="p">);</span>
			    <span class="p">};</span>

			    <span class="n">context</span><span class="p">.</span><span class="n">UserTriggeredBuild</span> <span class="p">+=</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&gt;</span>
			    <span class="p">{</span>
				<span class="n">controller</span><span class="p">.</span><span class="nf">AddMessage</span><span class="p">(</span><span class="s">"User triggered build: {0}/{1}"</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">User</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">Build</span><span class="p">);</span>
			    <span class="p">};</span>

			    <span class="n">context</span><span class="p">.</span><span class="n">UserUpdated</span> <span class="p">+=</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&gt;</span>
			    <span class="p">{</span>
				<span class="n">controller</span><span class="p">.</span><span class="nf">AddMessage</span><span class="p">(</span><span class="s">"User updated: {0}"</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">User</span><span class="p">);</span>
			    <span class="p">};</span>
		<span class="p">}</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><strong>Compile the project.</strong></p>

<h2 id="testing-on-mod-simulator">Testing on mod simulator</h2>
<p>Open the project src/Unity/ConsoleMod inside Unity3d editor.</p>

<p>Open SimulatorScene.</p>

<p>Hit the “Play” button.</p>

<p>You should see a scene like this:</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-opened-200-b1f078f34.webp 200w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-opened-400-b1f078f34.webp 400w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-opened-722-b1f078f34.webp 722w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-opened-200-b1f078f34.png 200w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-opened-400-b1f078f34.png 400w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-opened-722-b1f078f34.png 722w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-opened-722-b1f078f34.png" alt="post image" width="722" height="467" />
</picture>

      </center>
<p><br /></p>

<p>In the menu “Buildron”, click on “Show Simulator”.</p>

<p>Click on “BuildFound”, “BuildStatusChanged” and “BuildRemoved” buttons, you should see these events been registered on ConsoledMod window.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-events-registered-200-4fd87f6f7.webp 200w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-events-registered-400-4fd87f6f7.webp 400w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-events-registered-421-4fd87f6f7.webp 421w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-events-registered-200-4fd87f6f7.png 200w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-events-registered-400-4fd87f6f7.png 400w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-events-registered-421-4fd87f6f7.png 421w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-SimulationScene-events-registered-421-4fd87f6f7.png" alt="post image" width="421" height="111" />
</picture>

      </center>
<p><br /></p>

<p>Hit the “Play” button again to stop playing the scene.</p>

<blockquote>
  <p>There are two folders inside your Unity3d project called “Materials” and “Prefabs”. They are created from Buildron-Mod-Template, but ConsoleMod don’t need them. You can remove them.</p>
</blockquote>

<h2 id="building-the-mod">Building the mod</h2>
<p>ConsoleMod has no Unity3d assets, in this case you don’t need to use the menu “Buildron / BuildMod”, you just need to compile your project inside your IDE, as we did on section “Creating the Mod class” to get your mod inside Buildron.</p>

<h2 id="testing-on-buildron">Testing on Buildron</h2>
<p>Go to folder ConsoleMod/build and open the Buildron of your platform.</p>

<p>Hit the play button on Buildron.</p>

<p>You should see the ConsoleMod window registering a lot of Buildron events.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-Buildron-200-7a03018c3.webp 200w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-Buildron-400-7a03018c3.webp 400w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-Buildron-639-7a03018c3.webp 639w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-Buildron-200-7a03018c3.png 200w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-Buildron-400-7a03018c3.png 400w, /assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-Buildron-639-7a03018c3.png 639w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/15/creating-a-consolemod-to-buildron/ConsoleMod-Buildron-639-7a03018c3.png" alt="post image" width="639" height="478" />
</picture>

      </center>
<p><br /></p>

<h2 id="conclusion">Conclusion</h2>
<p>That’s it! We created a Buildron mod that can help to debug what is happening in Buildron and mods in runtime.</p>

<p>So, why you don’t try to <strong>create your own Buildron mod now</strong>?</p>

<p>You can see the full source code of this post on <a href="https://github.com/giacomelli/Buildron-ConsoleMod">https://github.com/giacomelli/Buildron-ConsoledMod</a>.</p>]]></content><author><name></name></author><category term="Tutorial" /><category term="buildron" /><category term="unity3d" /><category term="open-source" /><category term="dotnet" /><category term="mods" /><summary type="html"><![CDATA[In this post we’ll create a mod that adds a console window to Buildron and let you monitor its events. Our ConsoleMod will have 2 classes: ModController and Mod.]]></summary></entry><entry><title type="html">jumpstart</title><link href="http://diegogiacomelli.com.br/jumpstart/" rel="alternate" type="text/html" title="jumpstart" /><published>2016-09-12T00:00:00-03:00</published><updated>2016-09-12T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/jumpstart</id><content type="html" xml:base="http://diegogiacomelli.com.br/jumpstart/"><![CDATA[<p>I present to you my newest tool…</p>

<center>                
        <img class="screenshot" src="/assets/2016/09/12/jumpstart/jumpstart-convention-sample.gif " alt="post image" />
      </center>
<p><br /></p>

<p><a href="https://github.com/giacomelli/jumpstart">jumpstart</a> is a command-line tool to create new C# projects from prebuilt/templates.</p>

<p>As an experienced developers it’s very common we have some kind of template solution when we start a new project. Maybe it’s the latest project we work on, maybe it’s a very good template we used every time to bootstrap a specific kind of project.</p>

<p>I created <a href="https://github.com/giacomelli/jumpstart">jumpstart</a> to simplify the process of create the new project based on those templates or prebuilt solutions.</p>

<p>The idea of the tool was born a long time ago and became a little stronger every time that I had to create a new solution and all the projects by hand, but when I saw the message bellow in the <a href="http://xamarin.com/prebuilt">http://xamarin.com/prebuilt</a> page I decided to finally write the tool… and the name was very clear, almost.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-200-ef756f97b.webp 200w, /assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-400-ef756f97b.webp 400w, /assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-800-ef756f97b.webp 800w, /assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-1057-ef756f97b.webp 1057w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-200-ef756f97b.png 200w, /assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-400-ef756f97b.png 400w, /assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-800-ef756f97b.png 800w, /assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-1057-ef756f97b.png 1057w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/12/jumpstart/jumpstart-Xamarin-jumpstart-message-800-ef756f97b.png" alt="post image" width="1057" height="74" />
</picture>

      </center>
<p><br /></p>

<blockquote>
  <p>The first name that I thought to the tool was prebuilt, but later, my friend <a href="https://twitter.com/giusepe">Giusepe Casagrande</a> convinced me that jumpstart was really better name… and he was right!</p>
</blockquote>

<h2 id="how-does-it-work">How does it work?</h2>
<p>jumpstart is very simple, it get a folder with a template solution and copy it to a new folder replacing the root namespace of the template to the new project namespace.</p>

<p>A template folder like this:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jumpstart-template/MyClass.cs
jumpstart-template/Properties
jumpstart-template/Properties/AssemblyInfo.cs
jumpstart-template/JumpStartTemplate.csproj
JumpStartTemplate.sln
</code></pre></div></div>

<p>With this command:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jumpstart <span class="nt">-n</span> My.Amazing.NewProject
</code></pre></div></div>

<p>Will become:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>My.Amazing.NewProject/MyClass.cs
My.Amazing.NewProject/Properties
My.Amazing.NewProject/Properties/AssemblyInfo.cs
My.Amazing.NewProject/My.Amazing.NewProject.csproj
My.Amazing.NewProject.sln
</code></pre></div></div>

<blockquote>
  <p>The MyClass.cs, AssemblyInfo.cs, My.Amazing.NewProject.csproj and My.Amazing.NewProject.sln contents was updated by jumpstart to use the namespace My.Amazing.NewProject.</p>
</blockquote>

<h2 id="using-it">Using it</h2>
<p>Download it from the <a href="https://github.com/giacomelli/jumpstart/releases">releases page</a>.</p>

<h3 id="available-options">Available options:</h3>
<p>To see all available options.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jumpstart.exe <span class="nt">-help</span>
</code></pre></div></div>

<blockquote>
  <p>If you are using jumpstart in Mac/Linux, remember to call it with “mono “ prefix.</p>
</blockquote>

<h3 id="basic-using-conventions">Basic (using conventions)</h3>
<p>If your template folder is called “jumpstart-template” and its namespace is JumpStartTemplate, the only argument you need to pass to jumpstart is -n(namespace).</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jumpstart <span class="nt">-n</span> My.Amazing.NewProject
</code></pre></div></div>

<blockquote>
  <p>The “jumpstart-template” folder should be in the same folder where you are calling jumpstart.</p>
</blockquote>

<h3 id="advanced-specifying-template-folder-and-namespace">Advanced (specifying template folder and namespace)</h3>
<p>For example, your template folder is “my-template” and your template namespace is “My.Template”, in this case you should call jumpstart in this way:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jumpstart <span class="nt">-tf</span> my-template <span class="nt">-tn</span> My.Template <span class="nt">-n</span> My.Amazing.NewProject
</code></pre></div></div>

<h3 id="advanced-using-a-remote-zip-template">Advanced (using a remote .zip template)</h3>
<p>You can use a remote .zip file as your template folder. For example, if you want to start a new project with any of those prebuilt apps that Xamarin make available on <a href="http://xamarin.com/prebuilt">http://xamarin.com/prebuilt</a>, you can use the command bellow to jumpstart your new project using those templates:</p>

<h5 id="jumpstart-xamarin-sport-prebuilt-app">jumpstart Xamarin Sport prebuilt app</h5>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jumpstart <span class="nt">-tf</span> https://github.com/xamarin/sport/archive/master.zip <span class="nt">-tn</span> Sport.Mobile <span class="nt">-n</span> My.Sport.Mobile 
</code></pre></div></div>

<h2 id="conclusion">Conclusion</h2>
<p>I hope you can use jumpstart in your next project bootstrap. <a href="https://github.com/giacomelli/jumpstart/releases">Download</a> and use it.</p>

<p>If you want to colaborate, take a look on its <a href="https://github.com/giacomelli/jumpstart">GitHub repository</a>.</p>]]></content><author><name></name></author><category term="News" /><category term="jumpstart" /><category term="open-source" /><category term="dotnet" /><category term="command-line" /><summary type="html"><![CDATA[I present to you my newest tool…]]></summary></entry><entry><title type="html">Starting a Buildron mod with a mod template</title><link href="http://diegogiacomelli.com.br/starting-a-buildron-mod-with-a-mod-template/" rel="alternate" type="text/html" title="Starting a Buildron mod with a mod template" /><published>2016-09-04T00:00:00-03:00</published><updated>2016-09-04T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/starting-a-buildron-mod-with-a-mod-template</id><content type="html" xml:base="http://diegogiacomelli.com.br/starting-a-buildron-mod-with-a-mod-template/"><![CDATA[<p>In this post I will show how to start building a mod to Buildron using a mod template.</p>

<center>                
        <img class="screenshot" src="/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulation.gif " alt="post image" />
      </center>
<p><br /></p>

<h2 id="download">Download</h2>
<p>Download the Buildron-Mod-Template.zip from <a href="https://github.com/skahal/Buildron/releases">releases page</a>.
Unzip it in any folder.</p>

<h2 id="creating-the-solution">Creating the solution</h2>
<p>Open a prompt (win) or a terminal (linux/mac).</p>

<p>Go to the folder where you unzip Buildron-Mod-Template.zip.</p>

<p>Type:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jumpstart-exe <span class="nt">-n</span> &lt;the name of your mod&gt;
</code></pre></div></div>

<blockquote>
  <p>If you are in Linux/Mac andfix commands with “mono “.</p>
</blockquote>

<p>For example, if your mod name is “MyAmazingMod”, you should type:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jumpstart.exe <span class="nt">-n</span> MyAmazingMod
</code></pre></div></div>

<blockquote>
  <p><a href="http://github.com/giacomelli/jumpstart">jumpstart</a> is a tool that I made to help create solutions from pre built templates. I will talk about of it in an future post.</p>
</blockquote>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateJumpstart-200-5cb3e86ea.webp 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateJumpstart-400-5cb3e86ea.webp 400w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateJumpstart-497-5cb3e86ea.webp 497w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateJumpstart-200-5cb3e86ea.png 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateJumpstart-400-5cb3e86ea.png 400w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateJumpstart-497-5cb3e86ea.png 497w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateJumpstart-497-5cb3e86ea.png" alt="post image" width="497" height="126" />
</picture>

      </center>
<p><br /></p>

<p>After jumpstart is done you will see a new folder called MyAmazingMod, inside of it there are the following folders:</p>

<ul>
  <li>build: full Buildron executable with the classic mods to all platforms (linux, mac and win).</li>
  <li>src
    <ul>
      <li>Code: the C# class library of your mod</li>
      <li>Unity: the Unity3d project of your mod.</li>
    </ul>
  </li>
</ul>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateFolders-200-65576a7d2.webp 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateFolders-261-65576a7d2.webp 261w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateFolders-200-65576a7d2.png 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateFolders-261-65576a7d2.png 261w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateFolders-261-65576a7d2.png" alt="post image" width="261" height="406" />
</picture>

      </center>
<p><br /></p>

<h2 id="the-c-project">The C# project</h2>
<p>Open the MyAmazingMod/src/Code/MyAmazingMod.sln.</p>

<p>Select the configuration of your platform.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplatePlatformConfiguration-200-77d13f09f.webp 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplatePlatformConfiguration-334-77d13f09f.webp 334w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplatePlatformConfiguration-200-77d13f09f.png 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplatePlatformConfiguration-334-77d13f09f.png 334w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplatePlatformConfiguration-334-77d13f09f.png" alt="post image" width="334" height="237" />
</picture>

      </center>
<p><br /></p>

<p>Inside of it you can see the Mod.cs and ModController.cs.</p>

<p>Compile the whole solution.</p>

<h2 id="the-unity3d-project">The Unity3d project</h2>
<p>Open the MyAmazingMod/src/Unity/MyAmazingMod on Unity3d.</p>

<p>Open the scene Assets/SimulatorScene and click on play button.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulatorScene-200-f286a3e11.webp 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulatorScene-298-f286a3e11.webp 298w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulatorScene-200-f286a3e11.png 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulatorScene-298-f286a3e11.png 298w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulatorScene-298-f286a3e11.png" alt="post image" width="298" height="236" />
</picture>

      </center>
<p><br /></p>

<p>Click on the menu “Buildron/Show Simulator”.</p>

<p>In the simulator click on button “BuildStatusChanged”.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulator-200-74879a55e.webp 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulator-400-74879a55e.webp 400w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulator-640-74879a55e.webp 640w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulator-200-74879a55e.png 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulator-400-74879a55e.png 400w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulator-640-74879a55e.png 640w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateSimulator-640-74879a55e.png" alt="post image" width="640" height="493" />
</picture>

      </center>
<p><br /></p>

<p>You will see a box falling down every time you hit the button. This behavior is made by Mod.cs and ModController.cs on C# project. If you are curious about it, take a look on the classes implementations.</p>

<h2 id="testing-on-buildron">Testing on Buildron</h2>
<p>In the Unity3d editor click on menu “Buildron / Build mod”.</p>

<p>Select your platform: Mac, Linux or Windows.</p>

<p>Type your Buildron mods folder:</p>

<ul>
  <li>Linux: ../../../build/linux/Mods</li>
  <li>Mac: ../../../build/mac/Buildron.app/Mods</li>
  <li>Win: ../../../build/win/Mods</li>
</ul>

<p>Click on “Build” button.</p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildMod-200-ab89078f5.webp 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildMod-400-ab89078f5.webp 400w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildMod-641-ab89078f5.webp 641w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildMod-200-ab89078f5.png 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildMod-400-ab89078f5.png 400w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildMod-641-ab89078f5.png 641w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildMod-641-ab89078f5.png" alt="post image" width="641" height="362" />
</picture>

      </center>
<p><br /></p>

<p>Go to folder MyAmazingMod/build and open the Buildron of your platform.</p>

<p>Hit the play button on Buildron.</p>

<p>You should see the same falling down box that you see on simulator falling down inside Buildron every time a build changed status.</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildronTest-200-34474df72.webp 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildronTest-400-34474df72.webp 400w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildronTest-639-34474df72.webp 639w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildronTest-200-34474df72.png 200w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildronTest-400-34474df72.png 400w, /assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildronTest-639-34474df72.png 639w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2016/09/04/starting-a-buildron-mod-with-a-mod-template/BuildronModTemplateBuildronTest-639-34474df72.png" alt="post image" width="639" height="501" />
</picture>

      </center>
<p><br /></p>

<h2 id="conclusion">Conclusion</h2>
<p>With this post you learned how you can starting to create your own mod from mod template.</p>

<p>If you want to build more sofisticated mods, please take a look on our tutorial <a href="https://github.com/skahal/buildron/wiki/mods-tutorial-creating-a-mod">“Creating a mod”</a>.</p>]]></content><author><name></name></author><category term="Tutorial" /><category term="buildron" /><category term="mods" /><category term="continuous-integration" /><category term="skahal" /><category term="open-source" /><category term="dotnet" /><category term="unity3d" /><summary type="html"><![CDATA[In this post I will show how to start building a mod to Buildron using a mod template.]]></summary></entry><entry><title type="html">Buildron 2.0.0-RC1 - Mods support</title><link href="http://diegogiacomelli.com.br/buildron.2.0.0-rc1-mods-support/" rel="alternate" type="text/html" title="Buildron 2.0.0-RC1 - Mods support" /><published>2016-08-28T00:00:00-03:00</published><updated>2016-08-28T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/buildron.2.0.0-rc1-mods-support</id><content type="html" xml:base="http://diegogiacomelli.com.br/buildron.2.0.0-rc1-mods-support/"><![CDATA[<p>After some months of hard work I finally released the Buildron mods support.</p>

<p>This <a href="https://github.com/skahal/Buildron/releases/tag/v2.0.0-RC1">Buildron 2.0.0-RC1</a> represents a great change in Buildron code structure, because we built a mods support that allow any developer add his own mods to Buildron.</p>

<p>Hope to see you building some mods to Buildron. We’re curious about what crazy mods ideas you could have ;).</p>

<p>We really appreciate your opinion about the mods support, <a href="https://github.com/skahal/Buildron/wiki/Mods-introduction">documentation</a>, <a href="https://github.com/skahal/Buildron/wiki/Mods-tutorial-creating-a-mod">tutorial</a> and <a href="https://github.com/skahal/Buildron/wiki/Mods-ModSdk">ModSdk</a>. Please, get in touch at <a href="http://twitter.com/ogiacomelli">@ogiacomelli</a>.</p>

<center>                
        <img class="screenshot" src="/assets/2016/08/28/buildron.2.0.0-rc1-mods-support/BuildronBuildMod.gif " alt="post image" />
      </center>
<p><br /></p>

<blockquote>
  <p>BuildMod running inside Buildron.ModSdk simulator</p>
</blockquote>

<h3 id="mods">Mods</h3>
<p>The classic visual and behavior that you already know at Buildron was moved to mods too, you can see them at <a href="http://github.com/skahal/Buildron-Classic-Mods">Buildron Classic Mods</a> repository.</p>

<p>The full list of mods is available here: <a href="https://github.com/skahal/Buildron/wiki/Mods-Mods-list">Mods list</a></p>

<h3 id="i-wanna-build-a-mod">I wanna build a mod</h3>
<p>If you want to build a mod, take a look on this <a href="https://github.com/skahal/Buildron/wiki/mods-getting-started">Getting started</a> and this <a href="https://github.com/skahal/Buildron/wiki/mods-tutorial-creating-a-mod">Tutorial creating a mod</a> that teach how build Buildron’s mod.</p>]]></content><author><name></name></author><category term="News" /><category term="buildron" /><category term="mods" /><category term="continuous-integration" /><category term="skahal" /><category term="open-source" /><category term="dotnet" /><category term="unity3d" /><summary type="html"><![CDATA[After some months of hard work I finally released the Buildron mods support.]]></summary></entry><entry><title type="html">Testing js-dos</title><link href="http://diegogiacomelli.com.br/testing-js-dos/" rel="alternate" type="text/html" title="Testing js-dos" /><published>2016-08-04T00:00:00-03:00</published><updated>2016-08-04T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/testing-js-dos</id><content type="html" xml:base="http://diegogiacomelli.com.br/testing-js-dos/"><![CDATA[<p>Recenlty I discovered the project <a href="https://github.com/kripken/emscripten">Emscripten</a>:</p>

<blockquote>
  <p>Emscripten is an LLVM-to-JavaScript compiler. It takes LLVM bitcode - which can be generated from C/C++, using llvm-gcc (DragonEgg) or clang, or any other language that can be converted into LLVM - and compiles that into JavaScript, which can be run on the web (or anywhere else JavaScript can run).</p>
</blockquote>

<p>And after this discovered the <a href="https://js-dos.com">js-dos</a> project:</p>

<blockquote>
  <p>A javascript version of dosbox that can run dos programs and games in browser.
js-dos provides javascript API to easily run DOS programs and games in browser. This API allows to run unmodified versions of DOS programs, in other words you can run DOS binary in browser.</p>
</blockquote>

<p>js-dos use Emscripten and <a href="https://github.com/dreamlayers/em-dosbox">em-dosbox</a> projects do built his easy-to-use api.</p>

<p>Below I made a test with it and put one of my first games, a Nibble clone wrote with 461 lines of C to run in browser.</p>

<p>This is all JS code to start js-dos in this sample:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">dosbox</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Dosbox</span><span class="p">({</span>
    <span class="na">id</span><span class="p">:</span> <span class="dl">"</span><span class="s2">dosbox</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">onload</span><span class="p">:</span> <span class="nf">function </span><span class="p">(</span><span class="nx">dosbox</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">dosbox</span><span class="p">.</span><span class="nf">run</span><span class="p">(</span><span class="dl">"</span><span class="s2">NIBBLE.zip</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">./NIBBLE.EXE</span><span class="dl">"</span><span class="p">);</span>
    <span class="p">},</span>
    <span class="na">onrun</span><span class="p">:</span> <span class="nf">function </span><span class="p">(</span><span class="nx">dosbox</span><span class="p">,</span> <span class="nx">app</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">App '</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">app</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">' is runned</span><span class="dl">"</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">});</span>
</code></pre></div></div>

<p>Below is the result. Enjoy it!</p>
<iframe src="/assets/2016/08/04/testing-js-dos/nibble.html " frameborder="0" allowfullscreen="" style="width:100%; height:500px"></iframe>

<p>The full sample can be download here: <a href="/assets/2016/08/04/testing-js-dos/sample.zip">sample</a>.</p>

<p><em>Note: tested on Chrome 64 bits.</em></p>]]></content><author><name></name></author><category term="Lab" /><category term="dosbox" /><category term="javascript" /><summary type="html"><![CDATA[Recenlty I discovered the project Emscripten:]]></summary></entry><entry><title type="html">Buildron - Your builds, our world! …and now our open source code too</title><link href="http://diegogiacomelli.com.br/buildron-your-builds-our-world-and-now-our-open-source-code-too/" rel="alternate" type="text/html" title="Buildron - Your builds, our world! …and now our open source code too" /><published>2016-06-02T00:00:00-03:00</published><updated>2016-06-02T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/buildron-your-builds-our-world-and-now-our-open-source-code-too</id><content type="html" xml:base="http://diegogiacomelli.com.br/buildron-your-builds-our-world-and-now-our-open-source-code-too/"><![CDATA[<p><a href="http://github.com/skahal/buildron">Buildron</a> is a build radiator to continuous integration server like TeamCity, Jenkins and Hudson.</p>

<p>We’ve built it as a <a href="http://skahal.com">Skahal’s</a> product and now we decide to <strong>open source it: <a href="http://github.com/skahal/buildron">http://github.com/skahal/buildron</a></strong>.</p>

<p>You can run it on Windows, OSX and Linux: <a href="https://github.com/skahal/Buildron/releases">https://github.com/skahal/Buildron/releases</a></p>

<p>There is a remote control app too (Windows, OSX, Linux, iOS and Android), where you can sort and filter builds, among other things: <a href="https://github.com/skahal/Buildron-rc/releases">https://github.com/skahal/Buildron-rc/releases</a></p>

<p>Give it a try:</p>
<center>
        <iframe src="https://www.youtube.com/embed/sEghUYUvTHg " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>]]></content><author><name></name></author><category term="News" /><category term="buildron" /><category term="continuous-integration" /><category term="skahal" /><category term="open-source" /><category term="dotnet" /><category term="unity3d" /><summary type="html"><![CDATA[Buildron is a build radiator to continuous integration server like TeamCity, Jenkins and Hudson.]]></summary></entry><entry><title type="html">Using a FxCop badge on your GitHub repository</title><link href="http://diegogiacomelli.com.br/using-a-fxcop-badge-on-your-github-repository/" rel="alternate" type="text/html" title="Using a FxCop badge on your GitHub repository" /><published>2015-10-26T00:00:00-02:00</published><updated>2015-10-26T00:00:00-02:00</updated><id>http://diegogiacomelli.com.br/using-a-fxcop-badge-on-your-github-repository</id><content type="html" xml:base="http://diegogiacomelli.com.br/using-a-fxcop-badge-on-your-github-repository/"><![CDATA[<p>The use of badges on GitHub repositories helps us to promote good pratices about our code. Some amazing services like the <a href="http://shields.io">Shileds.io</a> can generate almost all badges you can imagine, but what about those badges where there is no such online service to perform this job? One common case is when you program with C# and want some FxCop badge but there is no online service to run FxCop.</p>

<h3 id="badgessharp">BadgesSharp</h3>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2015/10/26/using-a-fxcop-badge-on-your-github-repository/FxCopBadge-200-92805d6b2.webp 200w, /assets/images/generated/assets/2015/10/26/using-a-fxcop-badge-on-your-github-repository/FxCopBadge-400-92805d6b2.webp 400w, /assets/images/generated/assets/2015/10/26/using-a-fxcop-badge-on-your-github-repository/FxCopBadge-700-92805d6b2.webp 700w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2015/10/26/using-a-fxcop-badge-on-your-github-repository/FxCopBadge-200-92805d6b2.png 200w, /assets/images/generated/assets/2015/10/26/using-a-fxcop-badge-on-your-github-repository/FxCopBadge-400-92805d6b2.png 400w, /assets/images/generated/assets/2015/10/26/using-a-fxcop-badge-on-your-github-repository/FxCopBadge-700-92805d6b2.png 700w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2015/10/26/using-a-fxcop-badge-on-your-github-repository/FxCopBadge-700-92805d6b2.png" alt="post image" width="700" height="101" />
</picture>

      </center>
<p><br /></p>

<p>To fill this gap I created the BadgesSharp service: <a href="http://badgessharp.apphb.com">http://badgessharp.apphb.com</a>. BadgesSharp is a free service to generate badges that need some kind of input and processing before you can display them on GitHub repositories.</p>

<p>In the case of FxCop, we need to run it against our .NET code and send the result report to BadgesSharp and then the service will generate the FxCop badge.</p>

<p>Here is a small tutorial on how to get the FxCop badge in your GitHub repo:&lt;/p&gt;</p>

<h3 id="install-fxcop">Install FxCop</h3>
<p>If you don’t have it yet, <a href="https://www.microsoft.com/en-us/download/details.aspx?id=6544">download</a> and install FxCop.</p>

<h3 id="run-fxcop">Run FxCop</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>"C:\Program Files (x86)\Microsoft Fxcop 10.0\FxCopCmd.exe" /project:[Your FxCop file].FxCop /out:fxcop-report.xml
</code></pre></div></div>
<p>The report will be saved to fxcop-report.xml</p>

<h3 id="generate-fxcop-badge">Generate FxCop badge</h3>
<p>Download <a href="https://github.com/giacomelli/BadgesSharp/releases">BadgesSharpCmd</a> and run it:&lt;/p&gt;</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>BadgesSharpCmd -o [your GitHub username] -r [your GitHub repository] -a %GITHUB_REPO_TOKEN% -b FxCop -c fxcop-report.xml
</code></pre></div></div>

<p>Note: you will need a GitHub personal token: <a href="https://github.com/settings/tokens">https://github.com/settings/tokens</a>.</p>

<p>More info at:<a href="https://badgessharp.apphb.com/Docs/GettingStarted">https://badgessharp.apphb.com/Docs/GettingStarted</a></p>

<h3 id="show-the-badge-at-your-github-repository">Show the badge at your GitHub repository</h3>
<p>Edit your readme.md and add the line below:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>![FxCop](https://badgessharp.apphb.com/badges/:owner/:repo/FxCop)
</code></pre></div></div>

<h3 id="how-use-it-on-your-continuous-integration">How use it on your Continuous Integration?</h3>
<p>Probably you’re using some continuous integration service, below are some samples:</p>

<h4 id="appveyor">AppVeyor</h4>

<ul>
  <li>Add to your AppVeyor.yml file:</li>
</ul>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">after_build</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">cmd</span><span class="pi">:</span> <span class="pi">&gt;</span>
        <span class="s2">"</span><span class="s">C:</span><span class="se">\P</span><span class="s">rogram</span><span class="nv"> </span><span class="s">Files</span><span class="nv"> </span><span class="s">(x86)</span><span class="err">\</span><span class="s">Microsoft</span><span class="nv"> </span><span class="s">Fxcop</span><span class="nv"> </span><span class="s">10.0</span><span class="err">\</span><span class="s">FxCopCmd.exe"</span> <span class="s">/project:[Your FxCop file].FxCop /out:fxcop-report.xml</span>

        <span class="s">BadgesSharpCmd -o [your GitHub username] -r [your GitHub repository] -a %GITHUB_REPO_TOKEN% -b FxCop -c fxcop-report.xml</span>
</code></pre></div></div>

<h4 id="teamcity">TeamCity</h4>

<ul>
  <li>Add the ‘FxCop’ step to your configuration (probably you already have it);</li>
  <li>Add a final ‘Command Line’ step to your configuration:
    <ul>
      <li>Execute step: Even if some of the previous steps failed</li>
      <li>Run: Custom script
Custom script:</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>BadgesSharpCmd -o [your GitHub username] -r [your GitHub repository] -a %GITHUB_REPO_TOKEN% -b FxCop -c "%system.teamcity.build.tempDir%\fxcop-output-*\fxcop-result.xml"
</code></pre></div></div>

<h3 id="conclusion">Conclusion</h3>
<p>That’s it! Now you have a FxCop badge to show on your GitHub repository.</p>

<p>BadgesSharp support others badges too: StyleCop, DupFinder and Plato.</p>

<p>If you like it, take a look on GitHub repository: <a href="https://github.com/giacomelli/BadgesSharp">https://github.com/giacomelli/BadgesSharp</a>.</p>]]></content><author><name></name></author><category term="Tutorial" /><category term="dotnet" /><category term="open-source" /><summary type="html"><![CDATA[The use of badges on GitHub repositories helps us to promote good pratices about our code. Some amazing services like the Shileds.io can generate almost all badges you can imagine, but what about those badges where there is no such online service to perform this job? One common case is when you program with C# and want some FxCop badge but there is no online service to run FxCop.]]></summary></entry><entry><title type="html">Auto tracking your time with ControlPlane + Toggl</title><link href="http://diegogiacomelli.com.br/auto-tracking-your-time-with-controlplane-toggl/" rel="alternate" type="text/html" title="Auto tracking your time with ControlPlane + Toggl" /><published>2015-09-20T00:00:00-03:00</published><updated>2015-09-20T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/auto-tracking-your-time-with-controlplane-toggl</id><content type="html" xml:base="http://diegogiacomelli.com.br/auto-tracking-your-time-with-controlplane-toggl/"><![CDATA[<p>So, do you want to track the time you spend in some tasks, but always forget to start the time tracking?</p>

<p>I love to used Toggl.com to time tracking and a few days ago I discovered another amazing app to OSX: ControlPlane.</p>

<p>ControlPlane, in few words, is an app that allow you change your desktop configuration (opened apps, notifications, etc) when some trigger happens.</p>

<p>In my specific case I would like to track the time I spend programming in the newest Skahal’s pet project, a Space Invaders Remake or as we like to call: SIR. Well, I wanted to start a “Programming” task on Toggl every time I open Unity3D editor and stop the same task when close the Unity3D.&lt;</p>

<p>I followed steps bellow to get this done:</p>

<h3 id="1-create-the-starttoggltimeentrysh">1) Create the startTogglTimeEntry.sh</h3>
<p>We will create the follow shell script that uses Toggl api to starts a task:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>echo 'Starting "Programming" task on toggl.com'
curl -v -u &lt;api-token&gt;:api_token \
    -H "Content-Type: application/json" \
    -d '{"time_entry":{"description":"Programming","tags":[],"pid":&lt;project-id&gt;,"created_with":"curl"}}' \
    -X POST https://www.toggl.com/api/v8/time_entries/start
</code></pre></div></div>

<p>As you can see we need to replace two things in this script:</p>

<ul>
  <li><strong>API-TOKEN</strong>: this should be replaced by your Toggl api token, go to the bottom of <a href="https://www.toggl.com/app/profile">your Toggl profile page</a> and get it.</li>
  <li><strong>PROJECT-ID</strong>: this should be replaced by the id of the project where you want to create the “Programming” task. We need to discover de project id, go to <a href="https://www.toggl.com/app">Toggl.com</a>, select your team, then your project, you’ll see an address like that in Safari “https://www.toggl.com/app/projects/&lt;TEAM-ID&gt;/edit/&lt;PROJECT-ID&gt;”. Use the value of “&lt;PROJECT-ID&gt;” in the script.</li>
</ul>

<p>Now save the content on file startTogglTimeEntry.sh</p>

<h3 id="2-create-the-stoptoggltimeentrysh">2) Create the stopTogglTimeEntry.sh</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>taskid=`curl -v -u &lt;api-token&gt;:api_token -X GET https://www.toggl.com/api/v8/time_entries/current | grep -Eo '"id":([0-9])+' | cut -d: -f2`
 
curl -v -u &lt;api-token&gt;:api_token \
    -H "Content-Type: application/json" \
    -X PUT https://www.toggl.com/api/v8/time_entries/$taskid/stop
</code></pre></div></div>

<p>This script discover the latest task started at Toggl and stop it.</p>

<blockquote>
  <p>Note: you should replace the <strong>&lt;PROJECT-ID&gt;</strong> in this script too.</p>
</blockquote>

<h3 id="3-download-and-installl-the-controlplane">3) Download and installl the ControlPlane</h3>
<p>Download and install the <a href="http://www.controlplaneapp.com">ControlPlane</a>.</p>

<h3 id="4-configuring-the-context">4) Configuring the context</h3>
<p>The first thing, you must create the context, go to ControlPlane preferences:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Preferences-200-22325241e.webp 200w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Preferences-207-22325241e.webp 207w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Preferences-200-22325241e.png 200w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Preferences-207-22325241e.png 207w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Preferences-207-22325241e.png" alt="post image" width="207" height="312" />
</picture>

      </center>
<p><br /></p>

<p>Select tab “Contexts”, and add I new context, in my case a called it “Skahal”:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_CreateContext-200-dac56bbc1.webp 200w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_CreateContext-393-dac56bbc1.webp 393w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_CreateContext-200-dac56bbc1.png 200w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_CreateContext-393-dac56bbc1.png 393w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_CreateContext-393-dac56bbc1.png" alt="post image" width="393" height="182" />
</picture>

      </center>
<p><br /></p>

<h3 id="5-configuring-the-evidence-sources">5) Configuring the evidence sources</h3>
<p>Select the tab “Evidences sources”, the option “Running Application” should be checked:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_EvidenceSources-200-df877fb0a.webp 200w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_EvidenceSources-371-df877fb0a.webp 371w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_EvidenceSources-200-df877fb0a.png 200w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_EvidenceSources-371-df877fb0a.png 371w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_EvidenceSources-371-df877fb0a.png" alt="post image" width="371" height="51" />
</picture>

      </center>
<p><br /></p>

<h3 id="6-configuring-the-rules">6) Configuring the rules</h3>
<p>Select the tab “Rules”, add a new rule to your context, the rule must be of type “Running Application” to Unity 3D:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Rules-200-f6b304637.webp 200w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Rules-400-f6b304637.webp 400w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Rules-608-f6b304637.webp 608w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Rules-200-f6b304637.png 200w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Rules-400-f6b304637.png 400w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Rules-608-f6b304637.png 608w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Rules-608-f6b304637.png" alt="post image" width="608" height="161" />
</picture>

      </center>
<p><br /></p>

<h3 id="7-configuring-the-actions">7) Configuring the actions</h3>
<p>Select the tab “Actions”, we’ll create 3 new actions: the first one is a task to open Safari in the Toggl timer task page, this is an optional action, but I like to see the task running (and I can stop/start it manually sometimes). Add a action of type “Open URL” with the address “https://www.toggl.com/app/timer”, select “On Arrival” and your context:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Actions-200-3a6809412.webp 200w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Actions-400-3a6809412.webp 400w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Actions-716-3a6809412.webp 716w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Actions-200-3a6809412.png 200w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Actions-400-3a6809412.png 400w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Actions-716-3a6809412.png 716w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_Actions-716-3a6809412.png" alt="post image" width="716" height="68" />
</picture>

      </center>
<p><br /></p>

<p>The second one is a action to start the task in the Toggl when the context starts. Add a action of type “Shell Script”, in the field “Parameter” type the path to your startTogglTimeEntry.sh script, select “On Arrival” and your context:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_StartTogglTask-200-0f137d185.webp 200w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_StartTogglTask-400-0f137d185.webp 400w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_StartTogglTask-476-0f137d185.webp 476w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_StartTogglTask-200-0f137d185.png 200w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_StartTogglTask-400-0f137d185.png 400w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_StartTogglTask-476-0f137d185.png 476w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_StartTogglTask-476-0f137d185.png" alt="post image" width="476" height="188" />
</picture>

      </center>
<p><br /></p>

<p>The third one is a action to stop the task in the Toggl when the context ends. Add a action of type “Shell Script”, in the field “Parameter” type the path to your stopTogglTimeEntry.sh script, select “On Arrival” and your context:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_StopTogglTask-200-a0ce52c23.webp 200w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_StopTogglTask-400-a0ce52c23.webp 400w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_StopTogglTask-467-a0ce52c23.webp 467w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_StopTogglTask-200-a0ce52c23.png 200w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_StopTogglTask-400-a0ce52c23.png 400w, /assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_StopTogglTask-467-a0ce52c23.png 467w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2015/09/20/auto-tracking-your-time-with-controlplane-toggl/ControlPlane_StopTogglTask-467-a0ce52c23.png" alt="post image" width="467" height="182" />
</picture>

      </center>
<p><br /></p>

<h3 id="8-test-everything">8) Test everything</h3>
<p>Open Unity3D editor, in the almost same time your context must be activated and the Safari must open the Toggl url with “Programming” task started.</p>

<p>Now, close the Unity3D and the “Programming” task must be stopped on Toggl.com.</p>

<p><strong><em>That’s it. ControlPlane is an amazing app and things we can automate with it is nearly infinite!</em></strong></p>]]></content><author><name></name></author><category term="Tutorial" /><category term="time-tracking" /><category term="toggl" /><category term="controlplane" /><summary type="html"><![CDATA[So, do you want to track the time you spend in some tasks, but always forget to start the time tracking?]]></summary></entry><entry><title type="html">Getting your code documentation at runtime</title><link href="http://diegogiacomelli.com.br/getting-your-code-documentation-at-runtime/" rel="alternate" type="text/html" title="Getting your code documentation at runtime" /><published>2014-08-03T00:00:00-03:00</published><updated>2014-08-03T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/getting-your-code-documentation-at-runtime</id><content type="html" xml:base="http://diegogiacomelli.com.br/getting-your-code-documentation-at-runtime/"><![CDATA[<p>In some situations, like generate a live console for a web api or generate code using T4 template we need a way to read the code documentation at runtime.</p>

<p>Some time ago I’ve faced that situation again and I thought: <em>“Should be an easy way to read this code documentation!”</em>.</p>

<p>After some googled I found a code from Jim Blackler that allowed developers read C# code documentation at runtime, but at that time the code was just a downloadable .zip in Jim’s blog. I asked him if I could put the source code on GitHub to allow better code improvements and community collaboration, he said: “Please go ahead with your plan”.</p>

<p>So, I created the project at GitHub, <strong>DocsByReflection</strong>: <a href="https://github.com/giacomelli/DocsByReflection">https://github.com/giacomelli/DocsByReflection</a></p>

<h3 id="docsbyreflection">DocsByReflection</h3>
<p>With DocsByReflection you can easy get your code documentation at runtime in many ways, like:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// From type.</span>
<span class="kt">var</span> <span class="n">typeDoc</span> <span class="p">=</span> <span class="n">DocsService</span><span class="p">.</span><span class="nf">GetXmlFromType</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">Stub</span><span class="p">));</span>

<span class="c1">// From property.</span>
<span class="kt">var</span> <span class="n">propertyInfo</span> <span class="p">=</span> <span class="k">typeof</span><span class="p">(</span><span class="n">Stub</span><span class="p">).</span><span class="nf">GetProperty</span><span class="p">(</span><span class="s">"PropertyWithDoc"</span><span class="p">);</span>
<span class="kt">var</span> <span class="n">propertyDoc</span> <span class="p">=</span> <span class="n">DocsService</span><span class="p">.</span><span class="nf">GetXmlFromMember</span><span class="p">(</span><span class="n">propertyInfo</span><span class="p">);</span>

<span class="c1">// From method.</span>
<span class="kt">var</span> <span class="n">methodInfo</span> <span class="p">=</span> <span class="k">typeof</span><span class="p">(</span><span class="n">Stub</span><span class="p">).</span><span class="nf">GetMethod</span><span class="p">(</span><span class="s">"MethodWithGenericParameter"</span><span class="p">);</span>
<span class="kt">var</span> <span class="n">methodDoc</span> <span class="p">=</span> <span class="n">DocsService</span><span class="p">.</span><span class="nf">GetXmlFromMember</span><span class="p">(</span><span class="n">methodInfo</span><span class="p">);</span>

<span class="c1">// From assembly.</span>
<span class="kt">var</span> <span class="n">assemblyDoc</span> <span class="p">=</span> <span class="n">DocsService</span><span class="p">.</span><span class="nf">GetXmlFromAssembly</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">Stub</span><span class="p">).</span><span class="n">Assembly</span><span class="p">);</span>
</code></pre></div></div>

<p>If you want colaborate, just <a href="https://github.com/giacomelli/DocsByReflection/fork">fork it at GitHub</a>.</p>

<h4 id="nuget">Nuget</h4>
<p>If you want just use it, there is a NuGet package with latest binaries version:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Install-Package DocsByReflection
</code></pre></div></div>]]></content><author><name></name></author><category term="Tutorial" /><category term="dotnet" /><category term="csharp" /><category term="docsbyreflection" /><category term="open-source" /><summary type="html"><![CDATA[In some situations, like generate a live console for a web api or generate code using T4 template we need a way to read the code documentation at runtime.]]></summary></entry><entry><title type="html">Improving your debug with DebuggerDisplay</title><link href="http://diegogiacomelli.com.br/improving-your-debug-with-debuggerdisplay/" rel="alternate" type="text/html" title="Improving your debug with DebuggerDisplay" /><published>2014-07-14T00:00:00-03:00</published><updated>2014-07-14T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/improving-your-debug-with-debuggerdisplay</id><content type="html" xml:base="http://diegogiacomelli.com.br/improving-your-debug-with-debuggerdisplay/"><![CDATA[<p>There is an amazing and easy to use custom attribute on .NET Framework stack that I rarely see in use. It helps and improve the way you can debug your code and you just need a line of code to use it: <strong>DebuggerDisplay</strong>.</p>

<p>Maybe you’ve used it a lot and already love it, in this case just spread the word ;), but if you are a beginner or an experienced .NET developer and don’t know DebuggerDisplay, this is the chance to you to improve your debug skills.</p>

<h3 id="imagine-this-scenario">Imagine this scenario:</h3>
<p>We have a class called Tweet:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">class</span> <span class="nc">Tweet</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Text</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="n">User</span> <span class="n">User</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">int</span> <span class="n">RetweetsCount</span>  <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">int</span> <span class="n">FavoritesCount</span>  <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>You are debugging a list of Tweets, let me say 200 tweets, and all tweets in the debugger view looks like the image below:</p>

<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/NoDebuggerDisplay-139-3a9bad96a.webp 139w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/NoDebuggerDisplay-139-3a9bad96a.png 139w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/NoDebuggerDisplay-139-3a9bad96a.png" alt="post image" width="139" height="163" />
</picture>

      </center>
<p><br /></p>

<p>It’s clear that is not easy to know what tweets are inside that list. Of course you can use breakpoint conditions, trace, logs and many others resources to help the debug process, but DebuggerDisplay is an easier and very cheap solution.</p>

<p>In our scenario, the most important things about the Tweet class are the text, the username and the retweets count. We’ll add the DebuggerDisplay attribute to the class:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="nf">DebuggerDisplay</span><span class="p">(</span><span class="s">"{Text} ({User.UserName}) - RTs: {RetweetCount}"</span><span class="p">)]</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">Tweet</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Text</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="n">User</span> <span class="n">User</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">int</span> <span class="n">RetweetsCount</span>  <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">int</span> <span class="n">FavoritesCount</span>  <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><strong>Now, that “secret” tweet list looks like:</strong></p>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-200-02058a557.webp 200w, /assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-400-02058a557.webp 400w, /assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-800-02058a557.webp 800w, /assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-840-02058a557.webp 840w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-200-02058a557.png 200w, /assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-400-02058a557.png 400w, /assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-800-02058a557.png 800w, /assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-840-02058a557.png 840w" type="image/png" />
  <img class="screenshot" src="/assets/images/generated/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/DebuggerDisplayInAction-800-02058a557.png" alt="post image" width="840" height="52" />
</picture>

      </center>
<p><br /></p>

<p><br /></p>

<center>                
        <img class="screenshot" src="/assets/2014/07/14/improving-your-debug-with-debuggerdisplay/whenDebugIsEasyThanExpected.gif " alt="post image" />
      </center>
<p><br /></p>
<center><span style="font-style:italic; font-size:small"><p>When debugging is easier than expected</p>
</span></center>
<p><br /></p>

<p><em>More information about DebuggerDisplay on official documentation: <a href="http://msdn.microsoft.com/en-us/library/ms228992(v=vs.110).aspx">msdn.microsoft.com/en-us/library/ms228992(v=vs.110).aspx</a></em></p>]]></content><author><name></name></author><category term="Tutorial" /><category term="dotnet" /><category term="csharp" /><category term="debug" /><summary type="html"><![CDATA[There is an amazing and easy to use custom attribute on .NET Framework stack that I rarely see in use. It helps and improve the way you can debug your code and you just need a line of code to use it: DebuggerDisplay.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://diegogiacomelli.com.br/images/NoDebuggerDisplay.png" /><media:content medium="image" url="http://diegogiacomelli.com.br/images/NoDebuggerDisplay.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Using sensitive data on your Travis CI build</title><link href="http://diegogiacomelli.com.br/using-sensitive-data-on-your-travis-ci-build/" rel="alternate" type="text/html" title="Using sensitive data on your Travis CI build" /><published>2014-07-13T21:00:00-03:00</published><updated>2014-07-13T21:00:00-03:00</updated><id>http://diegogiacomelli.com.br/using-sensitive-data-on-your-travis-ci-build</id><content type="html" xml:base="http://diegogiacomelli.com.br/using-sensitive-data-on-your-travis-ci-build/"><![CDATA[<p>You have programmed an amazing functional tests to validate your infrastructure service that connect on Google Docs.</p>

<p>These functional tests run perfect well on your development machine and <strong>now you want to run them on Travis CI</strong>, but how to do this <strong>without reveal your Google’s username and password worldwide?</strong></p>

<p><strong>Travis CI <a href="http://docs.travis-ci.com/user/encryption-keys">Encription Keys</a> goes to the rescue!</strong> With them you can encrypt your sensitive data and read them inside your tests running on Travis CI.</p>

<p>In this post I will show you a very simple and real sample of using encryption keys to read username and password from environment variables encripted on .travis.yml file</p>

<h3 id="step-1-encrypting-your-environment-variables">Step 1:  Encrypting your environment variables</h3>
<p>To perform the encryption using Travis CLI you will need to setup a Ruby environment on your dev machine. If you are using Windows and do not have a Ruby environment, the easiest way is use <a href="http://rubyinstaller.org/">RubyInstaller</a> (don’t be afraid, because it works very well…it’s a fully automatic installation).</p>

<p>After the RubyInstaller finish his job, open the “Start Command Prompt with Ruby” and type:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>travis encrypt GDataUsername=[your username] -r [owner/repository]
travis encrypt GDataPassword=[your password] -r [owner/repository]
</code></pre></div></div>

<h3 id="step-2-adding-your-encrypted-variables-to-the-travisyml-file">Step 2:  Adding your encrypted variables to the .travis.yml file</h3>
<p>Open your .travis.yaml file and add the encrypted values from previous step to the file, like the sample below:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>env:
   global:
      - secure: "The GDataUsername encrypted value"
      - secure: "The GDataPassword encrypted value"
</code></pre></div></div>

<p>The tabs are very important to the .yml file, so you should respect them. Here is <a href="https://github.com/skahal/Skahal.Infrastructure.Repositories/blob/master/.travis.yml">my real .yml file</a> to help.</p>

<h3 id="step-3-reading-the-enviroment-variables-on-your-functional-test">Step 3:  Reading the enviroment variables on your functional test</h3>
<p>Now you can read those environment variable in your code, the sample code below shows how to do this in C#:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">var</span> <span class="n">username</span> <span class="p">=</span> <span class="n">Environment</span><span class="p">.</span><span class="nf">GetEnvironmentVariable</span><span class="p">(</span><span class="s">"GDataUsername"</span><span class="p">);</span>
<span class="kt">var</span> <span class="n">password</span> <span class="p">=</span> <span class="n">Environment</span><span class="p">.</span><span class="nf">GetEnvironmentVariable</span><span class="p">(</span><span class="s">"GDataPassword"</span><span class="p">);</span>
</code></pre></div></div>

<p>The values of username and password variables will be the decrypted values that Travis CI has set to you on the environment.</p>

<h3 id="step-4-testing-on-travis-ci">Step 4: Testing on Travis CI</h3>
<p>Commit your files to GitHub and take a look on Travis CI build log, if you have set everything ok, you should see lines as below on log:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ export GDataUsername=[secure]
$ export GDataPassword=[secure]
</code></pre></div></div>

<h3 id="thats-all">That’s all!</h3>
<p>Now your functional tests should run on your dev machine (don’t forget to set the environment variables on it too) and on Travis CI as well.</p>]]></content><author><name></name></author><category term="Tutorial" /><category term="continuous-integration" /><category term="travis-ci" /><category term="functional-tests" /><summary type="html"><![CDATA[You have programmed an amazing functional tests to validate your infrastructure service that connect on Google Docs.]]></summary></entry><entry><title type="html">DDD by quotes</title><link href="http://diegogiacomelli.com.br/ddd-by-quotes/" rel="alternate" type="text/html" title="DDD by quotes" /><published>2014-05-12T00:00:00-03:00</published><updated>2014-05-12T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/ddd-by-quotes</id><content type="html" xml:base="http://diegogiacomelli.com.br/ddd-by-quotes/"><![CDATA[<p>The Eric Evans’ book <a href="http://amzn.to/2aygz2G">“Domain-Driven Design - Tackling Complexity in the Heart of Software”</a> is like a Bible for who intend to use DDD, so, I guess that some quotes of the book can help us to validate our DDD approach.</p>

<p>The list below is just a “check-point list”, because, to understand what each one really meaning you need to read book deeply, probably more than one time.</p>

<h3 id="my-tip-is-read-the-book">My tip is: read the book!</h3>
<center>                
        <picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2014/05/12/ddd-by-quotes/ddd-200-c0255fe64.webp 200w, /assets/images/generated/assets/2014/05/12/ddd-by-quotes/ddd-260-c0255fe64.webp 260w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/2014/05/12/ddd-by-quotes/ddd-200-c0255fe64.jpg 200w, /assets/images/generated/assets/2014/05/12/ddd-by-quotes/ddd-260-c0255fe64.jpg 260w" type="image/jpeg" />
  <img class="screenshot" src="/assets/images/generated/assets/2014/05/12/ddd-by-quotes/ddd-260-c0255fe64.jpg" alt="post image" width="260" height="344" />
</picture>

      </center>
<p><br /></p>

<h3 id="quotes">Quotes</h3>
<blockquote>
  <p>“The objects had behavior and enforced rules. The model wasn’t just a data schema; it was integral solving a complex problem.” (page 13)</p>
</blockquote>

<blockquote>
  <p>“The vital detail about the design is captured in the code.” (page 37)</p>
</blockquote>

<blockquote>
  <p>“Running code doesn’t lie, as any other document might. The behavior of running code is unambiguous.” (page 38)</p>
</blockquote>

<blockquote>
  <p>“When a model doesn’t seem to be practical for implementation, we must search for a new one. When a model doesn’t faithfully express the key concepts of the domain, we must search for a new one.” (page 49)</p>
</blockquote>

<blockquote>
  <p>“Isolating the domain implementation is a prerequisite for domain-driven design.” (page 75)</p>
</blockquote>

<blockquote>
  <p>“It is important to constrain relationship as much as possible.” (page 83)</p>
</blockquote>

<blockquote>
  <p>“When we force an operation into an object that doesn’t fit the object’s definition, the object loses its conceptual clarity and becomes hard to understand or refactor” (page 104)</p>
</blockquote>

<blockquote>
  <p>“When the users or domain experts use vocabulary that is nowhere in the design, that is a warning sign.” (page 207)</p>
</blockquote>

<blockquote>
  <p>“The concept you need is not always floating on the surface, emerging in conversation or documents. You may have to dig and invent. The place to dig is the most awkward part of your design. The place where procedures are doing complicated things that are hard to explain. The place where every new requirement seems to add complexity.” (page 210)</p>
</blockquote>

<blockquote>
  <p>“Constraints make up a particularly important category of model concepts. They often emerge implicitly, and expressing them explicitly can greatly improve a design.” (page 220)</p>
</blockquote>

<blockquote>
  <p>“When the constraints are obscuring the object’s basic responsibility, or when the constraint is prominent in the domain yet not prominent in the model, you can factor it out into an explicit object or even model it as a set of objects and relationships.” (page 222)</p>
</blockquote>

<blockquote>
  <p>“Create explicit predicate-like value objects for specialized purposes. A specification is a predicate that determines if an object does or does not satisfy some criteria.” (page 226)</p>
</blockquote>

<blockquote>
  <p>“A pattern is not a cookbook. It lets you start from a base of experience to develop your solution, and it gives you some language to talk about what you are doing.” (page 227)</p>
</blockquote>]]></content><author><name></name></author><category term="Article" /><category term="ddd" /><category term="design-patterns" /><category term="book" /><summary type="html"><![CDATA[The Eric Evans’ book “Domain-Driven Design - Tackling Complexity in the Heart of Software” is like a Bible for who intend to use DDD, so, I guess that some quotes of the book can help us to validate our DDD approach.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://diegogiacomelli.com.br/images/ddd.jpg" /><media:content medium="image" url="http://diegogiacomelli.com.br/images/ddd.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Why we should avoid DateTime.UtcNow inside a Linq to Entities query?</title><link href="http://diegogiacomelli.com.br/why-we-should-avoid-datetime-utcnow-inside-a-linq-to-entities-query/" rel="alternate" type="text/html" title="Why we should avoid DateTime.UtcNow inside a Linq to Entities query?" /><published>2014-05-12T00:00:00-03:00</published><updated>2014-05-12T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/why-we-should-avoid-datetime-utcnow-inside-a-linq-to-entities-query</id><content type="html" xml:base="http://diegogiacomelli.com.br/why-we-should-avoid-datetime-utcnow-inside-a-linq-to-entities-query/"><![CDATA[<p>Why we should avoid <code class="language-plaintext highlighter-rouge">DateTime.UtcNow</code> inside a <code class="language-plaintext highlighter-rouge">Linq to Entities</code> query?</p>

<p>Because we can get unexpected results!<br />
After read this tip, will be expected results 😉</p>

<h2 id="what-is-the-diference-between-these-two-linq-queries">What is the diference between these two Linq queries?</h2>

<h4 id="query-1">Query 1</h4>
<script src="https://gist.github.com/9a3a88fac354f3af8294381b30552ade.js?file=sample1.cs"> </script>

<h4 id="query-2">Query 2</h4>
<script src="https://gist.github.com/9a3a88fac354f3af8294381b30552ade.js?file=sample2.cs"> </script>

<h4 id="sql-generated">SQL generated</h4>
<p>The first one will generate a SQL with WHERE clause like this:
<script src="https://gist.github.com/9a3a88fac354f3af8294381b30552ade.js?file=sample3.cs"> </script>
Where <code class="language-plaintext highlighter-rouge">@p__linq__1</code> is the value of our filterDate variable.</p>

<p>The second one will generate this <code class="language-plaintext highlighter-rouge">WHERE</code> clause:
<script src="https://gist.github.com/9a3a88fac354f3af8294381b30552ade.js?file=sample4.cs"> </script></p>

<h2 id="what-is-the-problem">What is the problem?</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/problem-128-a3f91d933.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/problem-128-a3f91d933.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/problem-128-a3f91d933.png" alt="post image" width="128" height="128" />
</picture>

<p>Imagine that we’re using the second query inside some sync algorithm in our C# code, this algorithm is very sensitive about time, now imagine that the server where our C# code is running has a difference about seconds or minutes with the database server?</p>

<p><strong>YES, UNEXPECTED RESULTS!</strong></p>

<h2 id="conclusion">Conclusion</h2>
<picture>
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.webp 128w" type="image/webp" />
  <source sizes="(max-width: 600px) 100vw, (max-width: 900px) 80vw, 800px" srcset="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png 128w" type="image/png" />
  <img class="icon" src="/assets/images/generated/assets/logos/conclusion-128-875fc7bbb.png" alt="post image" width="128" height="128" />
</picture>

<p>Linq to Entities is very smart and it is able to translate our <code class="language-plaintext highlighter-rouge">DateTime.Now</code> or <code class="language-plaintext highlighter-rouge">DateTime.UtcNow</code> to a matching command on database side.</p>

<div class="note"><p>The important here is: we should remember that it can do this and we should use features like these with parsimony.</p>
</div>

<script>
        $(document).ready(function() {
          $('.gist-meta').remove();
        });
      </script>]]></content><author><name></name></author><category term="Article" /><category term="dotnet" /><category term="csharp" /><category term="linq-to-entities" /><category term="sql" /><summary type="html"><![CDATA[Why we should avoid DateTime.UtcNow inside a Linq to Entities query?]]></summary></entry><entry><title type="html">Nibble</title><link href="http://diegogiacomelli.com.br/nibble/" rel="alternate" type="text/html" title="Nibble" /><published>2014-05-11T00:00:00-03:00</published><updated>2014-05-11T00:00:00-03:00</updated><id>http://diegogiacomelli.com.br/nibble</id><content type="html" xml:base="http://diegogiacomelli.com.br/nibble/"><![CDATA[<p>Looking in some backups I found one of my first games. I made it about 14 years ago: a Nibble in 461 lines of C.</p>

<center>
        <iframe src="https://www.youtube.com/embed/ibnpKDo0jDI " frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
      </center>

<p>I push the source code and binary files to a GitHub repository: <a href="https://github.com/giacomelli/Nibble">https://github.com/giacomelli/Nibble</a></p>]]></content><author><name></name></author><category term="News" /><category term="gamedev" /><category term="c" /><category term="open-source" /><summary type="html"><![CDATA[Looking in some backups I found one of my first games. I made it about 14 years ago: a Nibble in 461 lines of C.]]></summary></entry></feed>